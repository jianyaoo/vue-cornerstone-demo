{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { m as macro } from '../../macros2.js';\nimport { A as degreesFromRadians } from '../../Common/Core/Math/index.js';\nimport Constants from './RenderWindowInteractor/Constants.js';\nconst {\n  Device,\n  Input\n} = Constants;\nconst {\n  vtkWarningMacro,\n  vtkErrorMacro,\n  normalizeWheel,\n  vtkOnceErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nconst EMPTY_MOUSE_EVENT = {\n  ctrlKey: false,\n  altKey: false,\n  shiftKey: false\n};\nconst deviceInputMap = {\n  'xr-standard': [Input.Trigger, Input.Grip, Input.TrackPad, Input.Thumbstick, Input.A, Input.B]\n};\nconst handledEvents = ['StartAnimation', 'Animation', 'EndAnimation', 'PointerEnter', 'PointerLeave', 'MouseEnter', 'MouseLeave', 'StartMouseMove', 'MouseMove', 'EndMouseMove', 'LeftButtonPress', 'LeftButtonRelease', 'MiddleButtonPress', 'MiddleButtonRelease', 'RightButtonPress', 'RightButtonRelease', 'KeyPress', 'KeyDown', 'KeyUp', 'StartMouseWheel', 'MouseWheel', 'EndMouseWheel', 'StartPinch', 'Pinch', 'EndPinch', 'StartPan', 'Pan', 'EndPan', 'StartRotate', 'Rotate', 'EndRotate', 'Button3D', 'Move3D', 'StartPointerLock', 'EndPointerLock', 'StartInteraction', 'Interaction', 'EndInteraction', 'AnimationFrameRateUpdate'];\nfunction preventDefault(event) {\n  if (event.cancelable) {\n    event.preventDefault();\n  }\n}\nfunction pointerCacheToPositions(cache) {\n  const positions = Object.create(null);\n  cache.forEach(_ref => {\n    let {\n      pointerId,\n      position\n    } = _ref;\n    positions[pointerId] = position;\n  });\n  return positions;\n}\n\n// ----------------------------------------------------------------------------\n// vtkRenderWindowInteractor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkRenderWindowInteractor(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderWindowInteractor');\n\n  // Initialize list of requesters\n  const animationRequesters = new Set();\n\n  // map from pointerId to { pointerId: number, position: [x, y] }\n  const pointerCache = new Map();\n\n  // Factor to apply on wheel spin.\n  let wheelCoefficient = 1;\n\n  // Public API methods\n\n  //----------------------------------------------------------------------\n  publicAPI.start = () => {\n    // Let the compositing handle the event loop if it wants to.\n    // if (publicAPI.HasObserver(vtkCommand::StartEvent) && !publicAPI.HandleEventLoop) {\n    //   publicAPI.invokeEvent({ type: 'StartEvent' });\n    //   return;\n    // }\n\n    // As a convenience, initialize if we aren't initialized yet.\n    if (!model.initialized) {\n      publicAPI.initialize();\n      if (!model.initialized) {\n        return;\n      }\n    }\n    // Pass execution to the subclass which will run the event loop,\n    // this will not return until TerminateApp is called.\n    publicAPI.startEventLoop();\n  };\n\n  //----------------------------------------------------------------------\n  publicAPI.setRenderWindow = aren => {\n    vtkErrorMacro('you want to call setView(view) instead of setRenderWindow on a vtk.js interactor');\n  };\n\n  //----------------------------------------------------------------------\n  publicAPI.setInteractorStyle = style => {\n    if (model.interactorStyle !== style) {\n      if (model.interactorStyle != null) {\n        model.interactorStyle.setInteractor(null);\n      }\n      model.interactorStyle = style;\n      if (model.interactorStyle != null) {\n        if (model.interactorStyle.getInteractor() !== publicAPI) {\n          model.interactorStyle.setInteractor(publicAPI);\n        }\n      }\n    }\n  };\n\n  //---------------------------------------------------------------------\n  publicAPI.initialize = () => {\n    model.initialized = true;\n    publicAPI.enable();\n    publicAPI.render();\n  };\n  publicAPI.enable = () => publicAPI.setEnabled(true);\n  publicAPI.disable = () => publicAPI.setEnabled(false);\n  publicAPI.startEventLoop = () => vtkWarningMacro('empty event loop');\n  function updateCurrentRenderer(x, y) {\n    if (!model._forcedRenderer) {\n      model.currentRenderer = publicAPI.findPokedRenderer(x, y);\n    }\n  }\n  publicAPI.getCurrentRenderer = () => {\n    if (model.currentRenderer) {\n      return model.currentRenderer;\n    }\n    updateCurrentRenderer(0, 0);\n    return model.currentRenderer;\n  };\n  function _getScreenEventPositionFor(source) {\n    const canvas = model._view.getCanvas();\n    const bounds = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / bounds.width;\n    const scaleY = canvas.height / bounds.height;\n    const position = {\n      x: scaleX * (source.clientX - bounds.left),\n      y: scaleY * (bounds.height - source.clientY + bounds.top),\n      z: 0\n    };\n\n    // if multitouch, do not update the current renderer\n    if (pointerCache.size <= 1 || !model.currentRenderer) {\n      updateCurrentRenderer(position.x, position.y);\n    }\n    return position;\n  }\n  // Allow user to override it\n  const getScreenEventPositionFor = model._getScreenEventPositionFor || _getScreenEventPositionFor;\n  function getModifierKeysFor(event) {\n    return {\n      controlKey: event.ctrlKey,\n      altKey: event.altKey,\n      shiftKey: event.shiftKey\n    };\n  }\n  function getKeysFor(event) {\n    const modifierKeys = getModifierKeysFor(event);\n    const keys = {\n      key: event.key,\n      keyCode: event.charCode,\n      ...modifierKeys\n    };\n    return keys;\n  }\n  function getDeviceTypeFor(event) {\n    return event.pointerType || '';\n  }\n  publicAPI.bindEvents = container => {\n    model.container = container;\n    container.addEventListener('contextmenu', preventDefault);\n    container.addEventListener('wheel', publicAPI.handleWheel);\n    container.addEventListener('DOMMouseScroll', publicAPI.handleWheel);\n    container.addEventListener('pointerenter', publicAPI.handlePointerEnter);\n    container.addEventListener('pointerleave', publicAPI.handlePointerLeave);\n    container.addEventListener('pointermove', publicAPI.handlePointerMove, {\n      passive: false\n    });\n    container.addEventListener('pointerdown', publicAPI.handlePointerDown, {\n      passive: false\n    });\n    container.addEventListener('pointerup', publicAPI.handlePointerUp);\n    container.addEventListener('pointercancel', publicAPI.handlePointerCancel);\n    document.addEventListener('keypress', publicAPI.handleKeyPress);\n    document.addEventListener('keydown', publicAPI.handleKeyDown);\n    document.addEventListener('keyup', publicAPI.handleKeyUp);\n    document.addEventListener('pointerlockchange', publicAPI.handlePointerLockChange);\n\n    // using touchAction is more performant than preventDefault\n    // in a touchstart handler.\n    container.style.touchAction = 'none';\n    container.style.userSelect = 'none';\n    // disables tap highlight for when cursor is pointer\n    container.style.webkitTapHighlightColor = 'rgba(0,0,0,0)';\n  };\n  publicAPI.unbindEvents = () => {\n    const {\n      container\n    } = model;\n    container.removeEventListener('contextmenu', preventDefault);\n    container.removeEventListener('wheel', publicAPI.handleWheel);\n    container.removeEventListener('DOMMouseScroll', publicAPI.handleWheel);\n    container.removeEventListener('pointerenter', publicAPI.handlePointerEnter);\n    container.removeEventListener('pointerleave', publicAPI.handlePointerLeave);\n    container.removeEventListener('pointermove', publicAPI.handlePointerMove, {\n      passive: false\n    });\n    container.removeEventListener('pointerdown', publicAPI.handlePointerDown, {\n      passive: false\n    });\n    container.removeEventListener('pointerup', publicAPI.handlePointerUp);\n    container.removeEventListener('pointercancel', publicAPI.handlePointerCancel);\n    document.removeEventListener('keypress', publicAPI.handleKeyPress);\n    document.removeEventListener('keydown', publicAPI.handleKeyDown);\n    document.removeEventListener('keyup', publicAPI.handleKeyUp);\n    document.removeEventListener('pointerlockchange', publicAPI.handlePointerLockChange);\n    model.container = null;\n    pointerCache.clear();\n  };\n  publicAPI.handleKeyPress = event => {\n    const data = getKeysFor(event);\n    publicAPI.keyPressEvent(data);\n  };\n  publicAPI.handleKeyDown = event => {\n    const data = getKeysFor(event);\n    publicAPI.keyDownEvent(data);\n  };\n  publicAPI.handleKeyUp = event => {\n    const data = getKeysFor(event);\n    publicAPI.keyUpEvent(data);\n  };\n  publicAPI.handlePointerEnter = event => {\n    const callData = {\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n    publicAPI.pointerEnterEvent(callData);\n    if (callData.deviceType === 'mouse') {\n      publicAPI.mouseEnterEvent(callData);\n    }\n  };\n  publicAPI.handlePointerLeave = event => {\n    const callData = {\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n    publicAPI.pointerLeaveEvent(callData);\n    if (callData.deviceType === 'mouse') {\n      publicAPI.mouseLeaveEvent(callData);\n    }\n  };\n  publicAPI.handlePointerDown = event => {\n    if (event.button > 2 || publicAPI.isPointerLocked()) {\n      // ignore events from extra mouse buttons such as `back` and `forward`\n      return;\n    }\n    if (model.preventDefaultOnPointerDown) {\n      preventDefault(event);\n    }\n    if (event.target.hasPointerCapture(event.pointerId)) {\n      event.target.releasePointerCapture(event.pointerId);\n    }\n    model.container.setPointerCapture(event.pointerId);\n    if (pointerCache.has(event.pointerId)) {\n      vtkWarningMacro('[RenderWindowInteractor] duplicate pointerId detected');\n    }\n    pointerCache.set(event.pointerId, {\n      pointerId: event.pointerId,\n      position: getScreenEventPositionFor(event)\n    });\n    switch (event.pointerType) {\n      case 'pen':\n      case 'touch':\n        publicAPI.handleTouchStart(event);\n        break;\n      case 'mouse':\n      default:\n        publicAPI.handleMouseDown(event);\n        break;\n    }\n  };\n  publicAPI.handlePointerUp = event => {\n    if (pointerCache.has(event.pointerId)) {\n      if (model.preventDefaultOnPointerUp) {\n        preventDefault(event);\n      }\n      pointerCache.delete(event.pointerId);\n      model.container.releasePointerCapture(event.pointerId);\n      switch (event.pointerType) {\n        case 'pen':\n        case 'touch':\n          publicAPI.handleTouchEnd(event);\n          break;\n        case 'mouse':\n        default:\n          publicAPI.handleMouseUp(event);\n          break;\n      }\n    }\n  };\n  publicAPI.handlePointerCancel = event => {\n    if (pointerCache.has(event.pointerId)) {\n      pointerCache.delete(event.pointerId);\n      switch (event.pointerType) {\n        case 'pen':\n        case 'touch':\n          publicAPI.handleTouchEnd(event);\n          break;\n        case 'mouse':\n        default:\n          publicAPI.handleMouseUp(event);\n          break;\n      }\n    }\n  };\n  publicAPI.handlePointerMove = event => {\n    if (pointerCache.has(event.pointerId)) {\n      const pointer = pointerCache.get(event.pointerId);\n      pointer.position = getScreenEventPositionFor(event);\n    }\n    switch (event.pointerType) {\n      case 'pen':\n      case 'touch':\n        publicAPI.handleTouchMove(event);\n        break;\n      case 'mouse':\n      default:\n        publicAPI.handleMouseMove(event);\n        break;\n    }\n  };\n  publicAPI.handleMouseDown = event => {\n    const callData = {\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n    switch (event.button) {\n      case 0:\n        publicAPI.leftButtonPressEvent(callData);\n        break;\n      case 1:\n        publicAPI.middleButtonPressEvent(callData);\n        break;\n      case 2:\n        publicAPI.rightButtonPressEvent(callData);\n        break;\n      default:\n        vtkErrorMacro(`Unknown mouse button pressed: ${event.button}`);\n        break;\n    }\n  };\n\n  //----------------------------------------------------------------------\n  publicAPI.requestPointerLock = () => {\n    if (model.container) {\n      model.container.requestPointerLock();\n    }\n  };\n\n  //----------------------------------------------------------------------\n  publicAPI.exitPointerLock = () => document.exitPointerLock?.();\n\n  //----------------------------------------------------------------------\n  publicAPI.isPointerLocked = () => !!model.container && document.pointerLockElement === model.container;\n\n  //----------------------------------------------------------------------\n  publicAPI.handlePointerLockChange = () => {\n    if (publicAPI.isPointerLocked()) {\n      publicAPI.startPointerLockEvent();\n    } else {\n      publicAPI.endPointerLockEvent();\n    }\n  };\n\n  //----------------------------------------------------------------------\n  function forceRender() {\n    if (model._view && model.enabled && model.enableRender) {\n      model.inRender = true;\n      model._view.traverseAllPasses();\n      model.inRender = false;\n    }\n    // outside the above test so that third-party code can redirect\n    // the render to the appropriate class\n    publicAPI.invokeRenderEvent();\n  }\n  publicAPI.requestAnimation = requestor => {\n    if (requestor === undefined) {\n      vtkErrorMacro(`undefined requester, can not start animating`);\n      return;\n    }\n    if (animationRequesters.has(requestor)) {\n      vtkWarningMacro(`requester is already registered for animating`);\n      return;\n    }\n    animationRequesters.add(requestor);\n    if (!model.animationRequest && animationRequesters.size === 1 && !model.xrAnimation) {\n      model._animationStartTime = Date.now();\n      model._animationFrameCount = 0;\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\n      publicAPI.startAnimationEvent();\n    }\n  };\n\n  // continue animating for at least the specified duration of\n  // milliseconds.\n  publicAPI.extendAnimation = duration => {\n    const newEnd = Date.now() + duration;\n    model._animationExtendedEnd = Math.max(model._animationExtendedEnd, newEnd);\n    if (!model.animationRequest && animationRequesters.size === 0 && !model.xrAnimation) {\n      model._animationStartTime = Date.now();\n      model._animationFrameCount = 0;\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\n      publicAPI.startAnimationEvent();\n    }\n  };\n  publicAPI.isAnimating = () => model.xrAnimation || model.animationRequest !== null;\n  publicAPI.cancelAnimation = function (requestor) {\n    let skipWarning = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (!animationRequesters.has(requestor)) {\n      if (!skipWarning) {\n        const requestStr = requestor && requestor.getClassName ? requestor.getClassName() : requestor;\n        vtkWarningMacro(`${requestStr} did not request an animation`);\n      }\n      return;\n    }\n    animationRequesters.delete(requestor);\n    if (model.animationRequest && animationRequesters.size === 0 && Date.now() > model._animationExtendedEnd) {\n      cancelAnimationFrame(model.animationRequest);\n      model.animationRequest = null;\n      publicAPI.endAnimationEvent();\n      publicAPI.render();\n    }\n  };\n  publicAPI.switchToXRAnimation = () => {\n    // cancel existing animation if any\n    if (model.animationRequest) {\n      cancelAnimationFrame(model.animationRequest);\n      model.animationRequest = null;\n    }\n    model.xrAnimation = true;\n  };\n  publicAPI.returnFromXRAnimation = () => {\n    model.xrAnimation = false;\n    if (animationRequesters.size !== 0) {\n      model.recentAnimationFrameRate = 10.0;\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\n    }\n  };\n  publicAPI.updateXRGamepads = (xrSession, xrFrame, xrRefSpace) => {\n    // watch for when buttons change state and fire events\n    xrSession.inputSources.forEach(inputSource => {\n      const gripPose = inputSource.gripSpace == null ? null : xrFrame.getPose(inputSource.gripSpace, xrRefSpace);\n      const gp = inputSource.gamepad;\n      const hand = inputSource.handedness;\n      if (gp) {\n        if (!(gp.index in model.lastGamepadValues)) {\n          model.lastGamepadValues[gp.index] = {\n            left: {\n              buttons: {}\n            },\n            right: {\n              buttons: {}\n            },\n            none: {\n              buttons: {}\n            }\n          };\n        }\n        for (let b = 0; b < gp.buttons.length; ++b) {\n          if (!(b in model.lastGamepadValues[gp.index][hand].buttons)) {\n            model.lastGamepadValues[gp.index][hand].buttons[b] = false;\n          }\n          if (model.lastGamepadValues[gp.index][hand].buttons[b] !== gp.buttons[b].pressed && gripPose != null) {\n            publicAPI.button3DEvent({\n              gamepad: gp,\n              position: gripPose.transform.position,\n              orientation: gripPose.transform.orientation,\n              pressed: gp.buttons[b].pressed,\n              device: inputSource.handedness === 'left' ? Device.LeftController : Device.RightController,\n              input: deviceInputMap[gp.mapping] && deviceInputMap[gp.mapping][b] ? deviceInputMap[gp.mapping][b] : Input.Trigger\n            });\n            model.lastGamepadValues[gp.index][hand].buttons[b] = gp.buttons[b].pressed;\n          }\n          if (model.lastGamepadValues[gp.index][hand].buttons[b] && gripPose != null) {\n            publicAPI.move3DEvent({\n              gamepad: gp,\n              position: gripPose.transform.position,\n              orientation: gripPose.transform.orientation,\n              device: inputSource.handedness === 'left' ? Device.LeftController : Device.RightController\n            });\n          }\n        }\n      }\n    });\n  };\n  publicAPI.handleMouseMove = event => {\n    const callData = {\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n    if (model.moveTimeoutID === 0) {\n      publicAPI.startMouseMoveEvent(callData);\n    } else {\n      publicAPI.mouseMoveEvent(callData);\n      clearTimeout(model.moveTimeoutID);\n    }\n\n    // start a timer to keep us animating while we get mouse move events\n    model.moveTimeoutID = setTimeout(() => {\n      publicAPI.endMouseMoveEvent();\n      model.moveTimeoutID = 0;\n    }, 200);\n  };\n  publicAPI.handleAnimation = () => {\n    const currTime = Date.now();\n    model._animationFrameCount++;\n    if (currTime - model._animationStartTime > 1000.0 && model._animationFrameCount > 1) {\n      model.recentAnimationFrameRate = 1000.0 * (model._animationFrameCount - 1) / (currTime - model._animationStartTime);\n      model.lastFrameTime = 1.0 / model.recentAnimationFrameRate;\n      publicAPI.animationFrameRateUpdateEvent();\n      model._animationStartTime = currTime;\n      model._animationFrameCount = 1;\n    }\n    publicAPI.animationEvent();\n    forceRender();\n    if (animationRequesters.size > 0 || Date.now() < model._animationExtendedEnd) {\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\n    } else {\n      cancelAnimationFrame(model.animationRequest);\n      model.animationRequest = null;\n      publicAPI.endAnimationEvent();\n      publicAPI.render();\n    }\n  };\n  publicAPI.handleWheel = event => {\n    preventDefault(event);\n\n    /**\n     * wheel event values can vary significantly across browsers, platforms\n     * and devices [1]. `normalizeWheel` uses facebook's solution from their\n     * fixed-data-table repository [2].\n     *\n     * [1] https://developer.mozilla.org/en-US/docs/Web/Events/mousewheel\n     * [2] https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\n     *\n     * This code will return an object with properties:\n     *\n     *   spinX   -- normalized spin speed (use for zoom) - x plane\n     *   spinY   -- \" - y plane\n     *   pixelX  -- normalized distance (to pixels) - x plane\n     *   pixelY  -- \" - y plane\n     *\n     */\n    const callData = {\n      ...normalizeWheel(event),\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n\n    // Wheel events are thought to scroll pages (i.e. multiple lines at once).\n    // See normalizeWheel() documentation for more context.\n    // While trackpad wheel events are many small (<1) wheel spins,\n    // mouse wheel events have absolute spin values higher than 1.\n    // Here the first spin value is \"recorded\", and used to normalize\n    // all the following mouse wheel events.\n    if (model.wheelTimeoutID === 0) {\n      // we attempt to distinguish between trackpads and mice\n      // .3 will be larger than the first trackpad event,\n      // but small enough to detect some common edge case mice\n      if (Math.abs(callData.spinY) >= 0.3) {\n        // Event is coming from mouse wheel\n        wheelCoefficient = Math.abs(callData.spinY);\n      } else {\n        // Event is coming from trackpad\n        wheelCoefficient = 1;\n      }\n    }\n    callData.spinY /= wheelCoefficient;\n    if (model.wheelTimeoutID === 0) {\n      publicAPI.startMouseWheelEvent(callData);\n      publicAPI.mouseWheelEvent(callData);\n    } else {\n      publicAPI.mouseWheelEvent(callData);\n      clearTimeout(model.wheelTimeoutID);\n    }\n    if (model.mouseScrollDebounceByPass) {\n      publicAPI.extendAnimation(600);\n      publicAPI.endMouseWheelEvent();\n      model.wheelTimeoutID = 0;\n    } else {\n      // start a timer to keep us animating while we get wheel events\n      model.wheelTimeoutID = setTimeout(() => {\n        publicAPI.extendAnimation(600);\n        publicAPI.endMouseWheelEvent();\n        model.wheelTimeoutID = 0;\n      }, 200);\n    }\n  };\n  publicAPI.handleMouseUp = event => {\n    const callData = {\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n    switch (event.button) {\n      case 0:\n        publicAPI.leftButtonReleaseEvent(callData);\n        break;\n      case 1:\n        publicAPI.middleButtonReleaseEvent(callData);\n        break;\n      case 2:\n        publicAPI.rightButtonReleaseEvent(callData);\n        break;\n      default:\n        vtkErrorMacro(`Unknown mouse button released: ${event.button}`);\n        break;\n    }\n  };\n  publicAPI.handleTouchStart = event => {\n    const pointers = [...pointerCache.values()];\n    // If multitouch\n    if (model.recognizeGestures && pointers.length > 1) {\n      const positions = pointerCacheToPositions(pointerCache);\n      // did we just transition to multitouch?\n      if (pointers.length === 2) {\n        const callData = {\n          ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n          position: pointers[0].position,\n          deviceType: getDeviceTypeFor(event)\n        };\n        publicAPI.leftButtonReleaseEvent(callData);\n      }\n      // handle the gesture\n      publicAPI.recognizeGesture('TouchStart', positions);\n    } else if (pointers.length === 1) {\n      const callData = {\n        ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n        position: getScreenEventPositionFor(event),\n        deviceType: getDeviceTypeFor(event)\n      };\n      publicAPI.leftButtonPressEvent(callData);\n    }\n  };\n  publicAPI.handleTouchMove = event => {\n    const pointers = [...pointerCache.values()];\n    if (model.recognizeGestures && pointers.length > 1) {\n      const positions = pointerCacheToPositions(pointerCache);\n      publicAPI.recognizeGesture('TouchMove', positions);\n    } else if (pointers.length === 1) {\n      const callData = {\n        ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n        position: pointers[0].position,\n        deviceType: getDeviceTypeFor(event)\n      };\n      publicAPI.mouseMoveEvent(callData);\n    }\n  };\n  publicAPI.handleTouchEnd = event => {\n    const pointers = [...pointerCache.values()];\n    if (model.recognizeGestures) {\n      // No more fingers down\n      if (pointers.length === 0) {\n        const callData = {\n          ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n          position: getScreenEventPositionFor(event),\n          deviceType: getDeviceTypeFor(event)\n        };\n        publicAPI.leftButtonReleaseEvent(callData);\n      } else if (pointers.length === 1) {\n        // If one finger left, end touch and start button press\n        const positions = pointerCacheToPositions(pointerCache);\n        publicAPI.recognizeGesture('TouchEnd', positions);\n        const callData = {\n          ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n          position: pointers[0].position,\n          deviceType: getDeviceTypeFor(event)\n        };\n        publicAPI.leftButtonPressEvent(callData);\n      } else {\n        // If more than one finger left, keep touch move\n        const positions = pointerCacheToPositions(pointerCache);\n        publicAPI.recognizeGesture('TouchMove', positions);\n      }\n    } else if (pointers.length === 1) {\n      const callData = {\n        ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n        position: pointers[0].position,\n        deviceType: getDeviceTypeFor(event)\n      };\n      publicAPI.leftButtonReleaseEvent(callData);\n    }\n  };\n  publicAPI.setView = val => {\n    if (model._view === val) {\n      return;\n    }\n    model._view = val;\n    model._view.getRenderable().setInteractor(publicAPI);\n    publicAPI.modified();\n  };\n  publicAPI.getFirstRenderer = () => model._view?.getRenderable()?.getRenderersByReference()?.[0];\n  publicAPI.findPokedRenderer = function () {\n    let x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    if (!model._view) {\n      return null;\n    }\n    // The original order of renderers needs to remain as\n    // the first one is the one we want to manipulate the camera on.\n    const rc = model._view?.getRenderable()?.getRenderers();\n    if (!rc || rc.length === 0) {\n      return null;\n    }\n    rc.sort((a, b) => a.getLayer() - b.getLayer());\n    let interactiveren = null;\n    let viewportren = null;\n    let currentRenderer = null;\n    let count = rc.length;\n    while (count--) {\n      const aren = rc[count];\n      if (model._view.isInViewport(x, y, aren) && aren.getInteractive()) {\n        currentRenderer = aren;\n        break;\n      }\n      if (interactiveren === null && aren.getInteractive()) {\n        // Save this renderer in case we can't find one in the viewport that\n        // is interactive.\n        interactiveren = aren;\n      }\n      if (viewportren === null && model._view.isInViewport(x, y, aren)) {\n        // Save this renderer in case we can't find one in the viewport that\n        // is interactive.\n        viewportren = aren;\n      }\n    }\n\n    // We must have a value.  If we found an interactive renderer before, that's\n    // better than a non-interactive renderer.\n    if (currentRenderer === null) {\n      currentRenderer = interactiveren;\n    }\n\n    // We must have a value.  If we found a renderer that is in the viewport,\n    // that is better than any old viewport (but not as good as an interactive\n    // one).\n    if (currentRenderer === null) {\n      currentRenderer = viewportren;\n    }\n\n    // We must have a value - take anything.\n    if (currentRenderer == null) {\n      currentRenderer = rc[0];\n    }\n    return currentRenderer;\n  };\n\n  // only render if we are not animating. If we are animating\n  // then renders will happen naturally anyhow and we definitely\n  // do not want extra renders as the make the apparent interaction\n  // rate slower.\n  publicAPI.render = () => {\n    if (!publicAPI.isAnimating() && !model.inRender) {\n      forceRender();\n    }\n  };\n\n  // create the generic Event methods\n  handledEvents.forEach(eventName => {\n    const lowerFirst = eventName.charAt(0).toLowerCase() + eventName.slice(1);\n    publicAPI[`${lowerFirst}Event`] = arg => {\n      // Check that interactor enabled\n      if (!model.enabled) {\n        return;\n      }\n\n      // Check that a poked renderer exists\n      const renderer = publicAPI.getCurrentRenderer();\n      if (!renderer) {\n        vtkOnceErrorMacro(`\n          Can not forward events without a current renderer on the interactor.\n        `);\n        return;\n      }\n\n      // Pass the eventName and the poked renderer\n      const callData = {\n        type: eventName,\n        pokedRenderer: model.currentRenderer,\n        firstRenderer: publicAPI.getFirstRenderer(),\n        // Add the arguments to the call data\n        ...arg\n      };\n\n      // Call invoke\n      publicAPI[`invoke${eventName}`](callData);\n    };\n  });\n\n  // we know we are in multitouch now, so start recognizing\n  publicAPI.recognizeGesture = (event, positions) => {\n    // more than two pointers we ignore\n    if (Object.keys(positions).length > 2) {\n      return;\n    }\n    if (!model.startingEventPositions) {\n      model.startingEventPositions = {};\n    }\n\n    // store the initial positions\n    if (event === 'TouchStart') {\n      Object.keys(positions).forEach(key => {\n        model.startingEventPositions[key] = positions[key];\n      });\n      // we do not know what the gesture is yet\n      model.currentGesture = 'Start';\n      return;\n    }\n\n    // end the gesture if needed\n    if (event === 'TouchEnd') {\n      if (model.currentGesture === 'Pinch') {\n        publicAPI.render();\n        publicAPI.endPinchEvent();\n      }\n      if (model.currentGesture === 'Rotate') {\n        publicAPI.render();\n        publicAPI.endRotateEvent();\n      }\n      if (model.currentGesture === 'Pan') {\n        publicAPI.render();\n        publicAPI.endPanEvent();\n      }\n      model.currentGesture = 'Start';\n      model.startingEventPositions = {};\n      return;\n    }\n\n    // what are the two pointers we are working with\n    let count = 0;\n    const posVals = [];\n    const startVals = [];\n    Object.keys(positions).forEach(key => {\n      posVals[count] = positions[key];\n      startVals[count] = model.startingEventPositions[key];\n      count++;\n    });\n\n    // The meat of the algorithm\n    // on move events we analyze them to determine what type\n    // of movement it is and then deal with it.\n    // calculate the distances\n    const originalDistance = Math.sqrt((startVals[0].x - startVals[1].x) * (startVals[0].x - startVals[1].x) + (startVals[0].y - startVals[1].y) * (startVals[0].y - startVals[1].y));\n    const newDistance = Math.sqrt((posVals[0].x - posVals[1].x) * (posVals[0].x - posVals[1].x) + (posVals[0].y - posVals[1].y) * (posVals[0].y - posVals[1].y));\n\n    // calculate rotations\n    let originalAngle = degreesFromRadians(Math.atan2(startVals[1].y - startVals[0].y, startVals[1].x - startVals[0].x));\n    let newAngle = degreesFromRadians(Math.atan2(posVals[1].y - posVals[0].y, posVals[1].x - posVals[0].x));\n\n    // angles are cyclic so watch for that, 1 and 359 are only 2 apart :)\n    let angleDeviation = newAngle - originalAngle;\n    newAngle = newAngle + 180.0 >= 360.0 ? newAngle - 180.0 : newAngle + 180.0;\n    originalAngle = originalAngle + 180.0 >= 360.0 ? originalAngle - 180.0 : originalAngle + 180.0;\n    if (Math.abs(newAngle - originalAngle) < Math.abs(angleDeviation)) {\n      angleDeviation = newAngle - originalAngle;\n    }\n\n    // calculate the translations\n    const trans = [];\n    trans[0] = (posVals[0].x - startVals[0].x + posVals[1].x - startVals[1].x) / 2.0;\n    trans[1] = (posVals[0].y - startVals[0].y + posVals[1].y - startVals[1].y) / 2.0;\n    if (event === 'TouchMove') {\n      // OK we want to\n      // - immediately respond to the user\n      // - allow the user to zoom without panning (saves focal point)\n      // - allow the user to rotate without panning (saves focal point)\n\n      // do we know what gesture we are doing yet? If not\n      // see if we can figure it out\n      if (model.currentGesture === 'Start') {\n        // pinch is a move to/from the center point\n        // rotate is a move along the circumference\n        // pan is a move of the center point\n        // compute the distance along each of these axes in pixels\n        // the first to break thresh wins\n        let thresh = 0.01 * Math.sqrt(model.container.clientWidth * model.container.clientWidth + model.container.clientHeight * model.container.clientHeight);\n        if (thresh < 15.0) {\n          thresh = 15.0;\n        }\n        const pinchDistance = Math.abs(newDistance - originalDistance);\n        const rotateDistance = newDistance * 3.1415926 * Math.abs(angleDeviation) / 360.0;\n        const panDistance = Math.sqrt(trans[0] * trans[0] + trans[1] * trans[1]);\n        if (pinchDistance > thresh && pinchDistance > rotateDistance && pinchDistance > panDistance) {\n          model.currentGesture = 'Pinch';\n          const callData = {\n            scale: 1.0,\n            touches: positions\n          };\n          publicAPI.startPinchEvent(callData);\n        } else if (rotateDistance > thresh && rotateDistance > panDistance) {\n          model.currentGesture = 'Rotate';\n          const callData = {\n            rotation: 0.0,\n            touches: positions\n          };\n          publicAPI.startRotateEvent(callData);\n        } else if (panDistance > thresh) {\n          model.currentGesture = 'Pan';\n          const callData = {\n            translation: [0, 0],\n            touches: positions\n          };\n          publicAPI.startPanEvent(callData);\n        }\n      } else {\n        // if we have found a specific type of movement then\n        // handle it\n        if (model.currentGesture === 'Rotate') {\n          const callData = {\n            rotation: angleDeviation,\n            touches: positions\n          };\n          publicAPI.rotateEvent(callData);\n        }\n        if (model.currentGesture === 'Pinch') {\n          const callData = {\n            scale: newDistance / originalDistance,\n            touches: positions\n          };\n          publicAPI.pinchEvent(callData);\n        }\n        if (model.currentGesture === 'Pan') {\n          const callData = {\n            translation: trans,\n            touches: positions\n          };\n          publicAPI.panEvent(callData);\n        }\n      }\n    }\n  };\n  publicAPI.handleVisibilityChange = () => {\n    model._animationStartTime = Date.now();\n    model._animationFrameCount = 0;\n  };\n  publicAPI.setCurrentRenderer = r => {\n    model._forcedRenderer = !!r;\n    model.currentRenderer = r;\n  };\n\n  // Stop animating if the renderWindowInteractor is deleted.\n  const superDelete = publicAPI.delete;\n  publicAPI.delete = () => {\n    while (animationRequesters.size) {\n      publicAPI.cancelAnimation(animationRequesters.values().next().value);\n    }\n    if (typeof document.hidden !== 'undefined') {\n      document.removeEventListener('visibilitychange', publicAPI.handleVisibilityChange);\n    }\n    if (model.container) {\n      publicAPI.unbindEvents();\n    }\n    superDelete();\n  };\n\n  // Use the Page Visibility API to detect when we switch away from or back to\n  // this tab, and reset the animationFrameStart. When tabs are not active, browsers\n  // will stop calling requestAnimationFrame callbacks.\n  if (typeof document.hidden !== 'undefined') {\n    document.addEventListener('visibilitychange', publicAPI.handleVisibilityChange, false);\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  renderWindow: null,\n  interactorStyle: null,\n  picker: null,\n  pickingManager: null,\n  initialized: false,\n  enabled: false,\n  enableRender: true,\n  currentRenderer: null,\n  lightFollowCamera: true,\n  desiredUpdateRate: 30.0,\n  stillUpdateRate: 2.0,\n  container: null,\n  // _view: null,\n  recognizeGestures: true,\n  currentGesture: 'Start',\n  animationRequest: null,\n  lastFrameTime: 0.1,\n  recentAnimationFrameRate: 10.0,\n  wheelTimeoutID: 0,\n  moveTimeoutID: 0,\n  lastGamepadValues: {},\n  preventDefaultOnPointerDown: false,\n  preventDefaultOnPointerUp: false,\n  mouseScrollDebounceByPass: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n\n  // run animation at least until this time\n  model._animationExtendedEnd = 0;\n  macro.event(publicAPI, model, 'RenderEvent');\n  handledEvents.forEach(eventName => macro.event(publicAPI, model, eventName));\n\n  // Create get-only macros\n  macro.get(publicAPI, model, ['initialized', 'container', 'interactorStyle', 'lastFrameTime', 'recentAnimationFrameRate', '_view']);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['lightFollowCamera', 'enabled', 'enableRender', 'recognizeGestures', 'desiredUpdateRate', 'stillUpdateRate', 'picker', 'preventDefaultOnPointerDown', 'preventDefaultOnPointerUp', 'mouseScrollDebounceByPass']);\n  macro.moveToProtected(publicAPI, model, ['view']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n\n  // Object specific methods\n  vtkRenderWindowInteractor(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkRenderWindowInteractor');\n\n// ----------------------------------------------------------------------------\n\nvar vtkRenderWindowInteractor$1 = {\n  newInstance,\n  extend,\n  handledEvents,\n  ...Constants\n};\nexport { vtkRenderWindowInteractor$1 as default, extend, newInstance };","map":{"version":3,"names":["m","macro","A","degreesFromRadians","Constants","Device","Input","vtkWarningMacro","vtkErrorMacro","normalizeWheel","vtkOnceErrorMacro","EMPTY_MOUSE_EVENT","ctrlKey","altKey","shiftKey","deviceInputMap","Trigger","Grip","TrackPad","Thumbstick","B","handledEvents","preventDefault","event","cancelable","pointerCacheToPositions","cache","positions","Object","create","forEach","_ref","pointerId","position","vtkRenderWindowInteractor","publicAPI","model","classHierarchy","push","animationRequesters","Set","pointerCache","Map","wheelCoefficient","start","initialized","initialize","startEventLoop","setRenderWindow","aren","setInteractorStyle","style","interactorStyle","setInteractor","getInteractor","enable","render","setEnabled","disable","updateCurrentRenderer","x","y","_forcedRenderer","currentRenderer","findPokedRenderer","getCurrentRenderer","_getScreenEventPositionFor","source","canvas","_view","getCanvas","bounds","getBoundingClientRect","scaleX","width","scaleY","height","clientX","left","clientY","top","z","size","getScreenEventPositionFor","getModifierKeysFor","controlKey","getKeysFor","modifierKeys","keys","key","keyCode","charCode","getDeviceTypeFor","pointerType","bindEvents","container","addEventListener","handleWheel","handlePointerEnter","handlePointerLeave","handlePointerMove","passive","handlePointerDown","handlePointerUp","handlePointerCancel","document","handleKeyPress","handleKeyDown","handleKeyUp","handlePointerLockChange","touchAction","userSelect","webkitTapHighlightColor","unbindEvents","removeEventListener","clear","data","keyPressEvent","keyDownEvent","keyUpEvent","callData","deviceType","pointerEnterEvent","mouseEnterEvent","pointerLeaveEvent","mouseLeaveEvent","button","isPointerLocked","preventDefaultOnPointerDown","target","hasPointerCapture","releasePointerCapture","setPointerCapture","has","set","handleTouchStart","handleMouseDown","preventDefaultOnPointerUp","delete","handleTouchEnd","handleMouseUp","pointer","get","handleTouchMove","handleMouseMove","leftButtonPressEvent","middleButtonPressEvent","rightButtonPressEvent","requestPointerLock","exitPointerLock","pointerLockElement","startPointerLockEvent","endPointerLockEvent","forceRender","enabled","enableRender","inRender","traverseAllPasses","invokeRenderEvent","requestAnimation","requestor","undefined","add","animationRequest","xrAnimation","_animationStartTime","Date","now","_animationFrameCount","requestAnimationFrame","handleAnimation","startAnimationEvent","extendAnimation","duration","newEnd","_animationExtendedEnd","Math","max","isAnimating","cancelAnimation","skipWarning","arguments","length","requestStr","getClassName","cancelAnimationFrame","endAnimationEvent","switchToXRAnimation","returnFromXRAnimation","recentAnimationFrameRate","updateXRGamepads","xrSession","xrFrame","xrRefSpace","inputSources","inputSource","gripPose","gripSpace","getPose","gp","gamepad","hand","handedness","index","lastGamepadValues","buttons","right","none","b","pressed","button3DEvent","transform","orientation","device","LeftController","RightController","input","mapping","move3DEvent","moveTimeoutID","startMouseMoveEvent","mouseMoveEvent","clearTimeout","setTimeout","endMouseMoveEvent","currTime","lastFrameTime","animationFrameRateUpdateEvent","animationEvent","wheelTimeoutID","abs","spinY","startMouseWheelEvent","mouseWheelEvent","mouseScrollDebounceByPass","endMouseWheelEvent","leftButtonReleaseEvent","middleButtonReleaseEvent","rightButtonReleaseEvent","pointers","values","recognizeGestures","recognizeGesture","setView","val","getRenderable","modified","getFirstRenderer","getRenderersByReference","rc","getRenderers","sort","a","getLayer","interactiveren","viewportren","count","isInViewport","getInteractive","eventName","lowerFirst","charAt","toLowerCase","slice","arg","renderer","type","pokedRenderer","firstRenderer","startingEventPositions","currentGesture","endPinchEvent","endRotateEvent","endPanEvent","posVals","startVals","originalDistance","sqrt","newDistance","originalAngle","atan2","newAngle","angleDeviation","trans","thresh","clientWidth","clientHeight","pinchDistance","rotateDistance","panDistance","scale","touches","startPinchEvent","rotation","startRotateEvent","translation","startPanEvent","rotateEvent","pinchEvent","panEvent","handleVisibilityChange","setCurrentRenderer","r","superDelete","next","value","hidden","DEFAULT_VALUES","renderWindow","picker","pickingManager","lightFollowCamera","desiredUpdateRate","stillUpdateRate","extend","initialValues","assign","obj","setGet","moveToProtected","newInstance","vtkRenderWindowInteractor$1","default"],"sources":["/root/vue-cornerstone-demo/node_modules/@kitware/vtk.js/Rendering/Core/RenderWindowInteractor.js"],"sourcesContent":["import { m as macro } from '../../macros2.js';\nimport { A as degreesFromRadians } from '../../Common/Core/Math/index.js';\nimport Constants from './RenderWindowInteractor/Constants.js';\n\nconst {\n  Device,\n  Input\n} = Constants;\nconst {\n  vtkWarningMacro,\n  vtkErrorMacro,\n  normalizeWheel,\n  vtkOnceErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nconst EMPTY_MOUSE_EVENT = {\n  ctrlKey: false,\n  altKey: false,\n  shiftKey: false\n};\nconst deviceInputMap = {\n  'xr-standard': [Input.Trigger, Input.Grip, Input.TrackPad, Input.Thumbstick, Input.A, Input.B]\n};\nconst handledEvents = ['StartAnimation', 'Animation', 'EndAnimation', 'PointerEnter', 'PointerLeave', 'MouseEnter', 'MouseLeave', 'StartMouseMove', 'MouseMove', 'EndMouseMove', 'LeftButtonPress', 'LeftButtonRelease', 'MiddleButtonPress', 'MiddleButtonRelease', 'RightButtonPress', 'RightButtonRelease', 'KeyPress', 'KeyDown', 'KeyUp', 'StartMouseWheel', 'MouseWheel', 'EndMouseWheel', 'StartPinch', 'Pinch', 'EndPinch', 'StartPan', 'Pan', 'EndPan', 'StartRotate', 'Rotate', 'EndRotate', 'Button3D', 'Move3D', 'StartPointerLock', 'EndPointerLock', 'StartInteraction', 'Interaction', 'EndInteraction', 'AnimationFrameRateUpdate'];\nfunction preventDefault(event) {\n  if (event.cancelable) {\n    event.preventDefault();\n  }\n}\nfunction pointerCacheToPositions(cache) {\n  const positions = Object.create(null);\n  cache.forEach(_ref => {\n    let {\n      pointerId,\n      position\n    } = _ref;\n    positions[pointerId] = position;\n  });\n  return positions;\n}\n\n// ----------------------------------------------------------------------------\n// vtkRenderWindowInteractor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkRenderWindowInteractor(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderWindowInteractor');\n\n  // Initialize list of requesters\n  const animationRequesters = new Set();\n\n  // map from pointerId to { pointerId: number, position: [x, y] }\n  const pointerCache = new Map();\n\n  // Factor to apply on wheel spin.\n  let wheelCoefficient = 1;\n\n  // Public API methods\n\n  //----------------------------------------------------------------------\n  publicAPI.start = () => {\n    // Let the compositing handle the event loop if it wants to.\n    // if (publicAPI.HasObserver(vtkCommand::StartEvent) && !publicAPI.HandleEventLoop) {\n    //   publicAPI.invokeEvent({ type: 'StartEvent' });\n    //   return;\n    // }\n\n    // As a convenience, initialize if we aren't initialized yet.\n    if (!model.initialized) {\n      publicAPI.initialize();\n      if (!model.initialized) {\n        return;\n      }\n    }\n    // Pass execution to the subclass which will run the event loop,\n    // this will not return until TerminateApp is called.\n    publicAPI.startEventLoop();\n  };\n\n  //----------------------------------------------------------------------\n  publicAPI.setRenderWindow = aren => {\n    vtkErrorMacro('you want to call setView(view) instead of setRenderWindow on a vtk.js interactor');\n  };\n\n  //----------------------------------------------------------------------\n  publicAPI.setInteractorStyle = style => {\n    if (model.interactorStyle !== style) {\n      if (model.interactorStyle != null) {\n        model.interactorStyle.setInteractor(null);\n      }\n      model.interactorStyle = style;\n      if (model.interactorStyle != null) {\n        if (model.interactorStyle.getInteractor() !== publicAPI) {\n          model.interactorStyle.setInteractor(publicAPI);\n        }\n      }\n    }\n  };\n\n  //---------------------------------------------------------------------\n  publicAPI.initialize = () => {\n    model.initialized = true;\n    publicAPI.enable();\n    publicAPI.render();\n  };\n  publicAPI.enable = () => publicAPI.setEnabled(true);\n  publicAPI.disable = () => publicAPI.setEnabled(false);\n  publicAPI.startEventLoop = () => vtkWarningMacro('empty event loop');\n  function updateCurrentRenderer(x, y) {\n    if (!model._forcedRenderer) {\n      model.currentRenderer = publicAPI.findPokedRenderer(x, y);\n    }\n  }\n  publicAPI.getCurrentRenderer = () => {\n    if (model.currentRenderer) {\n      return model.currentRenderer;\n    }\n    updateCurrentRenderer(0, 0);\n    return model.currentRenderer;\n  };\n  function _getScreenEventPositionFor(source) {\n    const canvas = model._view.getCanvas();\n    const bounds = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / bounds.width;\n    const scaleY = canvas.height / bounds.height;\n    const position = {\n      x: scaleX * (source.clientX - bounds.left),\n      y: scaleY * (bounds.height - source.clientY + bounds.top),\n      z: 0\n    };\n\n    // if multitouch, do not update the current renderer\n    if (pointerCache.size <= 1 || !model.currentRenderer) {\n      updateCurrentRenderer(position.x, position.y);\n    }\n    return position;\n  }\n  // Allow user to override it\n  const getScreenEventPositionFor = model._getScreenEventPositionFor || _getScreenEventPositionFor;\n  function getModifierKeysFor(event) {\n    return {\n      controlKey: event.ctrlKey,\n      altKey: event.altKey,\n      shiftKey: event.shiftKey\n    };\n  }\n  function getKeysFor(event) {\n    const modifierKeys = getModifierKeysFor(event);\n    const keys = {\n      key: event.key,\n      keyCode: event.charCode,\n      ...modifierKeys\n    };\n    return keys;\n  }\n  function getDeviceTypeFor(event) {\n    return event.pointerType || '';\n  }\n  publicAPI.bindEvents = container => {\n    model.container = container;\n    container.addEventListener('contextmenu', preventDefault);\n    container.addEventListener('wheel', publicAPI.handleWheel);\n    container.addEventListener('DOMMouseScroll', publicAPI.handleWheel);\n    container.addEventListener('pointerenter', publicAPI.handlePointerEnter);\n    container.addEventListener('pointerleave', publicAPI.handlePointerLeave);\n    container.addEventListener('pointermove', publicAPI.handlePointerMove, {\n      passive: false\n    });\n    container.addEventListener('pointerdown', publicAPI.handlePointerDown, {\n      passive: false\n    });\n    container.addEventListener('pointerup', publicAPI.handlePointerUp);\n    container.addEventListener('pointercancel', publicAPI.handlePointerCancel);\n    document.addEventListener('keypress', publicAPI.handleKeyPress);\n    document.addEventListener('keydown', publicAPI.handleKeyDown);\n    document.addEventListener('keyup', publicAPI.handleKeyUp);\n    document.addEventListener('pointerlockchange', publicAPI.handlePointerLockChange);\n\n    // using touchAction is more performant than preventDefault\n    // in a touchstart handler.\n    container.style.touchAction = 'none';\n    container.style.userSelect = 'none';\n    // disables tap highlight for when cursor is pointer\n    container.style.webkitTapHighlightColor = 'rgba(0,0,0,0)';\n  };\n  publicAPI.unbindEvents = () => {\n    const {\n      container\n    } = model;\n    container.removeEventListener('contextmenu', preventDefault);\n    container.removeEventListener('wheel', publicAPI.handleWheel);\n    container.removeEventListener('DOMMouseScroll', publicAPI.handleWheel);\n    container.removeEventListener('pointerenter', publicAPI.handlePointerEnter);\n    container.removeEventListener('pointerleave', publicAPI.handlePointerLeave);\n    container.removeEventListener('pointermove', publicAPI.handlePointerMove, {\n      passive: false\n    });\n    container.removeEventListener('pointerdown', publicAPI.handlePointerDown, {\n      passive: false\n    });\n    container.removeEventListener('pointerup', publicAPI.handlePointerUp);\n    container.removeEventListener('pointercancel', publicAPI.handlePointerCancel);\n    document.removeEventListener('keypress', publicAPI.handleKeyPress);\n    document.removeEventListener('keydown', publicAPI.handleKeyDown);\n    document.removeEventListener('keyup', publicAPI.handleKeyUp);\n    document.removeEventListener('pointerlockchange', publicAPI.handlePointerLockChange);\n    model.container = null;\n    pointerCache.clear();\n  };\n  publicAPI.handleKeyPress = event => {\n    const data = getKeysFor(event);\n    publicAPI.keyPressEvent(data);\n  };\n  publicAPI.handleKeyDown = event => {\n    const data = getKeysFor(event);\n    publicAPI.keyDownEvent(data);\n  };\n  publicAPI.handleKeyUp = event => {\n    const data = getKeysFor(event);\n    publicAPI.keyUpEvent(data);\n  };\n  publicAPI.handlePointerEnter = event => {\n    const callData = {\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n    publicAPI.pointerEnterEvent(callData);\n    if (callData.deviceType === 'mouse') {\n      publicAPI.mouseEnterEvent(callData);\n    }\n  };\n  publicAPI.handlePointerLeave = event => {\n    const callData = {\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n    publicAPI.pointerLeaveEvent(callData);\n    if (callData.deviceType === 'mouse') {\n      publicAPI.mouseLeaveEvent(callData);\n    }\n  };\n  publicAPI.handlePointerDown = event => {\n    if (event.button > 2 || publicAPI.isPointerLocked()) {\n      // ignore events from extra mouse buttons such as `back` and `forward`\n      return;\n    }\n    if (model.preventDefaultOnPointerDown) {\n      preventDefault(event);\n    }\n    if (event.target.hasPointerCapture(event.pointerId)) {\n      event.target.releasePointerCapture(event.pointerId);\n    }\n    model.container.setPointerCapture(event.pointerId);\n    if (pointerCache.has(event.pointerId)) {\n      vtkWarningMacro('[RenderWindowInteractor] duplicate pointerId detected');\n    }\n    pointerCache.set(event.pointerId, {\n      pointerId: event.pointerId,\n      position: getScreenEventPositionFor(event)\n    });\n    switch (event.pointerType) {\n      case 'pen':\n      case 'touch':\n        publicAPI.handleTouchStart(event);\n        break;\n      case 'mouse':\n      default:\n        publicAPI.handleMouseDown(event);\n        break;\n    }\n  };\n  publicAPI.handlePointerUp = event => {\n    if (pointerCache.has(event.pointerId)) {\n      if (model.preventDefaultOnPointerUp) {\n        preventDefault(event);\n      }\n      pointerCache.delete(event.pointerId);\n      model.container.releasePointerCapture(event.pointerId);\n      switch (event.pointerType) {\n        case 'pen':\n        case 'touch':\n          publicAPI.handleTouchEnd(event);\n          break;\n        case 'mouse':\n        default:\n          publicAPI.handleMouseUp(event);\n          break;\n      }\n    }\n  };\n  publicAPI.handlePointerCancel = event => {\n    if (pointerCache.has(event.pointerId)) {\n      pointerCache.delete(event.pointerId);\n      switch (event.pointerType) {\n        case 'pen':\n        case 'touch':\n          publicAPI.handleTouchEnd(event);\n          break;\n        case 'mouse':\n        default:\n          publicAPI.handleMouseUp(event);\n          break;\n      }\n    }\n  };\n  publicAPI.handlePointerMove = event => {\n    if (pointerCache.has(event.pointerId)) {\n      const pointer = pointerCache.get(event.pointerId);\n      pointer.position = getScreenEventPositionFor(event);\n    }\n    switch (event.pointerType) {\n      case 'pen':\n      case 'touch':\n        publicAPI.handleTouchMove(event);\n        break;\n      case 'mouse':\n      default:\n        publicAPI.handleMouseMove(event);\n        break;\n    }\n  };\n  publicAPI.handleMouseDown = event => {\n    const callData = {\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n    switch (event.button) {\n      case 0:\n        publicAPI.leftButtonPressEvent(callData);\n        break;\n      case 1:\n        publicAPI.middleButtonPressEvent(callData);\n        break;\n      case 2:\n        publicAPI.rightButtonPressEvent(callData);\n        break;\n      default:\n        vtkErrorMacro(`Unknown mouse button pressed: ${event.button}`);\n        break;\n    }\n  };\n\n  //----------------------------------------------------------------------\n  publicAPI.requestPointerLock = () => {\n    if (model.container) {\n      model.container.requestPointerLock();\n    }\n  };\n\n  //----------------------------------------------------------------------\n  publicAPI.exitPointerLock = () => document.exitPointerLock?.();\n\n  //----------------------------------------------------------------------\n  publicAPI.isPointerLocked = () => !!model.container && document.pointerLockElement === model.container;\n\n  //----------------------------------------------------------------------\n  publicAPI.handlePointerLockChange = () => {\n    if (publicAPI.isPointerLocked()) {\n      publicAPI.startPointerLockEvent();\n    } else {\n      publicAPI.endPointerLockEvent();\n    }\n  };\n\n  //----------------------------------------------------------------------\n  function forceRender() {\n    if (model._view && model.enabled && model.enableRender) {\n      model.inRender = true;\n      model._view.traverseAllPasses();\n      model.inRender = false;\n    }\n    // outside the above test so that third-party code can redirect\n    // the render to the appropriate class\n    publicAPI.invokeRenderEvent();\n  }\n  publicAPI.requestAnimation = requestor => {\n    if (requestor === undefined) {\n      vtkErrorMacro(`undefined requester, can not start animating`);\n      return;\n    }\n    if (animationRequesters.has(requestor)) {\n      vtkWarningMacro(`requester is already registered for animating`);\n      return;\n    }\n    animationRequesters.add(requestor);\n    if (!model.animationRequest && animationRequesters.size === 1 && !model.xrAnimation) {\n      model._animationStartTime = Date.now();\n      model._animationFrameCount = 0;\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\n      publicAPI.startAnimationEvent();\n    }\n  };\n\n  // continue animating for at least the specified duration of\n  // milliseconds.\n  publicAPI.extendAnimation = duration => {\n    const newEnd = Date.now() + duration;\n    model._animationExtendedEnd = Math.max(model._animationExtendedEnd, newEnd);\n    if (!model.animationRequest && animationRequesters.size === 0 && !model.xrAnimation) {\n      model._animationStartTime = Date.now();\n      model._animationFrameCount = 0;\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\n      publicAPI.startAnimationEvent();\n    }\n  };\n  publicAPI.isAnimating = () => model.xrAnimation || model.animationRequest !== null;\n  publicAPI.cancelAnimation = function (requestor) {\n    let skipWarning = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (!animationRequesters.has(requestor)) {\n      if (!skipWarning) {\n        const requestStr = requestor && requestor.getClassName ? requestor.getClassName() : requestor;\n        vtkWarningMacro(`${requestStr} did not request an animation`);\n      }\n      return;\n    }\n    animationRequesters.delete(requestor);\n    if (model.animationRequest && animationRequesters.size === 0 && Date.now() > model._animationExtendedEnd) {\n      cancelAnimationFrame(model.animationRequest);\n      model.animationRequest = null;\n      publicAPI.endAnimationEvent();\n      publicAPI.render();\n    }\n  };\n  publicAPI.switchToXRAnimation = () => {\n    // cancel existing animation if any\n    if (model.animationRequest) {\n      cancelAnimationFrame(model.animationRequest);\n      model.animationRequest = null;\n    }\n    model.xrAnimation = true;\n  };\n  publicAPI.returnFromXRAnimation = () => {\n    model.xrAnimation = false;\n    if (animationRequesters.size !== 0) {\n      model.recentAnimationFrameRate = 10.0;\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\n    }\n  };\n  publicAPI.updateXRGamepads = (xrSession, xrFrame, xrRefSpace) => {\n    // watch for when buttons change state and fire events\n    xrSession.inputSources.forEach(inputSource => {\n      const gripPose = inputSource.gripSpace == null ? null : xrFrame.getPose(inputSource.gripSpace, xrRefSpace);\n      const gp = inputSource.gamepad;\n      const hand = inputSource.handedness;\n      if (gp) {\n        if (!(gp.index in model.lastGamepadValues)) {\n          model.lastGamepadValues[gp.index] = {\n            left: {\n              buttons: {}\n            },\n            right: {\n              buttons: {}\n            },\n            none: {\n              buttons: {}\n            }\n          };\n        }\n        for (let b = 0; b < gp.buttons.length; ++b) {\n          if (!(b in model.lastGamepadValues[gp.index][hand].buttons)) {\n            model.lastGamepadValues[gp.index][hand].buttons[b] = false;\n          }\n          if (model.lastGamepadValues[gp.index][hand].buttons[b] !== gp.buttons[b].pressed && gripPose != null) {\n            publicAPI.button3DEvent({\n              gamepad: gp,\n              position: gripPose.transform.position,\n              orientation: gripPose.transform.orientation,\n              pressed: gp.buttons[b].pressed,\n              device: inputSource.handedness === 'left' ? Device.LeftController : Device.RightController,\n              input: deviceInputMap[gp.mapping] && deviceInputMap[gp.mapping][b] ? deviceInputMap[gp.mapping][b] : Input.Trigger\n            });\n            model.lastGamepadValues[gp.index][hand].buttons[b] = gp.buttons[b].pressed;\n          }\n          if (model.lastGamepadValues[gp.index][hand].buttons[b] && gripPose != null) {\n            publicAPI.move3DEvent({\n              gamepad: gp,\n              position: gripPose.transform.position,\n              orientation: gripPose.transform.orientation,\n              device: inputSource.handedness === 'left' ? Device.LeftController : Device.RightController\n            });\n          }\n        }\n      }\n    });\n  };\n  publicAPI.handleMouseMove = event => {\n    const callData = {\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n    if (model.moveTimeoutID === 0) {\n      publicAPI.startMouseMoveEvent(callData);\n    } else {\n      publicAPI.mouseMoveEvent(callData);\n      clearTimeout(model.moveTimeoutID);\n    }\n\n    // start a timer to keep us animating while we get mouse move events\n    model.moveTimeoutID = setTimeout(() => {\n      publicAPI.endMouseMoveEvent();\n      model.moveTimeoutID = 0;\n    }, 200);\n  };\n  publicAPI.handleAnimation = () => {\n    const currTime = Date.now();\n    model._animationFrameCount++;\n    if (currTime - model._animationStartTime > 1000.0 && model._animationFrameCount > 1) {\n      model.recentAnimationFrameRate = 1000.0 * (model._animationFrameCount - 1) / (currTime - model._animationStartTime);\n      model.lastFrameTime = 1.0 / model.recentAnimationFrameRate;\n      publicAPI.animationFrameRateUpdateEvent();\n      model._animationStartTime = currTime;\n      model._animationFrameCount = 1;\n    }\n    publicAPI.animationEvent();\n    forceRender();\n    if (animationRequesters.size > 0 || Date.now() < model._animationExtendedEnd) {\n      model.animationRequest = requestAnimationFrame(publicAPI.handleAnimation);\n    } else {\n      cancelAnimationFrame(model.animationRequest);\n      model.animationRequest = null;\n      publicAPI.endAnimationEvent();\n      publicAPI.render();\n    }\n  };\n  publicAPI.handleWheel = event => {\n    preventDefault(event);\n\n    /**\n     * wheel event values can vary significantly across browsers, platforms\n     * and devices [1]. `normalizeWheel` uses facebook's solution from their\n     * fixed-data-table repository [2].\n     *\n     * [1] https://developer.mozilla.org/en-US/docs/Web/Events/mousewheel\n     * [2] https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\n     *\n     * This code will return an object with properties:\n     *\n     *   spinX   -- normalized spin speed (use for zoom) - x plane\n     *   spinY   -- \" - y plane\n     *   pixelX  -- normalized distance (to pixels) - x plane\n     *   pixelY  -- \" - y plane\n     *\n     */\n    const callData = {\n      ...normalizeWheel(event),\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n\n    // Wheel events are thought to scroll pages (i.e. multiple lines at once).\n    // See normalizeWheel() documentation for more context.\n    // While trackpad wheel events are many small (<1) wheel spins,\n    // mouse wheel events have absolute spin values higher than 1.\n    // Here the first spin value is \"recorded\", and used to normalize\n    // all the following mouse wheel events.\n    if (model.wheelTimeoutID === 0) {\n      // we attempt to distinguish between trackpads and mice\n      // .3 will be larger than the first trackpad event,\n      // but small enough to detect some common edge case mice\n      if (Math.abs(callData.spinY) >= 0.3) {\n        // Event is coming from mouse wheel\n        wheelCoefficient = Math.abs(callData.spinY);\n      } else {\n        // Event is coming from trackpad\n        wheelCoefficient = 1;\n      }\n    }\n    callData.spinY /= wheelCoefficient;\n    if (model.wheelTimeoutID === 0) {\n      publicAPI.startMouseWheelEvent(callData);\n      publicAPI.mouseWheelEvent(callData);\n    } else {\n      publicAPI.mouseWheelEvent(callData);\n      clearTimeout(model.wheelTimeoutID);\n    }\n    if (model.mouseScrollDebounceByPass) {\n      publicAPI.extendAnimation(600);\n      publicAPI.endMouseWheelEvent();\n      model.wheelTimeoutID = 0;\n    } else {\n      // start a timer to keep us animating while we get wheel events\n      model.wheelTimeoutID = setTimeout(() => {\n        publicAPI.extendAnimation(600);\n        publicAPI.endMouseWheelEvent();\n        model.wheelTimeoutID = 0;\n      }, 200);\n    }\n  };\n  publicAPI.handleMouseUp = event => {\n    const callData = {\n      ...getModifierKeysFor(event),\n      position: getScreenEventPositionFor(event),\n      deviceType: getDeviceTypeFor(event)\n    };\n    switch (event.button) {\n      case 0:\n        publicAPI.leftButtonReleaseEvent(callData);\n        break;\n      case 1:\n        publicAPI.middleButtonReleaseEvent(callData);\n        break;\n      case 2:\n        publicAPI.rightButtonReleaseEvent(callData);\n        break;\n      default:\n        vtkErrorMacro(`Unknown mouse button released: ${event.button}`);\n        break;\n    }\n  };\n  publicAPI.handleTouchStart = event => {\n    const pointers = [...pointerCache.values()];\n    // If multitouch\n    if (model.recognizeGestures && pointers.length > 1) {\n      const positions = pointerCacheToPositions(pointerCache);\n      // did we just transition to multitouch?\n      if (pointers.length === 2) {\n        const callData = {\n          ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n          position: pointers[0].position,\n          deviceType: getDeviceTypeFor(event)\n        };\n        publicAPI.leftButtonReleaseEvent(callData);\n      }\n      // handle the gesture\n      publicAPI.recognizeGesture('TouchStart', positions);\n    } else if (pointers.length === 1) {\n      const callData = {\n        ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n        position: getScreenEventPositionFor(event),\n        deviceType: getDeviceTypeFor(event)\n      };\n      publicAPI.leftButtonPressEvent(callData);\n    }\n  };\n  publicAPI.handleTouchMove = event => {\n    const pointers = [...pointerCache.values()];\n    if (model.recognizeGestures && pointers.length > 1) {\n      const positions = pointerCacheToPositions(pointerCache);\n      publicAPI.recognizeGesture('TouchMove', positions);\n    } else if (pointers.length === 1) {\n      const callData = {\n        ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n        position: pointers[0].position,\n        deviceType: getDeviceTypeFor(event)\n      };\n      publicAPI.mouseMoveEvent(callData);\n    }\n  };\n  publicAPI.handleTouchEnd = event => {\n    const pointers = [...pointerCache.values()];\n    if (model.recognizeGestures) {\n      // No more fingers down\n      if (pointers.length === 0) {\n        const callData = {\n          ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n          position: getScreenEventPositionFor(event),\n          deviceType: getDeviceTypeFor(event)\n        };\n        publicAPI.leftButtonReleaseEvent(callData);\n      } else if (pointers.length === 1) {\n        // If one finger left, end touch and start button press\n        const positions = pointerCacheToPositions(pointerCache);\n        publicAPI.recognizeGesture('TouchEnd', positions);\n        const callData = {\n          ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n          position: pointers[0].position,\n          deviceType: getDeviceTypeFor(event)\n        };\n        publicAPI.leftButtonPressEvent(callData);\n      } else {\n        // If more than one finger left, keep touch move\n        const positions = pointerCacheToPositions(pointerCache);\n        publicAPI.recognizeGesture('TouchMove', positions);\n      }\n    } else if (pointers.length === 1) {\n      const callData = {\n        ...getModifierKeysFor(EMPTY_MOUSE_EVENT),\n        position: pointers[0].position,\n        deviceType: getDeviceTypeFor(event)\n      };\n      publicAPI.leftButtonReleaseEvent(callData);\n    }\n  };\n  publicAPI.setView = val => {\n    if (model._view === val) {\n      return;\n    }\n    model._view = val;\n    model._view.getRenderable().setInteractor(publicAPI);\n    publicAPI.modified();\n  };\n  publicAPI.getFirstRenderer = () => model._view?.getRenderable()?.getRenderersByReference()?.[0];\n  publicAPI.findPokedRenderer = function () {\n    let x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    if (!model._view) {\n      return null;\n    }\n    // The original order of renderers needs to remain as\n    // the first one is the one we want to manipulate the camera on.\n    const rc = model._view?.getRenderable()?.getRenderers();\n    if (!rc || rc.length === 0) {\n      return null;\n    }\n    rc.sort((a, b) => a.getLayer() - b.getLayer());\n    let interactiveren = null;\n    let viewportren = null;\n    let currentRenderer = null;\n    let count = rc.length;\n    while (count--) {\n      const aren = rc[count];\n      if (model._view.isInViewport(x, y, aren) && aren.getInteractive()) {\n        currentRenderer = aren;\n        break;\n      }\n      if (interactiveren === null && aren.getInteractive()) {\n        // Save this renderer in case we can't find one in the viewport that\n        // is interactive.\n        interactiveren = aren;\n      }\n      if (viewportren === null && model._view.isInViewport(x, y, aren)) {\n        // Save this renderer in case we can't find one in the viewport that\n        // is interactive.\n        viewportren = aren;\n      }\n    }\n\n    // We must have a value.  If we found an interactive renderer before, that's\n    // better than a non-interactive renderer.\n    if (currentRenderer === null) {\n      currentRenderer = interactiveren;\n    }\n\n    // We must have a value.  If we found a renderer that is in the viewport,\n    // that is better than any old viewport (but not as good as an interactive\n    // one).\n    if (currentRenderer === null) {\n      currentRenderer = viewportren;\n    }\n\n    // We must have a value - take anything.\n    if (currentRenderer == null) {\n      currentRenderer = rc[0];\n    }\n    return currentRenderer;\n  };\n\n  // only render if we are not animating. If we are animating\n  // then renders will happen naturally anyhow and we definitely\n  // do not want extra renders as the make the apparent interaction\n  // rate slower.\n  publicAPI.render = () => {\n    if (!publicAPI.isAnimating() && !model.inRender) {\n      forceRender();\n    }\n  };\n\n  // create the generic Event methods\n  handledEvents.forEach(eventName => {\n    const lowerFirst = eventName.charAt(0).toLowerCase() + eventName.slice(1);\n    publicAPI[`${lowerFirst}Event`] = arg => {\n      // Check that interactor enabled\n      if (!model.enabled) {\n        return;\n      }\n\n      // Check that a poked renderer exists\n      const renderer = publicAPI.getCurrentRenderer();\n      if (!renderer) {\n        vtkOnceErrorMacro(`\n          Can not forward events without a current renderer on the interactor.\n        `);\n        return;\n      }\n\n      // Pass the eventName and the poked renderer\n      const callData = {\n        type: eventName,\n        pokedRenderer: model.currentRenderer,\n        firstRenderer: publicAPI.getFirstRenderer(),\n        // Add the arguments to the call data\n        ...arg\n      };\n\n      // Call invoke\n      publicAPI[`invoke${eventName}`](callData);\n    };\n  });\n\n  // we know we are in multitouch now, so start recognizing\n  publicAPI.recognizeGesture = (event, positions) => {\n    // more than two pointers we ignore\n    if (Object.keys(positions).length > 2) {\n      return;\n    }\n    if (!model.startingEventPositions) {\n      model.startingEventPositions = {};\n    }\n\n    // store the initial positions\n    if (event === 'TouchStart') {\n      Object.keys(positions).forEach(key => {\n        model.startingEventPositions[key] = positions[key];\n      });\n      // we do not know what the gesture is yet\n      model.currentGesture = 'Start';\n      return;\n    }\n\n    // end the gesture if needed\n    if (event === 'TouchEnd') {\n      if (model.currentGesture === 'Pinch') {\n        publicAPI.render();\n        publicAPI.endPinchEvent();\n      }\n      if (model.currentGesture === 'Rotate') {\n        publicAPI.render();\n        publicAPI.endRotateEvent();\n      }\n      if (model.currentGesture === 'Pan') {\n        publicAPI.render();\n        publicAPI.endPanEvent();\n      }\n      model.currentGesture = 'Start';\n      model.startingEventPositions = {};\n      return;\n    }\n\n    // what are the two pointers we are working with\n    let count = 0;\n    const posVals = [];\n    const startVals = [];\n    Object.keys(positions).forEach(key => {\n      posVals[count] = positions[key];\n      startVals[count] = model.startingEventPositions[key];\n      count++;\n    });\n\n    // The meat of the algorithm\n    // on move events we analyze them to determine what type\n    // of movement it is and then deal with it.\n    // calculate the distances\n    const originalDistance = Math.sqrt((startVals[0].x - startVals[1].x) * (startVals[0].x - startVals[1].x) + (startVals[0].y - startVals[1].y) * (startVals[0].y - startVals[1].y));\n    const newDistance = Math.sqrt((posVals[0].x - posVals[1].x) * (posVals[0].x - posVals[1].x) + (posVals[0].y - posVals[1].y) * (posVals[0].y - posVals[1].y));\n\n    // calculate rotations\n    let originalAngle = degreesFromRadians(Math.atan2(startVals[1].y - startVals[0].y, startVals[1].x - startVals[0].x));\n    let newAngle = degreesFromRadians(Math.atan2(posVals[1].y - posVals[0].y, posVals[1].x - posVals[0].x));\n\n    // angles are cyclic so watch for that, 1 and 359 are only 2 apart :)\n    let angleDeviation = newAngle - originalAngle;\n    newAngle = newAngle + 180.0 >= 360.0 ? newAngle - 180.0 : newAngle + 180.0;\n    originalAngle = originalAngle + 180.0 >= 360.0 ? originalAngle - 180.0 : originalAngle + 180.0;\n    if (Math.abs(newAngle - originalAngle) < Math.abs(angleDeviation)) {\n      angleDeviation = newAngle - originalAngle;\n    }\n\n    // calculate the translations\n    const trans = [];\n    trans[0] = (posVals[0].x - startVals[0].x + posVals[1].x - startVals[1].x) / 2.0;\n    trans[1] = (posVals[0].y - startVals[0].y + posVals[1].y - startVals[1].y) / 2.0;\n    if (event === 'TouchMove') {\n      // OK we want to\n      // - immediately respond to the user\n      // - allow the user to zoom without panning (saves focal point)\n      // - allow the user to rotate without panning (saves focal point)\n\n      // do we know what gesture we are doing yet? If not\n      // see if we can figure it out\n      if (model.currentGesture === 'Start') {\n        // pinch is a move to/from the center point\n        // rotate is a move along the circumference\n        // pan is a move of the center point\n        // compute the distance along each of these axes in pixels\n        // the first to break thresh wins\n        let thresh = 0.01 * Math.sqrt(model.container.clientWidth * model.container.clientWidth + model.container.clientHeight * model.container.clientHeight);\n        if (thresh < 15.0) {\n          thresh = 15.0;\n        }\n        const pinchDistance = Math.abs(newDistance - originalDistance);\n        const rotateDistance = newDistance * 3.1415926 * Math.abs(angleDeviation) / 360.0;\n        const panDistance = Math.sqrt(trans[0] * trans[0] + trans[1] * trans[1]);\n        if (pinchDistance > thresh && pinchDistance > rotateDistance && pinchDistance > panDistance) {\n          model.currentGesture = 'Pinch';\n          const callData = {\n            scale: 1.0,\n            touches: positions\n          };\n          publicAPI.startPinchEvent(callData);\n        } else if (rotateDistance > thresh && rotateDistance > panDistance) {\n          model.currentGesture = 'Rotate';\n          const callData = {\n            rotation: 0.0,\n            touches: positions\n          };\n          publicAPI.startRotateEvent(callData);\n        } else if (panDistance > thresh) {\n          model.currentGesture = 'Pan';\n          const callData = {\n            translation: [0, 0],\n            touches: positions\n          };\n          publicAPI.startPanEvent(callData);\n        }\n      } else {\n        // if we have found a specific type of movement then\n        // handle it\n        if (model.currentGesture === 'Rotate') {\n          const callData = {\n            rotation: angleDeviation,\n            touches: positions\n          };\n          publicAPI.rotateEvent(callData);\n        }\n        if (model.currentGesture === 'Pinch') {\n          const callData = {\n            scale: newDistance / originalDistance,\n            touches: positions\n          };\n          publicAPI.pinchEvent(callData);\n        }\n        if (model.currentGesture === 'Pan') {\n          const callData = {\n            translation: trans,\n            touches: positions\n          };\n          publicAPI.panEvent(callData);\n        }\n      }\n    }\n  };\n  publicAPI.handleVisibilityChange = () => {\n    model._animationStartTime = Date.now();\n    model._animationFrameCount = 0;\n  };\n  publicAPI.setCurrentRenderer = r => {\n    model._forcedRenderer = !!r;\n    model.currentRenderer = r;\n  };\n\n  // Stop animating if the renderWindowInteractor is deleted.\n  const superDelete = publicAPI.delete;\n  publicAPI.delete = () => {\n    while (animationRequesters.size) {\n      publicAPI.cancelAnimation(animationRequesters.values().next().value);\n    }\n    if (typeof document.hidden !== 'undefined') {\n      document.removeEventListener('visibilitychange', publicAPI.handleVisibilityChange);\n    }\n    if (model.container) {\n      publicAPI.unbindEvents();\n    }\n    superDelete();\n  };\n\n  // Use the Page Visibility API to detect when we switch away from or back to\n  // this tab, and reset the animationFrameStart. When tabs are not active, browsers\n  // will stop calling requestAnimationFrame callbacks.\n  if (typeof document.hidden !== 'undefined') {\n    document.addEventListener('visibilitychange', publicAPI.handleVisibilityChange, false);\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  renderWindow: null,\n  interactorStyle: null,\n  picker: null,\n  pickingManager: null,\n  initialized: false,\n  enabled: false,\n  enableRender: true,\n  currentRenderer: null,\n  lightFollowCamera: true,\n  desiredUpdateRate: 30.0,\n  stillUpdateRate: 2.0,\n  container: null,\n  // _view: null,\n  recognizeGestures: true,\n  currentGesture: 'Start',\n  animationRequest: null,\n  lastFrameTime: 0.1,\n  recentAnimationFrameRate: 10.0,\n  wheelTimeoutID: 0,\n  moveTimeoutID: 0,\n  lastGamepadValues: {},\n  preventDefaultOnPointerDown: false,\n  preventDefaultOnPointerUp: false,\n  mouseScrollDebounceByPass: false\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n\n  // run animation at least until this time\n  model._animationExtendedEnd = 0;\n  macro.event(publicAPI, model, 'RenderEvent');\n  handledEvents.forEach(eventName => macro.event(publicAPI, model, eventName));\n\n  // Create get-only macros\n  macro.get(publicAPI, model, ['initialized', 'container', 'interactorStyle', 'lastFrameTime', 'recentAnimationFrameRate', '_view']);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['lightFollowCamera', 'enabled', 'enableRender', 'recognizeGestures', 'desiredUpdateRate', 'stillUpdateRate', 'picker', 'preventDefaultOnPointerDown', 'preventDefaultOnPointerUp', 'mouseScrollDebounceByPass']);\n  macro.moveToProtected(publicAPI, model, ['view']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n\n  // Object specific methods\n  vtkRenderWindowInteractor(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkRenderWindowInteractor');\n\n// ----------------------------------------------------------------------------\n\nvar vtkRenderWindowInteractor$1 = {\n  newInstance,\n  extend,\n  handledEvents,\n  ...Constants\n};\n\nexport { vtkRenderWindowInteractor$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}