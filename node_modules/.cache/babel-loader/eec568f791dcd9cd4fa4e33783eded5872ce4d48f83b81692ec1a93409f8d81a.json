{"ast":null,"code":"import _getHash from './_getHash';\nimport setAttributesIfNecessary from './setAttributesIfNecessary';\nimport setNewAttributesIfValid from './setNewAttributesIfValid';\nexport default function drawRect(svgDrawingHelper, annotationUID, rectangleUID, start, end, options = {}, dataId = '') {\n  const {\n    color,\n    width: _width,\n    lineWidth,\n    lineDash\n  } = Object.assign({\n    color: 'dodgerblue',\n    width: '2',\n    lineWidth: undefined,\n    lineDash: undefined\n  }, options);\n  const strokeWidth = lineWidth || _width;\n  const svgns = 'http://www.w3.org/2000/svg';\n  const svgNodeHash = _getHash(annotationUID, 'rect', rectangleUID);\n  const existingRect = svgDrawingHelper.getSvgNode(svgNodeHash);\n  const tlhc = [Math.min(start[0], end[0]), Math.min(start[1], end[1])];\n  const width = Math.abs(start[0] - end[0]);\n  const height = Math.abs(start[1] - end[1]);\n  const attributes = {\n    x: `${tlhc[0]}`,\n    y: `${tlhc[1]}`,\n    width: `${width}`,\n    height: `${height}`,\n    stroke: color,\n    fill: 'transparent',\n    'stroke-width': strokeWidth,\n    'stroke-dasharray': lineDash\n  };\n  if (existingRect) {\n    setAttributesIfNecessary(attributes, existingRect);\n    svgDrawingHelper.setNodeTouched(svgNodeHash);\n  } else {\n    const svgRectElement = document.createElementNS(svgns, 'rect');\n    if (dataId !== '') {\n      svgRectElement.setAttribute('data-id', dataId);\n    }\n    setNewAttributesIfValid(attributes, svgRectElement);\n    svgDrawingHelper.appendNode(svgRectElement, svgNodeHash);\n  }\n}","map":{"version":3,"names":["_getHash","setAttributesIfNecessary","setNewAttributesIfValid","drawRect","svgDrawingHelper","annotationUID","rectangleUID","start","end","options","dataId","color","width","_width","lineWidth","lineDash","Object","assign","undefined","strokeWidth","svgns","svgNodeHash","existingRect","getSvgNode","tlhc","Math","min","abs","height","attributes","x","y","stroke","fill","setNodeTouched","svgRectElement","document","createElementNS","setAttribute","appendNode"],"sources":["../../../src/drawingSvg/drawRect.ts"],"sourcesContent":[null],"mappings":"AAEA,OAAOA,QAAQ,MAAM,YAAY;AACjC,OAAOC,wBAAwB,MAAM,4BAA4B;AACjE,OAAOC,uBAAuB,MAAM,2BAA2B;AAI/D,eAAc,SAAUC,QAAQA,CAC9BC,gBAAkC,EAClCC,aAAqB,EACrBC,YAAoB,EACpBC,KAAmB,EACnBC,GAAiB,EACjBC,OAAO,GAAG,EAAE,EACZC,MAAM,GAAG,EAAE;EAEX,MAAM;IACJC,KAAK;IACLC,KAAK,EAAEC,MAAM;IACbC,SAAS;IACTC;EAAQ,CACT,GAAGC,MAAM,CAACC,MAAM,CACf;IACEN,KAAK,EAAE,YAAY;IACnBC,KAAK,EAAE,GAAG;IACVE,SAAS,EAAEI,SAAS;IACpBH,QAAQ,EAAEG;GACX,EACDT,OAAO,CACR;EAGD,MAAMU,WAAW,GAAGL,SAAS,IAAID,MAAM;EAEvC,MAAMO,KAAK,GAAG,4BAA4B;EAC1C,MAAMC,WAAW,GAAGrB,QAAQ,CAACK,aAAa,EAAE,MAAM,EAAEC,YAAY,CAAC;EACjE,MAAMgB,YAAY,GAAGlB,gBAAgB,CAACmB,UAAU,CAACF,WAAW,CAAC;EAE7D,MAAMG,IAAI,GAAG,CAACC,IAAI,CAACC,GAAG,CAACnB,KAAK,CAAC,CAAC,CAAC,EAAEC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAEiB,IAAI,CAACC,GAAG,CAACnB,KAAK,CAAC,CAAC,CAAC,EAAEC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACrE,MAAMI,KAAK,GAAGa,IAAI,CAACE,GAAG,CAACpB,KAAK,CAAC,CAAC,CAAC,GAAGC,GAAG,CAAC,CAAC,CAAC,CAAC;EACzC,MAAMoB,MAAM,GAAGH,IAAI,CAACE,GAAG,CAACpB,KAAK,CAAC,CAAC,CAAC,GAAGC,GAAG,CAAC,CAAC,CAAC,CAAC;EAE1C,MAAMqB,UAAU,GAAG;IACjBC,CAAC,EAAE,GAAGN,IAAI,CAAC,CAAC,CAAC,EAAE;IACfO,CAAC,EAAE,GAAGP,IAAI,CAAC,CAAC,CAAC,EAAE;IACfZ,KAAK,EAAE,GAAGA,KAAK,EAAE;IACjBgB,MAAM,EAAE,GAAGA,MAAM,EAAE;IACnBI,MAAM,EAAErB,KAAK;IACbsB,IAAI,EAAE,aAAa;IACnB,cAAc,EAAEd,WAAW;IAC3B,kBAAkB,EAAEJ;GACrB;EAED,IAAIO,YAAY,EAAE;IAChBrB,wBAAwB,CAAC4B,UAAU,EAAEP,YAAY,CAAC;IAElDlB,gBAAgB,CAAC8B,cAAc,CAACb,WAAW,CAAC;GAC7C,MAAM;IACL,MAAMc,cAAc,GAAGC,QAAQ,CAACC,eAAe,CAACjB,KAAK,EAAE,MAAM,CAAC;IAE9D,IAAIV,MAAM,KAAK,EAAE,EAAE;MACjByB,cAAc,CAACG,YAAY,CAAC,SAAS,EAAE5B,MAAM,CAAC;;IAGhDR,uBAAuB,CAAC2B,UAAU,EAAEM,cAAc,CAAC;IAEnD/B,gBAAgB,CAACmC,UAAU,CAACJ,cAAc,EAAEd,WAAW,CAAC;;AAE5D"},"metadata":{},"sourceType":"module","externalDependencies":[]}