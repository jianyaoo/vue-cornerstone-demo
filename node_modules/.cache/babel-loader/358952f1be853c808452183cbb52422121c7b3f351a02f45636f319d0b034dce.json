{"ast":null,"code":"import getDefaultLabelmapConfig from '../../tools/displayTools/Labelmap/labelmapConfig';\nimport SegmentationRepresentation from '../../enums/SegmentationRepresentations';\nexport default function getDefaultRepresentationConfig(segmentation) {\n  const {\n    type: representationType\n  } = segmentation;\n  switch (representationType) {\n    case SegmentationRepresentation.Labelmap:\n      return getDefaultLabelmapConfig();\n    default:\n      throw new Error(`Unknown representation type: ${representationType}`);\n  }\n}","map":{"version":3,"names":["getDefaultLabelmapConfig","SegmentationRepresentation","getDefaultRepresentationConfig","segmentation","type","representationType","Labelmap","Error"],"sources":["../../../../src/utilities/segmentation/getDefaultRepresentationConfig.ts"],"sourcesContent":[null],"mappings":"AAAA,OAAOA,wBAAwB,MAAM,kDAAkD;AACvF,OAAOC,0BAA0B,MAAM,yCAAyC;AAQhF,eAAc,SAAUC,8BAA8BA,CACpDC,YAA0B;EAE1B,MAAM;IAAEC,IAAI,EAAEC;EAAkB,CAAE,GAAGF,YAAY;EACjD,QAAQE,kBAAkB;IACxB,KAAKJ,0BAA0B,CAACK,QAAQ;MACtC,OAAON,wBAAwB,EAAE;IACnC;MACE,MAAM,IAAIO,KAAK,CAAC,gCAAgCF,kBAAkB,EAAE,CAAC;;AAE3E"},"metadata":{},"sourceType":"module","externalDependencies":[]}