{"ast":null,"code":"import cache, { ImageVolume } from '../cache';\nimport { Events } from '../enums';\nimport eventTarget from '../eventTarget';\nimport { getConfiguration, getShouldUseSharedArrayBuffer } from '../init';\nexport function setupCacheOptimizationEventListener(volumeId) {\n  const {\n    enableCacheOptimization\n  } = getConfiguration();\n  const shouldUseSAB = getShouldUseSharedArrayBuffer();\n  const performOptimization = enableCacheOptimization && shouldUseSAB;\n  if (!performOptimization) {\n    return;\n  }\n  eventTarget.addEventListenerOnce(Events.IMAGE_VOLUME_LOADING_COMPLETED, evt => {\n    if (evt.detail.volumeId !== volumeId) {\n      return;\n    }\n    const volume = cache.getVolume(volumeId);\n    performCacheOptimizationForVolume(volume);\n  });\n}\nexport function performCacheOptimizationForVolume(volume) {\n  if (!(volume instanceof ImageVolume)) {\n    return;\n  }\n  const scalarData = volume.getScalarData();\n  volume.imageCacheOffsetMap.size > 0 ? _processImageCacheOffsetMap(volume, scalarData) : _processVolumeImages(volume, scalarData);\n}\nfunction _processImageCacheOffsetMap(volume, scalarData) {\n  volume.imageCacheOffsetMap.forEach(({\n    offset\n  }, imageId) => {\n    const image = cache.getImage(imageId);\n    if (!image) {\n      return;\n    }\n    _updateImageWithScalarDataView(image, scalarData, offset);\n    cache.decrementImageCacheSize(image.sizeInBytes);\n  });\n}\nfunction _processVolumeImages(volume, scalarData) {\n  volume.imageIds.forEach(imageId => {\n    const image = cache.getImage(imageId);\n    if (!image) {\n      return;\n    }\n    const index = volume.getImageIdIndex(imageId);\n    const offset = index * image.getPixelData().byteLength;\n    _updateImageWithScalarDataView(image, scalarData, offset);\n    cache.decrementImageCacheSize(image.sizeInBytes);\n  });\n}\nfunction _updateImageWithScalarDataView(image, scalarData, offset) {\n  const pixelData = image.imageFrame ? image.imageFrame.pixelData : image.getPixelData();\n  const view = new pixelData.constructor(scalarData.buffer, offset, pixelData.length);\n  image.getPixelData = () => view;\n  if (image.imageFrame) {\n    image.imageFrame.pixelData = view;\n  }\n  image.bufferView = {\n    buffer: scalarData.buffer,\n    offset\n  };\n}","map":{"version":3,"names":["cache","ImageVolume","Events","eventTarget","getConfiguration","getShouldUseSharedArrayBuffer","setupCacheOptimizationEventListener","volumeId","enableCacheOptimization","shouldUseSAB","performOptimization","addEventListenerOnce","IMAGE_VOLUME_LOADING_COMPLETED","evt","detail","volume","getVolume","performCacheOptimizationForVolume","scalarData","getScalarData","imageCacheOffsetMap","size","_processImageCacheOffsetMap","_processVolumeImages","forEach","offset","imageId","image","getImage","_updateImageWithScalarDataView","decrementImageCacheSize","sizeInBytes","imageIds","index","getImageIdIndex","getPixelData","byteLength","pixelData","imageFrame","view","constructor","buffer","length","bufferView"],"sources":["../../../src/utilities/cacheUtils.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}