{"ast":null,"code":"/**\n * Converts a binary buffer in an ArrayBuffer to a string.\n *\n * Note this does not take encoding into consideration, so don't\n * expect proper Unicode or any other encoding.\n */\nfunction arrayBufferToString(arrayBuffer) {\n  const decoder = new TextDecoder('latin1');\n  return decoder.decode(arrayBuffer);\n}\n\n/**\n * Extracts binary data out of a file ArrayBuffer given a prefix/suffix.\n */\nfunction extractBinary(arrayBuffer, prefixRegex) {\n  let suffixRegex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  const str = arrayBufferToString(arrayBuffer);\n  const prefixMatch = prefixRegex.exec(str);\n  if (!prefixMatch) {\n    return {\n      text: str\n    };\n  }\n  const dataStartIndex = prefixMatch.index + prefixMatch[0].length;\n  const strFirstHalf = str.substring(0, dataStartIndex);\n  let retVal = null;\n  const suffixMatch = suffixRegex ? suffixRegex.exec(str) : null;\n  if (suffixMatch) {\n    const strSecondHalf = str.substr(suffixMatch.index);\n    retVal = {\n      text: strFirstHalf + strSecondHalf,\n      binaryBuffer: arrayBuffer.slice(dataStartIndex, suffixMatch.index)\n    };\n  } else {\n    // no suffix, so just take all the data starting from dataStartIndex\n    retVal = {\n      text: strFirstHalf,\n      binaryBuffer: arrayBuffer.slice(dataStartIndex)\n    };\n  }\n  return retVal;\n}\nvar BinaryHelper = {\n  arrayBufferToString,\n  extractBinary\n};\nexport { BinaryHelper as default };","map":{"version":3,"names":["arrayBufferToString","arrayBuffer","decoder","TextDecoder","decode","extractBinary","prefixRegex","suffixRegex","arguments","length","undefined","str","prefixMatch","exec","text","dataStartIndex","index","strFirstHalf","substring","retVal","suffixMatch","strSecondHalf","substr","binaryBuffer","slice","BinaryHelper","default"],"sources":["/root/vue-cornerstone-demo/node_modules/@kitware/vtk.js/IO/Core/BinaryHelper.js"],"sourcesContent":["/**\n * Converts a binary buffer in an ArrayBuffer to a string.\n *\n * Note this does not take encoding into consideration, so don't\n * expect proper Unicode or any other encoding.\n */\nfunction arrayBufferToString(arrayBuffer) {\n  const decoder = new TextDecoder('latin1');\n  return decoder.decode(arrayBuffer);\n}\n\n/**\n * Extracts binary data out of a file ArrayBuffer given a prefix/suffix.\n */\nfunction extractBinary(arrayBuffer, prefixRegex) {\n  let suffixRegex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  const str = arrayBufferToString(arrayBuffer);\n  const prefixMatch = prefixRegex.exec(str);\n  if (!prefixMatch) {\n    return {\n      text: str\n    };\n  }\n  const dataStartIndex = prefixMatch.index + prefixMatch[0].length;\n  const strFirstHalf = str.substring(0, dataStartIndex);\n  let retVal = null;\n  const suffixMatch = suffixRegex ? suffixRegex.exec(str) : null;\n  if (suffixMatch) {\n    const strSecondHalf = str.substr(suffixMatch.index);\n    retVal = {\n      text: strFirstHalf + strSecondHalf,\n      binaryBuffer: arrayBuffer.slice(dataStartIndex, suffixMatch.index)\n    };\n  } else {\n    // no suffix, so just take all the data starting from dataStartIndex\n    retVal = {\n      text: strFirstHalf,\n      binaryBuffer: arrayBuffer.slice(dataStartIndex)\n    };\n  }\n  return retVal;\n}\nvar BinaryHelper = {\n  arrayBufferToString,\n  extractBinary\n};\n\nexport { BinaryHelper as default };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,mBAAmBA,CAACC,WAAW,EAAE;EACxC,MAAMC,OAAO,GAAG,IAAIC,WAAW,CAAC,QAAQ,CAAC;EACzC,OAAOD,OAAO,CAACE,MAAM,CAACH,WAAW,CAAC;AACpC;;AAEA;AACA;AACA;AACA,SAASI,aAAaA,CAACJ,WAAW,EAAEK,WAAW,EAAE;EAC/C,IAAIC,WAAW,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI;EAC1F,MAAMG,GAAG,GAAGX,mBAAmB,CAACC,WAAW,CAAC;EAC5C,MAAMW,WAAW,GAAGN,WAAW,CAACO,IAAI,CAACF,GAAG,CAAC;EACzC,IAAI,CAACC,WAAW,EAAE;IAChB,OAAO;MACLE,IAAI,EAAEH;IACR,CAAC;EACH;EACA,MAAMI,cAAc,GAAGH,WAAW,CAACI,KAAK,GAAGJ,WAAW,CAAC,CAAC,CAAC,CAACH,MAAM;EAChE,MAAMQ,YAAY,GAAGN,GAAG,CAACO,SAAS,CAAC,CAAC,EAAEH,cAAc,CAAC;EACrD,IAAII,MAAM,GAAG,IAAI;EACjB,MAAMC,WAAW,GAAGb,WAAW,GAAGA,WAAW,CAACM,IAAI,CAACF,GAAG,CAAC,GAAG,IAAI;EAC9D,IAAIS,WAAW,EAAE;IACf,MAAMC,aAAa,GAAGV,GAAG,CAACW,MAAM,CAACF,WAAW,CAACJ,KAAK,CAAC;IACnDG,MAAM,GAAG;MACPL,IAAI,EAAEG,YAAY,GAAGI,aAAa;MAClCE,YAAY,EAAEtB,WAAW,CAACuB,KAAK,CAACT,cAAc,EAAEK,WAAW,CAACJ,KAAK;IACnE,CAAC;EACH,CAAC,MAAM;IACL;IACAG,MAAM,GAAG;MACPL,IAAI,EAAEG,YAAY;MAClBM,YAAY,EAAEtB,WAAW,CAACuB,KAAK,CAACT,cAAc;IAChD,CAAC;EACH;EACA,OAAOI,MAAM;AACf;AACA,IAAIM,YAAY,GAAG;EACjBzB,mBAAmB;EACnBK;AACF,CAAC;AAED,SAASoB,YAAY,IAAIC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}