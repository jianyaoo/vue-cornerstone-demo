{"ast":null,"code":"const isMergeableObject = val => {\n  const nonNullObject = val && typeof val === 'object';\n  return nonNullObject && Object.prototype.toString.call(val) !== '[object RegExp]' && Object.prototype.toString.call(val) !== '[object Date]';\n};\nconst emptyTarget = val => {\n  const isEmpty = Array.isArray(val) ? [] : {};\n  return isEmpty;\n};\nconst cloneIfNecessary = (value, optionsArgument) => {\n  const clone = optionsArgument && optionsArgument.clone === true;\n  return clone && isMergeableObject(value) ? deepMerge(emptyTarget(value), value, optionsArgument) : value;\n};\nconst defaultArrayMerge = (target, source, optionsArgument) => {\n  const destination = target.slice();\n  source.forEach(function (e, i) {\n    if (typeof destination[i] === 'undefined') {\n      destination[i] = cloneIfNecessary(e, optionsArgument);\n    } else if (isMergeableObject(e)) {\n      destination[i] = deepMerge(target[i], e, optionsArgument);\n    } else if (target.indexOf(e) === -1) {\n      destination[i] = cloneIfNecessary(e, optionsArgument);\n    }\n  });\n  return destination;\n};\nconst mergeObject = (target, source, optionsArgument) => {\n  const destination = {};\n  if (isMergeableObject(target)) {\n    Object.keys(target).forEach(function (key) {\n      destination[key] = cloneIfNecessary(target[key], optionsArgument);\n    });\n  }\n  Object.keys(source).forEach(function (key) {\n    if (!isMergeableObject(source[key]) || !target[key]) {\n      destination[key] = cloneIfNecessary(source[key], optionsArgument);\n    } else {\n      destination[key] = deepMerge(target[key], source[key], optionsArgument);\n    }\n  });\n  return destination;\n};\nconst deepMerge = (target = {}, source = {}, optionsArgument = undefined) => {\n  const array = Array.isArray(source);\n  const options = optionsArgument || {\n    arrayMerge: defaultArrayMerge\n  };\n  const arrayMerge = options.arrayMerge || defaultArrayMerge;\n  if (array) {\n    return Array.isArray(target) ? arrayMerge(target, source, optionsArgument) : cloneIfNecessary(source, optionsArgument);\n  }\n  return mergeObject(target, source, optionsArgument);\n};\nexport default deepMerge;","map":{"version":3,"names":["isMergeableObject","val","nonNullObject","Object","prototype","toString","call","emptyTarget","isEmpty","Array","isArray","cloneIfNecessary","value","optionsArgument","clone","deepMerge","defaultArrayMerge","target","source","destination","slice","forEach","e","i","indexOf","mergeObject","keys","key","undefined","array","options","arrayMerge"],"sources":["../../../src/utilities/deepMerge.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}