{"ast":null,"code":"import { getRenderingEngine } from '@cornerstonejs/core';\nexport default function zoomPanSyncCallback(synchronizerInstance, sourceViewport, targetViewport) {\n  const renderingEngine = getRenderingEngine(targetViewport.renderingEngineId);\n  if (!renderingEngine) {\n    throw new Error(`No RenderingEngine for Id: ${targetViewport.renderingEngineId}`);\n  }\n  const options = synchronizerInstance.getOptions(targetViewport.viewportId);\n  const tViewport = renderingEngine.getViewport(targetViewport.viewportId);\n  const sViewport = renderingEngine.getViewport(sourceViewport.viewportId);\n  if (options?.syncZoom !== false) {\n    const srcZoom = sViewport.getZoom();\n    tViewport.setZoom(srcZoom);\n  }\n  if (options?.syncPan !== false) {\n    const srcPan = sViewport.getPan();\n    tViewport.setPan(srcPan);\n  }\n  tViewport.render();\n}","map":{"version":3,"names":["getRenderingEngine","zoomPanSyncCallback","synchronizerInstance","sourceViewport","targetViewport","renderingEngine","renderingEngineId","Error","options","getOptions","viewportId","tViewport","getViewport","sViewport","syncZoom","srcZoom","getZoom","setZoom","syncPan","srcPan","getPan","setPan","render"],"sources":["../../../../src/synchronizers/callbacks/zoomPanSyncCallback.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,kBAAkB,QAAe,qBAAqB;AAc/D,eAAc,SAAUC,mBAAmBA,CACzCC,oBAAkC,EAClCC,cAAiC,EACjCC,cAAiC;EAEjC,MAAMC,eAAe,GAAGL,kBAAkB,CAACI,cAAc,CAACE,iBAAiB,CAAC;EAC5E,IAAI,CAACD,eAAe,EAAE;IACpB,MAAM,IAAIE,KAAK,CACb,8BAA8BH,cAAc,CAACE,iBAAiB,EAAE,CACjE;;EAGH,MAAME,OAAO,GAAGN,oBAAoB,CAACO,UAAU,CAACL,cAAc,CAACM,UAAU,CAAC;EAE1E,MAAMC,SAAS,GAAGN,eAAe,CAACO,WAAW,CAACR,cAAc,CAACM,UAAU,CAAC;EACxE,MAAMG,SAAS,GAAGR,eAAe,CAACO,WAAW,CAACT,cAAc,CAACO,UAAU,CAAC;EAExE,IAAIF,OAAO,EAAEM,QAAQ,KAAK,KAAK,EAAE;IAC/B,MAAMC,OAAO,GAAGF,SAAS,CAACG,OAAO,EAAE;IAEnCL,SAAS,CAACM,OAAO,CAACF,OAAO,CAAC;;EAE5B,IAAIP,OAAO,EAAEU,OAAO,KAAK,KAAK,EAAE;IAC9B,MAAMC,MAAM,GAAGN,SAAS,CAACO,MAAM,EAAE;IACjCT,SAAS,CAACU,MAAM,CAACF,MAAM,CAAC;;EAG1BR,SAAS,CAACW,MAAM,EAAE;AACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}