{"ast":null,"code":"import macro from '@kitware/vtk.js/macros';\nimport vtkOpenGLActor from '@kitware/vtk.js/Rendering/OpenGL/Actor';\nimport vtkOpenGLActor2D from '@kitware/vtk.js/Rendering/OpenGL/Actor2D';\nimport vtkOpenGLCamera from '@kitware/vtk.js/Rendering/OpenGL/Camera';\nimport vtkOpenGLGlyph3DMapper from '@kitware/vtk.js/Rendering/OpenGL/Glyph3DMapper';\nimport vtkOpenGLImageMapper from '@kitware/vtk.js/Rendering/OpenGL/ImageMapper';\nimport vtkOpenGLImageSlice from '@kitware/vtk.js/Rendering/OpenGL/ImageSlice';\nimport vtkOpenGLPixelSpaceCallbackMapper from '@kitware/vtk.js/Rendering/OpenGL/PixelSpaceCallbackMapper';\nimport vtkOpenGLPolyDataMapper from '@kitware/vtk.js/Rendering/OpenGL/PolyDataMapper';\nimport vtkOpenGLRenderer from '@kitware/vtk.js/Rendering/OpenGL/Renderer';\nimport vtkOpenGLSkybox from '@kitware/vtk.js/Rendering/OpenGL/Skybox';\nimport vtkOpenGLSphereMapper from '@kitware/vtk.js/Rendering/OpenGL/SphereMapper';\nimport vtkOpenGLStickMapper from '@kitware/vtk.js/Rendering/OpenGL/StickMapper';\nimport vtkOpenGLTexture from '@kitware/vtk.js/Rendering/OpenGL/Texture';\nimport vtkOpenGLVolume from '@kitware/vtk.js/Rendering/OpenGL/Volume';\nimport vtkOpenGLVolumeMapper from '@kitware/vtk.js/Rendering/OpenGL/VolumeMapper';\nimport vtkViewNodeFactory from '@kitware/vtk.js/Rendering/SceneGraph/ViewNodeFactory';\nimport vtkStreamingOpenGLVolumeMapper from './vtkStreamingOpenGLVolumeMapper';\nfunction vtkStreamingOpenGLViewNodeFactory(publicAPI, model) {\n  model.classHierarchy.push('vtkStreamingOpenGLViewNodeFactory');\n  publicAPI.createNode = dataObject => {\n    if (dataObject.isDeleted()) {\n      return null;\n    }\n    let cpt = 0;\n    let className = dataObject.getClassName(cpt++);\n    let isObject = false;\n    const keys = Object.keys(model.overrides);\n    while (className && !isObject) {\n      if (keys.indexOf(className) !== -1) {\n        isObject = true;\n      } else {\n        className = dataObject.getClassName(cpt++);\n      }\n    }\n    if (!isObject) {\n      return null;\n    }\n    const initialValues = model.getModelInitialValues(dataObject);\n    const vn = model.overrides[className](initialValues);\n    vn.setMyFactory(publicAPI);\n    return vn;\n  };\n  model.getModelInitialValues = dataObject => {\n    const initialValues = {};\n    const className = dataObject.getClassName();\n    if (className === 'vtkSharedVolumeMapper') {\n      initialValues.scalarTexture = dataObject.getScalarTexture();\n    }\n    return initialValues;\n  };\n}\nconst DEFAULT_VALUES = {};\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkViewNodeFactory.extend(publicAPI, model, initialValues);\n  vtkStreamingOpenGLViewNodeFactory(publicAPI, model);\n  publicAPI.registerOverride('vtkActor', vtkOpenGLActor.newInstance);\n  publicAPI.registerOverride('vtkActor2D', vtkOpenGLActor2D.newInstance);\n  publicAPI.registerOverride('vtkCamera', vtkOpenGLCamera.newInstance);\n  publicAPI.registerOverride('vtkGlyph3DMapper', vtkOpenGLGlyph3DMapper.newInstance);\n  publicAPI.registerOverride('vtkImageMapper', vtkOpenGLImageMapper.newInstance);\n  publicAPI.registerOverride('vtkImageSlice', vtkOpenGLImageSlice.newInstance);\n  publicAPI.registerOverride('vtkMapper', vtkOpenGLPolyDataMapper.newInstance);\n  publicAPI.registerOverride('vtkPixelSpaceCallbackMapper', vtkOpenGLPixelSpaceCallbackMapper.newInstance);\n  publicAPI.registerOverride('vtkRenderer', vtkOpenGLRenderer.newInstance);\n  publicAPI.registerOverride('vtkSkybox', vtkOpenGLSkybox.newInstance);\n  publicAPI.registerOverride('vtkSphereMapper', vtkOpenGLSphereMapper.newInstance);\n  publicAPI.registerOverride('vtkStickMapper', vtkOpenGLStickMapper.newInstance);\n  publicAPI.registerOverride('vtkTexture', vtkOpenGLTexture.newInstance);\n  publicAPI.registerOverride('vtkVolume', vtkOpenGLVolume.newInstance);\n  publicAPI.registerOverride('vtkVolumeMapper', vtkOpenGLVolumeMapper.newInstance);\n  publicAPI.registerOverride('vtkSharedVolumeMapper', vtkStreamingOpenGLVolumeMapper.newInstance);\n}\nexport const newInstance = macro.newInstance(extend, 'vtkStreamingOpenGLViewNodeFactory');\nexport default {\n  newInstance,\n  extend\n};","map":{"version":3,"names":["macro","vtkOpenGLActor","vtkOpenGLActor2D","vtkOpenGLCamera","vtkOpenGLGlyph3DMapper","vtkOpenGLImageMapper","vtkOpenGLImageSlice","vtkOpenGLPixelSpaceCallbackMapper","vtkOpenGLPolyDataMapper","vtkOpenGLRenderer","vtkOpenGLSkybox","vtkOpenGLSphereMapper","vtkOpenGLStickMapper","vtkOpenGLTexture","vtkOpenGLVolume","vtkOpenGLVolumeMapper","vtkViewNodeFactory","vtkStreamingOpenGLVolumeMapper","vtkStreamingOpenGLViewNodeFactory","publicAPI","model","classHierarchy","push","createNode","dataObject","isDeleted","cpt","className","getClassName","isObject","keys","Object","overrides","indexOf","initialValues","getModelInitialValues","vn","setMyFactory","scalarTexture","getScalarTexture","DEFAULT_VALUES","extend","assign","registerOverride","newInstance"],"sources":["../../../../src/RenderingEngine/vtkClasses/vtkStreamingOpenGLViewNodeFactory.js"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}