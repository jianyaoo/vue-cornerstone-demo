{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { m as macro } from '../../macros2.js';\nimport vtkColorTransferFunction from './ColorTransferFunction.js';\nimport vtkPiecewiseFunction from '../../Common/DataModel/PiecewiseFunction.js';\nimport Constants from './VolumeProperty/Constants.js';\nconst {\n  InterpolationType,\n  OpacityMode\n} = Constants;\nconst {\n  vtkErrorMacro\n} = macro;\nconst VTK_MAX_VRCOMP = 4;\n\n// ----------------------------------------------------------------------------\n// vtkVolumeProperty methods\n// ----------------------------------------------------------------------------\n\nfunction vtkVolumeProperty(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkVolumeProperty');\n  publicAPI.getMTime = () => {\n    let mTime = model.mtime;\n    let time;\n    for (let index = 0; index < VTK_MAX_VRCOMP; index++) {\n      // Color MTimes\n      if (model.componentData[index].colorChannels === 1) {\n        if (model.componentData[index].grayTransferFunction) {\n          // time that Gray transfer function was last modified\n          time = model.componentData[index].grayTransferFunction.getMTime();\n          mTime = mTime > time ? mTime : time;\n        }\n      } else if (model.componentData[index].colorChannels === 3) {\n        if (model.componentData[index].rGBTransferFunction) {\n          // time that RGB transfer function was last modified\n          time = model.componentData[index].rGBTransferFunction.getMTime();\n          mTime = mTime > time ? mTime : time;\n        }\n      }\n\n      // Opacity MTimes\n      if (model.componentData[index].scalarOpacity) {\n        // time that Scalar opacity transfer function was last modified\n        time = model.componentData[index].scalarOpacity.getMTime();\n        mTime = mTime > time ? mTime : time;\n      }\n      if (model.componentData[index].gradientOpacity) {\n        if (!model.componentData[index].disableGradientOpacity) {\n          // time that Gradient opacity transfer function was last modified\n          time = model.componentData[index].gradientOpacity.getMTime();\n          mTime = mTime > time ? mTime : time;\n        }\n      }\n    }\n    return mTime;\n  };\n  publicAPI.getColorChannels = index => {\n    if (index < 0 || index > 3) {\n      vtkErrorMacro('Bad index - must be between 0 and 3');\n      return 0;\n    }\n    return model.componentData[index].colorChannels;\n  };\n\n  // Set the color of a volume to a gray transfer function\n  publicAPI.setGrayTransferFunction = function () {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let func = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let modified = false;\n    if (model.componentData[index].grayTransferFunction !== func) {\n      model.componentData[index].grayTransferFunction = func;\n      modified = true;\n    }\n    if (model.componentData[index].colorChannels !== 1) {\n      model.componentData[index].colorChannels = 1;\n      modified = true;\n    }\n    if (modified) {\n      publicAPI.modified();\n    }\n    return modified;\n  };\n\n  // Get the currently set gray transfer function. Create one if none set.\n  publicAPI.getGrayTransferFunction = function () {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    if (model.componentData[index].grayTransferFunction === null) {\n      model.componentData[index].grayTransferFunction = vtkPiecewiseFunction.newInstance();\n      model.componentData[index].grayTransferFunction.addPoint(0, 0.0);\n      model.componentData[index].grayTransferFunction.addPoint(1024, 1.0);\n      if (model.componentData[index].colorChannels !== 1) {\n        model.componentData[index].colorChannels = 1;\n      }\n      publicAPI.modified();\n    }\n    return model.componentData[index].grayTransferFunction;\n  };\n\n  // Set the color of a volume to an RGB transfer function\n  publicAPI.setRGBTransferFunction = function () {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let func = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let modified = false;\n    if (model.componentData[index].rGBTransferFunction !== func) {\n      model.componentData[index].rGBTransferFunction = func;\n      modified = true;\n    }\n    if (model.componentData[index].colorChannels !== 3) {\n      model.componentData[index].colorChannels = 3;\n      modified = true;\n    }\n    if (modified) {\n      publicAPI.modified();\n    }\n    return modified;\n  };\n\n  // Get the currently set RGB transfer function. Create one if none set.\n  publicAPI.getRGBTransferFunction = function () {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    if (model.componentData[index].rGBTransferFunction === null) {\n      model.componentData[index].rGBTransferFunction = vtkColorTransferFunction.newInstance();\n      model.componentData[index].rGBTransferFunction.addRGBPoint(0, 0.0, 0.0, 0.0);\n      model.componentData[index].rGBTransferFunction.addRGBPoint(1024, 1.0, 1.0, 1.0);\n      if (model.componentData[index].colorChannels !== 3) {\n        model.componentData[index].colorChannels = 3;\n      }\n      publicAPI.modified();\n    }\n    return model.componentData[index].rGBTransferFunction;\n  };\n\n  // Set the scalar opacity of a volume to a transfer function\n  publicAPI.setScalarOpacity = function () {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let func = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    if (model.componentData[index].scalarOpacity !== func) {\n      model.componentData[index].scalarOpacity = func;\n      publicAPI.modified();\n      return true;\n    }\n    return false;\n  };\n\n  // Get the scalar opacity transfer function. Create one if none set.\n  publicAPI.getScalarOpacity = function () {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    if (model.componentData[index].scalarOpacity === null) {\n      model.componentData[index].scalarOpacity = vtkPiecewiseFunction.newInstance();\n      model.componentData[index].scalarOpacity.addPoint(0, 1.0);\n      model.componentData[index].scalarOpacity.addPoint(1024, 1.0);\n      publicAPI.modified();\n    }\n    return model.componentData[index].scalarOpacity;\n  };\n  publicAPI.setComponentWeight = function () {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    if (index < 0 || index >= VTK_MAX_VRCOMP) {\n      vtkErrorMacro('Invalid index');\n      return false;\n    }\n    const val = Math.min(1, Math.max(0, value));\n    if (model.componentData[index].componentWeight !== val) {\n      model.componentData[index].componentWeight = val;\n      publicAPI.modified();\n      return true;\n    }\n    return false;\n  };\n  publicAPI.getComponentWeight = function () {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    if (index < 0 || index >= VTK_MAX_VRCOMP) {\n      vtkErrorMacro('Invalid index');\n      return 0.0;\n    }\n    return model.componentData[index].componentWeight;\n  };\n  publicAPI.setInterpolationTypeToNearest = () => publicAPI.setInterpolationType(InterpolationType.NEAREST);\n  publicAPI.setInterpolationTypeToLinear = () => publicAPI.setInterpolationType(InterpolationType.LINEAR);\n  publicAPI.setInterpolationTypeToFastLinear = () => publicAPI.setInterpolationType(InterpolationType.FAST_LINEAR);\n  publicAPI.getInterpolationTypeAsString = () => macro.enumToString(InterpolationType, model.interpolationType);\n  const sets = ['useGradientOpacity', 'scalarOpacityUnitDistance', 'gradientOpacityMinimumValue', 'gradientOpacityMinimumOpacity', 'gradientOpacityMaximumValue', 'gradientOpacityMaximumOpacity', 'opacityMode'];\n  sets.forEach(val => {\n    const cap = macro.capitalize(val);\n    publicAPI[`set${cap}`] = (index, value) => {\n      if (model.componentData[index][`${val}`] !== value) {\n        model.componentData[index][`${val}`] = value;\n        publicAPI.modified();\n        return true;\n      }\n      return false;\n    };\n  });\n  const gets = ['useGradientOpacity', 'scalarOpacityUnitDistance', 'gradientOpacityMinimumValue', 'gradientOpacityMinimumOpacity', 'gradientOpacityMaximumValue', 'gradientOpacityMaximumOpacity', 'opacityMode'];\n  gets.forEach(val => {\n    const cap = macro.capitalize(val);\n    publicAPI[`get${cap}`] = index => model.componentData[index][`${val}`];\n  });\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  independentComponents: true,\n  interpolationType: InterpolationType.FAST_LINEAR,\n  shade: false,\n  ambient: 0.1,\n  diffuse: 0.7,\n  specular: 0.2,\n  specularPower: 10.0,\n  useLabelOutline: false,\n  labelOutlineThickness: [1],\n  labelOutlineOpacity: 1.0\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  if (!model.componentData) {\n    model.componentData = [];\n    for (let i = 0; i < VTK_MAX_VRCOMP; ++i) {\n      model.componentData.push({\n        colorChannels: 1,\n        grayTransferFunction: null,\n        rGBTransferFunction: null,\n        scalarOpacity: null,\n        scalarOpacityUnitDistance: 1.0,\n        opacityMode: OpacityMode.FRACTIONAL,\n        gradientOpacityMinimumValue: 0,\n        gradientOpacityMinimumOpacity: 0.0,\n        gradientOpacityMaximumValue: 1.0,\n        gradientOpacityMaximumOpacity: 1.0,\n        useGradientOpacity: false,\n        componentWeight: 1.0\n      });\n    }\n  }\n  macro.setGet(publicAPI, model, ['independentComponents', 'interpolationType', 'shade', 'ambient', 'diffuse', 'specular', 'specularPower', 'useLabelOutline', 'labelOutlineOpacity']);\n  macro.setGetArray(publicAPI, model, ['labelOutlineThickness']);\n\n  // Object methods\n  vtkVolumeProperty(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkVolumeProperty');\n\n// ----------------------------------------------------------------------------\n\nvar vtkVolumeProperty$1 = {\n  newInstance,\n  extend,\n  ...Constants\n};\nexport { vtkVolumeProperty$1 as default, extend, newInstance };","map":{"version":3,"names":["m","macro","vtkColorTransferFunction","vtkPiecewiseFunction","Constants","InterpolationType","OpacityMode","vtkErrorMacro","VTK_MAX_VRCOMP","vtkVolumeProperty","publicAPI","model","classHierarchy","push","getMTime","mTime","mtime","time","index","componentData","colorChannels","grayTransferFunction","rGBTransferFunction","scalarOpacity","gradientOpacity","disableGradientOpacity","getColorChannels","setGrayTransferFunction","arguments","length","undefined","func","modified","getGrayTransferFunction","newInstance","addPoint","setRGBTransferFunction","getRGBTransferFunction","addRGBPoint","setScalarOpacity","getScalarOpacity","setComponentWeight","value","val","Math","min","max","componentWeight","getComponentWeight","setInterpolationTypeToNearest","setInterpolationType","NEAREST","setInterpolationTypeToLinear","LINEAR","setInterpolationTypeToFastLinear","FAST_LINEAR","getInterpolationTypeAsString","enumToString","interpolationType","sets","forEach","cap","capitalize","gets","DEFAULT_VALUES","independentComponents","shade","ambient","diffuse","specular","specularPower","useLabelOutline","labelOutlineThickness","labelOutlineOpacity","extend","initialValues","Object","assign","obj","i","scalarOpacityUnitDistance","opacityMode","FRACTIONAL","gradientOpacityMinimumValue","gradientOpacityMinimumOpacity","gradientOpacityMaximumValue","gradientOpacityMaximumOpacity","useGradientOpacity","setGet","setGetArray","vtkVolumeProperty$1","default"],"sources":["/Users/yzy/Documents/Playground/vue-cornerstone-demo/node_modules/@kitware/vtk.js/Rendering/Core/VolumeProperty.js"],"sourcesContent":["import { m as macro } from '../../macros2.js';\nimport vtkColorTransferFunction from './ColorTransferFunction.js';\nimport vtkPiecewiseFunction from '../../Common/DataModel/PiecewiseFunction.js';\nimport Constants from './VolumeProperty/Constants.js';\n\nconst {\n  InterpolationType,\n  OpacityMode\n} = Constants;\nconst {\n  vtkErrorMacro\n} = macro;\nconst VTK_MAX_VRCOMP = 4;\n\n// ----------------------------------------------------------------------------\n// vtkVolumeProperty methods\n// ----------------------------------------------------------------------------\n\nfunction vtkVolumeProperty(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkVolumeProperty');\n  publicAPI.getMTime = () => {\n    let mTime = model.mtime;\n    let time;\n    for (let index = 0; index < VTK_MAX_VRCOMP; index++) {\n      // Color MTimes\n      if (model.componentData[index].colorChannels === 1) {\n        if (model.componentData[index].grayTransferFunction) {\n          // time that Gray transfer function was last modified\n          time = model.componentData[index].grayTransferFunction.getMTime();\n          mTime = mTime > time ? mTime : time;\n        }\n      } else if (model.componentData[index].colorChannels === 3) {\n        if (model.componentData[index].rGBTransferFunction) {\n          // time that RGB transfer function was last modified\n          time = model.componentData[index].rGBTransferFunction.getMTime();\n          mTime = mTime > time ? mTime : time;\n        }\n      }\n\n      // Opacity MTimes\n      if (model.componentData[index].scalarOpacity) {\n        // time that Scalar opacity transfer function was last modified\n        time = model.componentData[index].scalarOpacity.getMTime();\n        mTime = mTime > time ? mTime : time;\n      }\n      if (model.componentData[index].gradientOpacity) {\n        if (!model.componentData[index].disableGradientOpacity) {\n          // time that Gradient opacity transfer function was last modified\n          time = model.componentData[index].gradientOpacity.getMTime();\n          mTime = mTime > time ? mTime : time;\n        }\n      }\n    }\n    return mTime;\n  };\n  publicAPI.getColorChannels = index => {\n    if (index < 0 || index > 3) {\n      vtkErrorMacro('Bad index - must be between 0 and 3');\n      return 0;\n    }\n    return model.componentData[index].colorChannels;\n  };\n\n  // Set the color of a volume to a gray transfer function\n  publicAPI.setGrayTransferFunction = function () {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let func = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let modified = false;\n    if (model.componentData[index].grayTransferFunction !== func) {\n      model.componentData[index].grayTransferFunction = func;\n      modified = true;\n    }\n    if (model.componentData[index].colorChannels !== 1) {\n      model.componentData[index].colorChannels = 1;\n      modified = true;\n    }\n    if (modified) {\n      publicAPI.modified();\n    }\n    return modified;\n  };\n\n  // Get the currently set gray transfer function. Create one if none set.\n  publicAPI.getGrayTransferFunction = function () {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    if (model.componentData[index].grayTransferFunction === null) {\n      model.componentData[index].grayTransferFunction = vtkPiecewiseFunction.newInstance();\n      model.componentData[index].grayTransferFunction.addPoint(0, 0.0);\n      model.componentData[index].grayTransferFunction.addPoint(1024, 1.0);\n      if (model.componentData[index].colorChannels !== 1) {\n        model.componentData[index].colorChannels = 1;\n      }\n      publicAPI.modified();\n    }\n    return model.componentData[index].grayTransferFunction;\n  };\n\n  // Set the color of a volume to an RGB transfer function\n  publicAPI.setRGBTransferFunction = function () {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let func = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let modified = false;\n    if (model.componentData[index].rGBTransferFunction !== func) {\n      model.componentData[index].rGBTransferFunction = func;\n      modified = true;\n    }\n    if (model.componentData[index].colorChannels !== 3) {\n      model.componentData[index].colorChannels = 3;\n      modified = true;\n    }\n    if (modified) {\n      publicAPI.modified();\n    }\n    return modified;\n  };\n\n  // Get the currently set RGB transfer function. Create one if none set.\n  publicAPI.getRGBTransferFunction = function () {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    if (model.componentData[index].rGBTransferFunction === null) {\n      model.componentData[index].rGBTransferFunction = vtkColorTransferFunction.newInstance();\n      model.componentData[index].rGBTransferFunction.addRGBPoint(0, 0.0, 0.0, 0.0);\n      model.componentData[index].rGBTransferFunction.addRGBPoint(1024, 1.0, 1.0, 1.0);\n      if (model.componentData[index].colorChannels !== 3) {\n        model.componentData[index].colorChannels = 3;\n      }\n      publicAPI.modified();\n    }\n    return model.componentData[index].rGBTransferFunction;\n  };\n\n  // Set the scalar opacity of a volume to a transfer function\n  publicAPI.setScalarOpacity = function () {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let func = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    if (model.componentData[index].scalarOpacity !== func) {\n      model.componentData[index].scalarOpacity = func;\n      publicAPI.modified();\n      return true;\n    }\n    return false;\n  };\n\n  // Get the scalar opacity transfer function. Create one if none set.\n  publicAPI.getScalarOpacity = function () {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    if (model.componentData[index].scalarOpacity === null) {\n      model.componentData[index].scalarOpacity = vtkPiecewiseFunction.newInstance();\n      model.componentData[index].scalarOpacity.addPoint(0, 1.0);\n      model.componentData[index].scalarOpacity.addPoint(1024, 1.0);\n      publicAPI.modified();\n    }\n    return model.componentData[index].scalarOpacity;\n  };\n  publicAPI.setComponentWeight = function () {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    if (index < 0 || index >= VTK_MAX_VRCOMP) {\n      vtkErrorMacro('Invalid index');\n      return false;\n    }\n    const val = Math.min(1, Math.max(0, value));\n    if (model.componentData[index].componentWeight !== val) {\n      model.componentData[index].componentWeight = val;\n      publicAPI.modified();\n      return true;\n    }\n    return false;\n  };\n  publicAPI.getComponentWeight = function () {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    if (index < 0 || index >= VTK_MAX_VRCOMP) {\n      vtkErrorMacro('Invalid index');\n      return 0.0;\n    }\n    return model.componentData[index].componentWeight;\n  };\n  publicAPI.setInterpolationTypeToNearest = () => publicAPI.setInterpolationType(InterpolationType.NEAREST);\n  publicAPI.setInterpolationTypeToLinear = () => publicAPI.setInterpolationType(InterpolationType.LINEAR);\n  publicAPI.setInterpolationTypeToFastLinear = () => publicAPI.setInterpolationType(InterpolationType.FAST_LINEAR);\n  publicAPI.getInterpolationTypeAsString = () => macro.enumToString(InterpolationType, model.interpolationType);\n  const sets = ['useGradientOpacity', 'scalarOpacityUnitDistance', 'gradientOpacityMinimumValue', 'gradientOpacityMinimumOpacity', 'gradientOpacityMaximumValue', 'gradientOpacityMaximumOpacity', 'opacityMode'];\n  sets.forEach(val => {\n    const cap = macro.capitalize(val);\n    publicAPI[`set${cap}`] = (index, value) => {\n      if (model.componentData[index][`${val}`] !== value) {\n        model.componentData[index][`${val}`] = value;\n        publicAPI.modified();\n        return true;\n      }\n      return false;\n    };\n  });\n  const gets = ['useGradientOpacity', 'scalarOpacityUnitDistance', 'gradientOpacityMinimumValue', 'gradientOpacityMinimumOpacity', 'gradientOpacityMaximumValue', 'gradientOpacityMaximumOpacity', 'opacityMode'];\n  gets.forEach(val => {\n    const cap = macro.capitalize(val);\n    publicAPI[`get${cap}`] = index => model.componentData[index][`${val}`];\n  });\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  independentComponents: true,\n  interpolationType: InterpolationType.FAST_LINEAR,\n  shade: false,\n  ambient: 0.1,\n  diffuse: 0.7,\n  specular: 0.2,\n  specularPower: 10.0,\n  useLabelOutline: false,\n  labelOutlineThickness: [1],\n  labelOutlineOpacity: 1.0\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  if (!model.componentData) {\n    model.componentData = [];\n    for (let i = 0; i < VTK_MAX_VRCOMP; ++i) {\n      model.componentData.push({\n        colorChannels: 1,\n        grayTransferFunction: null,\n        rGBTransferFunction: null,\n        scalarOpacity: null,\n        scalarOpacityUnitDistance: 1.0,\n        opacityMode: OpacityMode.FRACTIONAL,\n        gradientOpacityMinimumValue: 0,\n        gradientOpacityMinimumOpacity: 0.0,\n        gradientOpacityMaximumValue: 1.0,\n        gradientOpacityMaximumOpacity: 1.0,\n        useGradientOpacity: false,\n        componentWeight: 1.0\n      });\n    }\n  }\n  macro.setGet(publicAPI, model, ['independentComponents', 'interpolationType', 'shade', 'ambient', 'diffuse', 'specular', 'specularPower', 'useLabelOutline', 'labelOutlineOpacity']);\n  macro.setGetArray(publicAPI, model, ['labelOutlineThickness']);\n\n  // Object methods\n  vtkVolumeProperty(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkVolumeProperty');\n\n// ----------------------------------------------------------------------------\n\nvar vtkVolumeProperty$1 = {\n  newInstance,\n  extend,\n  ...Constants\n};\n\nexport { vtkVolumeProperty$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}