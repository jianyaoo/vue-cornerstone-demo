{"ast":null,"code":"import { m as macro } from '../../macros2.js';\nimport vtkWebGPUShaderModule from './ShaderModule.js';\n\n// perform in place string substitutions, indicate if a substitution was done\n// this is useful for building up shader strings which typically involve\n// lots of string substitutions. Return true if a substitution was done.\nfunction substitute(source, search, replace) {\n  let all = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  const replaceStr = Array.isArray(replace) ? replace.join('\\n') : replace;\n  let replaced = false;\n  if (source.search(search) !== -1) {\n    replaced = true;\n  }\n  let gflag = '';\n  if (all) {\n    gflag = 'g';\n  }\n  const regex = new RegExp(search, gflag);\n  const resultstr = source.replace(regex, replaceStr);\n  return {\n    replace: replaced,\n    result: resultstr\n  };\n}\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUShaderCache methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUShaderCache(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUShaderCache');\n  publicAPI.getShaderModule = shaderDesc => {\n    // has it already been created?\n    const sType = shaderDesc.getType();\n    const sHash = shaderDesc.getHash();\n    const keys = model._shaderModules.keys();\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (key.getHash() === sHash && key.getType() === sType) {\n        return model._shaderModules.get(key);\n      }\n    }\n\n    // console.log(JSON.stringify(shaderDesc));\n\n    const sm = vtkWebGPUShaderModule.newInstance();\n    sm.initialize(model.device, shaderDesc);\n    model._shaderModules.set(shaderDesc, sm);\n    return sm;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  shaderModules: null,\n  device: null,\n  window: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Internal objects\n  model._shaderModules = new Map();\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['device', 'window']);\n\n  // Object methods\n  vtkWebGPUShaderCache(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkWebGPUShaderCache');\n\n// ----------------------------------------------------------------------------\n\nvar vtkWebGPUShaderCache$1 = {\n  newInstance,\n  extend,\n  substitute\n};\nexport { vtkWebGPUShaderCache$1 as default, extend, newInstance };","map":{"version":3,"names":["m","macro","vtkWebGPUShaderModule","substitute","source","search","replace","all","arguments","length","undefined","replaceStr","Array","isArray","join","replaced","gflag","regex","RegExp","resultstr","result","vtkWebGPUShaderCache","publicAPI","model","classHierarchy","push","getShaderModule","shaderDesc","sType","getType","sHash","getHash","keys","_shaderModules","i","key","get","sm","newInstance","initialize","device","set","DEFAULT_VALUES","shaderModules","window","extend","initialValues","Object","assign","Map","obj","setGet","vtkWebGPUShaderCache$1","default"],"sources":["/root/vue-cornerstone-demo/node_modules/@kitware/vtk.js/Rendering/WebGPU/ShaderCache.js"],"sourcesContent":["import { m as macro } from '../../macros2.js';\nimport vtkWebGPUShaderModule from './ShaderModule.js';\n\n// perform in place string substitutions, indicate if a substitution was done\n// this is useful for building up shader strings which typically involve\n// lots of string substitutions. Return true if a substitution was done.\nfunction substitute(source, search, replace) {\n  let all = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  const replaceStr = Array.isArray(replace) ? replace.join('\\n') : replace;\n  let replaced = false;\n  if (source.search(search) !== -1) {\n    replaced = true;\n  }\n  let gflag = '';\n  if (all) {\n    gflag = 'g';\n  }\n  const regex = new RegExp(search, gflag);\n  const resultstr = source.replace(regex, replaceStr);\n  return {\n    replace: replaced,\n    result: resultstr\n  };\n}\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUShaderCache methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUShaderCache(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUShaderCache');\n  publicAPI.getShaderModule = shaderDesc => {\n    // has it already been created?\n    const sType = shaderDesc.getType();\n    const sHash = shaderDesc.getHash();\n    const keys = model._shaderModules.keys();\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if (key.getHash() === sHash && key.getType() === sType) {\n        return model._shaderModules.get(key);\n      }\n    }\n\n    // console.log(JSON.stringify(shaderDesc));\n\n    const sm = vtkWebGPUShaderModule.newInstance();\n    sm.initialize(model.device, shaderDesc);\n    model._shaderModules.set(shaderDesc, sm);\n    return sm;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  shaderModules: null,\n  device: null,\n  window: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Internal objects\n  model._shaderModules = new Map();\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['device', 'window']);\n\n  // Object methods\n  vtkWebGPUShaderCache(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkWebGPUShaderCache');\n\n// ----------------------------------------------------------------------------\n\nvar vtkWebGPUShaderCache$1 = {\n  newInstance,\n  extend,\n  substitute\n};\n\nexport { vtkWebGPUShaderCache$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}