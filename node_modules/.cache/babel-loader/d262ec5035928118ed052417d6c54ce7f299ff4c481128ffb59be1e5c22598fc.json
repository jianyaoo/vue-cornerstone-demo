{"ast":null,"code":"import _getHash from './_getHash';\nimport setAttributesIfNecessary from './setAttributesIfNecessary';\nimport setNewAttributesIfValid from './setNewAttributesIfValid';\nfunction drawEllipseByCoordinates(svgDrawingHelper, annotationUID, ellipseUID, canvasCoordinates, options = {}, dataId = '') {\n  const {\n    color,\n    width,\n    lineWidth,\n    lineDash\n  } = Object.assign({\n    color: 'dodgerblue',\n    width: '2',\n    lineWidth: undefined,\n    lineDash: undefined\n  }, options);\n  const strokeWidth = lineWidth || width;\n  const svgns = 'http://www.w3.org/2000/svg';\n  const svgNodeHash = _getHash(annotationUID, 'ellipse', ellipseUID);\n  const existingEllipse = svgDrawingHelper.getSvgNode(svgNodeHash);\n  const [bottom, top, left, right] = canvasCoordinates;\n  const w = Math.hypot(left[0] - right[0], left[1] - right[1]);\n  const h = Math.hypot(top[0] - bottom[0], top[1] - bottom[1]);\n  const angle = Math.atan2(left[1] - right[1], left[0] - right[0]) * 180 / Math.PI;\n  const center = [(left[0] + right[0]) / 2, (top[1] + bottom[1]) / 2];\n  const radiusX = w / 2;\n  const radiusY = h / 2;\n  const attributes = {\n    cx: `${center[0]}`,\n    cy: `${center[1]}`,\n    rx: `${radiusX}`,\n    ry: `${radiusY}`,\n    stroke: color,\n    fill: 'transparent',\n    transform: `rotate(${angle} ${center[0]} ${center[1]})`,\n    'stroke-width': strokeWidth,\n    'stroke-dasharray': lineDash\n  };\n  if (existingEllipse) {\n    setAttributesIfNecessary(attributes, existingEllipse);\n    svgDrawingHelper.setNodeTouched(svgNodeHash);\n  } else {\n    const svgEllipseElement = document.createElementNS(svgns, 'ellipse');\n    if (dataId !== '') {\n      svgEllipseElement.setAttribute('data-id', dataId);\n    }\n    setNewAttributesIfValid(attributes, svgEllipseElement);\n    svgDrawingHelper.appendNode(svgEllipseElement, svgNodeHash);\n  }\n}\nexport default drawEllipseByCoordinates;","map":{"version":3,"names":["_getHash","setAttributesIfNecessary","setNewAttributesIfValid","drawEllipseByCoordinates","svgDrawingHelper","annotationUID","ellipseUID","canvasCoordinates","options","dataId","color","width","lineWidth","lineDash","Object","assign","undefined","strokeWidth","svgns","svgNodeHash","existingEllipse","getSvgNode","bottom","top","left","right","w","Math","hypot","h","angle","atan2","PI","center","radiusX","radiusY","attributes","cx","cy","rx","ry","stroke","fill","transform","setNodeTouched","svgEllipseElement","document","createElementNS","setAttribute","appendNode"],"sources":["../../../src/drawingSvg/drawEllipseByCoordinates.ts"],"sourcesContent":[null],"mappings":"AAGA,OAAOA,QAAQ,MAAM,YAAY;AACjC,OAAOC,wBAAwB,MAAM,4BAA4B;AACjE,OAAOC,uBAAuB,MAAM,2BAA2B;AAE/D,SAASC,wBAAwBA,CAC/BC,gBAAkC,EAClCC,aAAqB,EACrBC,UAAkB,EAClBC,iBAA2E,EAC3EC,OAAO,GAAG,EAAE,EACZC,MAAM,GAAG,EAAE;EAEX,MAAM;IAAEC,KAAK;IAAEC,KAAK;IAAEC,SAAS;IAAEC;EAAQ,CAAE,GAAGC,MAAM,CAACC,MAAM,CACzD;IACEL,KAAK,EAAE,YAAY;IACnBC,KAAK,EAAE,GAAG;IACVC,SAAS,EAAEI,SAAS;IACpBH,QAAQ,EAAEG;GACX,EACDR,OAAO,CACR;EAGD,MAAMS,WAAW,GAAGL,SAAS,IAAID,KAAK;EAEtC,MAAMO,KAAK,GAAG,4BAA4B;EAC1C,MAAMC,WAAW,GAAGnB,QAAQ,CAACK,aAAa,EAAE,SAAS,EAAEC,UAAU,CAAC;EAClE,MAAMc,eAAe,GAAGhB,gBAAgB,CAACiB,UAAU,CAACF,WAAW,CAAC;EAEhE,MAAM,CAACG,MAAM,EAAEC,GAAG,EAAEC,IAAI,EAAEC,KAAK,CAAC,GAAGlB,iBAAiB;EAEpD,MAAMmB,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,CAAC,CAAC,GAAGC,KAAK,CAAC,CAAC,CAAC,EAAED,IAAI,CAAC,CAAC,CAAC,GAAGC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5D,MAAMI,CAAC,GAAGF,IAAI,CAACC,KAAK,CAACL,GAAG,CAAC,CAAC,CAAC,GAAGD,MAAM,CAAC,CAAC,CAAC,EAAEC,GAAG,CAAC,CAAC,CAAC,GAAGD,MAAM,CAAC,CAAC,CAAC,CAAC;EAC5D,MAAMQ,KAAK,GACRH,IAAI,CAACI,KAAK,CAACP,IAAI,CAAC,CAAC,CAAC,GAAGC,KAAK,CAAC,CAAC,CAAC,EAAED,IAAI,CAAC,CAAC,CAAC,GAAGC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAIE,IAAI,CAACK,EAAE;EAEtE,MAAMC,MAAM,GAAG,CAAC,CAACT,IAAI,CAAC,CAAC,CAAC,GAAGC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAACF,GAAG,CAAC,CAAC,CAAC,GAAGD,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;EACnE,MAAMY,OAAO,GAAGR,CAAC,GAAG,CAAC;EACrB,MAAMS,OAAO,GAAGN,CAAC,GAAG,CAAC;EAErB,MAAMO,UAAU,GAAG;IACjBC,EAAE,EAAE,GAAGJ,MAAM,CAAC,CAAC,CAAC,EAAE;IAClBK,EAAE,EAAE,GAAGL,MAAM,CAAC,CAAC,CAAC,EAAE;IAClBM,EAAE,EAAE,GAAGL,OAAO,EAAE;IAChBM,EAAE,EAAE,GAAGL,OAAO,EAAE;IAChBM,MAAM,EAAE/B,KAAK;IACbgC,IAAI,EAAE,aAAa;IACnBC,SAAS,EAAE,UAAUb,KAAK,IAAIG,MAAM,CAAC,CAAC,CAAC,IAAIA,MAAM,CAAC,CAAC,CAAC,GAAG;IACvD,cAAc,EAAEhB,WAAW;IAC3B,kBAAkB,EAAEJ;GACrB;EAED,IAAIO,eAAe,EAAE;IACnBnB,wBAAwB,CAACmC,UAAU,EAAEhB,eAAe,CAAC;IAErDhB,gBAAgB,CAACwC,cAAc,CAACzB,WAAW,CAAC;GAC7C,MAAM;IACL,MAAM0B,iBAAiB,GAAGC,QAAQ,CAACC,eAAe,CAAC7B,KAAK,EAAE,SAAS,CAAC;IAEpE,IAAIT,MAAM,KAAK,EAAE,EAAE;MACjBoC,iBAAiB,CAACG,YAAY,CAAC,SAAS,EAAEvC,MAAM,CAAC;;IAGnDP,uBAAuB,CAACkC,UAAU,EAAES,iBAAiB,CAAC;IAEtDzC,gBAAgB,CAAC6C,UAAU,CAACJ,iBAAiB,EAAE1B,WAAW,CAAC;;AAE/D;AAEA,eAAehB,wBAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}