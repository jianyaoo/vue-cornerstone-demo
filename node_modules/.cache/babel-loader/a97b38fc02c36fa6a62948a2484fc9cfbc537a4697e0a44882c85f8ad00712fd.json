{"ast":null,"code":"// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = function (c, id, msg, transfer, cb) {\n  var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'], {\n    type: 'text/javascript'\n  }))));\n  w.onmessage = function (e) {\n    var d = e.data,\n      ed = d.$e$;\n    if (ed) {\n      var err = new Error(ed[0]);\n      err['code'] = ed[1];\n      err.stack = ed[2];\n      cb(err, null);\n    } else cb(null, d);\n  };\n  w.postMessage(msg, transfer);\n  return w;\n};\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array,\n  u16 = Uint16Array,\n  u32 = Uint32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */0, 0, /* impossible */0]);\n// fixed distance extra bits\n// see fleb note\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n  var b = new u16(31);\n  for (var i = 0; i < 31; ++i) {\n    b[i] = start += 1 << eb[i - 1];\n  }\n  // numbers here are at max 18 bits\n  var r = new u32(b[30]);\n  for (var i = 1; i < 30; ++i) {\n    for (var j = b[i]; j < b[i + 1]; ++j) {\n      r[j] = j - b[i] << 5 | i;\n    }\n  }\n  return [b, r];\n};\nvar _a = freb(fleb, 2),\n  fl = _a[0],\n  revfl = _a[1];\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0),\n  fd = _b[0],\n  revfd = _b[1];\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n  // reverse table algorithm from SO\n  var x = (i & 0xAAAA) >>> 1 | (i & 0x5555) << 1;\n  x = (x & 0xCCCC) >>> 2 | (x & 0x3333) << 2;\n  x = (x & 0xF0F0) >>> 4 | (x & 0x0F0F) << 4;\n  rev[i] = ((x & 0xFF00) >>> 8 | (x & 0x00FF) << 8) >>> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = function (cd, mb, r) {\n  var s = cd.length;\n  // index\n  var i = 0;\n  // u16 \"map\": index -> # of codes with bit length = index\n  var l = new u16(mb);\n  // length of cd must be 288 (total # of codes)\n  for (; i < s; ++i) {\n    if (cd[i]) ++l[cd[i] - 1];\n  }\n  // u16 \"map\": index -> minimum code for bit length = index\n  var le = new u16(mb);\n  for (i = 0; i < mb; ++i) {\n    le[i] = le[i - 1] + l[i - 1] << 1;\n  }\n  var co;\n  if (r) {\n    // u16 \"map\": index -> number of actual bits, symbol for code\n    co = new u16(1 << mb);\n    // bits to remove for reverser\n    var rvb = 15 - mb;\n    for (i = 0; i < s; ++i) {\n      // ignore 0 lengths\n      if (cd[i]) {\n        // num encoding both symbol and bits read\n        var sv = i << 4 | cd[i];\n        // free bits\n        var r_1 = mb - cd[i];\n        // start value\n        var v = le[cd[i] - 1]++ << r_1;\n        // m is end value\n        for (var m = v | (1 << r_1) - 1; v <= m; ++v) {\n          // every 16 bit value starting with the code yields the same result\n          co[rev[v] >>> rvb] = sv;\n        }\n      }\n    }\n  } else {\n    co = new u16(s);\n    for (i = 0; i < s; ++i) {\n      if (cd[i]) {\n        co[i] = rev[le[cd[i] - 1]++] >>> 15 - cd[i];\n      }\n    }\n  }\n  return co;\n};\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i) flt[i] = 8;\nfor (var i = 144; i < 256; ++i) flt[i] = 9;\nfor (var i = 256; i < 280; ++i) flt[i] = 7;\nfor (var i = 280; i < 288; ++i) flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i) fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/hMap(flt, 9, 0),\n  flrm = /*#__PURE__*/hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/hMap(fdt, 5, 0),\n  fdrm = /*#__PURE__*/hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n  var m = a[0];\n  for (var i = 1; i < a.length; ++i) {\n    if (a[i] > m) m = a[i];\n  }\n  return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n  var o = p / 8 | 0;\n  return (d[o] | d[o + 1] << 8) >> (p & 7) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n  var o = p / 8 | 0;\n  return (d[o] | d[o + 1] << 8 | d[o + 2] << 16) >> (p & 7);\n};\n// get end of byte\nvar shft = function (p) {\n  return (p + 7) / 8 | 0;\n};\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n  if (s == null || s < 0) s = 0;\n  if (e == null || e > v.length) e = v.length;\n  // can't use .constructor in case user-supplied\n  var n = new (v.BYTES_PER_ELEMENT == 2 ? u16 : v.BYTES_PER_ELEMENT == 4 ? u32 : u8)(e - s);\n  n.set(v.subarray(s, e));\n  return n;\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n  UnexpectedEOF: 0,\n  InvalidBlockType: 1,\n  InvalidLengthLiteral: 2,\n  InvalidDistance: 3,\n  StreamFinished: 4,\n  NoStreamHandler: 5,\n  InvalidHeader: 6,\n  NoCallback: 7,\n  InvalidUTF8: 8,\n  ExtraFieldTooLong: 9,\n  InvalidDate: 10,\n  FilenameTooLong: 11,\n  StreamFinishing: 12,\n  InvalidZipData: 13,\n  UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = ['unexpected EOF', 'invalid block type', 'invalid length/literal', 'invalid distance', 'stream finished', 'no stream handler',, 'no callback', 'invalid UTF-8 data', 'extra field too long', 'date not in range 1980-2099', 'filename too long', 'stream finishing', 'invalid zip data'\n// determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n  var e = new Error(msg || ec[ind]);\n  e.code = ind;\n  if (Error.captureStackTrace) Error.captureStackTrace(e, err);\n  if (!nt) throw e;\n  return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, buf, st) {\n  // source length\n  var sl = dat.length;\n  if (!sl || st && st.f && !st.l) return buf || new u8(0);\n  // have to estimate size\n  var noBuf = !buf || st;\n  // no state\n  var noSt = !st || st.i;\n  if (!st) st = {};\n  // Assumes roughly 33% compression ratio average\n  if (!buf) buf = new u8(sl * 3);\n  // ensure buffer can fit at least l elements\n  var cbuf = function (l) {\n    var bl = buf.length;\n    // need to increase size to fit\n    if (l > bl) {\n      // Double or set to necessary, whichever is greater\n      var nbuf = new u8(Math.max(bl * 2, l));\n      nbuf.set(buf);\n      buf = nbuf;\n    }\n  };\n  //  last chunk         bitpos           bytes\n  var final = st.f || 0,\n    pos = st.p || 0,\n    bt = st.b || 0,\n    lm = st.l,\n    dm = st.d,\n    lbt = st.m,\n    dbt = st.n;\n  // total bits\n  var tbts = sl * 8;\n  do {\n    if (!lm) {\n      // BFINAL - this is only 1 when last chunk is next\n      final = bits(dat, pos, 1);\n      // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n      var type = bits(dat, pos + 1, 3);\n      pos += 3;\n      if (!type) {\n        // go to end of byte boundary\n        var s = shft(pos) + 4,\n          l = dat[s - 4] | dat[s - 3] << 8,\n          t = s + l;\n        if (t > sl) {\n          if (noSt) err(0);\n          break;\n        }\n        // ensure size\n        if (noBuf) cbuf(bt + l);\n        // Copy over uncompressed data\n        buf.set(dat.subarray(s, t), bt);\n        // Get new bitpos, update byte count\n        st.b = bt += l, st.p = pos = t * 8, st.f = final;\n        continue;\n      } else if (type == 1) lm = flrm, dm = fdrm, lbt = 9, dbt = 5;else if (type == 2) {\n        //  literal                            lengths\n        var hLit = bits(dat, pos, 31) + 257,\n          hcLen = bits(dat, pos + 10, 15) + 4;\n        var tl = hLit + bits(dat, pos + 5, 31) + 1;\n        pos += 14;\n        // length+distance tree\n        var ldt = new u8(tl);\n        // code length tree\n        var clt = new u8(19);\n        for (var i = 0; i < hcLen; ++i) {\n          // use index map to get real code\n          clt[clim[i]] = bits(dat, pos + i * 3, 7);\n        }\n        pos += hcLen * 3;\n        // code lengths bits\n        var clb = max(clt),\n          clbmsk = (1 << clb) - 1;\n        // code lengths map\n        var clm = hMap(clt, clb, 1);\n        for (var i = 0; i < tl;) {\n          var r = clm[bits(dat, pos, clbmsk)];\n          // bits read\n          pos += r & 15;\n          // symbol\n          var s = r >>> 4;\n          // code length to copy\n          if (s < 16) {\n            ldt[i++] = s;\n          } else {\n            //  copy   count\n            var c = 0,\n              n = 0;\n            if (s == 16) n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];else if (s == 17) n = 3 + bits(dat, pos, 7), pos += 3;else if (s == 18) n = 11 + bits(dat, pos, 127), pos += 7;\n            while (n--) ldt[i++] = c;\n          }\n        }\n        //    length tree                 distance tree\n        var lt = ldt.subarray(0, hLit),\n          dt = ldt.subarray(hLit);\n        // max length bits\n        lbt = max(lt);\n        // max dist bits\n        dbt = max(dt);\n        lm = hMap(lt, lbt, 1);\n        dm = hMap(dt, dbt, 1);\n      } else err(1);\n      if (pos > tbts) {\n        if (noSt) err(0);\n        break;\n      }\n    }\n    // Make sure the buffer can hold this + the largest possible addition\n    // Maximum chunk size (practically, theoretically infinite) is 2^17;\n    if (noBuf) cbuf(bt + 131072);\n    var lms = (1 << lbt) - 1,\n      dms = (1 << dbt) - 1;\n    var lpos = pos;\n    for (;; lpos = pos) {\n      // bits read, code\n      var c = lm[bits16(dat, pos) & lms],\n        sym = c >>> 4;\n      pos += c & 15;\n      if (pos > tbts) {\n        if (noSt) err(0);\n        break;\n      }\n      if (!c) err(2);\n      if (sym < 256) buf[bt++] = sym;else if (sym == 256) {\n        lpos = pos, lm = null;\n        break;\n      } else {\n        var add = sym - 254;\n        // no extra bits needed if less\n        if (sym > 264) {\n          // index\n          var i = sym - 257,\n            b = fleb[i];\n          add = bits(dat, pos, (1 << b) - 1) + fl[i];\n          pos += b;\n        }\n        // dist\n        var d = dm[bits16(dat, pos) & dms],\n          dsym = d >>> 4;\n        if (!d) err(3);\n        pos += d & 15;\n        var dt = fd[dsym];\n        if (dsym > 3) {\n          var b = fdeb[dsym];\n          dt += bits16(dat, pos) & (1 << b) - 1, pos += b;\n        }\n        if (pos > tbts) {\n          if (noSt) err(0);\n          break;\n        }\n        if (noBuf) cbuf(bt + 131072);\n        var end = bt + add;\n        for (; bt < end; bt += 4) {\n          buf[bt] = buf[bt - dt];\n          buf[bt + 1] = buf[bt + 1 - dt];\n          buf[bt + 2] = buf[bt + 2 - dt];\n          buf[bt + 3] = buf[bt + 3 - dt];\n        }\n        bt = end;\n      }\n    }\n    st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n    if (lm) final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n  } while (!final);\n  return bt == buf.length ? buf : slc(buf, 0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n  v <<= p & 7;\n  var o = p / 8 | 0;\n  d[o] |= v;\n  d[o + 1] |= v >>> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n  v <<= p & 7;\n  var o = p / 8 | 0;\n  d[o] |= v;\n  d[o + 1] |= v >>> 8;\n  d[o + 2] |= v >>> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n  // Need extra info to make a tree\n  var t = [];\n  for (var i = 0; i < d.length; ++i) {\n    if (d[i]) t.push({\n      s: i,\n      f: d[i]\n    });\n  }\n  var s = t.length;\n  var t2 = t.slice();\n  if (!s) return [et, 0];\n  if (s == 1) {\n    var v = new u8(t[0].s + 1);\n    v[t[0].s] = 1;\n    return [v, 1];\n  }\n  t.sort(function (a, b) {\n    return a.f - b.f;\n  });\n  // after i2 reaches last ind, will be stopped\n  // freq must be greater than largest possible number of symbols\n  t.push({\n    s: -1,\n    f: 25001\n  });\n  var l = t[0],\n    r = t[1],\n    i0 = 0,\n    i1 = 1,\n    i2 = 2;\n  t[0] = {\n    s: -1,\n    f: l.f + r.f,\n    l: l,\n    r: r\n  };\n  // efficient algorithm from UZIP.js\n  // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n  // symbols that combined have high freq, will start processing i2 (high-freq,\n  // non-composite) symbols instead\n  // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n  while (i1 != s - 1) {\n    l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n    r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n    t[i1++] = {\n      s: -1,\n      f: l.f + r.f,\n      l: l,\n      r: r\n    };\n  }\n  var maxSym = t2[0].s;\n  for (var i = 1; i < s; ++i) {\n    if (t2[i].s > maxSym) maxSym = t2[i].s;\n  }\n  // code lengths\n  var tr = new u16(maxSym + 1);\n  // max bits in tree\n  var mbt = ln(t[i1 - 1], tr, 0);\n  if (mbt > mb) {\n    // more algorithms from UZIP.js\n    // TODO: find out how this code works (debt)\n    //  ind    debt\n    var i = 0,\n      dt = 0;\n    //    left            cost\n    var lft = mbt - mb,\n      cst = 1 << lft;\n    t2.sort(function (a, b) {\n      return tr[b.s] - tr[a.s] || a.f - b.f;\n    });\n    for (; i < s; ++i) {\n      var i2_1 = t2[i].s;\n      if (tr[i2_1] > mb) {\n        dt += cst - (1 << mbt - tr[i2_1]);\n        tr[i2_1] = mb;\n      } else break;\n    }\n    dt >>>= lft;\n    while (dt > 0) {\n      var i2_2 = t2[i].s;\n      if (tr[i2_2] < mb) dt -= 1 << mb - tr[i2_2]++ - 1;else ++i;\n    }\n    for (; i >= 0 && dt; --i) {\n      var i2_3 = t2[i].s;\n      if (tr[i2_3] == mb) {\n        --tr[i2_3];\n        ++dt;\n      }\n    }\n    mbt = mb;\n  }\n  return [new u8(tr), mbt];\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n  return n.s == -1 ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1)) : l[n.s] = d;\n};\n// length codes generation\nvar lc = function (c) {\n  var s = c.length;\n  // Note that the semicolon was intentional\n  while (s && !c[--s]);\n  var cl = new u16(++s);\n  //  ind      num         streak\n  var cli = 0,\n    cln = c[0],\n    cls = 1;\n  var w = function (v) {\n    cl[cli++] = v;\n  };\n  for (var i = 1; i <= s; ++i) {\n    if (c[i] == cln && i != s) ++cls;else {\n      if (!cln && cls > 2) {\n        for (; cls > 138; cls -= 138) w(32754);\n        if (cls > 2) {\n          w(cls > 10 ? cls - 11 << 5 | 28690 : cls - 3 << 5 | 12305);\n          cls = 0;\n        }\n      } else if (cls > 3) {\n        w(cln), --cls;\n        for (; cls > 6; cls -= 6) w(8304);\n        if (cls > 2) w(cls - 3 << 5 | 8208), cls = 0;\n      }\n      while (cls--) w(cln);\n      cls = 1;\n      cln = c[i];\n    }\n  }\n  return [cl.subarray(0, cli), s];\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n  var l = 0;\n  for (var i = 0; i < cl.length; ++i) l += cf[i] * cl[i];\n  return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n  // no need to write 00 as type: TypedArray defaults to 0\n  var s = dat.length;\n  var o = shft(pos + 2);\n  out[o] = s & 255;\n  out[o + 1] = s >>> 8;\n  out[o + 2] = out[o] ^ 255;\n  out[o + 3] = out[o + 1] ^ 255;\n  for (var i = 0; i < s; ++i) out[o + i + 4] = dat[i];\n  return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n  wbits(out, p++, final);\n  ++lf[256];\n  var _a = hTree(lf, 15),\n    dlt = _a[0],\n    mlb = _a[1];\n  var _b = hTree(df, 15),\n    ddt = _b[0],\n    mdb = _b[1];\n  var _c = lc(dlt),\n    lclt = _c[0],\n    nlc = _c[1];\n  var _d = lc(ddt),\n    lcdt = _d[0],\n    ndc = _d[1];\n  var lcfreq = new u16(19);\n  for (var i = 0; i < lclt.length; ++i) lcfreq[lclt[i] & 31]++;\n  for (var i = 0; i < lcdt.length; ++i) lcfreq[lcdt[i] & 31]++;\n  var _e = hTree(lcfreq, 7),\n    lct = _e[0],\n    mlcb = _e[1];\n  var nlcc = 19;\n  for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc);\n  var flen = bl + 5 << 3;\n  var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n  var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + (2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18]);\n  if (flen <= ftlen && flen <= dtlen) return wfblk(out, p, dat.subarray(bs, bs + bl));\n  var lm, ll, dm, dl;\n  wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n  if (dtlen < ftlen) {\n    lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n    var llm = hMap(lct, mlcb, 0);\n    wbits(out, p, nlc - 257);\n    wbits(out, p + 5, ndc - 1);\n    wbits(out, p + 10, nlcc - 4);\n    p += 14;\n    for (var i = 0; i < nlcc; ++i) wbits(out, p + 3 * i, lct[clim[i]]);\n    p += 3 * nlcc;\n    var lcts = [lclt, lcdt];\n    for (var it = 0; it < 2; ++it) {\n      var clct = lcts[it];\n      for (var i = 0; i < clct.length; ++i) {\n        var len = clct[i] & 31;\n        wbits(out, p, llm[len]), p += lct[len];\n        if (len > 15) wbits(out, p, clct[i] >>> 5 & 127), p += clct[i] >>> 12;\n      }\n    }\n  } else {\n    lm = flm, ll = flt, dm = fdm, dl = fdt;\n  }\n  for (var i = 0; i < li; ++i) {\n    if (syms[i] > 255) {\n      var len = syms[i] >>> 18 & 31;\n      wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n      if (len > 7) wbits(out, p, syms[i] >>> 23 & 31), p += fleb[len];\n      var dst = syms[i] & 31;\n      wbits16(out, p, dm[dst]), p += dl[dst];\n      if (dst > 3) wbits16(out, p, syms[i] >>> 5 & 8191), p += fdeb[dst];\n    } else {\n      wbits16(out, p, lm[syms[i]]), p += ll[syms[i]];\n    }\n  }\n  wbits16(out, p, lm[256]);\n  return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/new u32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, lst) {\n  var s = dat.length;\n  var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n  // writing to this writes to the output buffer\n  var w = o.subarray(pre, o.length - post);\n  var pos = 0;\n  if (!lvl || s < 8) {\n    for (var i = 0; i <= s; i += 65535) {\n      // end\n      var e = i + 65535;\n      if (e >= s) {\n        // write final block\n        w[pos >> 3] = lst;\n      }\n      pos = wfblk(w, pos + 1, dat.subarray(i, e));\n    }\n  } else {\n    var opt = deo[lvl - 1];\n    var n = opt >>> 13,\n      c = opt & 8191;\n    var msk_1 = (1 << plvl) - 1;\n    //    prev 2-byte val map    curr 2-byte val map\n    var prev = new u16(32768),\n      head = new u16(msk_1 + 1);\n    var bs1_1 = Math.ceil(plvl / 3),\n      bs2_1 = 2 * bs1_1;\n    var hsh = function (i) {\n      return (dat[i] ^ dat[i + 1] << bs1_1 ^ dat[i + 2] << bs2_1) & msk_1;\n    };\n    // 24576 is an arbitrary number of maximum symbols per block\n    // 424 buffer for last block\n    var syms = new u32(25000);\n    // length/literal freq   distance freq\n    var lf = new u16(288),\n      df = new u16(32);\n    //  l/lcnt  exbits  index  l/lind  waitdx  bitpos\n    var lc_1 = 0,\n      eb = 0,\n      i = 0,\n      li = 0,\n      wi = 0,\n      bs = 0;\n    for (; i < s; ++i) {\n      // hash value\n      // deopt when i > s - 3 - at end, deopt acceptable\n      var hv = hsh(i);\n      // index mod 32768    previous index mod\n      var imod = i & 32767,\n        pimod = head[hv];\n      prev[imod] = pimod;\n      head[hv] = imod;\n      // We always should modify head and prev, but only add symbols if\n      // this data is not yet processed (\"wait\" for wait index)\n      if (wi <= i) {\n        // bytes remaining\n        var rem = s - i;\n        if ((lc_1 > 7000 || li > 24576) && rem > 423) {\n          pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n          li = lc_1 = eb = 0, bs = i;\n          for (var j = 0; j < 286; ++j) lf[j] = 0;\n          for (var j = 0; j < 30; ++j) df[j] = 0;\n        }\n        //  len    dist   chain\n        var l = 2,\n          d = 0,\n          ch_1 = c,\n          dif = imod - pimod & 32767;\n        if (rem > 2 && hv == hsh(i - dif)) {\n          var maxn = Math.min(n, rem) - 1;\n          var maxd = Math.min(32767, i);\n          // max possible length\n          // not capped at dif because decompressors implement \"rolling\" index population\n          var ml = Math.min(258, rem);\n          while (dif <= maxd && --ch_1 && imod != pimod) {\n            if (dat[i + l] == dat[i + l - dif]) {\n              var nl = 0;\n              for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl);\n              if (nl > l) {\n                l = nl, d = dif;\n                // break out early when we reach \"nice\" (we are satisfied enough)\n                if (nl > maxn) break;\n                // now, find the rarest 2-byte sequence within this\n                // length of literals and search for that instead.\n                // Much faster than just using the start\n                var mmd = Math.min(dif, nl - 2);\n                var md = 0;\n                for (var j = 0; j < mmd; ++j) {\n                  var ti = i - dif + j + 32768 & 32767;\n                  var pti = prev[ti];\n                  var cd = ti - pti + 32768 & 32767;\n                  if (cd > md) md = cd, pimod = ti;\n                }\n              }\n            }\n            // check the previous match\n            imod = pimod, pimod = prev[imod];\n            dif += imod - pimod + 32768 & 32767;\n          }\n        }\n        // d will be nonzero only when a match was found\n        if (d) {\n          // store both dist and len data in one Uint32\n          // Make sure this is recognized as a len/dist with 28th bit (2^28)\n          syms[li++] = 268435456 | revfl[l] << 18 | revfd[d];\n          var lin = revfl[l] & 31,\n            din = revfd[d] & 31;\n          eb += fleb[lin] + fdeb[din];\n          ++lf[257 + lin];\n          ++df[din];\n          wi = i + l;\n          ++lc_1;\n        } else {\n          syms[li++] = dat[i];\n          ++lf[dat[i]];\n        }\n      }\n    }\n    pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n    // this is the easiest way to avoid needing to maintain state\n    if (!lst && pos & 7) pos = wfblk(w, pos + 1, et);\n  }\n  return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/function () {\n  var t = new Int32Array(256);\n  for (var i = 0; i < 256; ++i) {\n    var c = i,\n      k = 9;\n    while (--k) c = (c & 1 && -306674912) ^ c >>> 1;\n    t[i] = c;\n  }\n  return t;\n}();\n// CRC32\nvar crc = function () {\n  var c = -1;\n  return {\n    p: function (d) {\n      // closures have awful performance\n      var cr = c;\n      for (var i = 0; i < d.length; ++i) cr = crct[cr & 255 ^ d[i]] ^ cr >>> 8;\n      c = cr;\n    },\n    d: function () {\n      return ~c;\n    }\n  };\n};\n// Alder32\nvar adler = function () {\n  var a = 1,\n    b = 0;\n  return {\n    p: function (d) {\n      // closures have awful performance\n      var n = a,\n        m = b;\n      var l = d.length | 0;\n      for (var i = 0; i != l;) {\n        var e = Math.min(i + 2655, l);\n        for (; i < e; ++i) m += n += d[i];\n        n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n      }\n      a = n, b = m;\n    },\n    d: function () {\n      a %= 65521, b %= 65521;\n      return (a & 255) << 24 | a >>> 8 << 16 | (b & 255) << 8 | b >>> 8;\n    }\n  };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n  return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : 12 + opt.mem, pre, post, !st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n  var o = {};\n  for (var k in a) o[k] = a[k];\n  for (var k in b) o[k] = b[k];\n  return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n  var dt = fn();\n  var st = fn.toString();\n  var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n  for (var i = 0; i < dt.length; ++i) {\n    var v = dt[i],\n      k = ks[i];\n    if (typeof v == 'function') {\n      fnStr += ';' + k + '=';\n      var st_1 = v.toString();\n      if (v.prototype) {\n        // for global objects\n        if (st_1.indexOf('[native code]') != -1) {\n          var spInd = st_1.indexOf(' ', 8) + 1;\n          fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n        } else {\n          fnStr += st_1;\n          for (var t in v.prototype) fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n        }\n      } else fnStr += st_1;\n    } else td[k] = v;\n  }\n  return [fnStr, td];\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n  var tl = [];\n  for (var k in v) {\n    if (v[k].buffer) {\n      tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n    }\n  }\n  return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n  var _a;\n  if (!ch[id]) {\n    var fnStr = '',\n      td_1 = {},\n      m = fns.length - 1;\n    for (var i = 0; i < m; ++i) _a = wcln(fns[i], fnStr, td_1), fnStr = _a[0], td_1 = _a[1];\n    ch[id] = wcln(fns[m], fnStr, td_1);\n  }\n  var td = mrg({}, ch[id][1]);\n  return wk(ch[id][0] + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () {\n  return [u8, u16, u32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gu8];\n};\nvar bDflt = function () {\n  return [u8, u16, u32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf];\n};\n// gzip extra\nvar gze = function () {\n  return [gzh, gzhl, wbytes, crc, crct];\n};\n// gunzip extra\nvar guze = function () {\n  return [gzs, gzl];\n};\n// zlib extra\nvar zle = function () {\n  return [zlh, wbytes, adler];\n};\n// unzlib extra\nvar zule = function () {\n  return [zlv];\n};\n// post buf\nvar pbf = function (msg) {\n  return postMessage(msg, [msg.buffer]);\n};\n// get u8\nvar gu8 = function (o) {\n  return o && o.size && new u8(o.size);\n};\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n  var w = wrkr(fns, init, id, function (err, dat) {\n    w.terminate();\n    cb(err, dat);\n  });\n  w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n  return function () {\n    w.terminate();\n  };\n};\n// auto stream\nvar astrm = function (strm) {\n  strm.ondata = function (dat, final) {\n    return postMessage([dat, final], [dat.buffer]);\n  };\n  return function (ev) {\n    return strm.push(ev.data[0], ev.data[1]);\n  };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id) {\n  var t;\n  var w = wrkr(fns, init, id, function (err, dat) {\n    if (err) w.terminate(), strm.ondata.call(strm, err);else {\n      if (dat[1]) w.terminate();\n      strm.ondata.call(strm, err, dat[0], dat[1]);\n    }\n  });\n  w.postMessage(opts);\n  strm.push = function (d, f) {\n    if (!strm.ondata) err(5);\n    if (t) strm.ondata(err(4, 0, 1), null, !!f);\n    w.postMessage([d, t = f], [d.buffer]);\n  };\n  strm.terminate = function () {\n    w.terminate();\n  };\n};\n// read 2 bytes\nvar b2 = function (d, b) {\n  return d[b] | d[b + 1] << 8;\n};\n// read 4 bytes\nvar b4 = function (d, b) {\n  return (d[b] | d[b + 1] << 8 | d[b + 2] << 16 | d[b + 3] << 24) >>> 0;\n};\nvar b8 = function (d, b) {\n  return b4(d, b) + b4(d, b + 4) * 4294967296;\n};\n// write bytes\nvar wbytes = function (d, b, v) {\n  for (; v; ++b) d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n  var fn = o.filename;\n  c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n  if (o.mtime != 0) wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n  if (fn) {\n    c[3] = 8;\n    for (var i = 0; i <= fn.length; ++i) c[i + 10] = fn.charCodeAt(i);\n  }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n  if (d[0] != 31 || d[1] != 139 || d[2] != 8) err(6, 'invalid gzip data');\n  var flg = d[3];\n  var st = 10;\n  if (flg & 4) st += d[10] | (d[11] << 8) + 2;\n  for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++]);\n  return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n  var l = d.length;\n  return (d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16 | d[l - 1] << 24) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) {\n  return 10 + (o.filename && o.filename.length + 1 || 0);\n};\n// zlib header\nvar zlh = function (c, o) {\n  var lv = o.level,\n    fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n  c[0] = 120, c[1] = fl << 6 | (fl ? 32 - 2 * fl : 1);\n};\n// zlib valid\nvar zlv = function (d) {\n  if ((d[0] & 15) != 8 || d[0] >>> 4 > 7 || (d[0] << 8 | d[1]) % 31) err(6, 'invalid zlib data');\n  if (d[1] & 32) err(6, 'invalid zlib data: preset dictionaries not supported');\n};\nfunction AsyncCmpStrm(opts, cb) {\n  if (!cb && typeof opts == 'function') cb = opts, opts = {};\n  this.ondata = cb;\n  return opts;\n}\n// zlib footer: -4 to -0 is Adler32\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/function () {\n  function Deflate(opts, cb) {\n    if (!cb && typeof opts == 'function') cb = opts, opts = {};\n    this.ondata = cb;\n    this.o = opts || {};\n  }\n  Deflate.prototype.p = function (c, f) {\n    this.ondata(dopt(c, this.o, 0, 0, !f), f);\n  };\n  /**\n   * Pushes a chunk to be deflated\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n  Deflate.prototype.push = function (chunk, final) {\n    if (!this.ondata) err(5);\n    if (this.d) err(4);\n    this.d = final;\n    this.p(chunk, final || false);\n  };\n  return Deflate;\n}();\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/function () {\n  function AsyncDeflate(opts, cb) {\n    astrmify([bDflt, function () {\n      return [astrm, Deflate];\n    }], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n      var strm = new Deflate(ev.data);\n      onmessage = astrm(strm);\n    }, 6);\n  }\n  return AsyncDeflate;\n}();\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  return cbify(data, opts, [bDflt], function (ev) {\n    return pbf(deflateSync(ev.data[0], ev.data[1]));\n  }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n  return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/function () {\n  /**\n   * Creates an inflation stream\n   * @param cb The callback to call whenever data is inflated\n   */\n  function Inflate(cb) {\n    this.s = {};\n    this.p = new u8(0);\n    this.ondata = cb;\n  }\n  Inflate.prototype.e = function (c) {\n    if (!this.ondata) err(5);\n    if (this.d) err(4);\n    var l = this.p.length;\n    var n = new u8(l + c.length);\n    n.set(this.p), n.set(c, l), this.p = n;\n  };\n  Inflate.prototype.c = function (final) {\n    this.d = this.s.i = final || false;\n    var bts = this.s.b;\n    var dt = inflt(this.p, this.o, this.s);\n    this.ondata(slc(dt, bts, this.s.b), this.d);\n    this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n    this.p = slc(this.p, this.s.p / 8 | 0), this.s.p &= 7;\n  };\n  /**\n   * Pushes a chunk to be inflated\n   * @param chunk The chunk to push\n   * @param final Whether this is the final chunk\n   */\n  Inflate.prototype.push = function (chunk, final) {\n    this.e(chunk), this.c(final);\n  };\n  return Inflate;\n}();\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/function () {\n  /**\n   * Creates an asynchronous inflation stream\n   * @param cb The callback to call whenever data is deflated\n   */\n  function AsyncInflate(cb) {\n    this.ondata = cb;\n    astrmify([bInflt, function () {\n      return [astrm, Inflate];\n    }], this, 0, function () {\n      var strm = new Inflate();\n      onmessage = astrm(strm);\n    }, 7);\n  }\n  return AsyncInflate;\n}();\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  return cbify(data, opts, [bInflt], function (ev) {\n    return pbf(inflateSync(ev.data[0], gu8(ev.data[1])));\n  }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, out) {\n  return inflt(data, out);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/function () {\n  function Gzip(opts, cb) {\n    this.c = crc();\n    this.l = 0;\n    this.v = 1;\n    Deflate.call(this, opts, cb);\n  }\n  /**\n   * Pushes a chunk to be GZIPped\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n  Gzip.prototype.push = function (chunk, final) {\n    Deflate.prototype.push.call(this, chunk, final);\n  };\n  Gzip.prototype.p = function (c, f) {\n    this.c.p(c);\n    this.l += c.length;\n    var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, !f);\n    if (this.v) gzh(raw, this.o), this.v = 0;\n    if (f) wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n    this.ondata(raw, f);\n  };\n  return Gzip;\n}();\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/function () {\n  function AsyncGzip(opts, cb) {\n    astrmify([bDflt, gze, function () {\n      return [astrm, Deflate, Gzip];\n    }], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n      var strm = new Gzip(ev.data);\n      onmessage = astrm(strm);\n    }, 8);\n  }\n  return AsyncGzip;\n}();\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  return cbify(data, opts, [bDflt, gze, function () {\n    return [gzipSync];\n  }], function (ev) {\n    return pbf(gzipSync(ev.data[0], ev.data[1]));\n  }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n  if (!opts) opts = {};\n  var c = crc(),\n    l = data.length;\n  c.p(data);\n  var d = dopt(data, opts, gzhl(opts), 8),\n    s = d.length;\n  return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/function () {\n  /**\n   * Creates a GUNZIP stream\n   * @param cb The callback to call whenever data is inflated\n   */\n  function Gunzip(cb) {\n    this.v = 1;\n    Inflate.call(this, cb);\n  }\n  /**\n   * Pushes a chunk to be GUNZIPped\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n  Gunzip.prototype.push = function (chunk, final) {\n    Inflate.prototype.e.call(this, chunk);\n    if (this.v) {\n      var s = this.p.length > 3 ? gzs(this.p) : 4;\n      if (s >= this.p.length && !final) return;\n      this.p = this.p.subarray(s), this.v = 0;\n    }\n    if (final) {\n      if (this.p.length < 8) err(6, 'invalid gzip data');\n      this.p = this.p.subarray(0, -8);\n    }\n    // necessary to prevent TS from using the closure value\n    // This allows for workerization to function correctly\n    Inflate.prototype.c.call(this, final);\n  };\n  return Gunzip;\n}();\nexport { Gunzip };\n/**\n * Asynchronous streaming GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/function () {\n  /**\n   * Creates an asynchronous GUNZIP stream\n   * @param cb The callback to call whenever data is deflated\n   */\n  function AsyncGunzip(cb) {\n    this.ondata = cb;\n    astrmify([bInflt, guze, function () {\n      return [astrm, Inflate, Gunzip];\n    }], this, 0, function () {\n      var strm = new Gunzip();\n      onmessage = astrm(strm);\n    }, 9);\n  }\n  return AsyncGunzip;\n}();\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  return cbify(data, opts, [bInflt, guze, function () {\n    return [gunzipSync];\n  }], function (ev) {\n    return pbf(gunzipSync(ev.data[0]));\n  }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param out Where to write the data. GZIP already encodes the output size, so providing this doesn't save memory.\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, out) {\n  return inflt(data.subarray(gzs(data), -8), out || new u8(gzl(data)));\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/function () {\n  function Zlib(opts, cb) {\n    this.c = adler();\n    this.v = 1;\n    Deflate.call(this, opts, cb);\n  }\n  /**\n   * Pushes a chunk to be zlibbed\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n  Zlib.prototype.push = function (chunk, final) {\n    Deflate.prototype.push.call(this, chunk, final);\n  };\n  Zlib.prototype.p = function (c, f) {\n    this.c.p(c);\n    var raw = dopt(c, this.o, this.v && 2, f && 4, !f);\n    if (this.v) zlh(raw, this.o), this.v = 0;\n    if (f) wbytes(raw, raw.length - 4, this.c.d());\n    this.ondata(raw, f);\n  };\n  return Zlib;\n}();\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/function () {\n  function AsyncZlib(opts, cb) {\n    astrmify([bDflt, zle, function () {\n      return [astrm, Deflate, Zlib];\n    }], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n      var strm = new Zlib(ev.data);\n      onmessage = astrm(strm);\n    }, 10);\n  }\n  return AsyncZlib;\n}();\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  return cbify(data, opts, [bDflt, zle, function () {\n    return [zlibSync];\n  }], function (ev) {\n    return pbf(zlibSync(ev.data[0], ev.data[1]));\n  }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n  if (!opts) opts = {};\n  var a = adler();\n  a.p(data);\n  var d = dopt(data, opts, 2, 4);\n  return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/function () {\n  /**\n   * Creates a Zlib decompression stream\n   * @param cb The callback to call whenever data is inflated\n   */\n  function Unzlib(cb) {\n    this.v = 1;\n    Inflate.call(this, cb);\n  }\n  /**\n   * Pushes a chunk to be unzlibbed\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n  Unzlib.prototype.push = function (chunk, final) {\n    Inflate.prototype.e.call(this, chunk);\n    if (this.v) {\n      if (this.p.length < 2 && !final) return;\n      this.p = this.p.subarray(2), this.v = 0;\n    }\n    if (final) {\n      if (this.p.length < 4) err(6, 'invalid zlib data');\n      this.p = this.p.subarray(0, -4);\n    }\n    // necessary to prevent TS from using the closure value\n    // This allows for workerization to function correctly\n    Inflate.prototype.c.call(this, final);\n  };\n  return Unzlib;\n}();\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/function () {\n  /**\n   * Creates an asynchronous Zlib decompression stream\n   * @param cb The callback to call whenever data is deflated\n   */\n  function AsyncUnzlib(cb) {\n    this.ondata = cb;\n    astrmify([bInflt, zule, function () {\n      return [astrm, Inflate, Unzlib];\n    }], this, 0, function () {\n      var strm = new Unzlib();\n      onmessage = astrm(strm);\n    }, 11);\n  }\n  return AsyncUnzlib;\n}();\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  return cbify(data, opts, [bInflt, zule, function () {\n    return [unzlibSync];\n  }], function (ev) {\n    return pbf(unzlibSync(ev.data[0], gu8(ev.data[1])));\n  }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, out) {\n  return inflt((zlv(data), data.subarray(2, -4)), out);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/function () {\n  /**\n   * Creates a decompression stream\n   * @param cb The callback to call whenever data is decompressed\n   */\n  function Decompress(cb) {\n    this.G = Gunzip;\n    this.I = Inflate;\n    this.Z = Unzlib;\n    this.ondata = cb;\n  }\n  /**\n   * Pushes a chunk to be decompressed\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n  Decompress.prototype.push = function (chunk, final) {\n    if (!this.ondata) err(5);\n    if (!this.s) {\n      if (this.p && this.p.length) {\n        var n = new u8(this.p.length + chunk.length);\n        n.set(this.p), n.set(chunk, this.p.length);\n      } else this.p = chunk;\n      if (this.p.length > 2) {\n        var _this_1 = this;\n        var cb = function () {\n          _this_1.ondata.apply(_this_1, arguments);\n        };\n        this.s = this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8 ? new this.G(cb) : (this.p[0] & 15) != 8 || this.p[0] >> 4 > 7 || (this.p[0] << 8 | this.p[1]) % 31 ? new this.I(cb) : new this.Z(cb);\n        this.s.push(this.p, final);\n        this.p = null;\n      }\n    } else this.s.push(chunk, final);\n  };\n  return Decompress;\n}();\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/function () {\n  /**\n  * Creates an asynchronous decompression stream\n  * @param cb The callback to call whenever data is decompressed\n  */\n  function AsyncDecompress(cb) {\n    this.G = AsyncGunzip;\n    this.I = AsyncInflate;\n    this.Z = AsyncUnzlib;\n    this.ondata = cb;\n  }\n  /**\n   * Pushes a chunk to be decompressed\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n  AsyncDecompress.prototype.push = function (chunk, final) {\n    Decompress.prototype.push.call(this, chunk, final);\n  };\n  return AsyncDecompress;\n}();\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  return data[0] == 31 && data[1] == 139 && data[2] == 8 ? gunzip(data, opts, cb) : (data[0] & 15) != 8 || data[0] >> 4 > 7 || (data[0] << 8 | data[1]) % 31 ? inflate(data, opts, cb) : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, out) {\n  return data[0] == 31 && data[1] == 139 && data[2] == 8 ? gunzipSync(data, out) : (data[0] & 15) != 8 || data[0] >> 4 > 7 || (data[0] << 8 | data[1]) % 31 ? inflateSync(data, out) : unzlibSync(data, out);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n  for (var k in d) {\n    var val = d[k],\n      n = p + k,\n      op = o;\n    if (Array.isArray(val)) op = mrg(o, val[1]), val = val[0];\n    if (val instanceof u8) t[n] = [val, op];else {\n      t[n += '/'] = [new u8(0), op];\n      fltn(val, n, t, o);\n    }\n  }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n  td.decode(et, {\n    stream: true\n  });\n  tds = 1;\n} catch (e) {}\n// decode UTF8\nvar dutf8 = function (d) {\n  for (var r = '', i = 0;;) {\n    var c = d[i++];\n    var eb = (c > 127) + (c > 223) + (c > 239);\n    if (i + eb > d.length) return [r, slc(d, i - 1)];\n    if (!eb) r += String.fromCharCode(c);else if (eb == 3) {\n      c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | d[i++] & 63) - 65536, r += String.fromCharCode(55296 | c >> 10, 56320 | c & 1023);\n    } else if (eb & 1) r += String.fromCharCode((c & 31) << 6 | d[i++] & 63);else r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | d[i++] & 63);\n  }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/function () {\n  /**\n   * Creates a UTF-8 decoding stream\n   * @param cb The callback to call whenever data is decoded\n   */\n  function DecodeUTF8(cb) {\n    this.ondata = cb;\n    if (tds) this.t = new TextDecoder();else this.p = et;\n  }\n  /**\n   * Pushes a chunk to be decoded from UTF-8 binary\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n  DecodeUTF8.prototype.push = function (chunk, final) {\n    if (!this.ondata) err(5);\n    final = !!final;\n    if (this.t) {\n      this.ondata(this.t.decode(chunk, {\n        stream: true\n      }), final);\n      if (final) {\n        if (this.t.decode().length) err(8);\n        this.t = null;\n      }\n      return;\n    }\n    if (!this.p) err(4);\n    var dat = new u8(this.p.length + chunk.length);\n    dat.set(this.p);\n    dat.set(chunk, this.p.length);\n    var _a = dutf8(dat),\n      ch = _a[0],\n      np = _a[1];\n    if (final) {\n      if (np.length) err(8);\n      this.p = null;\n    } else this.p = np;\n    this.ondata(ch, final);\n  };\n  return DecodeUTF8;\n}();\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/function () {\n  /**\n   * Creates a UTF-8 decoding stream\n   * @param cb The callback to call whenever data is encoded\n   */\n  function EncodeUTF8(cb) {\n    this.ondata = cb;\n  }\n  /**\n   * Pushes a chunk to be encoded to UTF-8\n   * @param chunk The string data to push\n   * @param final Whether this is the last chunk\n   */\n  EncodeUTF8.prototype.push = function (chunk, final) {\n    if (!this.ondata) err(5);\n    if (this.d) err(4);\n    this.ondata(strToU8(chunk), this.d = final || false);\n  };\n  return EncodeUTF8;\n}();\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n  if (latin1) {\n    var ar_1 = new u8(str.length);\n    for (var i = 0; i < str.length; ++i) ar_1[i] = str.charCodeAt(i);\n    return ar_1;\n  }\n  if (te) return te.encode(str);\n  var l = str.length;\n  var ar = new u8(str.length + (str.length >> 1));\n  var ai = 0;\n  var w = function (v) {\n    ar[ai++] = v;\n  };\n  for (var i = 0; i < l; ++i) {\n    if (ai + 5 > ar.length) {\n      var n = new u8(ai + 8 + (l - i << 1));\n      n.set(ar);\n      ar = n;\n    }\n    var c = str.charCodeAt(i);\n    if (c < 128 || latin1) w(c);else if (c < 2048) w(192 | c >> 6), w(128 | c & 63);else if (c > 55295 && c < 57344) c = 65536 + (c & 1023 << 10) | str.charCodeAt(++i) & 1023, w(240 | c >> 18), w(128 | c >> 12 & 63), w(128 | c >> 6 & 63), w(128 | c & 63);else w(224 | c >> 12), w(128 | c >> 6 & 63), w(128 | c & 63);\n  }\n  return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n  if (latin1) {\n    var r = '';\n    for (var i = 0; i < dat.length; i += 16384) r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n    return r;\n  } else if (td) return td.decode(dat);else {\n    var _a = dutf8(dat),\n      out = _a[0],\n      ext = _a[1];\n    if (ext.length) err(8);\n    return out;\n  }\n}\n;\n// deflate bit flag\nvar dbf = function (l) {\n  return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0;\n};\n// skip local zip header\nvar slzh = function (d, b) {\n  return b + 30 + b2(d, b + 26) + b2(d, b + 28);\n};\n// read zip header\nvar zh = function (d, b, z) {\n  var fnl = b2(d, b + 28),\n    fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)),\n    es = b + 46 + fnl,\n    bs = b4(d, b + 20);\n  var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)],\n    sc = _a[0],\n    su = _a[1],\n    off = _a[2];\n  return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n  for (; b2(d, b) != 1; b += 4 + b2(d, b + 2));\n  return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n  var le = 0;\n  if (ex) {\n    for (var k in ex) {\n      var l = ex[k].length;\n      if (l > 65535) err(9);\n      le += l + 4;\n    }\n  }\n  return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n  var fl = fn.length,\n    ex = f.extra,\n    col = co && co.length;\n  var exl = exfl(ex);\n  wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n  if (ce != null) d[b++] = 20, d[b++] = f.os;\n  d[b] = 20, b += 2; // spec compliance? what's that?\n  d[b++] = f.flag << 1 | (c == null && 8), d[b++] = u && 8;\n  d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n  var dt = new Date(f.mtime == null ? Date.now() : f.mtime),\n    y = dt.getFullYear() - 1980;\n  if (y < 0 || y > 119) err(10);\n  wbytes(d, b, y << 25 | dt.getMonth() + 1 << 21 | dt.getDate() << 16 | dt.getHours() << 11 | dt.getMinutes() << 5 | dt.getSeconds() >>> 1), b += 4;\n  if (c != null) {\n    wbytes(d, b, f.crc);\n    wbytes(d, b + 4, c);\n    wbytes(d, b + 8, f.size);\n  }\n  wbytes(d, b + 12, fl);\n  wbytes(d, b + 14, exl), b += 16;\n  if (ce != null) {\n    wbytes(d, b, col);\n    wbytes(d, b + 6, f.attrs);\n    wbytes(d, b + 10, ce), b += 14;\n  }\n  d.set(fn, b);\n  b += fl;\n  if (exl) {\n    for (var k in ex) {\n      var exf = ex[k],\n        l = exf.length;\n      wbytes(d, b, +k);\n      wbytes(d, b + 2, l);\n      d.set(exf, b + 4), b += 4 + l;\n    }\n  }\n  if (col) d.set(co, b), b += col;\n  return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n  wbytes(o, b, 0x6054B50); // skip disk\n  wbytes(o, b + 8, c);\n  wbytes(o, b + 10, c);\n  wbytes(o, b + 12, d);\n  wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/function () {\n  /**\n   * Creates a pass-through stream that can be added to ZIP archives\n   * @param filename The filename to associate with this data stream\n   */\n  function ZipPassThrough(filename) {\n    this.filename = filename;\n    this.c = crc();\n    this.size = 0;\n    this.compression = 0;\n  }\n  /**\n   * Processes a chunk and pushes to the output stream. You can override this\n   * method in a subclass for custom behavior, but by default this passes\n   * the data through. You must call this.ondata(err, chunk, final) at some\n   * point in this method.\n   * @param chunk The chunk to process\n   * @param final Whether this is the last chunk\n   */\n  ZipPassThrough.prototype.process = function (chunk, final) {\n    this.ondata(null, chunk, final);\n  };\n  /**\n   * Pushes a chunk to be added. If you are subclassing this with a custom\n   * compression algorithm, note that you must push data from the source\n   * file only, pre-compression.\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n  ZipPassThrough.prototype.push = function (chunk, final) {\n    if (!this.ondata) err(5);\n    this.c.p(chunk);\n    this.size += chunk.length;\n    if (final) this.crc = this.c.d();\n    this.process(chunk, final || false);\n  };\n  return ZipPassThrough;\n}();\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/function () {\n  /**\n   * Creates a DEFLATE stream that can be added to ZIP archives\n   * @param filename The filename to associate with this data stream\n   * @param opts The compression options\n   */\n  function ZipDeflate(filename, opts) {\n    var _this_1 = this;\n    if (!opts) opts = {};\n    ZipPassThrough.call(this, filename);\n    this.d = new Deflate(opts, function (dat, final) {\n      _this_1.ondata(null, dat, final);\n    });\n    this.compression = 8;\n    this.flag = dbf(opts.level);\n  }\n  ZipDeflate.prototype.process = function (chunk, final) {\n    try {\n      this.d.push(chunk, final);\n    } catch (e) {\n      this.ondata(e, null, final);\n    }\n  };\n  /**\n   * Pushes a chunk to be deflated\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n  ZipDeflate.prototype.push = function (chunk, final) {\n    ZipPassThrough.prototype.push.call(this, chunk, final);\n  };\n  return ZipDeflate;\n}();\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/function () {\n  /**\n   * Creates a DEFLATE stream that can be added to ZIP archives\n   * @param filename The filename to associate with this data stream\n   * @param opts The compression options\n   */\n  function AsyncZipDeflate(filename, opts) {\n    var _this_1 = this;\n    if (!opts) opts = {};\n    ZipPassThrough.call(this, filename);\n    this.d = new AsyncDeflate(opts, function (err, dat, final) {\n      _this_1.ondata(err, dat, final);\n    });\n    this.compression = 8;\n    this.flag = dbf(opts.level);\n    this.terminate = this.d.terminate;\n  }\n  AsyncZipDeflate.prototype.process = function (chunk, final) {\n    this.d.push(chunk, final);\n  };\n  /**\n   * Pushes a chunk to be deflated\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n  AsyncZipDeflate.prototype.push = function (chunk, final) {\n    ZipPassThrough.prototype.push.call(this, chunk, final);\n  };\n  return AsyncZipDeflate;\n}();\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/function () {\n  /**\n   * Creates an empty ZIP archive to which files can be added\n   * @param cb The callback to call whenever data for the generated ZIP archive\n   *           is available\n   */\n  function Zip(cb) {\n    this.ondata = cb;\n    this.u = [];\n    this.d = 1;\n  }\n  /**\n   * Adds a file to the ZIP archive\n   * @param file The file stream to add\n   */\n  Zip.prototype.add = function (file) {\n    var _this_1 = this;\n    if (!this.ondata) err(5);\n    // finishing or finished\n    if (this.d & 2) this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);else {\n      var f = strToU8(file.filename),\n        fl_1 = f.length;\n      var com = file.comment,\n        o = com && strToU8(com);\n      var u = fl_1 != file.filename.length || o && com.length != o.length;\n      var hl_1 = fl_1 + exfl(file.extra) + 30;\n      if (fl_1 > 65535) this.ondata(err(11, 0, 1), null, false);\n      var header = new u8(hl_1);\n      wzh(header, 0, file, f, u);\n      var chks_1 = [header];\n      var pAll_1 = function () {\n        for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n          var chk = chks_2[_i];\n          _this_1.ondata(null, chk, false);\n        }\n        chks_1 = [];\n      };\n      var tr_1 = this.d;\n      this.d = 0;\n      var ind_1 = this.u.length;\n      var uf_1 = mrg(file, {\n        f: f,\n        u: u,\n        o: o,\n        t: function () {\n          if (file.terminate) file.terminate();\n        },\n        r: function () {\n          pAll_1();\n          if (tr_1) {\n            var nxt = _this_1.u[ind_1 + 1];\n            if (nxt) nxt.r();else _this_1.d = 1;\n          }\n          tr_1 = 1;\n        }\n      });\n      var cl_1 = 0;\n      file.ondata = function (err, dat, final) {\n        if (err) {\n          _this_1.ondata(err, dat, final);\n          _this_1.terminate();\n        } else {\n          cl_1 += dat.length;\n          chks_1.push(dat);\n          if (final) {\n            var dd = new u8(16);\n            wbytes(dd, 0, 0x8074B50);\n            wbytes(dd, 4, file.crc);\n            wbytes(dd, 8, cl_1);\n            wbytes(dd, 12, file.size);\n            chks_1.push(dd);\n            uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n            if (tr_1) uf_1.r();\n            tr_1 = 1;\n          } else if (tr_1) pAll_1();\n        }\n      };\n      this.u.push(uf_1);\n    }\n  };\n  /**\n   * Ends the process of adding files and prepares to emit the final chunks.\n   * This *must* be called after adding all desired files for the resulting\n   * ZIP file to work properly.\n   */\n  Zip.prototype.end = function () {\n    var _this_1 = this;\n    if (this.d & 2) {\n      this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n      return;\n    }\n    if (this.d) this.e();else this.u.push({\n      r: function () {\n        if (!(_this_1.d & 1)) return;\n        _this_1.u.splice(-1, 1);\n        _this_1.e();\n      },\n      t: function () {}\n    });\n    this.d = 3;\n  };\n  Zip.prototype.e = function () {\n    var bt = 0,\n      l = 0,\n      tl = 0;\n    for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n      var f = _a[_i];\n      tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n    }\n    var out = new u8(tl + 22);\n    for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n      var f = _c[_b];\n      wzh(out, bt, f, f.f, f.u, f.c, l, f.o);\n      bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n    }\n    wzf(out, bt, this.u.length, tl, l);\n    this.ondata(null, out, true);\n    this.d = 2;\n  };\n  /**\n   * A method to terminate any internal workers used by the stream. Subsequent\n   * calls to add() will fail.\n   */\n  Zip.prototype.terminate = function () {\n    for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n      var f = _a[_i];\n      f.t();\n    }\n    this.d = 2;\n  };\n  return Zip;\n}();\nexport { Zip };\nexport function zip(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  var r = {};\n  fltn(data, '', r, opts);\n  var k = Object.keys(r);\n  var lft = k.length,\n    o = 0,\n    tot = 0;\n  var slft = lft,\n    files = new Array(lft);\n  var term = [];\n  var tAll = function () {\n    for (var i = 0; i < term.length; ++i) term[i]();\n  };\n  var cbd = function (a, b) {\n    mt(function () {\n      cb(a, b);\n    });\n  };\n  mt(function () {\n    cbd = cb;\n  });\n  var cbf = function () {\n    var out = new u8(tot + 22),\n      oe = o,\n      cdl = tot - o;\n    tot = 0;\n    for (var i = 0; i < slft; ++i) {\n      var f = files[i];\n      try {\n        var l = f.c.length;\n        wzh(out, tot, f, f.f, f.u, l);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        var loc = tot + badd;\n        out.set(f.c, loc);\n        wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n      } catch (e) {\n        return cbd(e, null);\n      }\n    }\n    wzf(out, o, files.length, cdl, oe);\n    cbd(null, out);\n  };\n  if (!lft) cbf();\n  var _loop_1 = function (i) {\n    var fn = k[i];\n    var _a = r[fn],\n      file = _a[0],\n      p = _a[1];\n    var c = crc(),\n      size = file.length;\n    c.p(file);\n    var f = strToU8(fn),\n      s = f.length;\n    var com = p.comment,\n      m = com && strToU8(com),\n      ms = m && m.length;\n    var exl = exfl(p.extra);\n    var compression = p.level == 0 ? 0 : 8;\n    var cbl = function (e, d) {\n      if (e) {\n        tAll();\n        cbd(e, null);\n      } else {\n        var l = d.length;\n        files[i] = mrg(p, {\n          size: size,\n          crc: c.d(),\n          c: d,\n          f: f,\n          m: m,\n          u: s != fn.length || m && com.length != ms,\n          compression: compression\n        });\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n        if (! --lft) cbf();\n      }\n    };\n    if (s > 65535) cbl(err(11, 0, 1), null);\n    if (!compression) cbl(null, file);else if (size < 160000) {\n      try {\n        cbl(null, deflateSync(file, p));\n      } catch (e) {\n        cbl(e, null);\n      }\n    } else term.push(deflate(file, p, cbl));\n  };\n  // Cannot use lft because it can decrease\n  for (var i = 0; i < slft; ++i) {\n    _loop_1(i);\n  }\n  return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n  if (!opts) opts = {};\n  var r = {};\n  var files = [];\n  fltn(data, '', r, opts);\n  var o = 0;\n  var tot = 0;\n  for (var fn in r) {\n    var _a = r[fn],\n      file = _a[0],\n      p = _a[1];\n    var compression = p.level == 0 ? 0 : 8;\n    var f = strToU8(fn),\n      s = f.length;\n    var com = p.comment,\n      m = com && strToU8(com),\n      ms = m && m.length;\n    var exl = exfl(p.extra);\n    if (s > 65535) err(11);\n    var d = compression ? deflateSync(file, p) : file,\n      l = d.length;\n    var c = crc();\n    c.p(file);\n    files.push(mrg(p, {\n      size: file.length,\n      crc: c.d(),\n      c: d,\n      f: f,\n      m: m,\n      u: s != fn.length || m && com.length != ms,\n      o: o,\n      compression: compression\n    }));\n    o += 30 + s + exl + l;\n    tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n  }\n  var out = new u8(tot + 22),\n    oe = o,\n    cdl = tot - o;\n  for (var i = 0; i < files.length; ++i) {\n    var f = files[i];\n    wzh(out, f.o, f, f.f, f.u, f.c.length);\n    var badd = 30 + f.f.length + exfl(f.extra);\n    out.set(f.c, f.o + badd);\n    wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n  }\n  wzf(out, o, files.length, cdl, oe);\n  return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/function () {\n  function UnzipPassThrough() {}\n  UnzipPassThrough.prototype.push = function (data, final) {\n    this.ondata(null, data, final);\n  };\n  UnzipPassThrough.compression = 0;\n  return UnzipPassThrough;\n}();\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/function () {\n  /**\n   * Creates a DEFLATE decompression that can be used in ZIP archives\n   */\n  function UnzipInflate() {\n    var _this_1 = this;\n    this.i = new Inflate(function (dat, final) {\n      _this_1.ondata(null, dat, final);\n    });\n  }\n  UnzipInflate.prototype.push = function (data, final) {\n    try {\n      this.i.push(data, final);\n    } catch (e) {\n      this.ondata(e, null, final);\n    }\n  };\n  UnzipInflate.compression = 8;\n  return UnzipInflate;\n}();\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/function () {\n  /**\n   * Creates a DEFLATE decompression that can be used in ZIP archives\n   */\n  function AsyncUnzipInflate(_, sz) {\n    var _this_1 = this;\n    if (sz < 320000) {\n      this.i = new Inflate(function (dat, final) {\n        _this_1.ondata(null, dat, final);\n      });\n    } else {\n      this.i = new AsyncInflate(function (err, dat, final) {\n        _this_1.ondata(err, dat, final);\n      });\n      this.terminate = this.i.terminate;\n    }\n  }\n  AsyncUnzipInflate.prototype.push = function (data, final) {\n    if (this.i.terminate) data = slc(data, 0);\n    this.i.push(data, final);\n  };\n  AsyncUnzipInflate.compression = 8;\n  return AsyncUnzipInflate;\n}();\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/function () {\n  /**\n   * Creates a ZIP decompression stream\n   * @param cb The callback to call whenever a file in the ZIP archive is found\n   */\n  function Unzip(cb) {\n    this.onfile = cb;\n    this.k = [];\n    this.o = {\n      0: UnzipPassThrough\n    };\n    this.p = et;\n  }\n  /**\n   * Pushes a chunk to be unzipped\n   * @param chunk The chunk to push\n   * @param final Whether this is the last chunk\n   */\n  Unzip.prototype.push = function (chunk, final) {\n    var _this_1 = this;\n    if (!this.onfile) err(5);\n    if (!this.p) err(4);\n    if (this.c > 0) {\n      var len = Math.min(this.c, chunk.length);\n      var toAdd = chunk.subarray(0, len);\n      this.c -= len;\n      if (this.d) this.d.push(toAdd, !this.c);else this.k[0].push(toAdd);\n      chunk = chunk.subarray(len);\n      if (chunk.length) return this.push(chunk, final);\n    } else {\n      var f = 0,\n        i = 0,\n        is = void 0,\n        buf = void 0;\n      if (!this.p.length) buf = chunk;else if (!chunk.length) buf = this.p;else {\n        buf = new u8(this.p.length + chunk.length);\n        buf.set(this.p), buf.set(chunk, this.p.length);\n      }\n      var l = buf.length,\n        oc = this.c,\n        add = oc && this.d;\n      var _loop_2 = function () {\n        var _a;\n        var sig = b4(buf, i);\n        if (sig == 0x4034B50) {\n          f = 1, is = i;\n          this_1.d = null;\n          this_1.c = 0;\n          var bf = b2(buf, i + 6),\n            cmp_1 = b2(buf, i + 8),\n            u = bf & 2048,\n            dd = bf & 8,\n            fnl = b2(buf, i + 26),\n            es = b2(buf, i + 28);\n          if (l > i + 30 + fnl + es) {\n            var chks_3 = [];\n            this_1.k.unshift(chks_3);\n            f = 2;\n            var sc_1 = b4(buf, i + 18),\n              su_1 = b4(buf, i + 22);\n            var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n            if (sc_1 == 4294967295) {\n              _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n            } else if (dd) sc_1 = -1;\n            i += es;\n            this_1.c = sc_1;\n            var d_1;\n            var file_1 = {\n              name: fn_1,\n              compression: cmp_1,\n              start: function () {\n                if (!file_1.ondata) err(5);\n                if (!sc_1) file_1.ondata(null, et, true);else {\n                  var ctr = _this_1.o[cmp_1];\n                  if (!ctr) file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                  d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                  d_1.ondata = function (err, dat, final) {\n                    file_1.ondata(err, dat, final);\n                  };\n                  for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                    var dat = chks_4[_i];\n                    d_1.push(dat, false);\n                  }\n                  if (_this_1.k[0] == chks_3 && _this_1.c) _this_1.d = d_1;else d_1.push(et, true);\n                }\n              },\n              terminate: function () {\n                if (d_1 && d_1.terminate) d_1.terminate();\n              }\n            };\n            if (sc_1 >= 0) file_1.size = sc_1, file_1.originalSize = su_1;\n            this_1.onfile(file_1);\n          }\n          return \"break\";\n        } else if (oc) {\n          if (sig == 0x8074B50) {\n            is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n            return \"break\";\n          } else if (sig == 0x2014B50) {\n            is = i -= 4, f = 3, this_1.c = 0;\n            return \"break\";\n          }\n        }\n      };\n      var this_1 = this;\n      for (; i < l - 4; ++i) {\n        var state_1 = _loop_2();\n        if (state_1 === \"break\") break;\n      }\n      this.p = et;\n      if (oc < 0) {\n        var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n        if (add) add.push(dat, !!f);else this.k[+(f == 2)].push(dat);\n      }\n      if (f & 2) return this.push(buf.subarray(i), final);\n      this.p = buf.subarray(i);\n    }\n    if (final) {\n      if (this.c) err(13);\n      this.p = null;\n    }\n  };\n  /**\n   * Registers a decoder with the stream, allowing for files compressed with\n   * the compression type provided to be expanded correctly\n   * @param decoder The decoder constructor\n   */\n  Unzip.prototype.register = function (decoder) {\n    this.o[decoder.compression] = decoder;\n  };\n  return Unzip;\n}();\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) {\n  fn();\n};\nexport function unzip(data, opts, cb) {\n  if (!cb) cb = opts, opts = {};\n  if (typeof cb != 'function') err(7);\n  var term = [];\n  var tAll = function () {\n    for (var i = 0; i < term.length; ++i) term[i]();\n  };\n  var files = {};\n  var cbd = function (a, b) {\n    mt(function () {\n      cb(a, b);\n    });\n  };\n  mt(function () {\n    cbd = cb;\n  });\n  var e = data.length - 22;\n  for (; b4(data, e) != 0x6054B50; --e) {\n    if (!e || data.length - e > 65558) {\n      cbd(err(13, 0, 1), null);\n      return tAll;\n    }\n  }\n  ;\n  var lft = b2(data, e + 8);\n  if (lft) {\n    var c = lft;\n    var o = b4(data, e + 16);\n    var z = o == 4294967295;\n    if (z) {\n      e = b4(data, e - 12);\n      if (b4(data, e) != 0x6064B50) {\n        cbd(err(13, 0, 1), null);\n        return tAll;\n      }\n      c = lft = b4(data, e + 32);\n      o = b4(data, e + 48);\n    }\n    var fltr = opts && opts.filter;\n    var _loop_3 = function (i) {\n      var _a = zh(data, o, z),\n        c_1 = _a[0],\n        sc = _a[1],\n        su = _a[2],\n        fn = _a[3],\n        no = _a[4],\n        off = _a[5],\n        b = slzh(data, off);\n      o = no;\n      var cbl = function (e, d) {\n        if (e) {\n          tAll();\n          cbd(e, null);\n        } else {\n          if (d) files[fn] = d;\n          if (! --lft) cbd(null, files);\n        }\n      };\n      if (!fltr || fltr({\n        name: fn,\n        size: sc,\n        originalSize: su,\n        compression: c_1\n      })) {\n        if (!c_1) cbl(null, slc(data, b, b + sc));else if (c_1 == 8) {\n          var infl = data.subarray(b, b + sc);\n          if (sc < 320000) {\n            try {\n              cbl(null, inflateSync(infl, new u8(su)));\n            } catch (e) {\n              cbl(e, null);\n            }\n          } else term.push(inflate(infl, {\n            size: su\n          }, cbl));\n        } else cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n      } else cbl(null, null);\n    };\n    for (var i = 0; i < c; ++i) {\n      _loop_3(i);\n    }\n  } else cbd(null, {});\n  return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n  var files = {};\n  var e = data.length - 22;\n  for (; b4(data, e) != 0x6054B50; --e) {\n    if (!e || data.length - e > 65558) err(13);\n  }\n  ;\n  var c = b2(data, e + 8);\n  if (!c) return {};\n  var o = b4(data, e + 16);\n  var z = o == 4294967295;\n  if (z) {\n    e = b4(data, e - 12);\n    if (b4(data, e) != 0x6064B50) err(13);\n    c = b4(data, e + 32);\n    o = b4(data, e + 48);\n  }\n  var fltr = opts && opts.filter;\n  for (var i = 0; i < c; ++i) {\n    var _a = zh(data, o, z),\n      c_2 = _a[0],\n      sc = _a[1],\n      su = _a[2],\n      fn = _a[3],\n      no = _a[4],\n      off = _a[5],\n      b = slzh(data, off);\n    o = no;\n    if (!fltr || fltr({\n      name: fn,\n      size: sc,\n      originalSize: su,\n      compression: c_2\n    })) {\n      if (!c_2) files[fn] = slc(data, b, b + sc);else if (c_2 == 8) files[fn] = inflateSync(data.subarray(b, b + sc), new u8(su));else err(14, 'unknown compression type ' + c_2);\n    }\n  }\n  return files;\n}","map":{"version":3,"names":["ch2","wk","c","id","msg","transfer","cb","w","Worker","URL","createObjectURL","Blob","type","onmessage","e","d","data","ed","$e$","err","Error","stack","postMessage","u8","Uint8Array","u16","Uint16Array","u32","Uint32Array","fleb","fdeb","clim","freb","eb","start","b","i","r","j","_a","fl","revfl","_b","fd","revfd","rev","x","hMap","cd","mb","s","length","l","le","co","rvb","sv","r_1","v","m","flt","fdt","flm","flrm","fdm","fdrm","max","a","bits","p","o","bits16","shft","slc","n","BYTES_PER_ELEMENT","set","subarray","FlateErrorCode","UnexpectedEOF","InvalidBlockType","InvalidLengthLiteral","InvalidDistance","StreamFinished","NoStreamHandler","InvalidHeader","NoCallback","InvalidUTF8","ExtraFieldTooLong","InvalidDate","FilenameTooLong","StreamFinishing","InvalidZipData","UnknownCompressionMethod","ec","ind","nt","code","captureStackTrace","inflt","dat","buf","st","sl","f","noBuf","noSt","cbuf","bl","nbuf","Math","final","pos","bt","lm","dm","lbt","dbt","tbts","t","hLit","hcLen","tl","ldt","clt","clb","clbmsk","clm","lt","dt","lms","dms","lpos","sym","add","dsym","end","wbits","wbits16","hTree","push","t2","slice","et","sort","i0","i1","i2","maxSym","tr","mbt","ln","lft","cst","i2_1","i2_2","i2_3","lc","cl","cli","cln","cls","clen","cf","wfblk","out","wblk","syms","lf","df","li","bs","dlt","mlb","ddt","mdb","_c","lclt","nlc","_d","lcdt","ndc","lcfreq","_e","lct","mlcb","nlcc","flen","ftlen","dtlen","ll","dl","llm","lcts","it","clct","len","dst","deo","dflt","lvl","plvl","pre","post","lst","ceil","opt","msk_1","prev","head","bs1_1","bs2_1","hsh","lc_1","wi","hv","imod","pimod","rem","ch_1","dif","maxn","min","maxd","ml","nl","mmd","md","ti","pti","lin","din","crct","Int32Array","k","crc","cr","adler","dopt","level","mem","log","mrg","wcln","fn","fnStr","td","toString","ks","indexOf","lastIndexOf","replace","split","st_1","prototype","spInd","ch","cbfs","buffer","constructor","wrkr","fns","init","td_1","bInflt","inflateSync","pbf","gu8","bDflt","deflateSync","gze","gzh","gzhl","wbytes","guze","gzs","gzl","zle","zlh","zule","zlv","size","cbify","opts","terminate","consume","astrm","strm","ondata","ev","astrmify","call","b2","b4","b8","filename","mtime","floor","Date","now","charCodeAt","flg","zs","lv","AsyncCmpStrm","Deflate","chunk","AsyncDeflate","deflate","Inflate","bts","AsyncInflate","inflate","Gzip","raw","AsyncGzip","gzip","gzipSync","Gunzip","AsyncGunzip","gunzip","gunzipSync","Zlib","AsyncZlib","zlib","zlibSync","Unzlib","AsyncUnzlib","unzlib","unzlibSync","compress","AsyncCompress","compressSync","Compress","Decompress","G","I","Z","_this_1","apply","arguments","AsyncDecompress","decompress","decompressSync","fltn","val","op","Array","isArray","te","TextEncoder","TextDecoder","tds","decode","stream","dutf8","String","fromCharCode","DecodeUTF8","np","EncodeUTF8","strToU8","str","latin1","ar_1","encode","ar","ai","strFromU8","ext","dbf","slzh","zh","z","fnl","es","z64e","sc","su","off","exfl","ex","wzh","u","ce","extra","col","exl","os","flag","compression","y","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","attrs","exf","wzf","ZipPassThrough","process","ZipDeflate","AsyncZipDeflate","Zip","file","fl_1","com","comment","hl_1","header","chks_1","pAll_1","_i","chks_2","chk","tr_1","ind_1","uf_1","nxt","cl_1","dd","splice","zip","Object","keys","tot","slft","files","term","tAll","cbd","mt","cbf","oe","cdl","badd","loc","_loop_1","ms","cbl","zipSync","UnzipPassThrough","UnzipInflate","AsyncUnzipInflate","_","sz","Unzip","onfile","toAdd","is","oc","_loop_2","sig","this_1","bf","cmp_1","chks_3","unshift","sc_1","su_1","fn_1","d_1","file_1","name","ctr","chks_4","originalSize","state_1","register","decoder","queueMicrotask","setTimeout","unzip","fltr","filter","_loop_3","c_1","no","infl","unzipSync","c_2"],"sources":["/root/vue-cornerstone-demo/node_modules/fflate/esm/browser.js"],"sourcesContent":["// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], { type: 'text/javascript' }))));\n    w.onmessage = function (e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err['code'] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        }\n        else\n            cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\n// see fleb note\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new u32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return [b, r];\n};\nvar _a = freb(fleb, 2), fl = _a[0], revfl = _a[1];\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b[0], revfd = _b[1];\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >>> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >>> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >>> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >>> 8) | ((x & 0x00FF) << 8)) >>> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 0; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >>> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >>> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    var n = new (v.BYTES_PER_ELEMENT == 2 ? u16 : v.BYTES_PER_ELEMENT == 4 ? u32 : u8)(e - s);\n    n.set(v.subarray(s, e));\n    return n;\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, buf, st) {\n    // source length\n    var sl = dat.length;\n    if (!sl || (st && st.f && !st.l))\n        return buf || new u8(0);\n    // have to estimate size\n    var noBuf = !buf || st;\n    // no state\n    var noSt = !st || st.i;\n    if (!st)\n        st = {};\n    // Assumes roughly 33% compression ratio average\n    if (!buf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (noBuf)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >>> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17;\n        if (noBuf)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >>> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & ((1 << b) - 1), pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (noBuf)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                for (; bt < end; bt += 4) {\n                    buf[bt] = buf[bt - dt];\n                    buf[bt + 1] = buf[bt + 1 - dt];\n                    buf[bt + 2] = buf[bt + 2 - dt];\n                    buf[bt + 3] = buf[bt + 3 - dt];\n                }\n                bt = end;\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    return bt == buf.length ? buf : slc(buf, 0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n    d[o + 2] |= v >>> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return [et, 0];\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return [v, 1];\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return [new u8(tr), mbt];\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return [cl.subarray(0, cli), s];\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >>> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a[0], mlb = _a[1];\n    var _b = hTree(df, 15), ddt = _b[0], mdb = _b[1];\n    var _c = lc(dlt), lclt = _c[0], nlc = _c[1];\n    var _d = lc(ddt), lcdt = _d[0], ndc = _d[1];\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        lcfreq[lclt[i] & 31]++;\n    for (var i = 0; i < lcdt.length; ++i)\n        lcfreq[lcdt[i] & 31]++;\n    var _e = hTree(lcfreq, 7), lct = _e[0], mlcb = _e[1];\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + (2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18]);\n    if (flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >>> 5) & 127), p += clct[i] >>> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        if (syms[i] > 255) {\n            var len = (syms[i] >>> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (syms[i] >>> 23) & 31), p += fleb[len];\n            var dst = syms[i] & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (syms[i] >>> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[syms[i]]), p += ll[syms[i]];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new u32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, lst) {\n    var s = dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var pos = 0;\n    if (!lvl || s < 8) {\n        for (var i = 0; i <= s; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[pos >> 3] = lst;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n    }\n    else {\n        var opt = deo[lvl - 1];\n        var n = opt >>> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = new u16(32768), head = new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new u32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index  l/lind  waitdx  bitpos\n        var lc_1 = 0, eb = 0, i = 0, li = 0, wi = 0, bs = 0;\n        for (; i < s; ++i) {\n            // hash value\n            // deopt when i > s - 3 - at end, deopt acceptable\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && rem > 423) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = (imod - pimod) & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = (i - dif + j + 32768) & 32767;\n                                    var pti = prev[ti];\n                                    var cd = (ti - pti + 32768) & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += (imod - pimod + 32768) & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one Uint32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        // this is the easiest way to avoid needing to maintain state\n        if (!lst && pos & 7)\n            pos = wfblk(w, pos + 1, et);\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Alder32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a >>> 8) << 16 | (b & 255) << 8 | (b >>> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : (12 + opt.mem), pre, post, !st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return [fnStr, td];\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    var _a;\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            _a = wcln(fns[i], fnStr, td_1), fnStr = _a[0], td_1 = _a[1];\n        ch[id] = wcln(fns[m], fnStr, td_1);\n    }\n    var td = mrg({}, ch[id][1]);\n    return wk(ch[id][0] + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, u32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gu8]; };\nvar bDflt = function () { return [u8, u16, u32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zlv]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get u8\nvar gu8 = function (o) { return o && o.size && new u8(o.size); };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) { return strm.push(ev.data[0], ev.data[1]); };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += d[10] | (d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return ((d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16) | (d[l - 1] << 24)) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + ((o.filename && (o.filename.length + 1)) || 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (fl ? (32 - 2 * fl) : 1);\n};\n// zlib valid\nvar zlv = function (d) {\n    if ((d[0] & 15) != 8 || (d[0] >>> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if (d[1] & 32)\n        err(6, 'invalid zlib data: preset dictionaries not supported');\n};\nfunction AsyncCmpStrm(opts, cb) {\n    if (!cb && typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n// zlib footer: -4 to -0 is Adler32\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (!cb && typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, !f), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.d = final;\n        this.p(chunk, final || false);\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an inflation stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Inflate(cb) {\n        this.s = {};\n        this.p = new u8(0);\n        this.ondata = cb;\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        var l = this.p.length;\n        var n = new u8(l + c.length);\n        n.set(this.p), n.set(c, l), this.p = n;\n    };\n    Inflate.prototype.c = function (final) {\n        this.d = this.s.i = final || false;\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.o, this.s);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous inflation stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncInflate(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, 0, function () {\n            var strm = new Inflate();\n            onmessage = astrm(strm);\n        }, 7);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gu8(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, out) {\n    return inflt(data, out);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        this.c.p(c);\n        this.l += c.length;\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, !f);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a GUNZIP stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Gunzip(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            var s = this.p.length > 3 ? gzs(this.p) : 4;\n            if (s >= this.p.length && !final)\n                return;\n            this.p = this.p.subarray(s), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 8)\n                err(6, 'invalid gzip data');\n            this.p = this.p.subarray(0, -8);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous GUNZIP stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncGunzip(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, 0, function () {\n            var strm = new Gunzip();\n            onmessage = astrm(strm);\n        }, 9);\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param out Where to write the data. GZIP already encodes the output size, so providing this doesn't save memory.\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, out) {\n    return inflt(data.subarray(gzs(data), -8), out || new u8(gzl(data)));\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        this.c.p(c);\n        var raw = dopt(c, this.o, this.v && 2, f && 4, !f);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates a Zlib decompression stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Unzlib(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 2 && !final)\n                return;\n            this.p = this.p.subarray(2), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous Zlib decompression stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncUnzlib(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, 0, function () {\n            var strm = new Unzlib();\n            onmessage = astrm(strm);\n        }, 11);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gu8(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, out) {\n    return inflt((zlv(data), data.subarray(2, -4)), out);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    /**\n     * Creates a decompression stream\n     * @param cb The callback to call whenever data is decompressed\n     */\n    function Decompress(cb) {\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                var _this_1 = this;\n                var cb = function () { _this_1.ondata.apply(_this_1, arguments); };\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(cb)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(cb)\n                        : new this.Z(cb);\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    /**\n   * Creates an asynchronous decompression stream\n   * @param cb The callback to call whenever data is decompressed\n   */\n    function AsyncDecompress(cb) {\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, out) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, out)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, out)\n            : unzlibSync(data, out);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return [r, slc(d, i - 1)];\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), ch = _a[0], np = _a[1];\n        if (final) {\n            if (np.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = np;\n        this.ondata(ch, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td)\n        return td.decode(dat);\n    else {\n        var _a = dutf8(dat), out = _a[0], ext = _a[1];\n        if (ext.length)\n            err(8);\n        return out;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c == null && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >>> 1)), b += 4;\n    if (c != null) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this_1.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this_1 = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this_1.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this_1.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this_1.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this_1.ondata(err, dat, final);\n                    _this_1.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this_1 = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this_1.d & 1))\n                        return;\n                    _this_1.u.splice(-1, 1);\n                    _this_1.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, f.c, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this_1 = this;\n        this.i = new Inflate(function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this_1 = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this_1.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this_1.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this_1 = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this_1.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this_1.k[0] == chks_3 && _this_1.c)\n                                        _this_1.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295;\n        if (z) {\n            e = b4(data, e - 12);\n            if (b4(data, e) != 0x6064B50) {\n                cbd(err(13, 0, 1), null);\n                return tAll;\n            }\n            c = lft = b4(data, e + 32);\n            o = b4(data, e + 48);\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    if (sc < 320000) {\n                        try {\n                            cbl(null, inflateSync(infl, new u8(su)));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295;\n    if (z) {\n        e = b4(data, e - 12);\n        if (b4(data, e) != 0x6064B50)\n            err(13);\n        c = b4(data, e + 32);\n        o = b4(data, e + 48);\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), new u8(su));\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}