import { Types } from '@cornerstonejs/core';
export declare class LivewireScissors {
    private searchGranularityBits;
    private searchGranularity;
    readonly width: number;
    readonly height: number;
    private grayscalePixelData;
    private laplace;
    private gradMagnitude;
    private gradXNew;
    private gradYNew;
    private startPoint;
    private visited;
    private parents;
    private costs;
    private priorityQueueNew;
    constructor(grayscalePixelData: Types.PixelDataTypedArray, width: number, height: number);
    startSearch(startPoint: Types.Point2): void;
    findMinNearby(testPoint: Types.Point2, delta?: number): Types.Point2;
    findPathToPoint(targetPoint: Types.Point2): Types.Point2[];
    private _getPointIndex;
    private _getPointCoordinate;
    private _getDeltaX;
    private _getDeltaY;
    private _getGradientMagnitude;
    private _getLaplace;
    private _computeGradient;
    private _computeLaplace;
    private _computeGradientX;
    private _computeGradientY;
    private _getGradientUnitVector;
    private _getGradientDirection;
    getCost(pointA: any, pointB: any): number;
    private _getWeightedDistance;
    private _getNeighborPoints;
    private _getPointCost;
    static createInstanceFromRawPixelData(pixelData: Float32Array, width: number, height: number, voiRange: Types.VOIRange): LivewireScissors;
}
