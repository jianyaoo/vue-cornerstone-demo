{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Contour from './Contour';\nexport class ContourSet {\n  constructor(props) {\n    this.color = [200, 0, 0];\n    this.id = props.id;\n    this.contours = [];\n    this.color = props.color ?? this.color;\n    this.frameOfReferenceUID = props.frameOfReferenceUID;\n    this.segmentIndex = props.segmentIndex;\n    this._createEachContour(props.data);\n    this.sizeInBytes = this._getSizeInBytes();\n  }\n  _createEachContour(contourDataArray) {\n    contourDataArray.forEach(contourData => {\n      const {\n        points,\n        type,\n        color\n      } = contourData;\n      const contour = new Contour({\n        id: `${this.id}-segment-${this.segmentIndex}`,\n        data: {\n          points,\n          type,\n          segmentIndex: this.segmentIndex,\n          color: color ?? this.color\n        },\n        segmentIndex: this.segmentIndex,\n        color: color ?? this.color\n      });\n      this.contours.push(contour);\n    });\n    this._updateContourSetCentroid();\n  }\n  _updateContourSetCentroid() {\n    const numberOfPoints = this.getTotalNumberOfPoints();\n    const flatPointsArray = this.getFlatPointsArray();\n    const sumOfPoints = flatPointsArray.reduce((acc, point) => {\n      return [acc[0] + point[0], acc[1] + point[1], acc[2] + point[2]];\n    }, [0, 0, 0]);\n    const centroid = [sumOfPoints[0] / numberOfPoints, sumOfPoints[1] / numberOfPoints, sumOfPoints[2] / numberOfPoints];\n    const closestPoint = flatPointsArray.reduce((closestPoint, point) => {\n      const distanceToPoint = this._getDistance(centroid, point);\n      const distanceToClosestPoint = this._getDistance(centroid, closestPoint);\n      if (distanceToPoint < distanceToClosestPoint) {\n        return point;\n      } else {\n        return closestPoint;\n      }\n    }, flatPointsArray[0]);\n    this.centroid = closestPoint;\n  }\n  _getSizeInBytes() {\n    return this.contours.reduce((sizeInBytes, contour) => {\n      return sizeInBytes + contour.sizeInBytes;\n    }, 0);\n  }\n  getCentroid() {\n    return this.centroid;\n  }\n  getSegmentIndex() {\n    return this.segmentIndex;\n  }\n  getColor() {\n    return this.color;\n  }\n  getContours() {\n    return this.contours;\n  }\n  getSizeInBytes() {\n    return this.sizeInBytes;\n  }\n  getFlatPointsArray() {\n    return this.contours.map(contour => contour.getPoints()).flat();\n  }\n  getNumberOfContours() {\n    return this.contours.length;\n  }\n  getTotalNumberOfPoints() {\n    return this.contours.reduce((numberOfPoints, contour) => {\n      return numberOfPoints + contour.getPoints().length;\n    }, 0);\n  }\n  getNumberOfPointsArray() {\n    return this.contours.reduce((acc, _, i) => {\n      acc[i] = this.getNumberOfPointsInAContour(i);\n      return acc;\n    }, []);\n  }\n  getPointsInContour(contourIndex) {\n    return this.contours[contourIndex].getPoints();\n  }\n  getNumberOfPointsInAContour(contourIndex) {\n    return this.getPointsInContour(contourIndex).length;\n  }\n  _getDistance(pointA, pointB) {\n    return Math.sqrt((pointA[0] - pointB[0]) ** 2 + (pointA[1] - pointB[1]) ** 2 + (pointA[2] - pointB[2]) ** 2);\n  }\n}\nexport default Contour;","map":{"version":3,"names":["Contour","ContourSet","constructor","props","color","id","contours","frameOfReferenceUID","segmentIndex","_createEachContour","data","sizeInBytes","_getSizeInBytes","contourDataArray","forEach","contourData","points","type","contour","push","_updateContourSetCentroid","numberOfPoints","getTotalNumberOfPoints","flatPointsArray","getFlatPointsArray","sumOfPoints","reduce","acc","point","centroid","closestPoint","distanceToPoint","_getDistance","distanceToClosestPoint","getCentroid","getSegmentIndex","getColor","getContours","getSizeInBytes","map","getPoints","flat","getNumberOfContours","length","getNumberOfPointsArray","_","i","getNumberOfPointsInAContour","getPointsInContour","contourIndex","pointA","pointB","Math","sqrt"],"sources":["../../../../src/cache/classes/ContourSet.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}