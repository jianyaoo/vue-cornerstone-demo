{"ast":null,"code":"class RectangleROIStartEndThreshold {\n  constructor() {}\n  static getContourSequence(toolData, metadataProvider) {\n    const {\n      data\n    } = toolData;\n    const {\n      projectionPoints,\n      projectionPointsImageIds\n    } = data.cachedStats;\n    return projectionPoints.map((point, index) => {\n      const ContourData = getPointData(point);\n      const ContourImageSequence = getContourImageSequence(projectionPointsImageIds[index], metadataProvider);\n      return {\n        NumberOfContourPoints: ContourData.length / 3,\n        ContourImageSequence,\n        ContourGeometricType: 'CLOSED_PLANAR',\n        ContourData\n      };\n    });\n  }\n}\nRectangleROIStartEndThreshold.toolName = 'RectangleROIStartEndThreshold';\nfunction getPointData(points) {\n  const orderedPoints = [...points[0], ...points[1], ...points[3], ...points[2]];\n  const pointsArray = orderedPoints.flat();\n  const pointsArrayWithPrecision = pointsArray.map(point => {\n    return point.toFixed(2);\n  });\n  return pointsArrayWithPrecision;\n}\nfunction getContourImageSequence(imageId, metadataProvider) {\n  const sopCommon = metadataProvider.get('sopCommonModule', imageId);\n  return {\n    ReferencedSOPClassUID: sopCommon.sopClassUID,\n    ReferencedSOPInstanceUID: sopCommon.sopInstanceUID\n  };\n}\nexport default RectangleROIStartEndThreshold;","map":{"version":3,"names":["RectangleROIStartEndThreshold","constructor","getContourSequence","toolData","metadataProvider","data","projectionPoints","projectionPointsImageIds","cachedStats","map","point","index","ContourData","getPointData","ContourImageSequence","getContourImageSequence","NumberOfContourPoints","length","ContourGeometricType","toolName","points","orderedPoints","pointsArray","flat","pointsArrayWithPrecision","toFixed","imageId","sopCommon","get","ReferencedSOPClassUID","sopClassUID","ReferencedSOPInstanceUID","sopInstanceUID"],"sources":["../../../../src/utilities/contours/RectangleROIStartEndThreshold.ts"],"sourcesContent":[null],"mappings":"AACA,MAAMA,6BAA6B;EAGjCC,YAAA,GAEA;EAEA,OAAOC,kBAAkBA,CAACC,QAAQ,EAAEC,gBAAgB;IAClD,MAAM;MAAEC;IAAI,CAAE,GAAGF,QAAQ;IACzB,MAAM;MAAEG,gBAAgB;MAAEC;IAAwB,CAAE,GAAGF,IAAI,CAACG,WAAW;IAEvE,OAAOF,gBAAgB,CAACG,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAI;MAC3C,MAAMC,WAAW,GAAGC,YAAY,CAACH,KAAK,CAAC;MACvC,MAAMI,oBAAoB,GAAGC,uBAAuB,CAClDR,wBAAwB,CAACI,KAAK,CAAC,EAC/BP,gBAAgB,CACjB;MAED,OAAO;QACLY,qBAAqB,EAAEJ,WAAW,CAACK,MAAM,GAAG,CAAC;QAC7CH,oBAAoB;QACpBI,oBAAoB,EAAE,eAAe;QACrCN;OACD;IACH,CAAC,CAAC;EACJ;;AAGFZ,6BAA6B,CAACmB,QAAQ,GAAG,+BAA+B;AAExE,SAASN,YAAYA,CAACO,MAAM;EAI1B,MAAMC,aAAa,GAAG,CACpB,GAAGD,MAAM,CAAC,CAAC,CAAC,EACZ,GAAGA,MAAM,CAAC,CAAC,CAAC,EACZ,GAAGA,MAAM,CAAC,CAAC,CAAC,EACZ,GAAGA,MAAM,CAAC,CAAC,CAAC,CACb;EACD,MAAME,WAAW,GAAGD,aAAa,CAACE,IAAI,EAAE;EAGxC,MAAMC,wBAAwB,GAAGF,WAAW,CAACb,GAAG,CAAEC,KAAK,IAAI;IACzD,OAAOA,KAAK,CAACe,OAAO,CAAC,CAAC,CAAC;EACzB,CAAC,CAAC;EAEF,OAAOD,wBAAwB;AACjC;AAEA,SAAST,uBAAuBA,CAACW,OAAO,EAAEtB,gBAAgB;EACxD,MAAMuB,SAAS,GAAGvB,gBAAgB,CAACwB,GAAG,CAAC,iBAAiB,EAAEF,OAAO,CAAC;EAElE,OAAO;IACLG,qBAAqB,EAAEF,SAAS,CAACG,WAAW;IAC5CC,wBAAwB,EAAEJ,SAAS,CAACK;GACrC;AACH;AACA,eAAehC,6BAA6B"},"metadata":{},"sourceType":"module","externalDependencies":[]}