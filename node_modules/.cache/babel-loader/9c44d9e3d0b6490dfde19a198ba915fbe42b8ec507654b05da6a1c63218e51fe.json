{"ast":null,"code":"import { vec3 } from 'gl-matrix';\nimport { getRenderingEngines, CONSTANTS, utilities as csUtils } from '@cornerstonejs/core';\nimport { addAnnotation } from '../stateManagement/annotation/annotationState';\nimport { drawLine as drawLineSvg } from '../drawingSvg';\nimport { filterViewportsWithToolEnabled } from '../utilities/viewportFilters';\nimport triggerAnnotationRenderForViewportIds from '../utilities/triggerAnnotationRenderForViewportIds';\nimport AnnotationDisplayTool from './base/AnnotationDisplayTool';\nconst {\n  EPSILON\n} = CONSTANTS;\nclass ReferenceLines extends AnnotationDisplayTool {\n  constructor(toolProps = {}, defaultToolProps = {\n    supportedInteractionTypes: ['Mouse', 'Touch'],\n    configuration: {\n      sourceViewportId: '',\n      showFullDimension: false\n    }\n  }) {\n    super(toolProps, defaultToolProps);\n    this.editData = {};\n    this._init = () => {\n      const renderingEngines = getRenderingEngines();\n      const renderingEngine = renderingEngines[0];\n      if (!renderingEngine) {\n        return;\n      }\n      let viewports = renderingEngine.getViewports();\n      viewports = filterViewportsWithToolEnabled(viewports, this.getToolName());\n      const sourceViewport = renderingEngine.getViewport(this.configuration.sourceViewportId);\n      if (!sourceViewport || !sourceViewport.getImageData()) {\n        return;\n      }\n      const {\n        element\n      } = sourceViewport;\n      const {\n        viewUp,\n        viewPlaneNormal\n      } = sourceViewport.getCamera();\n      const sourceViewportCanvasCornersInWorld = csUtils.getViewportImageCornersInWorld(sourceViewport);\n      let annotation = this.editData.annotation;\n      const FrameOfReferenceUID = sourceViewport.getFrameOfReferenceUID();\n      if (!annotation) {\n        const newAnnotation = {\n          highlighted: true,\n          invalidated: true,\n          metadata: {\n            toolName: this.getToolName(),\n            viewPlaneNormal: [...viewPlaneNormal],\n            viewUp: [...viewUp],\n            FrameOfReferenceUID,\n            referencedImageId: null\n          },\n          data: {\n            handles: {\n              points: sourceViewportCanvasCornersInWorld\n            }\n          }\n        };\n        addAnnotation(newAnnotation, element);\n        annotation = newAnnotation;\n      } else {\n        this.editData.annotation.data.handles.points = sourceViewportCanvasCornersInWorld;\n      }\n      this.editData = {\n        sourceViewport,\n        renderingEngine,\n        annotation\n      };\n      triggerAnnotationRenderForViewportIds(renderingEngine, viewports.filter(viewport => viewport.id !== sourceViewport.id).map(viewport => viewport.id));\n    };\n    this.onSetToolEnabled = () => {\n      this._init();\n    };\n    this.onCameraModified = evt => {\n      this._init();\n    };\n    this.renderAnnotation = (enabledElement, svgDrawingHelper) => {\n      const {\n        viewport: targetViewport\n      } = enabledElement;\n      const {\n        annotation,\n        sourceViewport\n      } = this.editData;\n      let renderStatus = false;\n      if (!sourceViewport) {\n        return renderStatus;\n      }\n      if (sourceViewport.id === targetViewport.id) {\n        return renderStatus;\n      }\n      if (!annotation || !annotation?.data?.handles?.points) {\n        return renderStatus;\n      }\n      const styleSpecifier = {\n        toolGroupId: this.toolGroupId,\n        toolName: this.getToolName(),\n        viewportId: enabledElement.viewport.id\n      };\n      const topLeft = annotation.data.handles.points[0];\n      const topRight = annotation.data.handles.points[1];\n      const bottomLeft = annotation.data.handles.points[2];\n      const bottomRight = annotation.data.handles.points[3];\n      const {\n        focalPoint,\n        viewPlaneNormal,\n        viewUp\n      } = targetViewport.getCamera();\n      const {\n        viewPlaneNormal: sourceViewPlaneNormal\n      } = sourceViewport.getCamera();\n      if (this.isParallel(viewPlaneNormal, sourceViewPlaneNormal)) {\n        return renderStatus;\n      }\n      const targetViewportPlane = csUtils.planar.planeEquation(viewPlaneNormal, focalPoint);\n      const pointSet1 = [topLeft, bottomLeft, topRight, bottomRight];\n      const pointSet2 = [topLeft, topRight, bottomLeft, bottomRight];\n      let pointSetToUse = pointSet1;\n      let topBottomVec = vec3.subtract(vec3.create(), pointSet1[0], pointSet1[1]);\n      topBottomVec = vec3.normalize(vec3.create(), topBottomVec);\n      let topRightVec = vec3.subtract(vec3.create(), pointSet1[2], pointSet1[0]);\n      topRightVec = vec3.normalize(vec3.create(), topRightVec);\n      const newNormal = vec3.cross(vec3.create(), topBottomVec, topRightVec);\n      if (this.isParallel(newNormal, viewPlaneNormal)) {\n        return renderStatus;\n      }\n      if (this.isPerpendicular(topBottomVec, viewPlaneNormal)) {\n        pointSetToUse = pointSet2;\n      }\n      const lineStartWorld = csUtils.planar.linePlaneIntersection(pointSetToUse[0], pointSetToUse[1], targetViewportPlane);\n      const lineEndWorld = csUtils.planar.linePlaneIntersection(pointSetToUse[2], pointSetToUse[3], targetViewportPlane);\n      const {\n        annotationUID\n      } = annotation;\n      styleSpecifier.annotationUID = annotationUID;\n      const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n      const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n      const color = this.getStyle('color', styleSpecifier, annotation);\n      const shadow = this.getStyle('shadow', styleSpecifier, annotation);\n      let canvasCoordinates = [lineStartWorld, lineEndWorld].map(world => targetViewport.worldToCanvas(world));\n      if (this.configuration.showFullDimension) {\n        canvasCoordinates = this.handleFullDimension(targetViewport, lineStartWorld, viewPlaneNormal, viewUp, lineEndWorld, canvasCoordinates);\n      }\n      const dataId = `${annotationUID}-line`;\n      const lineUID = '1';\n      drawLineSvg(svgDrawingHelper, annotationUID, lineUID, canvasCoordinates[0], canvasCoordinates[1], {\n        color,\n        width: lineWidth,\n        lineDash,\n        shadow\n      }, dataId);\n      renderStatus = true;\n      return renderStatus;\n    };\n    this.isPerpendicular = (vec1, vec2) => {\n      const dot = vec3.dot(vec1, vec2);\n      return Math.abs(dot) < EPSILON;\n    };\n  }\n  handleFullDimension(targetViewport, lineStartWorld, viewPlaneNormal, viewUp, lineEndWorld, canvasCoordinates) {\n    const renderingEngine = targetViewport.getRenderingEngine();\n    const targetId = this.getTargetId(targetViewport);\n    const targetImage = this.getTargetIdImage(targetId, renderingEngine);\n    const referencedImageId = this.getReferencedImageId(targetViewport, lineStartWorld, viewPlaneNormal, viewUp);\n    if (referencedImageId && targetImage) {\n      try {\n        const {\n          imageData,\n          dimensions\n        } = targetImage;\n        const [topLeftImageCoord, topRightImageCoord, bottomRightImageCoord, bottomLeftImageCoord] = [imageData.indexToWorld([0, 0, 0]), imageData.indexToWorld([dimensions[0] - 1, 0, 0]), imageData.indexToWorld([dimensions[0] - 1, dimensions[1] - 1, 0]), imageData.indexToWorld([0, dimensions[1] - 1, 0])].map(world => csUtils.worldToImageCoords(referencedImageId, world));\n        const [lineStartImageCoord, lineEndImageCoord] = [lineStartWorld, lineEndWorld].map(world => csUtils.worldToImageCoords(referencedImageId, world));\n        canvasCoordinates = [[topLeftImageCoord, topRightImageCoord], [topRightImageCoord, bottomRightImageCoord], [bottomLeftImageCoord, bottomRightImageCoord], [topLeftImageCoord, bottomLeftImageCoord]].map(([start, end]) => this.intersectInfiniteLines(start, end, lineStartImageCoord, lineEndImageCoord)).filter(point => point && this.isInBound(point, dimensions)).map(point => {\n          const world = csUtils.imageToWorldCoords(referencedImageId, point);\n          return targetViewport.worldToCanvas(world);\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    return canvasCoordinates;\n  }\n  intersectInfiniteLines(line1Start, line1End, line2Start, line2End) {\n    const [x1, y1] = line1Start;\n    const [x2, y2] = line1End;\n    const [x3, y3] = line2Start;\n    const [x4, y4] = line2End;\n    const a1 = y2 - y1;\n    const b1 = x1 - x2;\n    const c1 = x2 * y1 - x1 * y2;\n    const a2 = y4 - y3;\n    const b2 = x3 - x4;\n    const c2 = x4 * y3 - x3 * y4;\n    if (Math.abs(a1 * b2 - a2 * b1) < EPSILON) {\n      return;\n    }\n    const x = (b1 * c2 - b2 * c1) / (a1 * b2 - a2 * b1);\n    const y = (a2 * c1 - a1 * c2) / (a1 * b2 - a2 * b1);\n    return [x, y];\n  }\n  isParallel(vec1, vec2) {\n    return Math.abs(vec3.dot(vec1, vec2)) > 1 - EPSILON;\n  }\n  isInBound(point, dimensions) {\n    return point[0] >= 0 && point[0] <= dimensions[0] && point[1] >= 0 && point[1] <= dimensions[1];\n  }\n}\nReferenceLines.toolName = 'ReferenceLines';\nexport default ReferenceLines;","map":{"version":3,"names":["vec3","getRenderingEngines","CONSTANTS","utilities","csUtils","addAnnotation","drawLine","drawLineSvg","filterViewportsWithToolEnabled","triggerAnnotationRenderForViewportIds","AnnotationDisplayTool","EPSILON","ReferenceLines","constructor","toolProps","defaultToolProps","supportedInteractionTypes","configuration","sourceViewportId","showFullDimension","editData","_init","renderingEngines","renderingEngine","viewports","getViewports","getToolName","sourceViewport","getViewport","getImageData","element","viewUp","viewPlaneNormal","getCamera","sourceViewportCanvasCornersInWorld","getViewportImageCornersInWorld","annotation","FrameOfReferenceUID","getFrameOfReferenceUID","newAnnotation","highlighted","invalidated","metadata","toolName","referencedImageId","data","handles","points","filter","viewport","id","map","onSetToolEnabled","onCameraModified","evt","renderAnnotation","enabledElement","svgDrawingHelper","targetViewport","renderStatus","styleSpecifier","toolGroupId","viewportId","topLeft","topRight","bottomLeft","bottomRight","focalPoint","sourceViewPlaneNormal","isParallel","targetViewportPlane","planar","planeEquation","pointSet1","pointSet2","pointSetToUse","topBottomVec","subtract","create","normalize","topRightVec","newNormal","cross","isPerpendicular","lineStartWorld","linePlaneIntersection","lineEndWorld","annotationUID","lineWidth","getStyle","lineDash","color","shadow","canvasCoordinates","world","worldToCanvas","handleFullDimension","dataId","lineUID","width","vec1","vec2","dot","Math","abs","getRenderingEngine","targetId","getTargetId","targetImage","getTargetIdImage","getReferencedImageId","imageData","dimensions","topLeftImageCoord","topRightImageCoord","bottomRightImageCoord","bottomLeftImageCoord","indexToWorld","worldToImageCoords","lineStartImageCoord","lineEndImageCoord","start","end","intersectInfiniteLines","point","isInBound","imageToWorldCoords","err","console","log","line1Start","line1End","line2Start","line2End","x1","y1","x2","y2","x3","y3","x4","y4","a1","b1","c1","a2","b2","c2","x","y"],"sources":["../../../src/tools/ReferenceLinesTool.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,IAAI,QAAQ,WAAW;AAChC,SACEC,mBAAmB,EACnBC,SAAS,EACTC,SAAS,IAAIC,OAAO,QACf,qBAAqB;AAG5B,SAASC,aAAa,QAAQ,+CAA+C;AAE7E,SAASC,QAAQ,IAAIC,WAAW,QAAQ,eAAe;AACvD,SAASC,8BAA8B,QAAQ,8BAA8B;AAC7E,OAAOC,qCAAqC,MAAM,oDAAoD;AAItG,OAAOC,qBAAqB,MAAM,8BAA8B;AAEhE,MAAM;EAAEC;AAAO,CAAE,GAAGT,SAAS;AAM7B,MAAMU,cAAe,SAAQF,qBAAqB;EAchDG,YACEC,SAAA,GAA6B,EAAE,EAC/BC,gBAAA,GAA8B;IAC5BC,yBAAyB,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;IAC7CC,aAAa,EAAE;MACbC,gBAAgB,EAAE,EAAE;MACpBC,iBAAiB,EAAE;;GAEtB;IAED,KAAK,CAACL,SAAS,EAAEC,gBAAgB,CAAC;IAlBpC,KAAAK,QAAQ,GAIG,EAAS;IAuBpB,KAAAC,KAAK,GAAG,MAAW;MACjB,MAAMC,gBAAgB,GAAGrB,mBAAmB,EAAE;MAC9C,MAAMsB,eAAe,GAAGD,gBAAgB,CAAC,CAAC,CAAC;MAG3C,IAAI,CAACC,eAAe,EAAE;QACpB;;MAGF,IAAIC,SAAS,GAAGD,eAAe,CAACE,YAAY,EAAE;MAC9CD,SAAS,GAAGhB,8BAA8B,CAACgB,SAAS,EAAE,IAAI,CAACE,WAAW,EAAE,CAAC;MAEzE,MAAMC,cAAc,GAAGJ,eAAe,CAACK,WAAW,CAChD,IAAI,CAACX,aAAa,CAACC,gBAAgB,CACX;MAE1B,IAAI,CAACS,cAAc,IAAI,CAACA,cAAc,CAACE,YAAY,EAAE,EAAE;QACrD;;MAGF,MAAM;QAAEC;MAAO,CAAE,GAAGH,cAAc;MAClC,MAAM;QAAEI,MAAM;QAAEC;MAAe,CAAE,GAAGL,cAAc,CAACM,SAAS,EAAE;MAE9D,MAAMC,kCAAkC,GACtC9B,OAAO,CAAC+B,8BAA8B,CAACR,cAAc,CAAC;MAExD,IAAIS,UAAU,GAAG,IAAI,CAAChB,QAAQ,CAACgB,UAAU;MACzC,MAAMC,mBAAmB,GAAGV,cAAc,CAACW,sBAAsB,EAAE;MAEnE,IAAI,CAACF,UAAU,EAAE;QACf,MAAMG,aAAa,GAA4B;UAC7CC,WAAW,EAAE,IAAI;UACjBC,WAAW,EAAE,IAAI;UACjBC,QAAQ,EAAE;YACRC,QAAQ,EAAE,IAAI,CAACjB,WAAW,EAAE;YAC5BM,eAAe,EAAgB,CAAC,GAAGA,eAAe,CAAC;YACnDD,MAAM,EAAgB,CAAC,GAAGA,MAAM,CAAC;YACjCM,mBAAmB;YACnBO,iBAAiB,EAAE;WACpB;UACDC,IAAI,EAAE;YACJC,OAAO,EAAE;cACPC,MAAM,EAAEb;;;SAGb;QAED7B,aAAa,CAACkC,aAAa,EAAET,OAAO,CAAC;QACrCM,UAAU,GAAGG,aAAa;OAC3B,MAAM;QACL,IAAI,CAACnB,QAAQ,CAACgB,UAAU,CAACS,IAAI,CAACC,OAAO,CAACC,MAAM,GAC1Cb,kCAAkC;;MAGtC,IAAI,CAACd,QAAQ,GAAG;QACdO,cAAc;QACdJ,eAAe;QACfa;OACD;MAED3B,qCAAqC,CACnCc,eAAe,EACfC,SAAS,CACNwB,MAAM,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,EAAE,KAAKvB,cAAc,CAACuB,EAAE,CAAC,CACvDC,GAAG,CAAEF,QAAQ,IAAKA,QAAQ,CAACC,EAAE,CAAC,CAClC;IACH,CAAC;IAED,KAAAE,gBAAgB,GAAG,MAAW;MAC5B,IAAI,CAAC/B,KAAK,EAAE;IACd,CAAC;IAED,KAAAgC,gBAAgB,GAAIC,GAAyC,IAAU;MAKrE,IAAI,CAACjC,KAAK,EAAE;IACd,CAAC;IAUD,KAAAkC,gBAAgB,GAAG,CACjBC,cAAqC,EACrCC,gBAAkC,KACvB;MACX,MAAM;QAAER,QAAQ,EAAES;MAAc,CAAE,GAAGF,cAAc;MACnD,MAAM;QAAEpB,UAAU;QAAET;MAAc,CAAE,GAAG,IAAI,CAACP,QAAQ;MAEpD,IAAIuC,YAAY,GAAG,KAAK;MAExB,IAAI,CAAChC,cAAc,EAAE;QACnB,OAAOgC,YAAY;;MAGrB,IAAIhC,cAAc,CAACuB,EAAE,KAAKQ,cAAc,CAACR,EAAE,EAAE;QAE3C,OAAOS,YAAY;;MAGrB,IAAI,CAACvB,UAAU,IAAI,CAACA,UAAU,EAAES,IAAI,EAAEC,OAAO,EAAEC,MAAM,EAAE;QACrD,OAAOY,YAAY;;MAGrB,MAAMC,cAAc,GAAmB;QACrCC,WAAW,EAAE,IAAI,CAACA,WAAW;QAC7BlB,QAAQ,EAAE,IAAI,CAACjB,WAAW,EAAE;QAC5BoC,UAAU,EAAEN,cAAc,CAACP,QAAQ,CAACC;OACrC;MAGD,MAAMa,OAAO,GAAG3B,UAAU,CAACS,IAAI,CAACC,OAAO,CAACC,MAAM,CAAC,CAAC,CAAC;MACjD,MAAMiB,QAAQ,GAAG5B,UAAU,CAACS,IAAI,CAACC,OAAO,CAACC,MAAM,CAAC,CAAC,CAAC;MAClD,MAAMkB,UAAU,GAAG7B,UAAU,CAACS,IAAI,CAACC,OAAO,CAACC,MAAM,CAAC,CAAC,CAAC;MACpD,MAAMmB,WAAW,GAAG9B,UAAU,CAACS,IAAI,CAACC,OAAO,CAACC,MAAM,CAAC,CAAC,CAAC;MAErD,MAAM;QAAEoB,UAAU;QAAEnC,eAAe;QAAED;MAAM,CAAE,GAAG2B,cAAc,CAACzB,SAAS,EAAE;MAC1E,MAAM;QAAED,eAAe,EAAEoC;MAAqB,CAAE,GAC9CzC,cAAc,CAACM,SAAS,EAAE;MAE5B,IAAI,IAAI,CAACoC,UAAU,CAACrC,eAAe,EAAEoC,qBAAqB,CAAC,EAAE;QAE3D,OAAOT,YAAY;;MAGrB,MAAMW,mBAAmB,GAAGlE,OAAO,CAACmE,MAAM,CAACC,aAAa,CACtDxC,eAAe,EACfmC,UAAU,CACX;MAGD,MAAMM,SAAS,GAAG,CAACV,OAAO,EAAEE,UAAU,EAAED,QAAQ,EAAEE,WAAW,CAAC;MAC9D,MAAMQ,SAAS,GAAG,CAACX,OAAO,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,WAAW,CAAC;MAE9D,IAAIS,aAAa,GAAGF,SAAS;MAE7B,IAAIG,YAAY,GAAG5E,IAAI,CAAC6E,QAAQ,CAAC7E,IAAI,CAAC8E,MAAM,EAAE,EAAEL,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,CAAC;MAC3EG,YAAY,GAAG5E,IAAI,CAAC+E,SAAS,CAAC/E,IAAI,CAAC8E,MAAM,EAAE,EAAEF,YAAY,CAAiB;MAE1E,IAAII,WAAW,GAAGhF,IAAI,CAAC6E,QAAQ,CAAC7E,IAAI,CAAC8E,MAAM,EAAE,EAAEL,SAAS,CAAC,CAAC,CAAC,EAAEA,SAAS,CAAC,CAAC,CAAC,CAAC;MAC1EO,WAAW,GAAGhF,IAAI,CAAC+E,SAAS,CAAC/E,IAAI,CAAC8E,MAAM,EAAE,EAAEE,WAAW,CAAC;MAExD,MAAMC,SAAS,GAAGjF,IAAI,CAACkF,KAAK,CAC1BlF,IAAI,CAAC8E,MAAM,EAAE,EACbF,YAAY,EACZI,WAAW,CACI;MAEjB,IAAI,IAAI,CAACX,UAAU,CAACY,SAAS,EAAEjD,eAAe,CAAC,EAAE;QAC/C,OAAO2B,YAAY;;MAKrB,IAAI,IAAI,CAACwB,eAAe,CAACP,YAAY,EAAE5C,eAAe,CAAC,EAAE;QAEvD2C,aAAa,GAAGD,SAAS;;MAG3B,MAAMU,cAAc,GAAGhF,OAAO,CAACmE,MAAM,CAACc,qBAAqB,CACzDV,aAAa,CAAC,CAAC,CAAC,EAChBA,aAAa,CAAC,CAAC,CAAC,EAChBL,mBAAmB,CACpB;MAED,MAAMgB,YAAY,GAAGlF,OAAO,CAACmE,MAAM,CAACc,qBAAqB,CACvDV,aAAa,CAAC,CAAC,CAAC,EAChBA,aAAa,CAAC,CAAC,CAAC,EAChBL,mBAAmB,CACpB;MACD,MAAM;QAAEiB;MAAa,CAAE,GAAGnD,UAAU;MAEpCwB,cAAc,CAAC2B,aAAa,GAAGA,aAAa;MAC5C,MAAMC,SAAS,GAAG,IAAI,CAACC,QAAQ,CAAC,WAAW,EAAE7B,cAAc,EAAExB,UAAU,CAAC;MACxE,MAAMsD,QAAQ,GAAG,IAAI,CAACD,QAAQ,CAAC,UAAU,EAAE7B,cAAc,EAAExB,UAAU,CAAC;MACtE,MAAMuD,KAAK,GAAG,IAAI,CAACF,QAAQ,CAAC,OAAO,EAAE7B,cAAc,EAAExB,UAAU,CAAC;MAChE,MAAMwD,MAAM,GAAG,IAAI,CAACH,QAAQ,CAAC,QAAQ,EAAE7B,cAAc,EAAExB,UAAU,CAAC;MAElE,IAAIyD,iBAAiB,GAAG,CAACT,cAAc,EAAEE,YAAY,CAAC,CAACnC,GAAG,CAAE2C,KAAK,IAC/DpC,cAAc,CAACqC,aAAa,CAACD,KAAK,CAAC,CACpC;MAED,IAAI,IAAI,CAAC7E,aAAa,CAACE,iBAAiB,EAAE;QACxC0E,iBAAiB,GAAG,IAAI,CAACG,mBAAmB,CAC1CtC,cAAc,EACd0B,cAAc,EACdpD,eAAe,EACfD,MAAM,EACNuD,YAAY,EACZO,iBAAiB,CAClB;;MAGH,MAAMI,MAAM,GAAG,GAAGV,aAAa,OAAO;MACtC,MAAMW,OAAO,GAAG,GAAG;MACnB3F,WAAW,CACTkD,gBAAgB,EAChB8B,aAAa,EACbW,OAAO,EACPL,iBAAiB,CAAC,CAAC,CAAC,EACpBA,iBAAiB,CAAC,CAAC,CAAC,EACpB;QACEF,KAAK;QACLQ,KAAK,EAAEX,SAAS;QAChBE,QAAQ;QACRE;OACD,EACDK,MAAM,CACP;MAEDtC,YAAY,GAAG,IAAI;MAEnB,OAAOA,YAAY;IACrB,CAAC;IAED,KAAAwB,eAAe,GAAG,CAACiB,IAAkB,EAAEC,IAAkB,KAAa;MACpE,MAAMC,GAAG,GAAGtG,IAAI,CAACsG,GAAG,CAACF,IAAI,EAAEC,IAAI,CAAC;MAChC,OAAOE,IAAI,CAACC,GAAG,CAACF,GAAG,CAAC,GAAG3F,OAAO;IAChC,CAAC;EAlOD;EAoOQqF,mBAAmBA,CACzBtC,cAA4D,EAC5D0B,cAA4B,EAC5BpD,eAA6B,EAC7BD,MAAoB,EACpBuD,YAA0B,EAC1BO,iBAAiC;IAEjC,MAAMtE,eAAe,GAAGmC,cAAc,CAAC+C,kBAAkB,EAAE;IAC3D,MAAMC,QAAQ,GAAG,IAAI,CAACC,WAAW,CAACjD,cAAc,CAAC;IACjD,MAAMkD,WAAW,GAAG,IAAI,CAACC,gBAAgB,CAACH,QAAQ,EAAEnF,eAAe,CAAC;IAEpE,MAAMqB,iBAAiB,GAAG,IAAI,CAACkE,oBAAoB,CACjDpD,cAAc,EACd0B,cAAc,EACdpD,eAAe,EACfD,MAAM,CACP;IAED,IAAIa,iBAAiB,IAAIgE,WAAW,EAAE;MACpC,IAAI;QACF,MAAM;UAAEG,SAAS;UAAEC;QAAU,CAAE,GAAGJ,WAAW;QAG7C,MAAM,CACJK,iBAAiB,EACjBC,kBAAkB,EAClBC,qBAAqB,EACrBC,oBAAoB,CACrB,GAAG,CACFL,SAAS,CAACM,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAiB,EACjDN,SAAS,CAACM,YAAY,CAAC,CAACL,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAiB,EACjED,SAAS,CAACM,YAAY,CAAC,CACrBL,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,EACjBA,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,EACjB,CAAC,CACF,CAAiB,EAClBD,SAAS,CAACM,YAAY,CAAC,CAAC,CAAC,EAAEL,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAiB,CAClE,CAAC7D,GAAG,CAAE2C,KAAK,IAAK1F,OAAO,CAACkH,kBAAkB,CAAC1E,iBAAiB,EAAEkD,KAAK,CAAC,CAAC;QAGtE,MAAM,CAACyB,mBAAmB,EAAEC,iBAAiB,CAAC,GAAG,CAC/CpC,cAAc,EACdE,YAAY,CACb,CAACnC,GAAG,CAAE2C,KAAK,IAAK1F,OAAO,CAACkH,kBAAkB,CAAC1E,iBAAiB,EAAEkD,KAAK,CAAC,CAAC;QAGtED,iBAAiB,GAAG,CAClB,CAACoB,iBAAiB,EAAEC,kBAAkB,CAAC,EACvC,CAACA,kBAAkB,EAAEC,qBAAqB,CAAC,EAC3C,CAACC,oBAAoB,EAAED,qBAAqB,CAAC,EAC7C,CAACF,iBAAiB,EAAEG,oBAAoB,CAAC,CAC1C,CACEjE,GAAG,CAAC,CAAC,CAACsE,KAAK,EAAEC,GAAG,CAAC,KAChB,IAAI,CAACC,sBAAsB,CACzBF,KAAK,EACLC,GAAG,EACHH,mBAAmB,EACnBC,iBAAiB,CAClB,CACF,CACAxE,MAAM,CAAE4E,KAAK,IAAKA,KAAK,IAAI,IAAI,CAACC,SAAS,CAACD,KAAK,EAAEZ,UAAU,CAAC,CAAC,CAC7D7D,GAAG,CAAEyE,KAAK,IAAI;UACb,MAAM9B,KAAK,GAAG1F,OAAO,CAAC0H,kBAAkB,CACtClF,iBAAiB,EACjBgF,KAAqB,CACtB;UACD,OAAOlE,cAAc,CAACqC,aAAa,CAACD,KAAK,CAAC;QAC5C,CAAC,CAAC;OACL,CAAC,OAAOiC,GAAG,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;;;IAGpB,OAAOlC,iBAAiB;EAC1B;EAGA8B,sBAAsBA,CACpBO,UAAwB,EACxBC,QAAsB,EACtBC,UAAwB,EACxBC,QAAsB;IAEtB,MAAM,CAACC,EAAE,EAAEC,EAAE,CAAC,GAAGL,UAAU;IAC3B,MAAM,CAACM,EAAE,EAAEC,EAAE,CAAC,GAAGN,QAAQ;IACzB,MAAM,CAACO,EAAE,EAAEC,EAAE,CAAC,GAAGP,UAAU;IAC3B,MAAM,CAACQ,EAAE,EAAEC,EAAE,CAAC,GAAGR,QAAQ;IAGzB,MAAMS,EAAE,GAAGL,EAAE,GAAGF,EAAE;IAClB,MAAMQ,EAAE,GAAGT,EAAE,GAAGE,EAAE;IAClB,MAAMQ,EAAE,GAAGR,EAAE,GAAGD,EAAE,GAAGD,EAAE,GAAGG,EAAE;IAG5B,MAAMQ,EAAE,GAAGJ,EAAE,GAAGF,EAAE;IAClB,MAAMO,EAAE,GAAGR,EAAE,GAAGE,EAAE;IAClB,MAAMO,EAAE,GAAGP,EAAE,GAAGD,EAAE,GAAGD,EAAE,GAAGG,EAAE;IAE5B,IAAItC,IAAI,CAACC,GAAG,CAACsC,EAAE,GAAGI,EAAE,GAAGD,EAAE,GAAGF,EAAE,CAAC,GAAGpI,OAAO,EAAE;MACzC;;IAGF,MAAMyI,CAAC,GAAG,CAACL,EAAE,GAAGI,EAAE,GAAGD,EAAE,GAAGF,EAAE,KAAKF,EAAE,GAAGI,EAAE,GAAGD,EAAE,GAAGF,EAAE,CAAC;IACnD,MAAMM,CAAC,GAAG,CAACJ,EAAE,GAAGD,EAAE,GAAGF,EAAE,GAAGK,EAAE,KAAKL,EAAE,GAAGI,EAAE,GAAGD,EAAE,GAAGF,EAAE,CAAC;IAEnD,OAAO,CAACK,CAAC,EAAEC,CAAC,CAAC;EACf;EAEAhF,UAAUA,CAAC+B,IAAkB,EAAEC,IAAkB;IAC/C,OAAOE,IAAI,CAACC,GAAG,CAACxG,IAAI,CAACsG,GAAG,CAACF,IAAI,EAAEC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG1F,OAAO;EACrD;EAEAkH,SAASA,CAACD,KAAe,EAAEZ,UAAwB;IACjD,OACEY,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IACbA,KAAK,CAAC,CAAC,CAAC,IAAIZ,UAAU,CAAC,CAAC,CAAC,IACzBY,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IACbA,KAAK,CAAC,CAAC,CAAC,IAAIZ,UAAU,CAAC,CAAC,CAAC;EAE7B;;AAGFpG,cAAc,CAAC+B,QAAQ,GAAG,gBAAgB;AAC1C,eAAe/B,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}