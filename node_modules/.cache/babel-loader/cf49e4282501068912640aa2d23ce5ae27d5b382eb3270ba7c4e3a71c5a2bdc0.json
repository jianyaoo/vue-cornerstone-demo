{"ast":null,"code":"import { mat4 } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nimport vtkProp3D from './Prop3D.js';\nimport vtkImageProperty from './ImageProperty.js';\nconst {\n  vtkDebugMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkImageSlice methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageSlice(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageSlice');\n  publicAPI.getActors = () => publicAPI;\n  publicAPI.getImages = () => publicAPI;\n  publicAPI.getIsOpaque = () => {\n    if (model.forceOpaque) {\n      return true;\n    }\n    if (model.forceTranslucent) {\n      return false;\n    }\n    // make sure we have a property\n    if (!model.property) {\n      // force creation of a property\n      publicAPI.getProperty();\n    }\n    let isOpaque = model.property.getOpacity() >= 1.0;\n\n    // are we using an opaque scalar array, if any?\n    isOpaque = isOpaque && (!model.mapper || model.mapper.getIsOpaque());\n    return isOpaque;\n  };\n\n  // Always render during opaque pass, to keep the behavior\n  // predictable and because depth-peeling kills alpha-blending.\n  // In the future, the Renderer should render images in layers,\n  // i.e. where each image will have a layer number assigned to it,\n  // and the Renderer will do the images in their own pass.\n  publicAPI.hasTranslucentPolygonalGeometry = () => false;\n  publicAPI.makeProperty = vtkImageProperty.newInstance;\n  publicAPI.getProperty = () => {\n    if (model.property === null) {\n      model.property = publicAPI.makeProperty();\n    }\n    return model.property;\n  };\n  publicAPI.getBounds = () => {\n    if (model.mapper === null) {\n      return model.bounds;\n    }\n\n    // Check for the special case when the mapper's bounds are unknown\n    const bds = model.mapper.getBounds();\n    if (!bds || bds.length !== 6) {\n      return bds;\n    }\n\n    // Check for the special case when the actor is empty.\n    if (bds[0] > bds[1]) {\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\n      model.bounds = [1, -1, 1, -1, 1, -1];\n      model.boundsMTime.modified();\n      return bds;\n    }\n\n    // Check if we have cached values for these bounds - we cache the\n    // values returned by model.mapper.getBounds() and we store the time\n    // of caching. If the values returned this time are different, or\n    // the modified time of this class is newer than the cached time,\n    // then we need to rebuild.\n    const zip = rows => rows[0].map((_, c) => rows.map(row => row[c]));\n    if (!model.mapperBounds || !zip([bds, model.mapperBounds]).reduce((a, b) => a && b[0] === b[1], true) || publicAPI.getMTime() > model.boundsMTime.getMTime()) {\n      vtkDebugMacro('Recomputing bounds...');\n      model.mapperBounds = bds.map(x => x);\n      publicAPI.computeMatrix();\n      const tmp4 = new Float64Array(16);\n      mat4.transpose(tmp4, model.matrix);\n      vtkBoundingBox.transformBounds(bds, tmp4, model.bounds);\n      model.boundsMTime.modified();\n    }\n    return model.bounds;\n  };\n  publicAPI.getBoundsForSlice = (slice, thickness) => {\n    // Check for the special case when the mapper's bounds are unknown\n    const bds = model.mapper.getBoundsForSlice(slice, thickness);\n    // Check for the special case when the actor is empty.\n    if (!vtkBoundingBox.isValid(bds)) {\n      return bds;\n    }\n    publicAPI.computeMatrix();\n    const tmp4 = new Float64Array(16);\n    mat4.transpose(tmp4, model.matrix);\n    const newBounds = vtkBoundingBox.transformBounds(bds, tmp4);\n    return newBounds;\n  };\n\n  //----------------------------------------------------------------------------\n  // Get the minimum X bound\n  publicAPI.getMinXBound = () => publicAPI.getBounds()[0];\n\n  // Get the maximum X bound\n  publicAPI.getMaxXBound = () => publicAPI.getBounds()[1];\n\n  // Get the minimum Y bound\n  publicAPI.getMinYBound = () => publicAPI.getBounds()[2];\n\n  // Get the maximum Y bound\n  publicAPI.getMaxYBound = () => publicAPI.getBounds()[3];\n\n  // Get the minimum Z bound\n  publicAPI.getMinZBound = () => publicAPI.getBounds()[4];\n\n  // Get the maximum Z bound\n  publicAPI.getMaxZBound = () => publicAPI.getBounds()[5];\n  publicAPI.getMTime = () => {\n    let mt = model.mtime;\n    if (model.property !== null) {\n      const time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n    }\n    return mt;\n  };\n  publicAPI.getRedrawMTime = () => {\n    let mt = model.mtime;\n    if (model.mapper !== null) {\n      let time = model.mapper.getMTime();\n      mt = time > mt ? time : mt;\n      if (model.mapper.getInput() !== null) {\n        // FIXME !!! getInputAlgorithm / getInput\n        model.mapper.getInputAlgorithm().update();\n        time = model.mapper.getInput().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n    if (model.property !== null) {\n      let time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n      if (model.property.getRGBTransferFunction() !== null) {\n        time = model.property.getRGBTransferFunction().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n    return mt;\n  };\n  publicAPI.getSupportsSelection = () => model.mapper ? model.mapper.getSupportsSelection() : false;\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  mapper: null,\n  property: null,\n  bounds: [...vtkBoundingBox.INIT_BOUNDS]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkProp3D.extend(publicAPI, model, initialValues);\n\n  // vtkTimeStamp\n  model.boundsMTime = {};\n  macro.obj(model.boundsMTime);\n\n  // Build VTK API\n  macro.set(publicAPI, model, ['property']);\n  macro.setGet(publicAPI, model, ['mapper']);\n  macro.getArray(publicAPI, model, ['bounds'], 6);\n\n  // Object methods\n  vtkImageSlice(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkImageSlice');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImageSlice$1 = {\n  newInstance,\n  extend\n};\nexport { vtkImageSlice$1 as default, extend, newInstance };","map":{"version":3,"names":["mat4","m","macro","vtkBoundingBox","vtkProp3D","vtkImageProperty","vtkDebugMacro","vtkImageSlice","publicAPI","model","classHierarchy","push","getActors","getImages","getIsOpaque","forceOpaque","forceTranslucent","property","getProperty","isOpaque","getOpacity","mapper","hasTranslucentPolygonalGeometry","makeProperty","newInstance","getBounds","bounds","bds","length","mapperBounds","concat","boundsMTime","modified","zip","rows","map","_","c","row","reduce","a","b","getMTime","x","computeMatrix","tmp4","Float64Array","transpose","matrix","transformBounds","getBoundsForSlice","slice","thickness","isValid","newBounds","getMinXBound","getMaxXBound","getMinYBound","getMaxYBound","getMinZBound","getMaxZBound","mt","mtime","time","getRedrawMTime","getInput","getInputAlgorithm","update","getRGBTransferFunction","getSupportsSelection","DEFAULT_VALUES","INIT_BOUNDS","extend","initialValues","arguments","undefined","Object","assign","obj","set","setGet","getArray","vtkImageSlice$1","default"],"sources":["/root/vue-cornerstone-demo/node_modules/@kitware/vtk.js/Rendering/Core/ImageSlice.js"],"sourcesContent":["import { mat4 } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport vtkBoundingBox from '../../Common/DataModel/BoundingBox.js';\nimport vtkProp3D from './Prop3D.js';\nimport vtkImageProperty from './ImageProperty.js';\n\nconst {\n  vtkDebugMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// vtkImageSlice methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageSlice(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageSlice');\n  publicAPI.getActors = () => publicAPI;\n  publicAPI.getImages = () => publicAPI;\n  publicAPI.getIsOpaque = () => {\n    if (model.forceOpaque) {\n      return true;\n    }\n    if (model.forceTranslucent) {\n      return false;\n    }\n    // make sure we have a property\n    if (!model.property) {\n      // force creation of a property\n      publicAPI.getProperty();\n    }\n    let isOpaque = model.property.getOpacity() >= 1.0;\n\n    // are we using an opaque scalar array, if any?\n    isOpaque = isOpaque && (!model.mapper || model.mapper.getIsOpaque());\n    return isOpaque;\n  };\n\n  // Always render during opaque pass, to keep the behavior\n  // predictable and because depth-peeling kills alpha-blending.\n  // In the future, the Renderer should render images in layers,\n  // i.e. where each image will have a layer number assigned to it,\n  // and the Renderer will do the images in their own pass.\n  publicAPI.hasTranslucentPolygonalGeometry = () => false;\n  publicAPI.makeProperty = vtkImageProperty.newInstance;\n  publicAPI.getProperty = () => {\n    if (model.property === null) {\n      model.property = publicAPI.makeProperty();\n    }\n    return model.property;\n  };\n  publicAPI.getBounds = () => {\n    if (model.mapper === null) {\n      return model.bounds;\n    }\n\n    // Check for the special case when the mapper's bounds are unknown\n    const bds = model.mapper.getBounds();\n    if (!bds || bds.length !== 6) {\n      return bds;\n    }\n\n    // Check for the special case when the actor is empty.\n    if (bds[0] > bds[1]) {\n      model.mapperBounds = bds.concat(); // copy the mapper's bounds\n      model.bounds = [1, -1, 1, -1, 1, -1];\n      model.boundsMTime.modified();\n      return bds;\n    }\n\n    // Check if we have cached values for these bounds - we cache the\n    // values returned by model.mapper.getBounds() and we store the time\n    // of caching. If the values returned this time are different, or\n    // the modified time of this class is newer than the cached time,\n    // then we need to rebuild.\n    const zip = rows => rows[0].map((_, c) => rows.map(row => row[c]));\n    if (!model.mapperBounds || !zip([bds, model.mapperBounds]).reduce((a, b) => a && b[0] === b[1], true) || publicAPI.getMTime() > model.boundsMTime.getMTime()) {\n      vtkDebugMacro('Recomputing bounds...');\n      model.mapperBounds = bds.map(x => x);\n      publicAPI.computeMatrix();\n      const tmp4 = new Float64Array(16);\n      mat4.transpose(tmp4, model.matrix);\n      vtkBoundingBox.transformBounds(bds, tmp4, model.bounds);\n      model.boundsMTime.modified();\n    }\n    return model.bounds;\n  };\n  publicAPI.getBoundsForSlice = (slice, thickness) => {\n    // Check for the special case when the mapper's bounds are unknown\n    const bds = model.mapper.getBoundsForSlice(slice, thickness);\n    // Check for the special case when the actor is empty.\n    if (!vtkBoundingBox.isValid(bds)) {\n      return bds;\n    }\n    publicAPI.computeMatrix();\n    const tmp4 = new Float64Array(16);\n    mat4.transpose(tmp4, model.matrix);\n    const newBounds = vtkBoundingBox.transformBounds(bds, tmp4);\n    return newBounds;\n  };\n\n  //----------------------------------------------------------------------------\n  // Get the minimum X bound\n  publicAPI.getMinXBound = () => publicAPI.getBounds()[0];\n\n  // Get the maximum X bound\n  publicAPI.getMaxXBound = () => publicAPI.getBounds()[1];\n\n  // Get the minimum Y bound\n  publicAPI.getMinYBound = () => publicAPI.getBounds()[2];\n\n  // Get the maximum Y bound\n  publicAPI.getMaxYBound = () => publicAPI.getBounds()[3];\n\n  // Get the minimum Z bound\n  publicAPI.getMinZBound = () => publicAPI.getBounds()[4];\n\n  // Get the maximum Z bound\n  publicAPI.getMaxZBound = () => publicAPI.getBounds()[5];\n  publicAPI.getMTime = () => {\n    let mt = model.mtime;\n    if (model.property !== null) {\n      const time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n    }\n    return mt;\n  };\n  publicAPI.getRedrawMTime = () => {\n    let mt = model.mtime;\n    if (model.mapper !== null) {\n      let time = model.mapper.getMTime();\n      mt = time > mt ? time : mt;\n      if (model.mapper.getInput() !== null) {\n        // FIXME !!! getInputAlgorithm / getInput\n        model.mapper.getInputAlgorithm().update();\n        time = model.mapper.getInput().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n    if (model.property !== null) {\n      let time = model.property.getMTime();\n      mt = time > mt ? time : mt;\n      if (model.property.getRGBTransferFunction() !== null) {\n        time = model.property.getRGBTransferFunction().getMTime();\n        mt = time > mt ? time : mt;\n      }\n    }\n    return mt;\n  };\n  publicAPI.getSupportsSelection = () => model.mapper ? model.mapper.getSupportsSelection() : false;\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  mapper: null,\n  property: null,\n  bounds: [...vtkBoundingBox.INIT_BOUNDS]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkProp3D.extend(publicAPI, model, initialValues);\n\n  // vtkTimeStamp\n  model.boundsMTime = {};\n  macro.obj(model.boundsMTime);\n\n  // Build VTK API\n  macro.set(publicAPI, model, ['property']);\n  macro.setGet(publicAPI, model, ['mapper']);\n  macro.getArray(publicAPI, model, ['bounds'], 6);\n\n  // Object methods\n  vtkImageSlice(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkImageSlice');\n\n// ----------------------------------------------------------------------------\n\nvar vtkImageSlice$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkImageSlice$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}