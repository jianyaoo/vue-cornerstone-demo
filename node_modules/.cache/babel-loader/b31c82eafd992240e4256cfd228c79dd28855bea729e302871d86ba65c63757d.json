{"ast":null,"code":"import { BaseTool } from './base';\nimport { getEnabledElement, VolumeViewport } from '@cornerstonejs/core';\nimport { getPointInLineOfSightWithCriteria } from '../utilities/planar';\nimport jumpToWorld from '../utilities/viewport/jumpToWorld';\nimport { getToolGroupForViewport } from '../store/ToolGroupManager';\nclass MIPJumpToClickTool extends BaseTool {\n  constructor(toolProps = {}, defaultToolProps = {\n    supportedInteractionTypes: ['Mouse', 'Touch'],\n    configuration: {\n      targetViewportIds: []\n    }\n  }) {\n    super(toolProps, defaultToolProps);\n  }\n  mouseClickCallback(evt) {\n    const {\n      element,\n      currentPoints\n    } = evt.detail;\n    const enabledElement = getEnabledElement(element);\n    const {\n      viewport,\n      renderingEngine\n    } = enabledElement;\n    const targetId = this.getTargetId(viewport);\n    if (!targetId.startsWith('volumeId')) {\n      throw new Error(`MIPJumpToClickTool: targetId is not a volumeId, you should only use MIPJumpToClickTool with a volumeId as the targetId`);\n    }\n    const volumeId = targetId.split('volumeId:')[1];\n    let maxIntensity = -Infinity;\n    const maxFn = (intensity, point) => {\n      if (intensity > maxIntensity) {\n        maxIntensity = intensity;\n        return point;\n      }\n    };\n    const brightestPoint = getPointInLineOfSightWithCriteria(viewport, currentPoints.world, volumeId, maxFn);\n    if (!brightestPoint || !brightestPoint.length) {\n      return;\n    }\n    const {\n      targetViewportIds,\n      toolGroupId\n    } = this.configuration;\n    const viewports = renderingEngine.getViewports().filter(vp => {\n      if (targetViewportIds?.indexOf(vp.id) >= 0) {\n        return true;\n      }\n      const foundToolGroup = getToolGroupForViewport(vp.id, renderingEngine.id);\n      if (toolGroupId && toolGroupId === foundToolGroup?.id) {\n        return true;\n      }\n      return false;\n    });\n    viewports.forEach(viewport => {\n      if (viewport instanceof VolumeViewport) {\n        jumpToWorld(viewport, brightestPoint);\n      } else {\n        console.warn('Cannot jump to specified world coordinates for a viewport that is not a VolumeViewport');\n      }\n    });\n  }\n}\nMIPJumpToClickTool.toolName = 'MIPJumpToClickTool';\nexport default MIPJumpToClickTool;","map":{"version":3,"names":["BaseTool","getEnabledElement","VolumeViewport","getPointInLineOfSightWithCriteria","jumpToWorld","getToolGroupForViewport","MIPJumpToClickTool","constructor","toolProps","defaultToolProps","supportedInteractionTypes","configuration","targetViewportIds","mouseClickCallback","evt","element","currentPoints","detail","enabledElement","viewport","renderingEngine","targetId","getTargetId","startsWith","Error","volumeId","split","maxIntensity","Infinity","maxFn","intensity","point","brightestPoint","world","length","toolGroupId","viewports","getViewports","filter","vp","indexOf","id","foundToolGroup","forEach","console","warn","toolName"],"sources":["../../../src/tools/MIPJumpToClickTool.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,QAAQ,QAAQ,QAAQ;AACjC,SAASC,iBAAiB,EAAEC,cAAc,QAAQ,qBAAqB;AAEvE,SAASC,iCAAiC,QAAQ,qBAAqB;AACvE,OAAOC,WAAW,MAAM,mCAAmC;AAE3D,SAASC,uBAAuB,QAAQ,2BAA2B;AAQnE,MAAMC,kBAAmB,SAAQN,QAAQ;EAKvCO,YACEC,SAAA,GAA6B,EAAE,EAC/BC,gBAAA,GAA8B;IAC5BC,yBAAyB,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;IAC7CC,aAAa,EAAE;MACbC,iBAAiB,EAAE;;GAEtB;IAED,KAAK,CAACJ,SAAS,EAAEC,gBAAgB,CAAC;EACpC;EAWAI,kBAAkBA,CAACC,GAAG;IACpB,MAAM;MAAEC,OAAO;MAAEC;IAAa,CAAE,GAAGF,GAAG,CAACG,MAAM;IAG7C,MAAMC,cAAc,GAAGjB,iBAAiB,CAACc,OAAO,CAAC;IACjD,MAAM;MAAEI,QAAQ;MAAEC;IAAe,CAAE,GAAGF,cAAc;IAGpD,MAAMG,QAAQ,GAAG,IAAI,CAACC,WAAW,CAACH,QAAiC,CAAC;IAEpE,IAAI,CAACE,QAAQ,CAACE,UAAU,CAAC,UAAU,CAAC,EAAE;MACpC,MAAM,IAAIC,KAAK,CACb,wHAAwH,CACzH;;IAGH,MAAMC,QAAQ,GAAGJ,QAAQ,CAACK,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAG/C,IAAIC,YAAY,GAAG,CAACC,QAAQ;IAC5B,MAAMC,KAAK,GAAGA,CAACC,SAAS,EAAEC,KAAK,KAAI;MACjC,IAAID,SAAS,GAAGH,YAAY,EAAE;QAC5BA,YAAY,GAAGG,SAAS;QACxB,OAAOC,KAAK;;IAEhB,CAAC;IAGD,MAAMC,cAAc,GAAG7B,iCAAiC,CACtDgB,QAAiC,EACjCH,aAAa,CAACiB,KAAK,EACnBR,QAAQ,EACRI,KAAK,CACN;IAED,IAAI,CAACG,cAAc,IAAI,CAACA,cAAc,CAACE,MAAM,EAAE;MAC7C;;IAGF,MAAM;MAAEtB,iBAAiB;MAAEuB;IAAW,CAAE,GAAG,IAAI,CAACxB,aAAa;IAE7D,MAAMyB,SAAS,GAAGhB,eAAe,CAACiB,YAAY,EAAE,CAACC,MAAM,CAAEC,EAAE,IAAI;MAC7D,IAAI3B,iBAAiB,EAAE4B,OAAO,CAACD,EAAE,CAACE,EAAE,CAAC,IAAI,CAAC,EAAE;QAC1C,OAAO,IAAI;;MAEb,MAAMC,cAAc,GAAGrC,uBAAuB,CAACkC,EAAE,CAACE,EAAE,EAAErB,eAAe,CAACqB,EAAE,CAAC;MACzE,IAAIN,WAAW,IAAIA,WAAW,KAAKO,cAAc,EAAED,EAAE,EAAE;QACrD,OAAO,IAAI;;MAEb,OAAO,KAAK;IACd,CAAC,CAAC;IAGFL,SAAS,CAACO,OAAO,CAAExB,QAAQ,IAAI;MAG7B,IAAIA,QAAQ,YAAYjB,cAAc,EAAE;QACtCE,WAAW,CAACe,QAAQ,EAAEa,cAAc,CAAC;OACtC,MAAM;QACLY,OAAO,CAACC,IAAI,CACV,wFAAwF,CACzF;;IAEL,CAAC,CAAC;EACJ;;AAGFvC,kBAAkB,CAACwC,QAAQ,GAAG,oBAAoB;AAClD,eAAexC,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}