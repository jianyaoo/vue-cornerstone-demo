{"ast":null,"code":"import { cache } from '@cornerstonejs/core';\nimport * as SegmentationState from '../../../stateManagement/segmentation/segmentationState';\nimport { getSegmentationRepresentations } from '../../../stateManagement/segmentation/segmentationState';\nimport { triggerSegmentationRepresentationModified } from '../triggerSegmentationEvents';\nimport SegmentationRepresentations from '../../../enums/SegmentationRepresentations';\nfunction getUniqueSegmentIndices(segmentationId) {\n  const segmentation = SegmentationState.getSegmentation(segmentationId);\n  if (segmentation.type === SegmentationRepresentations.Labelmap) {\n    const volume = cache.getVolume(segmentationId);\n    const scalarData = volume.getScalarData();\n    const keySet = {};\n    for (let i = 0; i < scalarData.length; i++) {\n      const segmentIndex = scalarData[i];\n      if (segmentIndex !== 0 && !keySet[segmentIndex]) {\n        keySet[segmentIndex] = true;\n      }\n    }\n    return Object.keys(keySet).map(it => parseInt(it, 10));\n  } else if (segmentation.type === SegmentationRepresentations.Contour) {\n    const annotationUIDsMap = segmentation.representationData.CONTOUR?.annotationUIDsMap;\n    const indices = new Set(annotationUIDsMap.keys());\n    const geometryIds = segmentation.representationData.CONTOUR?.geometryIds;\n    if (!geometryIds) {\n      throw new Error(`No geometryIds found for segmentationId ${segmentationId}`);\n    }\n    geometryIds.forEach(geometryId => {\n      const geometry = cache.getGeometry(geometryId);\n      indices.add(geometry.data.getSegmentIndex());\n    });\n    return Array.from(indices.values()).sort();\n  }\n}\nfunction setSegmentationVisibility(toolGroupId, segmentationRepresentationUID, visibility) {\n  const toolGroupSegmentationRepresentations = getSegmentationRepresentations(toolGroupId);\n  if (!toolGroupSegmentationRepresentations) {\n    return;\n  }\n  const representation = toolGroupSegmentationRepresentations.find(representation => representation.segmentationRepresentationUID === segmentationRepresentationUID);\n  if (!representation) {\n    return;\n  }\n  const {\n    segmentsHidden,\n    segmentationId\n  } = representation;\n  const indices = getUniqueSegmentIndices(segmentationId);\n  if (visibility) {\n    segmentsHidden.clear();\n  } else {\n    indices.forEach(index => {\n      segmentsHidden.add(index);\n    });\n  }\n  triggerSegmentationRepresentationModified(toolGroupId, representation.segmentationRepresentationUID);\n}\nfunction getSegmentationVisibility(toolGroupId, segmentationRepresentationUID) {\n  const toolGroupSegmentationRepresentations = getSegmentationRepresentations(toolGroupId);\n  const representation = toolGroupSegmentationRepresentations.find(representation => representation.segmentationRepresentationUID === segmentationRepresentationUID);\n  if (!representation) {\n    return;\n  }\n  const {\n    segmentsHidden,\n    segmentationId\n  } = representation;\n  const indices = getUniqueSegmentIndices(segmentationId);\n  const indicesSet = new Set(indices);\n  segmentsHidden.forEach(segmentIndex => indicesSet.delete(segmentIndex));\n  return !!indicesSet.size;\n}\nfunction setSegmentsVisibility(toolGroupId, segmentationRepresentationUID, segmentIndices, visibility) {\n  const segRepresentation = SegmentationState.getSegmentationRepresentationByUID(toolGroupId, segmentationRepresentationUID);\n  if (!segRepresentation) {\n    return;\n  }\n  segmentIndices.forEach(segmentIndex => {\n    visibility ? segRepresentation.segmentsHidden.delete(segmentIndex) : segRepresentation.segmentsHidden.add(segmentIndex);\n  });\n  triggerSegmentationRepresentationModified(toolGroupId, segmentationRepresentationUID);\n}\nfunction setSegmentVisibility(toolGroupId, segmentationRepresentationUID, segmentIndex, visibility) {\n  const segRepresentation = SegmentationState.getSegmentationRepresentationByUID(toolGroupId, segmentationRepresentationUID);\n  if (!segRepresentation) {\n    return;\n  }\n  visibility ? segRepresentation.segmentsHidden.delete(segmentIndex) : segRepresentation.segmentsHidden.add(segmentIndex);\n  triggerSegmentationRepresentationModified(toolGroupId, segmentationRepresentationUID);\n}\nfunction getSegmentVisibility(toolGroupId, segmentationRepresentationUID, segmentIndex) {\n  const segRepresentation = SegmentationState.getSegmentationRepresentationByUID(toolGroupId, segmentationRepresentationUID);\n  if (!segRepresentation) {\n    return false;\n  }\n  return !segRepresentation.segmentsHidden.has(segmentIndex);\n}\nexport { setSegmentationVisibility, getSegmentationVisibility, setSegmentVisibility, setSegmentsVisibility, getSegmentVisibility };","map":{"version":3,"names":["cache","SegmentationState","getSegmentationRepresentations","triggerSegmentationRepresentationModified","SegmentationRepresentations","getUniqueSegmentIndices","segmentationId","segmentation","getSegmentation","type","Labelmap","volume","getVolume","scalarData","getScalarData","keySet","i","length","segmentIndex","Object","keys","map","it","parseInt","Contour","annotationUIDsMap","representationData","CONTOUR","indices","Set","geometryIds","Error","forEach","geometryId","geometry","getGeometry","add","data","getSegmentIndex","Array","from","values","sort","setSegmentationVisibility","toolGroupId","segmentationRepresentationUID","visibility","toolGroupSegmentationRepresentations","representation","find","segmentsHidden","clear","index","getSegmentationVisibility","indicesSet","delete","size","setSegmentsVisibility","segmentIndices","segRepresentation","getSegmentationRepresentationByUID","setSegmentVisibility","getSegmentVisibility","has"],"sources":["../../../../../src/stateManagement/segmentation/config/segmentationVisibility.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}