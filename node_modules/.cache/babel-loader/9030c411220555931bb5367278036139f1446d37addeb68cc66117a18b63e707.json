{"ast":null,"code":"import { cache, getEnabledElementByIds, Enums } from '@cornerstonejs/core';\nimport * as SegmentationState from '../../../stateManagement/segmentation/segmentationState';\nimport Representations from '../../../enums/SegmentationRepresentations';\nimport { getToolGroup } from '../../../store/ToolGroupManager';\nimport removeSurfaceFromElement from './removeSurfaceFromElement';\nimport addSurfaceToElement from './addSurfaceToElement';\nfunction removeSegmentationRepresentation(toolGroupId, segmentationRepresentationUID, renderImmediate = false) {\n  _removeSurfaceFromToolGroupViewports(toolGroupId, segmentationRepresentationUID);\n  SegmentationState.removeSegmentationRepresentation(toolGroupId, segmentationRepresentationUID);\n  if (renderImmediate) {\n    const viewportsInfo = getToolGroup(toolGroupId).getViewportsInfo();\n    viewportsInfo.forEach(({\n      viewportId,\n      renderingEngineId\n    }) => {\n      const enabledElement = getEnabledElementByIds(viewportId, renderingEngineId);\n      enabledElement.viewport.render();\n    });\n  }\n}\nasync function render(viewport, representation, toolGroupConfig) {\n  const {\n    colorLUTIndex,\n    active,\n    segmentationId,\n    segmentationRepresentationUID,\n    segmentsHidden\n  } = representation;\n  const segmentation = SegmentationState.getSegmentation(segmentationId);\n  const SurfaceData = segmentation.representationData[Representations.Surface];\n  const {\n    geometryId\n  } = SurfaceData;\n  if (!geometryId) {\n    console.warn(`No Surfaces found for segmentationId ${segmentationId}. Skipping render.`);\n  }\n  const geometry = cache.getGeometry(geometryId);\n  if (!geometry) {\n    throw new Error(`No Surfaces found for geometryId ${geometryId}`);\n  }\n  if (geometry.type !== Enums.GeometryType.SURFACE) {\n    throw new Error(`Geometry type ${geometry.type} not supported for rendering.`);\n  }\n  if (!geometry.data) {\n    console.warn(`No Surfaces found for geometryId ${geometryId}. Skipping render.`);\n    return;\n  }\n  const surface = geometry.data;\n  const surfaceUID = `${segmentationRepresentationUID}_${surface.id}}`;\n  _renderSurface(viewport, surface, surfaceUID);\n  viewport.resetCamera();\n  viewport.render();\n}\nfunction _renderSurface(viewport, surface, surfaceUID) {\n  const actorUID = surfaceUID;\n  const actorEntry = viewport.getActor(actorUID);\n  if (!actorEntry) {\n    addSurfaceToElement(viewport.element, surface, actorUID);\n  } else {\n    throw new Error('Not implemented yet. (Update surface)');\n  }\n}\nfunction _removeSurfaceFromToolGroupViewports(toolGroupId, segmentationRepresentationUID) {\n  const toolGroup = getToolGroup(toolGroupId);\n  if (toolGroup === undefined) {\n    throw new Error(`ToolGroup with ToolGroupId ${toolGroupId} does not exist`);\n  }\n  const {\n    viewportsInfo\n  } = toolGroup;\n  for (const viewportInfo of viewportsInfo) {\n    const {\n      viewportId,\n      renderingEngineId\n    } = viewportInfo;\n    const enabledElement = getEnabledElementByIds(viewportId, renderingEngineId);\n    removeSurfaceFromElement(enabledElement.viewport.element, segmentationRepresentationUID);\n  }\n}\nexport default {\n  render,\n  removeSegmentationRepresentation\n};","map":{"version":3,"names":["cache","getEnabledElementByIds","Enums","SegmentationState","Representations","getToolGroup","removeSurfaceFromElement","addSurfaceToElement","removeSegmentationRepresentation","toolGroupId","segmentationRepresentationUID","renderImmediate","_removeSurfaceFromToolGroupViewports","viewportsInfo","getViewportsInfo","forEach","viewportId","renderingEngineId","enabledElement","viewport","render","representation","toolGroupConfig","colorLUTIndex","active","segmentationId","segmentsHidden","segmentation","getSegmentation","SurfaceData","representationData","Surface","geometryId","console","warn","geometry","getGeometry","Error","type","GeometryType","SURFACE","data","surface","surfaceUID","id","_renderSurface","resetCamera","actorUID","actorEntry","getActor","element","toolGroup","undefined","viewportInfo"],"sources":["../../../../../src/tools/displayTools/Surface/surfaceDisplay.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}