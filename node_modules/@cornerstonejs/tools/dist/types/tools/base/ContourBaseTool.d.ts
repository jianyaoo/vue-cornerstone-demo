import type { Types } from '@cornerstonejs/core';
import { Annotation, ContourAnnotation, EventTypes, PublicToolProps, ToolProps, SVGDrawingHelper } from '../../types';
import AnnotationTool from './AnnotationTool';
declare abstract class ContourBaseTool extends AnnotationTool {
    constructor(toolProps: PublicToolProps, defaultToolProps: ToolProps);
    renderAnnotation(enabledElement: Types.IEnabledElement, svgDrawingHelper: SVGDrawingHelper): boolean;
    protected createAnnotation(evt: EventTypes.InteractionEventType): Annotation;
    protected addAnnotation(annotation: Annotation, element: HTMLDivElement): string;
    protected cancelAnnotation(annotation: Annotation): void;
    protected getPolylinePoints(annotation: ContourAnnotation): Types.Point3[];
    protected renderAnnotationInstance(renderContext: {
        enabledElement: Types.IEnabledElement;
        targetId: string;
        annotation: Annotation;
        annotationStyle: Record<string, any>;
        svgDrawingHelper: SVGDrawingHelper;
    }): boolean;
}
export { ContourBaseTool as default, ContourBaseTool };
//# sourceMappingURL=ContourBaseTool.d.ts.map