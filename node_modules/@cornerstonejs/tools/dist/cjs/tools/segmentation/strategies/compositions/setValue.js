"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const StrategyCallbacks_1 = __importDefault(require("../../../../enums/StrategyCallbacks"));
exports.default = {
    [StrategyCallbacks_1.default.INTERNAL_setValue]: (operationData, { value, index }) => {
        const { segmentsLocked, segmentIndex, previewVoxelManager: previewVoxelManager, previewSegmentIndex, segmentationVoxelManager: segmentationVoxelManager, } = operationData;
        const existingValue = segmentationVoxelManager.getAtIndex(index);
        if (segmentIndex === null) {
            const oldValue = previewVoxelManager.getAtIndex(index);
            if (oldValue !== undefined) {
                previewVoxelManager.setAtIndex(index, oldValue);
            }
            return;
        }
        if (existingValue === segmentIndex || segmentsLocked.includes(value)) {
            return;
        }
        if (existingValue === previewSegmentIndex) {
            if (previewVoxelManager.getAtIndex(index) === undefined) {
                segmentationVoxelManager.setAtIndex(index, segmentIndex);
            }
            else {
                return;
            }
        }
        const useSegmentIndex = previewSegmentIndex !== null && previewSegmentIndex !== void 0 ? previewSegmentIndex : segmentIndex;
        previewVoxelManager.setAtIndex(index, useSegmentIndex);
    },
};
//# sourceMappingURL=setValue.js.map