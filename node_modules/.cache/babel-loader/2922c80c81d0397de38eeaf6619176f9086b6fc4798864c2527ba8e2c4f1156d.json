{"ast":null,"code":"import { cache, utilities as csUtils } from '@cornerstonejs/core';\nimport { triggerSegmentationDataModified } from '../../../stateManagement/segmentation/triggerSegmentationEvents';\nimport compositions from './compositions';\nimport { getStrategyData } from './utils/getStrategyData';\nimport { isVolumeSegmentation } from './utils/stackVolumeCheck';\nimport { StrategyCallbacks } from '../../../enums';\nconst {\n  VoxelManager\n} = csUtils;\nexport default class BrushStrategy {\n  constructor(name, ...initializers) {\n    this._initialize = [];\n    this._fill = [];\n    this._onInteractionStart = [];\n    this.fill = (enabledElement, operationData) => {\n      const initializedData = this.initialize(enabledElement, operationData);\n      const {\n        strategySpecificConfiguration = {},\n        centerIJK\n      } = initializedData;\n      if (csUtils.isEqual(centerIJK, strategySpecificConfiguration.centerIJK)) {\n        return operationData.preview;\n      } else {\n        strategySpecificConfiguration.centerIJK = centerIJK;\n      }\n      this._fill.forEach(func => func(initializedData));\n      const {\n        segmentationVoxelManager,\n        previewVoxelManager,\n        previewSegmentIndex\n      } = initializedData;\n      triggerSegmentationDataModified(initializedData.segmentationId, segmentationVoxelManager.getArrayOfSlices());\n      if (!previewSegmentIndex || !previewVoxelManager.modifiedSlices.size) {\n        return null;\n      }\n      return initializedData.preview || initializedData;\n    };\n    this.onInteractionStart = (enabledElement, operationData) => {\n      const {\n        preview\n      } = operationData;\n      if (preview?.isPreviewFromHover) {\n        preview.isPreviewFromHover = false;\n        return;\n      }\n      const initializedData = this.initialize(enabledElement, operationData);\n      this._onInteractionStart.forEach(func => func.call(this, initializedData));\n    };\n    this.configurationName = name;\n    this.compositions = initializers;\n    initializers.forEach(initializer => {\n      const result = typeof initializer === 'function' ? initializer() : initializer;\n      if (!result) {\n        return;\n      }\n      for (const key in result) {\n        if (!BrushStrategy.childFunctions[key]) {\n          throw new Error(`Didn't find ${key} as a brush strategy`);\n        }\n        BrushStrategy.childFunctions[key](this, result[key]);\n      }\n    });\n    this.strategyFunction = (enabledElement, operationData) => this.fill(enabledElement, operationData);\n    for (const key of Object.keys(BrushStrategy.childFunctions)) {\n      this.strategyFunction[key] = this[key];\n    }\n  }\n  static {\n    this.COMPOSITIONS = compositions;\n  }\n  static {\n    this.childFunctions = {\n      [StrategyCallbacks.OnInteractionStart]: addListMethod(StrategyCallbacks.OnInteractionStart, StrategyCallbacks.Initialize),\n      [StrategyCallbacks.OnInteractionEnd]: addListMethod(StrategyCallbacks.OnInteractionEnd, StrategyCallbacks.Initialize),\n      [StrategyCallbacks.Fill]: addListMethod(StrategyCallbacks.Fill),\n      [StrategyCallbacks.Initialize]: addListMethod(StrategyCallbacks.Initialize),\n      [StrategyCallbacks.CreateIsInThreshold]: addSingletonMethod(StrategyCallbacks.CreateIsInThreshold),\n      [StrategyCallbacks.AcceptPreview]: addListMethod(StrategyCallbacks.AcceptPreview, StrategyCallbacks.Initialize),\n      [StrategyCallbacks.RejectPreview]: addListMethod(StrategyCallbacks.RejectPreview, StrategyCallbacks.Initialize),\n      [StrategyCallbacks.INTERNAL_setValue]: addSingletonMethod(StrategyCallbacks.INTERNAL_setValue),\n      [StrategyCallbacks.Preview]: addSingletonMethod(StrategyCallbacks.Preview, false),\n      compositions: null\n    };\n  }\n  initialize(enabledElement, operationData) {\n    const {\n      viewport\n    } = enabledElement;\n    const data = getStrategyData({\n      operationData,\n      viewport\n    });\n    if (!data) {\n      console.warn('No data found for BrushStrategy');\n      return operationData.preview;\n    }\n    if (isVolumeSegmentation(operationData)) {\n      const {\n        referencedVolumeId,\n        volumeId\n      } = operationData;\n      const imageVolume = cache.getVolume(referencedVolumeId);\n      const segmentation = cache.getVolume(volumeId);\n      if (!csUtils.isEqual(segmentation.dimensions, imageVolume.dimensions) || !csUtils.isEqual(segmentation.direction, imageVolume.direction)) {\n        throw new Error('Only source data the same dimensions/size/orientation as the segmentation currently supported.');\n      }\n    }\n    const {\n      imageVoxelManager,\n      segmentationVoxelManager,\n      segmentationImageData\n    } = data;\n    const previewVoxelManager = operationData.preview?.previewVoxelManager || VoxelManager.createHistoryVoxelManager(segmentationVoxelManager);\n    const previewEnabled = !!operationData.previewColors;\n    const previewSegmentIndex = previewEnabled ? 255 : undefined;\n    const initializedData = {\n      previewSegmentIndex,\n      ...operationData,\n      enabledElement,\n      imageVoxelManager,\n      segmentationVoxelManager,\n      segmentationImageData,\n      previewVoxelManager,\n      viewport,\n      centerWorld: null,\n      brushStrategy: this\n    };\n    this._initialize.forEach(func => func(initializedData));\n    return initializedData;\n  }\n}\nfunction addListMethod(name, createInitialized) {\n  const listName = `_${name}`;\n  return (brushStrategy, func) => {\n    brushStrategy[listName] ||= [];\n    brushStrategy[listName].push(func);\n    brushStrategy[name] ||= createInitialized ? (enabledElement, operationData) => {\n      const initializedData = brushStrategy[createInitialized](enabledElement, operationData);\n      brushStrategy[listName].forEach(func => func.call(brushStrategy, initializedData));\n    } : operationData => {\n      brushStrategy[listName].forEach(func => func.call(brushStrategy, operationData));\n    };\n  };\n}\nfunction addSingletonMethod(name, isInitialized = true) {\n  return (brushStrategy, func) => {\n    if (brushStrategy[name]) {\n      throw new Error(`The singleton method ${name} already exists`);\n    }\n    brushStrategy[name] = isInitialized ? func : (enabledElement, operationData) => {\n      operationData.enabledElement = enabledElement;\n      return func.call(brushStrategy, operationData);\n    };\n  };\n}","map":{"version":3,"names":["cache","utilities","csUtils","triggerSegmentationDataModified","compositions","getStrategyData","isVolumeSegmentation","StrategyCallbacks","VoxelManager","BrushStrategy","constructor","name","initializers","_initialize","_fill","_onInteractionStart","fill","enabledElement","operationData","initializedData","initialize","strategySpecificConfiguration","centerIJK","isEqual","preview","forEach","func","segmentationVoxelManager","previewVoxelManager","previewSegmentIndex","segmentationId","getArrayOfSlices","modifiedSlices","size","onInteractionStart","isPreviewFromHover","call","configurationName","initializer","result","key","childFunctions","Error","strategyFunction","Object","keys","COMPOSITIONS","OnInteractionStart","addListMethod","Initialize","OnInteractionEnd","Fill","CreateIsInThreshold","addSingletonMethod","AcceptPreview","RejectPreview","INTERNAL_setValue","Preview","viewport","data","console","warn","referencedVolumeId","volumeId","imageVolume","getVolume","segmentation","dimensions","direction","imageVoxelManager","segmentationImageData","createHistoryVoxelManager","previewEnabled","previewColors","undefined","centerWorld","brushStrategy","createInitialized","listName","push","isInitialized"],"sources":["../../../../../src/tools/segmentation/strategies/BrushStrategy.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}