{"ast":null,"code":"import AnnotationDisplayTool from './base/AnnotationDisplayTool';\nimport { vec3 } from 'gl-matrix';\nimport { getEnabledElementByIds, getRenderingEngines, utilities as csUtils } from '@cornerstonejs/core';\nimport { addAnnotation, getAnnotations } from '../stateManagement/annotation/annotationState';\nimport { drawLine as drawLineSvg, drawTextBox as drawTextBoxSvg } from '../drawingSvg';\nimport { getToolGroup } from '../store/ToolGroupManager';\nconst SCALEOVERLAYTOOL_ID = 'scaleoverlay-viewport';\nconst viewportsWithAnnotations = [];\nclass ScaleOverlayTool extends AnnotationDisplayTool {\n  constructor(toolProps = {}, defaultToolProps = {\n    configuration: {\n      viewportId: '',\n      scaleLocation: 'bottom'\n    }\n  }) {\n    super(toolProps, defaultToolProps);\n    this.editData = {};\n    this._init = () => {\n      const renderingEngines = getRenderingEngines();\n      const renderingEngine = renderingEngines[0];\n      if (!renderingEngine) {\n        return;\n      }\n      const viewportIds = getToolGroup(this.toolGroupId).viewportsInfo;\n      if (!viewportIds) {\n        return;\n      }\n      const enabledElements = viewportIds.map(e => getEnabledElementByIds(e.viewportId, e.renderingEngineId));\n      let {\n        viewport\n      } = enabledElements[0];\n      const {\n        FrameOfReferenceUID\n      } = enabledElements[0];\n      if (this.configuration.viewportId) {\n        enabledElements.forEach(element => {\n          if (element.viewport.id == this.configuration.viewportId) {\n            viewport = element.viewport;\n          }\n        });\n      }\n      if (!viewport) {\n        return;\n      }\n      const {\n        viewUp,\n        viewPlaneNormal\n      } = viewport.getCamera();\n      const viewportCanvasCornersInWorld = csUtils.getViewportImageCornersInWorld(viewport);\n      let annotation = this.editData.annotation;\n      const annotations = getAnnotations(this.getToolName(), viewport.element);\n      if (annotations.length) {\n        annotation = annotations.filter(thisAnnotation => thisAnnotation.data.viewportId == viewport.id)[0];\n      }\n      if (!viewportsWithAnnotations.includes(viewport.id)) {\n        const newAnnotation = {\n          metadata: {\n            toolName: this.getToolName(),\n            viewPlaneNormal: [...viewPlaneNormal],\n            viewUp: [...viewUp],\n            FrameOfReferenceUID,\n            referencedImageId: null\n          },\n          data: {\n            handles: {\n              points: viewportCanvasCornersInWorld\n            },\n            viewportId: viewport.id\n          }\n        };\n        viewportsWithAnnotations.push(viewport.id);\n        addAnnotation(newAnnotation, viewport.element);\n        annotation = newAnnotation;\n      } else if (this.editData.annotation.data.viewportId == viewport.id) {\n        this.editData.annotation.data.handles.points = viewportCanvasCornersInWorld;\n        this.editData.annotation.data.viewportId = viewport.id;\n      }\n      this.editData = {\n        viewport,\n        renderingEngine,\n        annotation\n      };\n    };\n    this.onSetToolEnabled = () => {\n      this._init();\n    };\n    this.onCameraModified = evt => {\n      this.configuration.viewportId = evt.detail.viewportId;\n      this._init();\n    };\n    this.computeScaleSize = (worldWidthViewport, worldHeightViewport, location) => {\n      const scaleSizes = [16000, 8000, 4000, 2000, 1000, 500, 250, 100, 50, 25, 10, 5, 2];\n      let currentScaleSize;\n      if (location == 'top' || location == 'bottom') {\n        currentScaleSize = scaleSizes.filter(scaleSize => scaleSize < worldWidthViewport * 0.6 && scaleSize > worldWidthViewport * 0.2);\n      } else {\n        currentScaleSize = scaleSizes.filter(scaleSize => scaleSize < worldHeightViewport * 0.6 && scaleSize > worldHeightViewport * 0.2);\n      }\n      return currentScaleSize[0];\n    };\n    this.computeEndScaleTicks = (canvasCoordinates, location) => {\n      const locationTickOffset = {\n        bottom: [[0, -10], [0, -10]],\n        top: [[0, 10], [0, 10]],\n        left: [[0, 0], [10, 0]],\n        right: [[0, 0], [-10, 0]]\n      };\n      const endTick1 = [[canvasCoordinates[1][0] + locationTickOffset[location][0][0], canvasCoordinates[1][1] + locationTickOffset[location][0][0]], [canvasCoordinates[1][0] + locationTickOffset[location][1][0], canvasCoordinates[1][1] + locationTickOffset[location][1][1]]];\n      const endTick2 = [[canvasCoordinates[0][0] + locationTickOffset[location][0][0], canvasCoordinates[0][1] + locationTickOffset[location][0][0]], [canvasCoordinates[0][0] + locationTickOffset[location][1][0], canvasCoordinates[0][1] + locationTickOffset[location][1][1]]];\n      return {\n        endTick1: endTick1,\n        endTick2: endTick2\n      };\n    };\n    this.computeInnerScaleTicks = (scaleSize, location, annotationUID, leftTick, rightTick) => {\n      let canvasScaleSize;\n      if (location == 'bottom' || location == 'top') {\n        canvasScaleSize = rightTick[0][0] - leftTick[0][0];\n      } else if (location == 'left' || location == 'right') {\n        canvasScaleSize = rightTick[0][1] - leftTick[0][1];\n      }\n      const tickIds = [];\n      const tickUIDs = [];\n      const tickCoordinates = [];\n      let numberSmallTicks = scaleSize;\n      if (scaleSize >= 50) {\n        numberSmallTicks = scaleSize / 10;\n      }\n      const tickSpacing = canvasScaleSize / numberSmallTicks;\n      for (let i = 0; i < numberSmallTicks - 1; i++) {\n        const locationOffset = {\n          bottom: [[tickSpacing * (i + 1), 0], [tickSpacing * (i + 1), 5]],\n          top: [[tickSpacing * (i + 1), 0], [tickSpacing * (i + 1), -5]],\n          left: [[0, tickSpacing * (i + 1)], [-5, tickSpacing * (i + 1)]],\n          right: [[0, tickSpacing * (i + 1)], [5, tickSpacing * (i + 1)]]\n        };\n        tickIds.push(`${annotationUID}-tick${i}`);\n        tickUIDs.push(`tick${i}`);\n        if ((i + 1) % 5 == 0) {\n          tickCoordinates.push([[leftTick[0][0] + locationOffset[location][0][0], leftTick[0][1] + locationOffset[location][0][1]], [leftTick[1][0] + locationOffset[location][0][0], leftTick[1][1] + locationOffset[location][0][1]]]);\n        } else {\n          tickCoordinates.push([[leftTick[0][0] + locationOffset[location][0][0], leftTick[0][1] + locationOffset[location][0][1]], [leftTick[1][0] + locationOffset[location][1][0], leftTick[1][1] + locationOffset[location][1][1]]]);\n        }\n      }\n      return {\n        tickIds,\n        tickUIDs,\n        tickCoordinates\n      };\n    };\n    this.computeWorldScaleCoordinates = (scaleSize, location, pointSet) => {\n      let worldCoordinates;\n      let topBottomVec = vec3.subtract(vec3.create(), pointSet[0], pointSet[1]);\n      topBottomVec = vec3.normalize(vec3.create(), topBottomVec);\n      let topRightVec = vec3.subtract(vec3.create(), pointSet[2], pointSet[0]);\n      topRightVec = vec3.normalize(vec3.create(), topRightVec);\n      const midpointLocation = {\n        bottom: [pointSet[1], pointSet[2]],\n        top: [pointSet[0], pointSet[3]],\n        right: [pointSet[2], pointSet[3]],\n        left: [pointSet[0], pointSet[1]]\n      };\n      const midpoint = vec3.add(vec3.create(), midpointLocation[location][0], midpointLocation[location][0]).map(i => i / 2);\n      const offset = scaleSize / 2 / Math.sqrt(Math.pow(topBottomVec[0], 2) + Math.pow(topBottomVec[1], 2) + Math.pow(topBottomVec[2], 2));\n      if (location == 'top' || location == 'bottom') {\n        worldCoordinates = [vec3.subtract(vec3.create(), midpoint, topRightVec.map(i => i * offset)), vec3.add(vec3.create(), midpoint, topRightVec.map(i => i * offset))];\n      } else if (location == 'left' || location == 'right') {\n        worldCoordinates = [vec3.add(vec3.create(), midpoint, topBottomVec.map(i => i * offset)), vec3.subtract(vec3.create(), midpoint, topBottomVec.map(i => i * offset))];\n      }\n      return worldCoordinates;\n    };\n    this.computeCanvasScaleCoordinates = (canvasSize, canvasCoordinates, vscaleBounds, hscaleBounds, location) => {\n      let scaleCanvasCoordinates;\n      if (location == 'top' || location == 'bottom') {\n        const worldDistanceOnCanvas = canvasCoordinates[0][0] - canvasCoordinates[1][0];\n        scaleCanvasCoordinates = [[canvasSize.width / 2 - worldDistanceOnCanvas / 2, vscaleBounds.height], [canvasSize.width / 2 + worldDistanceOnCanvas / 2, vscaleBounds.height]];\n      } else if (location == 'left' || location == 'right') {\n        const worldDistanceOnCanvas = canvasCoordinates[0][1] - canvasCoordinates[1][1];\n        scaleCanvasCoordinates = [[hscaleBounds.width, canvasSize.height / 2 - worldDistanceOnCanvas / 2], [hscaleBounds.width, canvasSize.height / 2 + worldDistanceOnCanvas / 2]];\n      }\n      return scaleCanvasCoordinates;\n    };\n    this.computeScaleBounds = (canvasSize, horizontalReduction, verticalReduction, location) => {\n      const hReduction = horizontalReduction * Math.min(1000, canvasSize.width);\n      const vReduction = verticalReduction * Math.min(1000, canvasSize.height);\n      const locationBounds = {\n        bottom: [-vReduction, -hReduction],\n        top: [vReduction, hReduction],\n        left: [vReduction, hReduction],\n        right: [-vReduction, -hReduction]\n      };\n      const canvasBounds = {\n        bottom: [canvasSize.height, canvasSize.width],\n        top: [0, canvasSize.width],\n        left: [canvasSize.height, 0],\n        right: [canvasSize.height, canvasSize.width]\n      };\n      return {\n        height: canvasBounds[location][0] + locationBounds[location][0],\n        width: canvasBounds[location][1] + locationBounds[location][1]\n      };\n    };\n  }\n  renderAnnotation(enabledElement, svgDrawingHelper) {\n    if (!this.editData.viewport) {\n      return;\n    }\n    const location = this.configuration.scaleLocation;\n    const {\n      viewport\n    } = enabledElement;\n    const annotations = getAnnotations(this.getToolName(), viewport.element);\n    const annotation = annotations.filter(thisAnnotation => thisAnnotation.data.viewportId == viewport.id)[0];\n    const canvas = enabledElement.viewport.canvas;\n    const renderStatus = false;\n    if (!viewport) {\n      return renderStatus;\n    }\n    const styleSpecifier = {\n      toolGroupId: this.toolGroupId,\n      toolName: this.getToolName(),\n      viewportId: enabledElement.viewport.id\n    };\n    const canvasSize = {\n      width: canvas.width,\n      height: canvas.height\n    };\n    const topLeft = annotation.data.handles.points[0];\n    const topRight = annotation.data.handles.points[1];\n    const bottomLeft = annotation.data.handles.points[2];\n    const bottomRight = annotation.data.handles.points[3];\n    const pointSet1 = [topLeft, bottomLeft, topRight, bottomRight];\n    const worldWidthViewport = vec3.distance(bottomLeft, bottomRight);\n    const worldHeightViewport = vec3.distance(topLeft, bottomLeft);\n    const hscaleBounds = this.computeScaleBounds(canvasSize, 0.05, 0.05, location);\n    const vscaleBounds = this.computeScaleBounds(canvasSize, 0.05, 0.05, location);\n    const scaleSize = this.computeScaleSize(worldWidthViewport, worldHeightViewport, location);\n    const canvasCoordinates = this.computeWorldScaleCoordinates(scaleSize, location, pointSet1).map(world => viewport.worldToCanvas(world));\n    const scaleCanvasCoordinates = this.computeCanvasScaleCoordinates(canvasSize, canvasCoordinates, vscaleBounds, hscaleBounds, location);\n    const scaleTicks = this.computeEndScaleTicks(scaleCanvasCoordinates, location);\n    const {\n      annotationUID\n    } = annotation;\n    styleSpecifier.annotationUID = annotationUID;\n    const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n    const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n    const color = this.getStyle('color', styleSpecifier, annotation);\n    const shadow = this.getStyle('shadow', styleSpecifier, annotation);\n    const scaleId = `${annotationUID}-scaleline`;\n    const scaleLineUID = '1';\n    drawLineSvg(svgDrawingHelper, annotationUID, scaleLineUID, scaleCanvasCoordinates[0], scaleCanvasCoordinates[1], {\n      color,\n      width: lineWidth,\n      lineDash,\n      shadow\n    }, scaleId);\n    const leftTickId = `${annotationUID}-left`;\n    const leftTickUID = '2';\n    drawLineSvg(svgDrawingHelper, annotationUID, leftTickUID, scaleTicks.endTick1[0], scaleTicks.endTick1[1], {\n      color,\n      width: lineWidth,\n      lineDash,\n      shadow\n    }, leftTickId);\n    const rightTickId = `${annotationUID}-right`;\n    const rightTickUID = '3';\n    drawLineSvg(svgDrawingHelper, annotationUID, rightTickUID, scaleTicks.endTick2[0], scaleTicks.endTick2[1], {\n      color,\n      width: lineWidth,\n      lineDash,\n      shadow\n    }, rightTickId);\n    const locationTextOffest = {\n      bottom: [-10, -42],\n      top: [-12, -35],\n      left: [-40, -20],\n      right: [-50, -20]\n    };\n    const textCanvasCoordinates = [scaleCanvasCoordinates[0][0] + locationTextOffest[location][0], scaleCanvasCoordinates[0][1] + locationTextOffest[location][1]];\n    const textBoxLines = this._getTextLines(scaleSize);\n    const {\n      tickIds,\n      tickUIDs,\n      tickCoordinates\n    } = this.computeInnerScaleTicks(scaleSize, location, annotationUID, scaleTicks.endTick1, scaleTicks.endTick2);\n    for (let i = 0; i < tickUIDs.length; i++) {\n      drawLineSvg(svgDrawingHelper, annotationUID, tickUIDs[i], tickCoordinates[i][0], tickCoordinates[i][1], {\n        color,\n        width: lineWidth,\n        lineDash,\n        shadow\n      }, tickIds[i]);\n    }\n    const textUID = 'text0';\n    drawTextBoxSvg(svgDrawingHelper, annotationUID, textUID, textBoxLines, [textCanvasCoordinates[0], textCanvasCoordinates[1]], {\n      fontFamily: 'Helvetica Neue, Helvetica, Arial, sans-serif',\n      fontSize: '14px',\n      lineDash: '2,3',\n      lineWidth: '1',\n      shadow: true,\n      color: color\n    });\n    return renderStatus;\n  }\n  _getTextLines(scaleSize) {\n    let scaleSizeDisplayValue;\n    let scaleSizeUnits;\n    if (scaleSize >= 50) {\n      scaleSizeDisplayValue = scaleSize / 10;\n      scaleSizeUnits = ' cm';\n    } else {\n      scaleSizeDisplayValue = scaleSize;\n      scaleSizeUnits = ' mm';\n    }\n    const textLines = [scaleSizeDisplayValue.toString().concat(scaleSizeUnits)];\n    return textLines;\n  }\n}\nScaleOverlayTool.toolName = 'ScaleOverlay';\nexport default ScaleOverlayTool;","map":{"version":3,"names":["AnnotationDisplayTool","vec3","getEnabledElementByIds","getRenderingEngines","utilities","csUtils","addAnnotation","getAnnotations","drawLine","drawLineSvg","drawTextBox","drawTextBoxSvg","getToolGroup","SCALEOVERLAYTOOL_ID","viewportsWithAnnotations","ScaleOverlayTool","constructor","toolProps","defaultToolProps","configuration","viewportId","scaleLocation","editData","_init","renderingEngines","renderingEngine","viewportIds","toolGroupId","viewportsInfo","enabledElements","map","e","renderingEngineId","viewport","FrameOfReferenceUID","forEach","element","id","viewUp","viewPlaneNormal","getCamera","viewportCanvasCornersInWorld","getViewportImageCornersInWorld","annotation","annotations","getToolName","length","filter","thisAnnotation","data","includes","newAnnotation","metadata","toolName","referencedImageId","handles","points","push","onSetToolEnabled","onCameraModified","evt","detail","computeScaleSize","worldWidthViewport","worldHeightViewport","location","scaleSizes","currentScaleSize","scaleSize","computeEndScaleTicks","canvasCoordinates","locationTickOffset","bottom","top","left","right","endTick1","endTick2","computeInnerScaleTicks","annotationUID","leftTick","rightTick","canvasScaleSize","tickIds","tickUIDs","tickCoordinates","numberSmallTicks","tickSpacing","i","locationOffset","computeWorldScaleCoordinates","pointSet","worldCoordinates","topBottomVec","subtract","create","normalize","topRightVec","midpointLocation","midpoint","add","offset","Math","sqrt","pow","computeCanvasScaleCoordinates","canvasSize","vscaleBounds","hscaleBounds","scaleCanvasCoordinates","worldDistanceOnCanvas","width","height","computeScaleBounds","horizontalReduction","verticalReduction","hReduction","min","vReduction","locationBounds","canvasBounds","renderAnnotation","enabledElement","svgDrawingHelper","canvas","renderStatus","styleSpecifier","topLeft","topRight","bottomLeft","bottomRight","pointSet1","distance","world","worldToCanvas","scaleTicks","lineWidth","getStyle","lineDash","color","shadow","scaleId","scaleLineUID","leftTickId","leftTickUID","rightTickId","rightTickUID","locationTextOffest","textCanvasCoordinates","textBoxLines","_getTextLines","textUID","fontFamily","fontSize","scaleSizeDisplayValue","scaleSizeUnits","textLines","toString","concat"],"sources":["../../../src/tools/ScaleOverlayTool.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}