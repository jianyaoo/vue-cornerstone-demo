{"ast":null,"code":"import BaseVolumeViewport from '../BaseVolumeViewport';\nasync function setVolumesForViewports(renderingEngine, volumeInputs, viewportIds, immediateRender = false, suppressEvents = false) {\n  viewportIds.forEach(viewportId => {\n    const viewport = renderingEngine.getViewport(viewportId);\n    if (!viewport) {\n      throw new Error(`Viewport with Id ${viewportId} does not exist`);\n    }\n    if (!(viewport instanceof BaseVolumeViewport)) {\n      throw new Error('setVolumesForViewports only supports VolumeViewport and VolumeViewport3D');\n    }\n  });\n  const setVolumePromises = viewportIds.map(async viewportId => {\n    const viewport = renderingEngine.getViewport(viewportId);\n    await viewport.setVolumes(volumeInputs, immediateRender, suppressEvents);\n  });\n  await Promise.all(setVolumePromises);\n  return;\n}\nexport default setVolumesForViewports;","map":{"version":3,"names":["BaseVolumeViewport","setVolumesForViewports","renderingEngine","volumeInputs","viewportIds","immediateRender","suppressEvents","forEach","viewportId","viewport","getViewport","Error","setVolumePromises","map","setVolumes","Promise","all"],"sources":["../../../../src/RenderingEngine/helpers/setVolumesForViewports.ts"],"sourcesContent":[null],"mappings":"AAAA,OAAOA,kBAAkB,MAAM,uBAAuB;AAmBtD,eAAeC,sBAAsBA,CACnCC,eAAiC,EACjCC,YAAiC,EACjCC,WAA0B,EAC1BC,eAAe,GAAG,KAAK,EACvBC,cAAc,GAAG,KAAK;EAGtBF,WAAW,CAACG,OAAO,CAAEC,UAAU,IAAI;IACjC,MAAMC,QAAQ,GAAGP,eAAe,CAACQ,WAAW,CAACF,UAAU,CAAC;IAExD,IAAI,CAACC,QAAQ,EAAE;MACb,MAAM,IAAIE,KAAK,CAAC,oBAAoBH,UAAU,iBAAiB,CAAC;;IAIlE,IAAI,EAAEC,QAAQ,YAAYT,kBAAkB,CAAC,EAAE;MAC7C,MAAM,IAAIW,KAAK,CACb,0EAA0E,CAC3E;;EAEL,CAAC,CAAC;EAEF,MAAMC,iBAAiB,GAAGR,WAAW,CAACS,GAAG,CAAC,MAAOL,UAAU,IAAI;IAC7D,MAAMC,QAAQ,GAAGP,eAAe,CAACQ,WAAW,CAACF,UAAU,CAAoB;IAE3E,MAAMC,QAAQ,CAACK,UAAU,CAACX,YAAY,EAAEE,eAAe,EAAEC,cAAc,CAAC;EAC1E,CAAC,CAAC;EAEF,MAAMS,OAAO,CAACC,GAAG,CAACJ,iBAAiB,CAAC;EAEpC;AACF;AAEA,eAAeX,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}