{"ast":null,"code":"import \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nfunction getBufferConfiguration(targetBufferType, length, options = {}) {\n  const {\n    use16BitTexture = false,\n    isVolumeBuffer = false\n  } = options;\n  switch (targetBufferType) {\n    case 'Float32Array':\n      return {\n        numBytes: length * 4,\n        TypedArrayConstructor: Float32Array\n      };\n    case 'Uint8Array':\n      return {\n        numBytes: length,\n        TypedArrayConstructor: Uint8Array\n      };\n    case 'Uint16Array':\n      if (!isVolumeBuffer) {\n        return {\n          numBytes: length * 2,\n          TypedArrayConstructor: Uint16Array\n        };\n      } else {\n        if (use16BitTexture) {\n          return {\n            numBytes: length * 2,\n            TypedArrayConstructor: Uint16Array\n          };\n        } else {\n          console.warn('Uint16Array is not supported for volume rendering, switching back to Float32Array');\n          return {\n            numBytes: length * 4,\n            TypedArrayConstructor: Float32Array\n          };\n        }\n      }\n    case 'Int16Array':\n      if (!isVolumeBuffer) {\n        return {\n          numBytes: length * 2,\n          TypedArrayConstructor: Int16Array\n        };\n      } else {\n        if (use16BitTexture) {\n          return {\n            numBytes: length * 2,\n            TypedArrayConstructor: Int16Array\n          };\n        } else {\n          console.warn('Int16Array is not supported for volume rendering, switching back to Float32Array');\n          return {\n            numBytes: length * 4,\n            TypedArrayConstructor: Float32Array\n          };\n        }\n      }\n    default:\n      if (targetBufferType) {\n        throw new Error('TargetBuffer should be Float32Array, Uint8Array, Uint16Array, or Int16Array');\n      } else {\n        return {\n          numBytes: length * 4,\n          TypedArrayConstructor: Float32Array\n        };\n      }\n  }\n}\nexport { getBufferConfiguration };","map":{"version":3,"names":["getBufferConfiguration","targetBufferType","length","options","use16BitTexture","isVolumeBuffer","numBytes","TypedArrayConstructor","Float32Array","Uint8Array","Uint16Array","console","warn","Int16Array","Error"],"sources":["../../../src/utilities/getBufferConfiguration.ts"],"sourcesContent":[null],"mappings":";;;AAaA,SAASA,sBAAsBA,CAC7BC,gBAA2C,EAC3CC,MAAc,EACdC,OAAA,GAAmE,EAAE;EAOrE,MAAM;IAAEC,eAAe,GAAG,KAAK;IAAEC,cAAc,GAAG;EAAK,CAAE,GAAGF,OAAO;EAEnE,QAAQF,gBAAgB;IACtB,KAAK,cAAc;MACjB,OAAO;QAAEK,QAAQ,EAAEJ,MAAM,GAAG,CAAC;QAAEK,qBAAqB,EAAEC;MAAY,CAAE;IACtE,KAAK,YAAY;MACf,OAAO;QAAEF,QAAQ,EAAEJ,MAAM;QAAEK,qBAAqB,EAAEE;MAAU,CAAE;IAChE,KAAK,aAAa;MAChB,IAAI,CAACJ,cAAc,EAAE;QACnB,OAAO;UAAEC,QAAQ,EAAEJ,MAAM,GAAG,CAAC;UAAEK,qBAAqB,EAAEG;QAAW,CAAE;OACpE,MAAM;QACL,IAAIN,eAAe,EAAE;UACnB,OAAO;YAAEE,QAAQ,EAAEJ,MAAM,GAAG,CAAC;YAAEK,qBAAqB,EAAEG;UAAW,CAAE;SACpE,MAAM;UACLC,OAAO,CAACC,IAAI,CACV,mFAAmF,CACpF;UACD,OAAO;YAAEN,QAAQ,EAAEJ,MAAM,GAAG,CAAC;YAAEK,qBAAqB,EAAEC;UAAY,CAAE;;;IAG1E,KAAK,YAAY;MACf,IAAI,CAACH,cAAc,EAAE;QACnB,OAAO;UAAEC,QAAQ,EAAEJ,MAAM,GAAG,CAAC;UAAEK,qBAAqB,EAAEM;QAAU,CAAE;OACnE,MAAM;QACL,IAAIT,eAAe,EAAE;UACnB,OAAO;YAAEE,QAAQ,EAAEJ,MAAM,GAAG,CAAC;YAAEK,qBAAqB,EAAEM;UAAU,CAAE;SACnE,MAAM;UACLF,OAAO,CAACC,IAAI,CACV,kFAAkF,CACnF;UACD,OAAO;YAAEN,QAAQ,EAAEJ,MAAM,GAAG,CAAC;YAAEK,qBAAqB,EAAEC;UAAY,CAAE;;;IAG1E;MACE,IAAIP,gBAAgB,EAAE;QACpB,MAAM,IAAIa,KAAK,CACb,6EAA6E,CAC9E;OACF,MAAM;QAEL,OAAO;UAAER,QAAQ,EAAEJ,MAAM,GAAG,CAAC;UAAEK,qBAAqB,EAAEC;QAAY,CAAE;;;AAG5E;AAEA,SAASR,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}