{"ast":null,"code":"import { loadAndCacheImage } from '../loaders/imageLoader';\nimport * as metaData from '../metaData';\nimport { RequestType } from '../enums';\nimport imageLoadPoolManager from '../requestPool/imageLoadPoolManager';\nimport renderToCanvasGPU from './renderToCanvasGPU';\nimport renderToCanvasCPU from './renderToCanvasCPU';\nimport { getConfiguration } from '../init';\nexport default function loadImageToCanvas(options) {\n  const {\n    canvas,\n    imageId,\n    requestType = RequestType.Thumbnail,\n    priority = -5,\n    renderingEngineId = '_thumbnails',\n    useCPURendering = false\n  } = options;\n  const renderFn = useCPURendering ? renderToCanvasCPU : renderToCanvasGPU;\n  return new Promise((resolve, reject) => {\n    function successCallback(image, imageId) {\n      const {\n        modality\n      } = metaData.get('generalSeriesModule', imageId) || {};\n      image.isPreScaled = image.isPreScaled || image.preScale?.scaled;\n      renderFn(canvas, image, modality, renderingEngineId).then(() => {\n        resolve(imageId);\n      });\n    }\n    function errorCallback(error, imageId) {\n      console.error(error, imageId);\n      reject(error);\n    }\n    function sendRequest(imageId, imageIdIndex, options) {\n      return loadAndCacheImage(imageId, options).then(image => {\n        successCallback.call(this, image, imageId);\n      }, error => {\n        errorCallback.call(this, error, imageId);\n      });\n    }\n    const {\n      useNorm16Texture\n    } = getConfiguration().rendering;\n    const options = {\n      targetBuffer: {\n        type: useNorm16Texture ? undefined : 'Float32Array'\n      },\n      preScale: {\n        enabled: true\n      },\n      useRGBA: !!useCPURendering,\n      requestType\n    };\n    imageLoadPoolManager.addRequest(sendRequest.bind(null, imageId, null, options), requestType, {\n      imageId\n    }, priority);\n  });\n}","map":{"version":3,"names":["loadAndCacheImage","metaData","RequestType","imageLoadPoolManager","renderToCanvasGPU","renderToCanvasCPU","getConfiguration","loadImageToCanvas","options","canvas","imageId","requestType","Thumbnail","priority","renderingEngineId","useCPURendering","renderFn","Promise","resolve","reject","successCallback","image","modality","get","isPreScaled","preScale","scaled","then","errorCallback","error","console","sendRequest","imageIdIndex","call","useNorm16Texture","rendering","targetBuffer","type","undefined","enabled","useRGBA","addRequest","bind"],"sources":["../../../src/utilities/loadImageToCanvas.ts"],"sourcesContent":[null],"mappings":"AAEA,SAASA,iBAAiB,QAAQ,wBAAwB;AAC1D,OAAO,KAAKC,QAAQ,MAAM,aAAa;AACvC,SAASC,WAAW,QAAQ,UAAU;AACtC,OAAOC,oBAAoB,MAAM,qCAAqC;AACtE,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,SAASC,gBAAgB,QAAQ,SAAS;AA+B1C,eAAc,SAAUC,iBAAiBA,CACvCC,OAAyB;EAEzB,MAAM;IACJC,MAAM;IACNC,OAAO;IACPC,WAAW,GAAGT,WAAW,CAACU,SAAS;IACnCC,QAAQ,GAAG,CAAC,CAAC;IACbC,iBAAiB,GAAG,aAAa;IACjCC,eAAe,GAAG;EAAK,CACxB,GAAGP,OAAO;EAEX,MAAMQ,QAAQ,GAAGD,eAAe,GAAGV,iBAAiB,GAAGD,iBAAiB;EAExE,OAAO,IAAIa,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;IACrC,SAASC,eAAeA,CAACC,KAAa,EAAEX,OAAe;MACrD,MAAM;QAAEY;MAAQ,CAAE,GAAGrB,QAAQ,CAACsB,GAAG,CAAC,qBAAqB,EAAEb,OAAO,CAAC,IAAI,EAAE;MAEvEW,KAAK,CAACG,WAAW,GAAGH,KAAK,CAACG,WAAW,IAAIH,KAAK,CAACI,QAAQ,EAAEC,MAAM;MAE/DV,QAAQ,CAACP,MAAM,EAAEY,KAAK,EAAEC,QAAQ,EAAER,iBAAiB,CAAC,CAACa,IAAI,CAAC,MAAK;QAC7DT,OAAO,CAACR,OAAO,CAAC;MAClB,CAAC,CAAC;IACJ;IAEA,SAASkB,aAAaA,CAACC,KAAY,EAAEnB,OAAe;MAClDoB,OAAO,CAACD,KAAK,CAACA,KAAK,EAAEnB,OAAO,CAAC;MAC7BS,MAAM,CAACU,KAAK,CAAC;IACf;IAEA,SAASE,WAAWA,CAACrB,OAAO,EAAEsB,YAAY,EAAExB,OAAO;MACjD,OAAOR,iBAAiB,CAACU,OAAO,EAAEF,OAAO,CAAC,CAACmB,IAAI,CAC5CN,KAAK,IAAI;QACRD,eAAe,CAACa,IAAI,CAAC,IAAI,EAAEZ,KAAK,EAAEX,OAAO,CAAC;MAC5C,CAAC,EACAmB,KAAK,IAAI;QACRD,aAAa,CAACK,IAAI,CAAC,IAAI,EAAEJ,KAAK,EAAEnB,OAAO,CAAC;MAC1C,CAAC,CACF;IACH;IAEA,MAAM;MAAEwB;IAAgB,CAAE,GAAG5B,gBAAgB,EAAE,CAAC6B,SAAS;IAIzD,MAAM3B,OAAO,GAAG;MACd4B,YAAY,EAAE;QACZC,IAAI,EAAEH,gBAAgB,GAAGI,SAAS,GAAG;OACtC;MACDb,QAAQ,EAAE;QACRc,OAAO,EAAE;OACV;MACDC,OAAO,EAAE,CAAC,CAACzB,eAAe;MAC1BJ;KACD;IAEDR,oBAAoB,CAACsC,UAAU,CAC7BV,WAAW,CAACW,IAAI,CAAC,IAAI,EAAEhC,OAAO,EAAE,IAAI,EAAEF,OAAO,CAAC,EAC9CG,WAAW,EACX;MAAED;IAAO,CAAE,EACXG,QAAQ,CACT;EACH,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}