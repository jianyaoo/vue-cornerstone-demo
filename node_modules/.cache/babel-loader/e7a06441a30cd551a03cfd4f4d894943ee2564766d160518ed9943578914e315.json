{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport { mat4 } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUCamera methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUCamera(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUCamera');\n  publicAPI.getProjectionMatrix = (outMat, aspect, cRange, windowCenter) => {\n    mat4.identity(outMat);\n    if (model.renderable.getParallelProjection()) {\n      // set up a rectangular parallelipiped\n      const parallelScale = model.renderable.getParallelScale();\n      const width = parallelScale * aspect;\n      const height = parallelScale;\n      const xmin = (windowCenter[0] - 1.0) * width;\n      const xmax = (windowCenter[0] + 1.0) * width;\n      const ymin = (windowCenter[1] - 1.0) * height;\n      const ymax = (windowCenter[1] + 1.0) * height;\n      const xr = 1.0 / (xmax - xmin);\n      const yr = 1.0 / (ymax - ymin);\n      outMat[0] = 2.0 * xr;\n      outMat[5] = 2.0 * yr;\n      outMat[10] = 1.0 / (cRange[1] - cRange[0]);\n      outMat[12] = (xmax + xmin) * xr;\n      outMat[13] = (ymax + ymin) * yr;\n      outMat[14] = cRange[1] / (cRange[1] - cRange[0]);\n    } else {\n      const tmp = Math.tan(Math.PI * model.renderable.getViewAngle() / 360.0);\n      let width;\n      let height;\n      if (model.renderable.getUseHorizontalViewAngle() === true) {\n        width = cRange[0] * tmp;\n        height = cRange[0] * tmp / aspect;\n      } else {\n        width = cRange[0] * tmp * aspect;\n        height = cRange[0] * tmp;\n      }\n      const xmin = (windowCenter[0] - 1.0) * width;\n      const xmax = (windowCenter[0] + 1.0) * width;\n      const ymin = (windowCenter[1] - 1.0) * height;\n      const ymax = (windowCenter[1] + 1.0) * height;\n      outMat[0] = 2.0 * cRange[0] / (xmax - xmin);\n      outMat[5] = 2.0 * cRange[0] / (ymax - ymin);\n      outMat[12] = (xmin + xmax) / (xmax - xmin);\n      outMat[13] = (ymin + ymax) / (ymax - ymin);\n      outMat[10] = 0.0;\n      outMat[14] = cRange[0];\n      outMat[11] = -1.0;\n      outMat[15] = 0.0;\n    }\n  };\n  publicAPI.convertToOpenGLDepth = val => {\n    if (model.renderable.getParallelProjection()) {\n      return 1.0 - val;\n    }\n    const cRange = model.renderable.getClippingRangeByReference();\n    let zval = -cRange[0] / val;\n    zval = (cRange[0] + cRange[1]) / (cRange[1] - cRange[0]) + 2.0 * cRange[0] * cRange[1] / (zval * (cRange[1] - cRange[0]));\n    return 0.5 * zval + 0.5;\n  };\n  publicAPI.getKeyMatrices = webGPURenderer => {\n    // has the camera changed?\n    const ren = webGPURenderer.getRenderable();\n    const webGPURenderWindow = webGPURenderer.getParent();\n    if (Math.max(webGPURenderWindow.getMTime(), publicAPI.getMTime(), ren.getMTime(), model.renderable.getMTime(), webGPURenderer.getStabilizedTime()) > model.keyMatrixTime.getMTime()) {\n      const wcvc = model.renderable.getViewMatrix();\n      mat4.copy(model.keyMatrices.normalMatrix, wcvc);\n      // zero out translation\n      model.keyMatrices.normalMatrix[3] = 0.0;\n      model.keyMatrices.normalMatrix[7] = 0.0;\n      model.keyMatrices.normalMatrix[11] = 0.0;\n      mat4.invert(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\n      mat4.transpose(model.keyMatrices.wcvc, wcvc);\n      const center = webGPURenderer.getStabilizedCenterByReference();\n      mat4.translate(model.keyMatrices.scvc, model.keyMatrices.wcvc, center);\n      const aspectRatio = webGPURenderer.getAspectRatio();\n      const cRange = model.renderable.getClippingRangeByReference();\n      publicAPI.getProjectionMatrix(model.keyMatrices.vcpc, aspectRatio, cRange, model.renderable.getWindowCenterByReference());\n      mat4.multiply(model.keyMatrices.scpc, model.keyMatrices.vcpc, model.keyMatrices.scvc);\n      mat4.invert(model.keyMatrices.pcsc, model.keyMatrices.scpc);\n      model.keyMatrixTime.modified();\n    }\n    return model.keyMatrices;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  keyMatrixTime: null,\n  keyMatrices: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.keyMatrixTime = {};\n  macro.obj(model.keyMatrixTime);\n\n  // values always get set by the get method\n  model.keyMatrices = {\n    normalMatrix: new Float64Array(16),\n    vcpc: new Float64Array(16),\n    pcsc: new Float64Array(16),\n    wcvc: new Float64Array(16),\n    scpc: new Float64Array(16),\n    scvc: new Float64Array(16)\n  };\n\n  // Build VTK API\n  macro.setGet(publicAPI, model, ['keyMatrixTime']);\n\n  // Object methods\n  vtkWebGPUCamera(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance,\n  extend\n};\n\n// Register ourself to WebGPU backend if imported\nregisterOverride('vtkCamera', newInstance);\nexport { index as default, extend, newInstance };","map":{"version":3,"names":["mat4","m","macro","vtkViewNode","registerOverride","vtkWebGPUCamera","publicAPI","model","classHierarchy","push","getProjectionMatrix","outMat","aspect","cRange","windowCenter","identity","renderable","getParallelProjection","parallelScale","getParallelScale","width","height","xmin","xmax","ymin","ymax","xr","yr","tmp","Math","tan","PI","getViewAngle","getUseHorizontalViewAngle","convertToOpenGLDepth","val","getClippingRangeByReference","zval","getKeyMatrices","webGPURenderer","ren","getRenderable","webGPURenderWindow","getParent","max","getMTime","getStabilizedTime","keyMatrixTime","wcvc","getViewMatrix","copy","keyMatrices","normalMatrix","invert","transpose","center","getStabilizedCenterByReference","translate","scvc","aspectRatio","getAspectRatio","vcpc","getWindowCenterByReference","multiply","scpc","pcsc","modified","DEFAULT_VALUES","extend","initialValues","arguments","length","undefined","Object","assign","obj","Float64Array","setGet","newInstance","index","default"],"sources":["/Users/yzy/Documents/Playground/vue-cornerstone-demo/node_modules/@kitware/vtk.js/Rendering/WebGPU/Camera.js"],"sourcesContent":["import { mat4 } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUCamera methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUCamera(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUCamera');\n  publicAPI.getProjectionMatrix = (outMat, aspect, cRange, windowCenter) => {\n    mat4.identity(outMat);\n    if (model.renderable.getParallelProjection()) {\n      // set up a rectangular parallelipiped\n      const parallelScale = model.renderable.getParallelScale();\n      const width = parallelScale * aspect;\n      const height = parallelScale;\n      const xmin = (windowCenter[0] - 1.0) * width;\n      const xmax = (windowCenter[0] + 1.0) * width;\n      const ymin = (windowCenter[1] - 1.0) * height;\n      const ymax = (windowCenter[1] + 1.0) * height;\n      const xr = 1.0 / (xmax - xmin);\n      const yr = 1.0 / (ymax - ymin);\n      outMat[0] = 2.0 * xr;\n      outMat[5] = 2.0 * yr;\n      outMat[10] = 1.0 / (cRange[1] - cRange[0]);\n      outMat[12] = (xmax + xmin) * xr;\n      outMat[13] = (ymax + ymin) * yr;\n      outMat[14] = cRange[1] / (cRange[1] - cRange[0]);\n    } else {\n      const tmp = Math.tan(Math.PI * model.renderable.getViewAngle() / 360.0);\n      let width;\n      let height;\n      if (model.renderable.getUseHorizontalViewAngle() === true) {\n        width = cRange[0] * tmp;\n        height = cRange[0] * tmp / aspect;\n      } else {\n        width = cRange[0] * tmp * aspect;\n        height = cRange[0] * tmp;\n      }\n      const xmin = (windowCenter[0] - 1.0) * width;\n      const xmax = (windowCenter[0] + 1.0) * width;\n      const ymin = (windowCenter[1] - 1.0) * height;\n      const ymax = (windowCenter[1] + 1.0) * height;\n      outMat[0] = 2.0 * cRange[0] / (xmax - xmin);\n      outMat[5] = 2.0 * cRange[0] / (ymax - ymin);\n      outMat[12] = (xmin + xmax) / (xmax - xmin);\n      outMat[13] = (ymin + ymax) / (ymax - ymin);\n      outMat[10] = 0.0;\n      outMat[14] = cRange[0];\n      outMat[11] = -1.0;\n      outMat[15] = 0.0;\n    }\n  };\n  publicAPI.convertToOpenGLDepth = val => {\n    if (model.renderable.getParallelProjection()) {\n      return 1.0 - val;\n    }\n    const cRange = model.renderable.getClippingRangeByReference();\n    let zval = -cRange[0] / val;\n    zval = (cRange[0] + cRange[1]) / (cRange[1] - cRange[0]) + 2.0 * cRange[0] * cRange[1] / (zval * (cRange[1] - cRange[0]));\n    return 0.5 * zval + 0.5;\n  };\n  publicAPI.getKeyMatrices = webGPURenderer => {\n    // has the camera changed?\n    const ren = webGPURenderer.getRenderable();\n    const webGPURenderWindow = webGPURenderer.getParent();\n    if (Math.max(webGPURenderWindow.getMTime(), publicAPI.getMTime(), ren.getMTime(), model.renderable.getMTime(), webGPURenderer.getStabilizedTime()) > model.keyMatrixTime.getMTime()) {\n      const wcvc = model.renderable.getViewMatrix();\n      mat4.copy(model.keyMatrices.normalMatrix, wcvc);\n      // zero out translation\n      model.keyMatrices.normalMatrix[3] = 0.0;\n      model.keyMatrices.normalMatrix[7] = 0.0;\n      model.keyMatrices.normalMatrix[11] = 0.0;\n      mat4.invert(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\n      mat4.transpose(model.keyMatrices.wcvc, wcvc);\n      const center = webGPURenderer.getStabilizedCenterByReference();\n      mat4.translate(model.keyMatrices.scvc, model.keyMatrices.wcvc, center);\n      const aspectRatio = webGPURenderer.getAspectRatio();\n      const cRange = model.renderable.getClippingRangeByReference();\n      publicAPI.getProjectionMatrix(model.keyMatrices.vcpc, aspectRatio, cRange, model.renderable.getWindowCenterByReference());\n      mat4.multiply(model.keyMatrices.scpc, model.keyMatrices.vcpc, model.keyMatrices.scvc);\n      mat4.invert(model.keyMatrices.pcsc, model.keyMatrices.scpc);\n      model.keyMatrixTime.modified();\n    }\n    return model.keyMatrices;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  keyMatrixTime: null,\n  keyMatrices: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.keyMatrixTime = {};\n  macro.obj(model.keyMatrixTime);\n\n  // values always get set by the get method\n  model.keyMatrices = {\n    normalMatrix: new Float64Array(16),\n    vcpc: new Float64Array(16),\n    pcsc: new Float64Array(16),\n    wcvc: new Float64Array(16),\n    scpc: new Float64Array(16),\n    scvc: new Float64Array(16)\n  };\n\n  // Build VTK API\n  macro.setGet(publicAPI, model, ['keyMatrixTime']);\n\n  // Object methods\n  vtkWebGPUCamera(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance,\n  extend\n};\n\n// Register ourself to WebGPU backend if imported\nregisterOverride('vtkCamera', newInstance);\n\nexport { index as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}