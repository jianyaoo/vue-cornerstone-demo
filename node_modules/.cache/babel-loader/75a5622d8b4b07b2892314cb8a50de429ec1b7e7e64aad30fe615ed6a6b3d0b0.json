{"ast":null,"code":"import { getEnabledElementByIds, StackViewport } from '@cornerstonejs/core';\nimport Representations from '../../../enums/SegmentationRepresentations';\nimport * as SegmentationState from '../../../stateManagement/segmentation/segmentationState';\nimport { getToolGroup } from '../../../store/ToolGroupManager';\nimport { addOrUpdateContourSets } from './addOrUpdateContourSets';\nimport removeContourFromElement from './removeContourFromElement';\nimport { deleteConfigCache } from './contourConfigCache';\nfunction removeSegmentationRepresentation(toolGroupId, segmentationRepresentationUID, renderImmediate = false) {\n  _removeContourFromToolGroupViewports(toolGroupId, segmentationRepresentationUID);\n  SegmentationState.removeSegmentationRepresentation(toolGroupId, segmentationRepresentationUID);\n  deleteConfigCache(segmentationRepresentationUID);\n  if (renderImmediate) {\n    const viewportsInfo = getToolGroup(toolGroupId).getViewportsInfo();\n    viewportsInfo.forEach(({\n      viewportId,\n      renderingEngineId\n    }) => {\n      const enabledElement = getEnabledElementByIds(viewportId, renderingEngineId);\n      enabledElement.viewport.render();\n    });\n  }\n}\nasync function render(viewport, representationConfig, toolGroupConfig) {\n  const {\n    segmentationId\n  } = representationConfig;\n  const segmentation = SegmentationState.getSegmentation(segmentationId);\n  const contourData = segmentation.representationData[Representations.Contour];\n  const {\n    geometryIds\n  } = contourData;\n  if (viewport instanceof StackViewport) {\n    return;\n  }\n  if (!geometryIds?.length) {\n    console.warn(`No contours found for segmentationId ${segmentationId}. Skipping render.`);\n    return;\n  }\n  addOrUpdateContourSets(viewport, geometryIds, representationConfig, toolGroupConfig);\n}\nfunction _removeContourFromToolGroupViewports(toolGroupId, segmentationRepresentationUID) {\n  const toolGroup = getToolGroup(toolGroupId);\n  if (toolGroup === undefined) {\n    throw new Error(`ToolGroup with ToolGroupId ${toolGroupId} does not exist`);\n  }\n  const {\n    viewportsInfo\n  } = toolGroup;\n  for (const viewportInfo of viewportsInfo) {\n    const {\n      viewportId,\n      renderingEngineId\n    } = viewportInfo;\n    const enabledElement = getEnabledElementByIds(viewportId, renderingEngineId);\n    removeContourFromElement(enabledElement.viewport.element, segmentationRepresentationUID);\n  }\n}\nexport default {\n  render,\n  removeSegmentationRepresentation\n};","map":{"version":3,"names":["getEnabledElementByIds","StackViewport","Representations","SegmentationState","getToolGroup","addOrUpdateContourSets","removeContourFromElement","deleteConfigCache","removeSegmentationRepresentation","toolGroupId","segmentationRepresentationUID","renderImmediate","_removeContourFromToolGroupViewports","viewportsInfo","getViewportsInfo","forEach","viewportId","renderingEngineId","enabledElement","viewport","render","representationConfig","toolGroupConfig","segmentationId","segmentation","getSegmentation","contourData","representationData","Contour","geometryIds","length","console","warn","toolGroup","undefined","Error","viewportInfo","element"],"sources":["../../../../../src/tools/displayTools/Contour/contourDisplay.ts"],"sourcesContent":[null],"mappings":"AAAA,SACEA,sBAAsB,EAEtBC,aAAa,QACR,qBAAqB;AAE5B,OAAOC,eAAe,MAAM,4CAA4C;AACxE,OAAO,KAAKC,iBAAiB,MAAM,yDAAyD;AAC5F,SAASC,YAAY,QAAQ,iCAAiC;AAK9D,SAASC,sBAAsB,QAAQ,0BAA0B;AACjE,OAAOC,wBAAwB,MAAM,4BAA4B;AACjE,SAASC,iBAAiB,QAAQ,sBAAsB;AAYxD,SAASC,gCAAgCA,CACvCC,WAAmB,EACnBC,6BAAqC,EACrCC,eAAe,GAAG,KAAK;EAEvBC,oCAAoC,CAClCH,WAAW,EACXC,6BAA6B,CAC9B;EACDP,iBAAiB,CAACK,gCAAgC,CAChDC,WAAW,EACXC,6BAA6B,CAC9B;EAEDH,iBAAiB,CAACG,6BAA6B,CAAC;EAEhD,IAAIC,eAAe,EAAE;IACnB,MAAME,aAAa,GAAGT,YAAY,CAACK,WAAW,CAAC,CAACK,gBAAgB,EAAE;IAClED,aAAa,CAACE,OAAO,CAAC,CAAC;MAAEC,UAAU;MAAEC;IAAiB,CAAE,KAAI;MAC1D,MAAMC,cAAc,GAAGlB,sBAAsB,CAC3CgB,UAAU,EACVC,iBAAiB,CAClB;MACDC,cAAc,CAACC,QAAQ,CAACC,MAAM,EAAE;IAClC,CAAC,CAAC;;AAEN;AAQA,eAAeA,MAAMA,CACnBD,QAA+B,EAC/BE,oBAAqD,EACrDC,eAAiD;EAEjD,MAAM;IAAEC;EAAc,CAAE,GAAGF,oBAAoB;EAC/C,MAAMG,YAAY,GAAGrB,iBAAiB,CAACsB,eAAe,CAACF,cAAc,CAAC;EACtE,MAAMG,WAAW,GAAGF,YAAY,CAACG,kBAAkB,CAACzB,eAAe,CAAC0B,OAAO,CAAC;EAC5E,MAAM;IAAEC;EAAW,CAAE,GAAGH,WAAW;EAInC,IAAIP,QAAQ,YAAYlB,aAAa,EAAE;IACrC;;EAGF,IAAI,CAAC4B,WAAW,EAAEC,MAAM,EAAE;IACxBC,OAAO,CAACC,IAAI,CACV,wCAAwCT,cAAc,oBAAoB,CAC3E;IACD;;EAIFlB,sBAAsB,CACpBc,QAAQ,EACRU,WAAW,EACXR,oBAAoB,EACpBC,eAAe,CAChB;AACH;AAEA,SAASV,oCAAoCA,CAC3CH,WAAmB,EACnBC,6BAAqC;EAErC,MAAMuB,SAAS,GAAG7B,YAAY,CAACK,WAAW,CAAC;EAE3C,IAAIwB,SAAS,KAAKC,SAAS,EAAE;IAC3B,MAAM,IAAIC,KAAK,CAAC,8BAA8B1B,WAAW,iBAAiB,CAAC;;EAG7E,MAAM;IAAEI;EAAa,CAAE,GAAGoB,SAAS;EAEnC,KAAK,MAAMG,YAAY,IAAIvB,aAAa,EAAE;IACxC,MAAM;MAAEG,UAAU;MAAEC;IAAiB,CAAE,GAAGmB,YAAY;IACtD,MAAMlB,cAAc,GAAGlB,sBAAsB,CAC3CgB,UAAU,EACVC,iBAAiB,CAClB;IACDX,wBAAwB,CACtBY,cAAc,CAACC,QAAQ,CAACkB,OAAO,EAC/B3B,6BAA6B,CAC9B;;AAEL;AAEA,eAAe;EACbU,MAAM;EACNZ;CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}