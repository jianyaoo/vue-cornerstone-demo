{"ast":null,"code":"import '@kitware/vtk.js/Rendering/Profiles/Geometry';\nimport cache from '../cache';\nimport { GeometryType } from '../enums';\nimport { createContourSet } from './utils/contourSet/createContourSet';\nimport { createSurface } from './utils/surface/createSurface';\nasync function createAndCacheGeometry(geometryId, options) {\n  let geometry = cache.getGeometry(geometryId);\n  if (geometry) {\n    return geometry;\n  }\n  if (options.type === GeometryType.CONTOUR) {\n    geometry = createContourSet(geometryId, options.geometryData);\n  } else if (options.type === GeometryType.SURFACE) {\n    geometry = createSurface(geometryId, options.geometryData);\n  } else {\n    throw new Error('Unknown geometry type, Only CONTOUR is supported');\n  }\n  const geometryLoadObject = {\n    promise: Promise.resolve(geometry)\n  };\n  await cache.putGeometryLoadObject(geometryId, geometryLoadObject);\n  return geometry;\n}\nexport { createAndCacheGeometry };","map":{"version":3,"names":["cache","GeometryType","createContourSet","createSurface","createAndCacheGeometry","geometryId","options","geometry","getGeometry","type","CONTOUR","geometryData","SURFACE","Error","geometryLoadObject","promise","Promise","resolve","putGeometryLoadObject"],"sources":["../../../src/loaders/geometryLoader.ts"],"sourcesContent":[null],"mappings":"AAAA,OAAO,6CAA6C;AAEpD,OAAOA,KAAK,MAAM,UAAU;AAC5B,SAASC,YAAY,QAAQ,UAAU;AAEvC,SAASC,gBAAgB,QAAQ,qCAAqC;AACtE,SAASC,aAAa,QAAQ,+BAA+B;AAmB7D,eAAeC,sBAAsBA,CACnCC,UAAkB,EAClBC,OAAwB;EAExB,IAAIC,QAAQ,GAAGP,KAAK,CAACQ,WAAW,CAACH,UAAU,CAAC;EAE5C,IAAIE,QAAQ,EAAE;IACZ,OAAOA,QAAQ;;EAGjB,IAAID,OAAO,CAACG,IAAI,KAAKR,YAAY,CAACS,OAAO,EAAE;IACzCH,QAAQ,GAAGL,gBAAgB,CACzBG,UAAU,EACVC,OAAO,CAACK,YAAoC,CAC7C;GACF,MAAM,IAAIL,OAAO,CAACG,IAAI,KAAKR,YAAY,CAACW,OAAO,EAAE;IAChDL,QAAQ,GAAGJ,aAAa,CACtBE,UAAU,EACVC,OAAO,CAACK,YAAiC,CAC1C;GACF,MAAM;IACL,MAAM,IAAIE,KAAK,CAAC,kDAAkD,CAAC;;EAGrE,MAAMC,kBAAkB,GAAG;IACzBC,OAAO,EAAEC,OAAO,CAACC,OAAO,CAACV,QAAQ;GAClC;EAED,MAAMP,KAAK,CAACkB,qBAAqB,CAACb,UAAU,EAAES,kBAAkB,CAAC;EAEjE,OAAOP,QAAQ;AACjB;AAEA,SAASH,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}