{"ast":null,"code":"export function fillNearbyFrames(listener, imageQualityStatusMap, request, image, options) {\n  if (!request?.nearbyRequests?.length) {\n    return;\n  }\n  const {\n    arrayBuffer,\n    offset: srcOffset,\n    type,\n    length: frameLength\n  } = options.targetBuffer;\n  if (!arrayBuffer || srcOffset === undefined || !type) {\n    return;\n  }\n  const scalarData = new Float32Array(arrayBuffer);\n  const bytesPerPixel = scalarData.byteLength / scalarData.length;\n  const offset = options.targetBuffer.offset / bytesPerPixel;\n  const src = scalarData.slice(offset, offset + frameLength);\n  for (const nearbyItem of request.nearbyRequests) {\n    try {\n      const {\n        itemId: targetId,\n        imageQualityStatus\n      } = nearbyItem;\n      const targetStatus = imageQualityStatusMap.get(targetId);\n      if (targetStatus !== undefined && targetStatus >= imageQualityStatus) {\n        continue;\n      }\n      const targetOptions = listener.getLoaderImageOptions(targetId);\n      const {\n        offset: targetOffset\n      } = targetOptions.targetBuffer;\n      scalarData.set(src, targetOffset / bytesPerPixel);\n      const nearbyImage = {\n        ...image,\n        imageQualityStatus\n      };\n      listener.successCallback(targetId, nearbyImage);\n      imageQualityStatusMap.set(targetId, imageQualityStatus);\n    } catch (e) {\n      console.log(\"Couldn't fill nearby item \", nearbyItem.itemId, e);\n    }\n  }\n}","map":{"version":3,"names":["fillNearbyFrames","listener","imageQualityStatusMap","request","image","options","nearbyRequests","length","arrayBuffer","offset","srcOffset","type","frameLength","targetBuffer","undefined","scalarData","Float32Array","bytesPerPixel","byteLength","src","slice","nearbyItem","itemId","targetId","imageQualityStatus","targetStatus","get","targetOptions","getLoaderImageOptions","targetOffset","set","nearbyImage","successCallback","e","console","log"],"sources":["../../../src/loaders/fillNearbyFrames.ts"],"sourcesContent":[null],"mappings":"AAIA,OAAM,SAAUA,gBAAgBA,CAC9BC,QAA2B,EAC3BC,qBAAsD,EACtDC,OAAO,EACPC,KAAK,EACLC,OAAO;EAEP,IAAI,CAACF,OAAO,EAAEG,cAAc,EAAEC,MAAM,EAAE;IACpC;;EAGF,MAAM;IACJC,WAAW;IACXC,MAAM,EAAEC,SAAS;IACjBC,IAAI;IACJJ,MAAM,EAAEK;EAAW,CACpB,GAAGP,OAAO,CAACQ,YAAY;EACxB,IAAI,CAACL,WAAW,IAAIE,SAAS,KAAKI,SAAS,IAAI,CAACH,IAAI,EAAE;IACpD;;EAEF,MAAMI,UAAU,GAAG,IAAIC,YAAY,CAACR,WAAW,CAAC;EAChD,MAAMS,aAAa,GAAGF,UAAU,CAACG,UAAU,GAAGH,UAAU,CAACR,MAAM;EAC/D,MAAME,MAAM,GAAGJ,OAAO,CAACQ,YAAY,CAACJ,MAAM,GAAGQ,aAAa;EAI1D,MAAME,GAAG,GAAGJ,UAAU,CAACK,KAAK,CAACX,MAAM,EAAEA,MAAM,GAAGG,WAAW,CAAC;EAE1D,KAAK,MAAMS,UAAU,IAAIlB,OAAO,CAACG,cAAc,EAAE;IAC/C,IAAI;MACF,MAAM;QAAEgB,MAAM,EAAEC,QAAQ;QAAEC;MAAkB,CAAE,GAAGH,UAAU;MAC3D,MAAMI,YAAY,GAAGvB,qBAAqB,CAACwB,GAAG,CAACH,QAAQ,CAAC;MACxD,IAAIE,YAAY,KAAKX,SAAS,IAAIW,YAAY,IAAID,kBAAkB,EAAE;QACpE;;MAEF,MAAMG,aAAa,GAAG1B,QAAQ,CAAC2B,qBAAqB,CAACL,QAAQ,CAAC;MAC9D,MAAM;QAAEd,MAAM,EAAEoB;MAAY,CAAE,GAAGF,aAAa,CAACd,YAAmB;MAClEE,UAAU,CAACe,GAAG,CAACX,GAAG,EAAEU,YAAY,GAAGZ,aAAa,CAAC;MACjD,MAAMc,WAAW,GAAG;QAClB,GAAG3B,KAAK;QACRoB;OACD;MACDvB,QAAQ,CAAC+B,eAAe,CAACT,QAAQ,EAAEQ,WAAW,CAAC;MAC/C7B,qBAAqB,CAAC4B,GAAG,CAACP,QAAQ,EAAEC,kBAAkB,CAAC;KACxD,CAAC,OAAOS,CAAC,EAAE;MACVC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEd,UAAU,CAACC,MAAM,EAAEW,CAAC,CAAC;;;AAGrE"},"metadata":{},"sourceType":"module","externalDependencies":[]}