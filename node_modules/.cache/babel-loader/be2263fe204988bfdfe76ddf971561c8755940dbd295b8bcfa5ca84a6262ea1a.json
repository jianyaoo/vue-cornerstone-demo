{"ast":null,"code":"import * as lineSegment from '../line';\nfunction rectToLineSegments(left, top, width, height) {\n  const topLineStart = [left, top];\n  const topLineEnd = [left + width, top];\n  const rightLineStart = [left + width, top];\n  const rightLineEnd = [left + width, top + height];\n  const bottomLineStart = [left + width, top + height];\n  const bottomLineEnd = [left, top + height];\n  const leftLineStart = [left, top + height];\n  const leftLineEnd = [left, top];\n  const lineSegments = {\n    top: [topLineStart, topLineEnd],\n    right: [rightLineStart, rightLineEnd],\n    bottom: [bottomLineStart, bottomLineEnd],\n    left: [leftLineStart, leftLineEnd]\n  };\n  return lineSegments;\n}\nexport default function distanceToPoint(rect, point) {\n  if (rect.length !== 4 || point.length !== 2) {\n    throw Error('rectangle:[left, top, width, height] or point: [x,y] not defined correctly');\n  }\n  const [left, top, width, height] = rect;\n  let minDistance = 655535;\n  const lineSegments = rectToLineSegments(left, top, width, height);\n  Object.keys(lineSegments).forEach(segment => {\n    const [lineStart, lineEnd] = lineSegments[segment];\n    const distance = lineSegment.distanceToPoint(lineStart, lineEnd, point);\n    if (distance < minDistance) {\n      minDistance = distance;\n    }\n  });\n  return minDistance;\n}","map":{"version":3,"names":["lineSegment","rectToLineSegments","left","top","width","height","topLineStart","topLineEnd","rightLineStart","rightLineEnd","bottomLineStart","bottomLineEnd","leftLineStart","leftLineEnd","lineSegments","right","bottom","distanceToPoint","rect","point","length","Error","minDistance","Object","keys","forEach","segment","lineStart","lineEnd","distance"],"sources":["../../../../../src/utilities/math/rectangle/distanceToPoint.ts"],"sourcesContent":[null],"mappings":"AACA,OAAO,KAAKA,WAAW,MAAM,SAAS;AAmBtC,SAASC,kBAAkBA,CACzBC,IAAY,EACZC,GAAW,EACXC,KAAa,EACbC,MAAc;EAEd,MAAMC,YAAY,GAAiB,CAACJ,IAAI,EAAEC,GAAG,CAAC;EAC9C,MAAMI,UAAU,GAAiB,CAACL,IAAI,GAAGE,KAAK,EAAED,GAAG,CAAC;EAEpD,MAAMK,cAAc,GAAiB,CAACN,IAAI,GAAGE,KAAK,EAAED,GAAG,CAAC;EACxD,MAAMM,YAAY,GAAiB,CAACP,IAAI,GAAGE,KAAK,EAAED,GAAG,GAAGE,MAAM,CAAC;EAE/D,MAAMK,eAAe,GAAiB,CAACR,IAAI,GAAGE,KAAK,EAAED,GAAG,GAAGE,MAAM,CAAC;EAClE,MAAMM,aAAa,GAAiB,CAACT,IAAI,EAAEC,GAAG,GAAGE,MAAM,CAAC;EAExD,MAAMO,aAAa,GAAiB,CAACV,IAAI,EAAEC,GAAG,GAAGE,MAAM,CAAC;EACxD,MAAMQ,WAAW,GAAiB,CAACX,IAAI,EAAEC,GAAG,CAAC;EAE7C,MAAMW,YAAY,GAAG;IACnBX,GAAG,EAAE,CAACG,YAAY,EAAEC,UAAU,CAAC;IAC/BQ,KAAK,EAAE,CAACP,cAAc,EAAEC,YAAY,CAAC;IACrCO,MAAM,EAAE,CAACN,eAAe,EAAEC,aAAa,CAAC;IACxCT,IAAI,EAAE,CAACU,aAAa,EAAEC,WAAW;GAClC;EAED,OAAOC,YAAY;AACrB;AAUA,eAAc,SAAUG,eAAeA,CACrCC,IAAc,EACdC,KAAmB;EAEnB,IAAID,IAAI,CAACE,MAAM,KAAK,CAAC,IAAID,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;IAC3C,MAAMC,KAAK,CACT,4EAA4E,CAC7E;;EAGH,MAAM,CAACnB,IAAI,EAAEC,GAAG,EAAEC,KAAK,EAAEC,MAAM,CAAC,GAAGa,IAAI;EAEvC,IAAII,WAAW,GAAG,MAAM;EACxB,MAAMR,YAAY,GAAGb,kBAAkB,CAACC,IAAI,EAAEC,GAAG,EAAEC,KAAK,EAAEC,MAAM,CAAC;EAEjEkB,MAAM,CAACC,IAAI,CAACV,YAAY,CAAC,CAACW,OAAO,CAAEC,OAAO,IAAI;IAC5C,MAAM,CAACC,SAAS,EAAEC,OAAO,CAAC,GAAGd,YAAY,CAACY,OAAO,CAAC;IAClD,MAAMG,QAAQ,GAAG7B,WAAW,CAACiB,eAAe,CAACU,SAAS,EAAEC,OAAO,EAAET,KAAK,CAAC;IAEvE,IAAIU,QAAQ,GAAGP,WAAW,EAAE;MAC1BA,WAAW,GAAGO,QAAQ;;EAE1B,CAAC,CAAC;EAEF,OAAOP,WAAW;AACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}