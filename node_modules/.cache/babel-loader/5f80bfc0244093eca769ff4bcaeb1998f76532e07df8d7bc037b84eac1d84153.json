{"ast":null,"code":"import getSliceRange from './getSliceRange';\nimport getTargetVolumeAndSpacingInNormalDir from './getTargetVolumeAndSpacingInNormalDir';\nfunction getImageSliceDataForVolumeViewport(viewport) {\n  const camera = viewport.getCamera();\n  const {\n    spacingInNormalDirection,\n    imageVolume\n  } = getTargetVolumeAndSpacingInNormalDir(viewport, camera);\n  if (!imageVolume) {\n    return;\n  }\n  const {\n    viewPlaneNormal,\n    focalPoint\n  } = camera;\n  const actorEntry = viewport.getActors().find(a => a.referenceId === imageVolume.volumeId || a.uid === imageVolume.volumeId);\n  if (!actorEntry) {\n    console.warn('No actor found for with actorUID of', imageVolume.volumeId);\n  }\n  const volumeActor = actorEntry.actor;\n  const sliceRange = getSliceRange(volumeActor, viewPlaneNormal, focalPoint);\n  const {\n    min,\n    max,\n    current\n  } = sliceRange;\n  const numberOfSlices = Math.round((max - min) / spacingInNormalDirection) + 1;\n  let imageIndex = (current - min) / (max - min) * numberOfSlices;\n  imageIndex = Math.floor(imageIndex);\n  if (imageIndex > numberOfSlices - 1) {\n    imageIndex = numberOfSlices - 1;\n  } else if (imageIndex < 0) {\n    imageIndex = 0;\n  }\n  return {\n    numberOfSlices,\n    imageIndex\n  };\n}\nexport default getImageSliceDataForVolumeViewport;","map":{"version":3,"names":["getSliceRange","getTargetVolumeAndSpacingInNormalDir","getImageSliceDataForVolumeViewport","viewport","camera","getCamera","spacingInNormalDirection","imageVolume","viewPlaneNormal","focalPoint","actorEntry","getActors","find","a","referenceId","volumeId","uid","console","warn","volumeActor","actor","sliceRange","min","max","current","numberOfSlices","Math","round","imageIndex","floor"],"sources":["../../../src/utilities/getImageSliceDataForVolumeViewport.ts"],"sourcesContent":[null],"mappings":"AACA,OAAOA,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,oCAAoC,MAAM,wCAAwC;AAQzF,SAASC,kCAAkCA,CACzCC,QAAyB;EAEzB,MAAMC,MAAM,GAAGD,QAAQ,CAACE,SAAS,EAAE;EAEnC,MAAM;IAAEC,wBAAwB;IAAEC;EAAW,CAAE,GAC7CN,oCAAoC,CAACE,QAAQ,EAAEC,MAAM,CAAC;EAExD,IAAI,CAACG,WAAW,EAAE;IAChB;;EAGF,MAAM;IAAEC,eAAe;IAAEC;EAAU,CAAE,GAAGL,MAAM;EAE9C,MAAMM,UAAU,GAAGP,QAAQ,CACxBQ,SAAS,EAAE,CACXC,IAAI,CACFC,CAAC,IACAA,CAAC,CAACC,WAAW,KAAKP,WAAW,CAACQ,QAAQ,IAAIF,CAAC,CAACG,GAAG,KAAKT,WAAW,CAACQ,QAAQ,CAC3E;EAEH,IAAI,CAACL,UAAU,EAAE;IACfO,OAAO,CAACC,IAAI,CAAC,qCAAqC,EAAEX,WAAW,CAACQ,QAAQ,CAAC;;EAG3E,MAAMI,WAAW,GAAGT,UAAU,CAACU,KAAoB;EACnD,MAAMC,UAAU,GAAGrB,aAAa,CAACmB,WAAW,EAAEX,eAAe,EAAEC,UAAU,CAAC;EAE1E,MAAM;IAAEa,GAAG;IAAEC,GAAG;IAAEC;EAAO,CAAE,GAAGH,UAAU;EAGxC,MAAMI,cAAc,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACJ,GAAG,GAAGD,GAAG,IAAIhB,wBAAwB,CAAC,GAAG,CAAC;EAG7E,IAAIsB,UAAU,GAAI,CAACJ,OAAO,GAAGF,GAAG,KAAKC,GAAG,GAAGD,GAAG,CAAC,GAAIG,cAAc;EACjEG,UAAU,GAAGF,IAAI,CAACG,KAAK,CAACD,UAAU,CAAC;EAGnC,IAAIA,UAAU,GAAGH,cAAc,GAAG,CAAC,EAAE;IACnCG,UAAU,GAAGH,cAAc,GAAG,CAAC;GAChC,MAAM,IAAIG,UAAU,GAAG,CAAC,EAAE;IACzBA,UAAU,GAAG,CAAC;;EAGhB,OAAO;IACLH,cAAc;IACdG;GACD;AACH;AAEA,eAAe1B,kCAAkC"},"metadata":{},"sourceType":"module","externalDependencies":[]}