{"ast":null,"code":"import vtkDataArray from '@kitware/vtk.js/Common/Core/DataArray';\nimport vtkImageData from '@kitware/vtk.js/Common/DataModel/ImageData';\nimport vtkCamera from '@kitware/vtk.js/Rendering/Core/Camera';\nimport vtkColorTransferFunction from '@kitware/vtk.js/Rendering/Core/ColorTransferFunction';\nimport vtkColorMaps from '@kitware/vtk.js/Rendering/Core/ColorTransferFunction/ColorMaps';\nimport vtkImageMapper from '@kitware/vtk.js/Rendering/Core/ImageMapper';\nimport vtkImageSlice from '@kitware/vtk.js/Rendering/Core/ImageSlice';\nimport { mat4, vec2, vec3 } from 'gl-matrix';\nimport _cloneDeep from 'lodash.clonedeep';\nimport eventTarget from '../eventTarget';\nimport * as metaData from '../metaData';\nimport { actorIsA, colormap as colormapUtils, createSigmoidRGBTransferFunction, imageIdToURI, imageRetrieveMetadataProvider, invertRgbTransferFunction, isEqual, isImageActor, triggerEvent, updateVTKImageDataWithCornerstoneImage, windowLevel as windowLevelUtil } from '../utilities';\nimport Viewport from './Viewport';\nimport { getColormap } from './helpers/cpuFallback/colors/index';\nimport drawImageSync from './helpers/cpuFallback/drawImageSync';\nimport { Events, InterpolationType, MetadataModules, RequestType, VOILUTFunctionType, ViewportStatus } from '../enums';\nimport { loadAndCacheImage } from '../loaders/imageLoader';\nimport imageLoadPoolManager from '../requestPool/imageLoadPoolManager';\nimport calculateTransform from './helpers/cpuFallback/rendering/calculateTransform';\nimport canvasToPixel from './helpers/cpuFallback/rendering/canvasToPixel';\nimport getDefaultViewport from './helpers/cpuFallback/rendering/getDefaultViewport';\nimport pixelToCanvas from './helpers/cpuFallback/rendering/pixelToCanvas';\nimport resize from './helpers/cpuFallback/rendering/resize';\nimport cache from '../cache';\nimport { getConfiguration, getShouldUseCPURendering } from '../init';\nimport { createProgressive } from '../loaders/ProgressiveRetrieveImages';\nimport createLinearRGBTransferFunction from '../utilities/createLinearRGBTransferFunction';\nimport { getTransferFunctionNodes, setTransferFunctionNodes } from '../utilities/transferFunctionUtils';\nimport correctShift from './helpers/cpuFallback/rendering/correctShift';\nimport resetCamera from './helpers/cpuFallback/rendering/resetCamera';\nimport { Transform } from './helpers/cpuFallback/rendering/transform';\nconst EPSILON = 1;\nclass StackViewport extends Viewport {\n  constructor(props) {\n    super(props);\n    this.imagesLoader = this;\n    this.perImageIdDefaultProperties = new Map();\n    this.voiUpdatedWithSetProperties = false;\n    this.invert = false;\n    this.initialInvert = false;\n    this.initialTransferFunctionNodes = null;\n    this.stackInvalidated = false;\n    this._publishCalibratedEvent = false;\n    this.useNativeDataType = false;\n    this.updateRenderingPipeline = () => {\n      this._configureRenderingPipeline();\n    };\n    this.resize = () => {\n      if (this.useCPURendering) {\n        this._resizeCPU();\n      }\n    };\n    this._resizeCPU = () => {\n      if (this._cpuFallbackEnabledElement.viewport) {\n        resize(this._cpuFallbackEnabledElement);\n      }\n    };\n    this.getFrameOfReferenceUID = () => {\n      const imageId = this.getCurrentImageId();\n      if (!imageId) {\n        return;\n      }\n      const imagePlaneModule = metaData.get('imagePlaneModule', imageId);\n      if (!imagePlaneModule) {\n        return;\n      }\n      return imagePlaneModule.frameOfReferenceUID;\n    };\n    this.getCornerstoneImage = () => {\n      return this.csImage;\n    };\n    this.createActorMapper = imageData => {\n      const mapper = vtkImageMapper.newInstance();\n      mapper.setInputData(imageData);\n      const actor = vtkImageSlice.newInstance();\n      actor.setMapper(mapper);\n      const {\n        preferSizeOverAccuracy\n      } = getConfiguration().rendering;\n      if (preferSizeOverAccuracy) {\n        mapper.setPreferSizeOverAccuracy(true);\n      }\n      if (imageData.getPointData().getNumberOfComponents() > 1) {\n        actor.getProperty().setIndependentComponents(false);\n      }\n      return actor;\n    };\n    this.getNumberOfSlices = () => {\n      return this.imageIds.length;\n    };\n    this.getDefaultProperties = imageId => {\n      let imageProperties;\n      if (imageId !== undefined) {\n        imageProperties = this.perImageIdDefaultProperties.get(imageId);\n      }\n      if (imageProperties !== undefined) {\n        return imageProperties;\n      }\n      return {\n        ...this.globalDefaultProperties,\n        rotation: this.getRotation()\n      };\n    };\n    this.getProperties = () => {\n      const {\n        colormap,\n        voiRange,\n        VOILUTFunction,\n        interpolationType,\n        invert,\n        voiUpdatedWithSetProperties\n      } = this;\n      const rotation = this.getRotation();\n      return {\n        colormap,\n        voiRange,\n        VOILUTFunction,\n        interpolationType,\n        invert,\n        rotation,\n        isComputedVOI: !voiUpdatedWithSetProperties\n      };\n    };\n    this.getRotationCPU = () => {\n      const {\n        viewport\n      } = this._cpuFallbackEnabledElement;\n      return viewport.rotation;\n    };\n    this.getRotationGPU = () => {\n      const {\n        viewUp: currentViewUp,\n        viewPlaneNormal,\n        flipVertical\n      } = this.getCamera();\n      const initialViewUp = flipVertical ? vec3.negate(vec3.create(), this.initialViewUp) : this.initialViewUp;\n      const initialToCurrentViewUpAngle = vec3.angle(initialViewUp, currentViewUp) * 180 / Math.PI;\n      const initialToCurrentViewUpCross = vec3.cross(vec3.create(), initialViewUp, currentViewUp);\n      const normalDot = vec3.dot(initialToCurrentViewUpCross, viewPlaneNormal);\n      return normalDot >= 0 ? initialToCurrentViewUpAngle : (360 - initialToCurrentViewUpAngle) % 360;\n    };\n    this.renderImageObject = image => {\n      this._setCSImage(image);\n      const renderFn = this.useCPURendering ? this._updateToDisplayImageCPU : this._updateActorToDisplayImageId;\n      renderFn.call(this, image);\n    };\n    this._setCSImage = image => {\n      image.isPreScaled = image.preScale?.scaled;\n      this.csImage = image;\n    };\n    this.canvasToWorldCPU = canvasPos => {\n      if (!this._cpuFallbackEnabledElement.image) {\n        return;\n      }\n      const [px, py] = canvasToPixel(this._cpuFallbackEnabledElement, canvasPos);\n      const {\n        origin,\n        spacing,\n        direction\n      } = this.getImageData();\n      const worldPos = vec3.fromValues(0, 0, 0);\n      const iVector = direction.slice(0, 3);\n      const jVector = direction.slice(3, 6);\n      vec3.scaleAndAdd(worldPos, origin, iVector, px * spacing[0]);\n      vec3.scaleAndAdd(worldPos, worldPos, jVector, py * spacing[1]);\n      return [worldPos[0], worldPos[1], worldPos[2]];\n    };\n    this.worldToCanvasCPU = worldPos => {\n      const {\n        spacing,\n        direction,\n        origin\n      } = this.getImageData();\n      const iVector = direction.slice(0, 3);\n      const jVector = direction.slice(3, 6);\n      const diff = vec3.subtract(vec3.create(), worldPos, origin);\n      const worldPoint = [vec3.dot(diff, iVector) / spacing[0], vec3.dot(diff, jVector) / spacing[1]];\n      const canvasPoint = pixelToCanvas(this._cpuFallbackEnabledElement, worldPoint);\n      return canvasPoint;\n    };\n    this.canvasToWorldGPU = canvasPos => {\n      const renderer = this.getRenderer();\n      const vtkCamera = this.getVtkActiveCamera();\n      const crange = vtkCamera.getClippingRange();\n      const distance = vtkCamera.getDistance();\n      vtkCamera.setClippingRange(distance, distance + 0.1);\n      const offscreenMultiRenderWindow = this.getRenderingEngine().offscreenMultiRenderWindow;\n      const openGLRenderWindow = offscreenMultiRenderWindow.getOpenGLRenderWindow();\n      const size = openGLRenderWindow.getSize();\n      const devicePixelRatio = window.devicePixelRatio || 1;\n      const canvasPosWithDPR = [canvasPos[0] * devicePixelRatio, canvasPos[1] * devicePixelRatio];\n      const displayCoord = [canvasPosWithDPR[0] + this.sx, canvasPosWithDPR[1] + this.sy];\n      displayCoord[1] = size[1] - displayCoord[1];\n      const worldCoord = openGLRenderWindow.displayToWorld(displayCoord[0], displayCoord[1], 0, renderer);\n      vtkCamera.setClippingRange(crange[0], crange[1]);\n      return [worldCoord[0], worldCoord[1], worldCoord[2]];\n    };\n    this.worldToCanvasGPU = worldPos => {\n      const renderer = this.getRenderer();\n      const vtkCamera = this.getVtkActiveCamera();\n      const crange = vtkCamera.getClippingRange();\n      const distance = vtkCamera.getDistance();\n      vtkCamera.setClippingRange(distance, distance + 0.1);\n      const offscreenMultiRenderWindow = this.getRenderingEngine().offscreenMultiRenderWindow;\n      const openGLRenderWindow = offscreenMultiRenderWindow.getOpenGLRenderWindow();\n      const size = openGLRenderWindow.getSize();\n      const displayCoord = openGLRenderWindow.worldToDisplay(...worldPos, renderer);\n      displayCoord[1] = size[1] - displayCoord[1];\n      const canvasCoord = [displayCoord[0] - this.sx, displayCoord[1] - this.sy];\n      vtkCamera.setClippingRange(crange[0], crange[1]);\n      const devicePixelRatio = window.devicePixelRatio || 1;\n      const canvasCoordWithDPR = [canvasCoord[0] / devicePixelRatio, canvasCoord[1] / devicePixelRatio];\n      return canvasCoordWithDPR;\n    };\n    this.getCurrentImageIdIndex = () => {\n      return this.currentImageIdIndex;\n    };\n    this.getTargetImageIdIndex = () => {\n      return this.targetImageIdIndex;\n    };\n    this.getImageIds = () => {\n      return this.imageIds;\n    };\n    this.getCurrentImageId = () => {\n      return this.imageIds[this.currentImageIdIndex];\n    };\n    this.hasImageId = imageId => {\n      return this.imageIds.includes(imageId);\n    };\n    this.hasImageURI = imageURI => {\n      const imageIds = this.imageIds;\n      for (let i = 0; i < imageIds.length; i++) {\n        if (imageIdToURI(imageIds[i]) === imageURI) {\n          return true;\n        }\n      }\n      return false;\n    };\n    this.customRenderViewportToCanvas = () => {\n      if (!this.useCPURendering) {\n        throw new Error('Custom cpu rendering pipeline should only be hit in CPU rendering mode');\n      }\n      if (this._cpuFallbackEnabledElement.image) {\n        drawImageSync(this._cpuFallbackEnabledElement, this.cpuRenderingInvalidated);\n        this.cpuRenderingInvalidated = false;\n      } else {\n        this.fillWithBackgroundColor();\n      }\n      return {\n        canvas: this.canvas,\n        element: this.element,\n        viewportId: this.id,\n        renderingEngineId: this.renderingEngineId,\n        viewportStatus: this.viewportStatus\n      };\n    };\n    this.renderingPipelineFunctions = {\n      getImageData: {\n        cpu: this.getImageDataCPU,\n        gpu: this.getImageDataGPU\n      },\n      setColormap: {\n        cpu: this.setColormapCPU,\n        gpu: this.setColormapGPU\n      },\n      getCamera: {\n        cpu: this.getCameraCPU,\n        gpu: super.getCamera\n      },\n      setCamera: {\n        cpu: this.setCameraCPU,\n        gpu: super.setCamera\n      },\n      getPan: {\n        cpu: this.getPanCPU,\n        gpu: super.getPan\n      },\n      setPan: {\n        cpu: this.setPanCPU,\n        gpu: super.setPan\n      },\n      getZoom: {\n        cpu: this.getZoomCPU,\n        gpu: super.getZoom\n      },\n      setZoom: {\n        cpu: this.setZoomCPU,\n        gpu: super.setZoom\n      },\n      setVOI: {\n        cpu: this.setVOICPU,\n        gpu: this.setVOIGPU\n      },\n      getRotation: {\n        cpu: this.getRotationCPU,\n        gpu: this.getRotationGPU\n      },\n      setInterpolationType: {\n        cpu: this.setInterpolationTypeCPU,\n        gpu: this.setInterpolationTypeGPU\n      },\n      setInvertColor: {\n        cpu: this.setInvertColorCPU,\n        gpu: this.setInvertColorGPU\n      },\n      resetCamera: {\n        cpu: (resetPan = true, resetZoom = true) => {\n          this.resetCameraCPU(resetPan, resetZoom);\n          return true;\n        },\n        gpu: (resetPan = true, resetZoom = true) => {\n          this.resetCameraGPU(resetPan, resetZoom);\n          return true;\n        }\n      },\n      canvasToWorld: {\n        cpu: this.canvasToWorldCPU,\n        gpu: this.canvasToWorldGPU\n      },\n      worldToCanvas: {\n        cpu: this.worldToCanvasCPU,\n        gpu: this.worldToCanvasGPU\n      },\n      getRenderer: {\n        cpu: () => this.getCPUFallbackError('getRenderer'),\n        gpu: super.getRenderer\n      },\n      getDefaultActor: {\n        cpu: () => this.getCPUFallbackError('getDefaultActor'),\n        gpu: super.getDefaultActor\n      },\n      getActors: {\n        cpu: () => this.getCPUFallbackError('getActors'),\n        gpu: super.getActors\n      },\n      getActor: {\n        cpu: () => this.getCPUFallbackError('getActor'),\n        gpu: super.getActor\n      },\n      setActors: {\n        cpu: () => this.getCPUFallbackError('setActors'),\n        gpu: super.setActors\n      },\n      addActors: {\n        cpu: () => this.getCPUFallbackError('addActors'),\n        gpu: super.addActors\n      },\n      addActor: {\n        cpu: () => this.getCPUFallbackError('addActor'),\n        gpu: super.addActor\n      },\n      removeAllActors: {\n        cpu: () => this.getCPUFallbackError('removeAllActors'),\n        gpu: super.removeAllActors\n      },\n      unsetColormap: {\n        cpu: this.unsetColormapCPU,\n        gpu: this.unsetColormapGPU\n      }\n    };\n    this.scaling = {};\n    this.modality = null;\n    this.useCPURendering = getShouldUseCPURendering();\n    this.useNativeDataType = this._shouldUseNativeDataType();\n    this._configureRenderingPipeline();\n    this.useCPURendering ? this._resetCPUFallbackElement() : this._resetGPUViewport();\n    this.imageIds = [];\n    this.currentImageIdIndex = 0;\n    this.targetImageIdIndex = 0;\n    this.cameraFocalPointOnRender = [0, 0, 0];\n    this.resetCamera();\n    this.initializeElementDisabledHandler();\n  }\n  setUseCPURendering(value) {\n    this.useCPURendering = value;\n    this._configureRenderingPipeline(value);\n  }\n  static get useCustomRenderingPipeline() {\n    return getShouldUseCPURendering();\n  }\n  _configureRenderingPipeline(value) {\n    this.useNativeDataType = this._shouldUseNativeDataType();\n    this.useCPURendering = value ?? getShouldUseCPURendering();\n    for (const [funcName, functions] of Object.entries(this.renderingPipelineFunctions)) {\n      this[funcName] = this.useCPURendering ? functions.cpu : functions.gpu;\n    }\n    this.useCPURendering ? this._resetCPUFallbackElement() : this._resetGPUViewport();\n  }\n  _resetCPUFallbackElement() {\n    this._cpuFallbackEnabledElement = {\n      canvas: this.canvas,\n      renderingTools: {},\n      transform: new Transform(),\n      viewport: {\n        rotation: 0\n      }\n    };\n  }\n  _resetGPUViewport() {\n    const renderer = this.getRenderer();\n    const camera = vtkCamera.newInstance();\n    renderer.setActiveCamera(camera);\n    const viewPlaneNormal = [0, 0, -1];\n    this.initialViewUp = [0, -1, 0];\n    camera.setDirectionOfProjection(-viewPlaneNormal[0], -viewPlaneNormal[1], -viewPlaneNormal[2]);\n    camera.setViewUp(...this.initialViewUp);\n    camera.setParallelProjection(true);\n    camera.setThicknessFromFocalPoint(0.1);\n    camera.setFreezeFocalPoint(true);\n  }\n  initializeElementDisabledHandler() {\n    eventTarget.addEventListener(Events.ELEMENT_DISABLED, function elementDisabledHandler() {\n      clearTimeout(this.debouncedTimeout);\n      eventTarget.removeEventListener(Events.ELEMENT_DISABLED, elementDisabledHandler);\n    });\n  }\n  getImageDataGPU() {\n    const defaultActor = this.getDefaultActor();\n    if (!defaultActor) {\n      return;\n    }\n    if (!isImageActor(defaultActor)) {\n      return;\n    }\n    const {\n      actor\n    } = defaultActor;\n    const vtkImageData = actor.getMapper().getInputData();\n    return {\n      dimensions: vtkImageData.getDimensions(),\n      spacing: vtkImageData.getSpacing(),\n      origin: vtkImageData.getOrigin(),\n      direction: vtkImageData.getDirection(),\n      scalarData: vtkImageData.getPointData().getScalars().getData(),\n      imageData: actor.getMapper().getInputData(),\n      metadata: {\n        Modality: this.modality\n      },\n      scaling: this.scaling,\n      hasPixelSpacing: this.hasPixelSpacing,\n      calibration: {\n        ...this.csImage.calibration,\n        ...this.calibration\n      },\n      preScale: {\n        ...this.csImage.preScale\n      }\n    };\n  }\n  getImageDataCPU() {\n    const {\n      metadata\n    } = this._cpuFallbackEnabledElement;\n    const spacing = metadata.spacing;\n    return {\n      dimensions: metadata.dimensions,\n      spacing,\n      origin: metadata.origin,\n      direction: metadata.direction,\n      metadata: {\n        Modality: this.modality\n      },\n      scaling: this.scaling,\n      imageData: {\n        getDirection: () => metadata.direction,\n        getDimensions: () => metadata.dimensions,\n        getScalarData: () => this.cpuImagePixelData,\n        getSpacing: () => spacing,\n        worldToIndex: point => {\n          const canvasPoint = this.worldToCanvasCPU(point);\n          const pixelCoord = canvasToPixel(this._cpuFallbackEnabledElement, canvasPoint);\n          return [pixelCoord[0], pixelCoord[1], 0];\n        },\n        indexToWorld: point => {\n          const canvasPoint = pixelToCanvas(this._cpuFallbackEnabledElement, [point[0], point[1]]);\n          return this.canvasToWorldCPU(canvasPoint);\n        }\n      },\n      scalarData: this.cpuImagePixelData,\n      hasPixelSpacing: this.hasPixelSpacing,\n      calibration: {\n        ...this.csImage.calibration,\n        ...this.calibration\n      },\n      preScale: {\n        ...this.csImage.preScale\n      }\n    };\n  }\n  buildMetadata(image) {\n    const imageId = image.imageId;\n    const {\n      pixelRepresentation,\n      bitsAllocated,\n      bitsStored,\n      highBit,\n      photometricInterpretation,\n      samplesPerPixel\n    } = metaData.get('imagePixelModule', imageId);\n    const {\n      windowWidth,\n      windowCenter,\n      voiLUTFunction\n    } = image;\n    const {\n      modality\n    } = metaData.get('generalSeriesModule', imageId);\n    const imageIdScalingFactor = metaData.get('scalingModule', imageId);\n    const calibration = metaData.get(MetadataModules.CALIBRATION, imageId);\n    if (modality === 'PT' && imageIdScalingFactor) {\n      this._addScalingToViewport(imageIdScalingFactor);\n    }\n    this.modality = modality;\n    const voiLUTFunctionEnum = this._getValidVOILUTFunction(voiLUTFunction);\n    this.VOILUTFunction = voiLUTFunctionEnum;\n    this.calibration = calibration;\n    let imagePlaneModule = this._getImagePlaneModule(imageId);\n    if (!this.useCPURendering) {\n      imagePlaneModule = this.calibrateIfNecessary(imageId, imagePlaneModule);\n    }\n    return {\n      imagePlaneModule,\n      imagePixelModule: {\n        bitsAllocated,\n        bitsStored,\n        samplesPerPixel,\n        highBit,\n        photometricInterpretation,\n        pixelRepresentation,\n        windowWidth,\n        windowCenter,\n        modality,\n        voiLUTFunction: voiLUTFunctionEnum\n      }\n    };\n  }\n  calibrateIfNecessary(imageId, imagePlaneModule) {\n    const calibration = metaData.get('calibratedPixelSpacing', imageId);\n    const isUpdated = this.calibration !== calibration;\n    const {\n      scale\n    } = calibration || {};\n    this.hasPixelSpacing = scale > 0 || imagePlaneModule.rowPixelSpacing > 0;\n    imagePlaneModule.calibration = calibration;\n    if (!isUpdated) {\n      return imagePlaneModule;\n    }\n    this.calibration = calibration;\n    this._publishCalibratedEvent = true;\n    this._calibrationEvent = {\n      scale,\n      calibration\n    };\n    return imagePlaneModule;\n  }\n  setDefaultProperties(ViewportProperties, imageId) {\n    if (imageId == null) {\n      this.globalDefaultProperties = ViewportProperties;\n    } else {\n      this.perImageIdDefaultProperties.set(imageId, ViewportProperties);\n      if (this.getCurrentImageId() === imageId) {\n        this.setProperties(ViewportProperties);\n      }\n    }\n  }\n  clearDefaultProperties(imageId) {\n    if (imageId == null) {\n      this.globalDefaultProperties = {};\n      this.resetProperties();\n    } else {\n      this.perImageIdDefaultProperties.delete(imageId);\n      this.resetToDefaultProperties();\n    }\n  }\n  setProperties({\n    colormap,\n    voiRange,\n    VOILUTFunction,\n    invert,\n    interpolationType,\n    rotation\n  } = {}, suppressEvents = false) {\n    this.viewportStatus = this.csImage ? ViewportStatus.PRE_RENDER : ViewportStatus.LOADING;\n    if (this.globalDefaultProperties == null) {\n      this.setDefaultProperties({\n        colormap,\n        voiRange,\n        VOILUTFunction,\n        invert,\n        interpolationType,\n        rotation\n      });\n    }\n    if (typeof colormap !== 'undefined') {\n      this.setColormap(colormap);\n    }\n    if (typeof voiRange !== 'undefined') {\n      const voiUpdatedWithSetProperties = true;\n      this.setVOI(voiRange, {\n        suppressEvents,\n        voiUpdatedWithSetProperties\n      });\n    }\n    if (typeof VOILUTFunction !== 'undefined') {\n      this.setVOILUTFunction(VOILUTFunction, suppressEvents);\n    }\n    if (typeof invert !== 'undefined') {\n      this.setInvertColor(invert);\n    }\n    if (typeof interpolationType !== 'undefined') {\n      this.setInterpolationType(interpolationType);\n    }\n    if (typeof rotation !== 'undefined') {\n      if (this.getRotation() !== rotation) {\n        this.setRotation(rotation);\n      }\n    }\n  }\n  resetProperties() {\n    this.cpuRenderingInvalidated = true;\n    this.voiUpdatedWithSetProperties = false;\n    this.viewportStatus = ViewportStatus.PRE_RENDER;\n    this.fillWithBackgroundColor();\n    if (this.useCPURendering) {\n      this._cpuFallbackEnabledElement.renderingTools = {};\n    }\n    this._resetProperties();\n    this.render();\n  }\n  _resetProperties() {\n    let voiRange;\n    if (this._isCurrentImagePTPrescaled()) {\n      voiRange = this._getDefaultPTPrescaledVOIRange();\n    } else {\n      voiRange = this._getVOIRangeForCurrentImage();\n    }\n    this.setVOI(voiRange);\n    if (this.getRotation() !== 0) {\n      this.setRotation(0);\n    }\n    this.setInterpolationType(InterpolationType.LINEAR);\n    const transferFunction = this.getTransferFunction();\n    setTransferFunctionNodes(transferFunction, this.initialTransferFunctionNodes);\n    this.setInvertColor(this.initialInvert);\n  }\n  resetToDefaultProperties() {\n    this.cpuRenderingInvalidated = true;\n    this.viewportStatus = ViewportStatus.PRE_RENDER;\n    this.fillWithBackgroundColor();\n    if (this.useCPURendering) {\n      this._cpuFallbackEnabledElement.renderingTools = {};\n    }\n    const currentImageId = this.getCurrentImageId();\n    const properties = this.perImageIdDefaultProperties.get(currentImageId) || this.globalDefaultProperties;\n    if (properties.colormap?.name) {\n      this.setColormap(properties.colormap);\n    }\n    let voiRange;\n    if (properties.voiRange == undefined) {\n      voiRange = this._getVOIRangeForCurrentImage();\n    } else {\n      voiRange = properties.voiRange;\n    }\n    this.setVOI(voiRange);\n    if (this.getRotation() !== 0) {\n      this.setRotation(0);\n    }\n    this.setInterpolationType(InterpolationType.LINEAR);\n    this.setInvertColor(false);\n    this.render();\n  }\n  _setPropertiesFromCache() {\n    const {\n      interpolationType,\n      invert\n    } = this;\n    let voiRange;\n    if (this.voiUpdatedWithSetProperties) {\n      voiRange = this.voiRange;\n    } else if (this._isCurrentImagePTPrescaled()) {\n      voiRange = this._getDefaultPTPrescaledVOIRange();\n    } else {\n      voiRange = this._getVOIRangeForCurrentImage() ?? this.voiRange;\n    }\n    this.setVOI(voiRange);\n    this.setInterpolationType(interpolationType);\n    this.setInvertColor(invert);\n  }\n  getCameraCPU() {\n    const {\n      metadata,\n      viewport\n    } = this._cpuFallbackEnabledElement;\n    const {\n      direction\n    } = metadata;\n    const viewPlaneNormal = direction.slice(6, 9).map(x => -x);\n    let viewUp = direction.slice(3, 6).map(x => -x);\n    if (viewport.rotation) {\n      const rotationMatrix = mat4.fromRotation(mat4.create(), viewport.rotation * Math.PI / 180, viewPlaneNormal);\n      viewUp = vec3.transformMat4(vec3.create(), viewUp, rotationMatrix);\n    }\n    const canvasCenter = [this.element.clientWidth / 2, this.element.clientHeight / 2];\n    const canvasCenterWorld = this.canvasToWorld(canvasCenter);\n    const topLeftWorld = this.canvasToWorld([0, 0]);\n    const bottomLeftWorld = this.canvasToWorld([0, this.element.clientHeight]);\n    const parallelScale = vec3.distance(topLeftWorld, bottomLeftWorld) / 2;\n    return {\n      parallelProjection: true,\n      focalPoint: canvasCenterWorld,\n      position: [0, 0, 0],\n      parallelScale,\n      scale: viewport.scale,\n      viewPlaneNormal: [viewPlaneNormal[0], viewPlaneNormal[1], viewPlaneNormal[2]],\n      viewUp: [viewUp[0], viewUp[1], viewUp[2]],\n      flipHorizontal: this.flipHorizontal,\n      flipVertical: this.flipVertical\n    };\n  }\n  setCameraCPU(cameraInterface) {\n    const {\n      viewport,\n      image\n    } = this._cpuFallbackEnabledElement;\n    const previousCamera = this.getCameraCPU();\n    const {\n      focalPoint,\n      parallelScale,\n      scale,\n      flipHorizontal,\n      flipVertical\n    } = cameraInterface;\n    const {\n      clientHeight\n    } = this.element;\n    if (focalPoint) {\n      const focalPointCanvas = this.worldToCanvasCPU(focalPoint);\n      const focalPointPixel = canvasToPixel(this._cpuFallbackEnabledElement, focalPointCanvas);\n      const prevFocalPointCanvas = this.worldToCanvasCPU(previousCamera.focalPoint);\n      const prevFocalPointPixel = canvasToPixel(this._cpuFallbackEnabledElement, prevFocalPointCanvas);\n      const deltaPixel = vec2.create();\n      vec2.subtract(deltaPixel, vec2.fromValues(focalPointPixel[0], focalPointPixel[1]), vec2.fromValues(prevFocalPointPixel[0], prevFocalPointPixel[1]));\n      const shift = correctShift({\n        x: deltaPixel[0],\n        y: deltaPixel[1]\n      }, viewport);\n      viewport.translation.x -= shift.x;\n      viewport.translation.y -= shift.y;\n    }\n    if (parallelScale) {\n      const {\n        rowPixelSpacing\n      } = image;\n      const scale = clientHeight * rowPixelSpacing * 0.5 / parallelScale;\n      viewport.scale = scale;\n      viewport.parallelScale = parallelScale;\n    }\n    if (scale) {\n      const {\n        rowPixelSpacing\n      } = image;\n      viewport.scale = scale;\n      viewport.parallelScale = clientHeight * rowPixelSpacing * 0.5 / scale;\n    }\n    if (flipHorizontal !== undefined || flipVertical !== undefined) {\n      this.setFlipCPU({\n        flipHorizontal,\n        flipVertical\n      });\n    }\n    this._cpuFallbackEnabledElement.transform = calculateTransform(this._cpuFallbackEnabledElement);\n    const eventDetail = {\n      previousCamera,\n      camera: this.getCamera(),\n      element: this.element,\n      viewportId: this.id,\n      renderingEngineId: this.renderingEngineId,\n      rotation: this.getRotation()\n    };\n    triggerEvent(this.element, Events.CAMERA_MODIFIED, eventDetail);\n  }\n  getPanCPU() {\n    const {\n      viewport\n    } = this._cpuFallbackEnabledElement;\n    return [viewport.translation.x, viewport.translation.y];\n  }\n  setPanCPU(pan) {\n    const camera = this.getCameraCPU();\n    this.setCameraCPU({\n      ...camera,\n      focalPoint: [...pan.map(p => -p), 0]\n    });\n  }\n  getZoomCPU() {\n    const {\n      viewport\n    } = this._cpuFallbackEnabledElement;\n    return viewport.scale;\n  }\n  setZoomCPU(zoom) {\n    const camera = this.getCameraCPU();\n    this.setCameraCPU({\n      ...camera,\n      scale: zoom\n    });\n  }\n  setFlipCPU({\n    flipHorizontal,\n    flipVertical\n  }) {\n    const {\n      viewport\n    } = this._cpuFallbackEnabledElement;\n    if (flipHorizontal !== undefined) {\n      viewport.hflip = flipHorizontal;\n      this.flipHorizontal = viewport.hflip;\n    }\n    if (flipVertical !== undefined) {\n      viewport.vflip = flipVertical;\n      this.flipVertical = viewport.vflip;\n    }\n  }\n  setRotation(rotation) {\n    const previousCamera = this.getCamera();\n    this.useCPURendering ? this.setRotationCPU(rotation) : this.setRotationGPU(rotation);\n    const camera = this.getCamera();\n    const eventDetail = {\n      previousCamera,\n      camera,\n      element: this.element,\n      viewportId: this.id,\n      renderingEngineId: this.renderingEngineId,\n      rotation\n    };\n    triggerEvent(this.element, Events.CAMERA_MODIFIED, eventDetail);\n  }\n  setVOILUTFunction(voiLUTFunction, suppressEvents) {\n    if (this.useCPURendering) {\n      throw new Error('VOI LUT function is not supported in CPU rendering');\n    }\n    const newVOILUTFunction = this._getValidVOILUTFunction(voiLUTFunction);\n    let forceRecreateLUTFunction = false;\n    if (this.VOILUTFunction !== newVOILUTFunction) {\n      forceRecreateLUTFunction = true;\n    }\n    this.VOILUTFunction = newVOILUTFunction;\n    const {\n      voiRange\n    } = this.getProperties();\n    this.setVOI(voiRange, {\n      suppressEvents,\n      forceRecreateLUTFunction\n    });\n  }\n  setRotationCPU(rotation) {\n    const {\n      viewport\n    } = this._cpuFallbackEnabledElement;\n    viewport.rotation = rotation;\n  }\n  setRotationGPU(rotation) {\n    const pan = this.getPan();\n    this.setPan([0, 0]);\n    const {\n      flipVertical\n    } = this.getCamera();\n    const initialViewUp = flipVertical ? vec3.negate(vec3.create(), this.initialViewUp) : this.initialViewUp;\n    this.setCameraNoEvent({\n      viewUp: initialViewUp\n    });\n    this.getVtkActiveCamera().roll(-rotation);\n    this.setPan(pan);\n  }\n  setInterpolationTypeGPU(interpolationType) {\n    const defaultActor = this.getDefaultActor();\n    if (!defaultActor) {\n      return;\n    }\n    if (!isImageActor(defaultActor)) {\n      return;\n    }\n    const {\n      actor\n    } = defaultActor;\n    const volumeProperty = actor.getProperty();\n    volumeProperty.setInterpolationType(interpolationType);\n    this.interpolationType = interpolationType;\n  }\n  setInterpolationTypeCPU(interpolationType) {\n    const {\n      viewport\n    } = this._cpuFallbackEnabledElement;\n    viewport.pixelReplication = interpolationType === InterpolationType.LINEAR ? false : true;\n    this.interpolationType = interpolationType;\n  }\n  setInvertColorCPU(invert) {\n    const {\n      viewport\n    } = this._cpuFallbackEnabledElement;\n    if (!viewport) {\n      return;\n    }\n    viewport.invert = invert;\n    this.invert = invert;\n  }\n  setInvertColorGPU(invert) {\n    const defaultActor = this.getDefaultActor();\n    if (!defaultActor) {\n      return;\n    }\n    if (!isImageActor(defaultActor)) {\n      return;\n    }\n    if (actorIsA(defaultActor, 'vtkVolume')) {\n      const volumeActor = defaultActor.actor;\n      const tfunc = volumeActor.getProperty().getRGBTransferFunction(0);\n      if (!this.invert && invert || this.invert && !invert) {\n        invertRgbTransferFunction(tfunc);\n      }\n      this.invert = invert;\n    } else if (actorIsA(defaultActor, 'vtkImageSlice')) {\n      const imageSliceActor = defaultActor.actor;\n      const tfunc = imageSliceActor.getProperty().getRGBTransferFunction(0);\n      if (!this.invert && invert || this.invert && !invert) {\n        invertRgbTransferFunction(tfunc);\n      }\n      this.invert = invert;\n    }\n  }\n  setVOICPU(voiRange, options = {}) {\n    const {\n      suppressEvents = false\n    } = options;\n    const {\n      viewport,\n      image\n    } = this._cpuFallbackEnabledElement;\n    if (!viewport || !image) {\n      return;\n    }\n    if (typeof voiRange === 'undefined') {\n      const {\n        windowWidth: ww,\n        windowCenter: wc\n      } = image;\n      const wwToUse = Array.isArray(ww) ? ww[0] : ww;\n      const wcToUse = Array.isArray(wc) ? wc[0] : wc;\n      viewport.voi = {\n        windowWidth: wwToUse,\n        windowCenter: wcToUse\n      };\n      const {\n        lower,\n        upper\n      } = windowLevelUtil.toLowHighRange(wwToUse, wcToUse);\n      voiRange = {\n        lower,\n        upper\n      };\n    } else {\n      const {\n        lower,\n        upper\n      } = voiRange;\n      const {\n        windowCenter,\n        windowWidth\n      } = windowLevelUtil.toWindowLevel(lower, upper);\n      if (!viewport.voi) {\n        viewport.voi = {\n          windowWidth: 0,\n          windowCenter: 0\n        };\n      }\n      viewport.voi.windowWidth = windowWidth;\n      viewport.voi.windowCenter = windowCenter;\n    }\n    this.voiRange = voiRange;\n    const eventDetail = {\n      viewportId: this.id,\n      range: voiRange\n    };\n    if (!suppressEvents) {\n      triggerEvent(this.element, Events.VOI_MODIFIED, eventDetail);\n    }\n  }\n  getTransferFunction() {\n    const defaultActor = this.getDefaultActor();\n    if (!defaultActor) {\n      return;\n    }\n    if (!isImageActor(defaultActor)) {\n      return;\n    }\n    const imageActor = defaultActor.actor;\n    return imageActor.getProperty().getRGBTransferFunction(0);\n  }\n  setVOIGPU(voiRange, options = {}) {\n    const {\n      suppressEvents = false,\n      forceRecreateLUTFunction = false,\n      voiUpdatedWithSetProperties = false\n    } = options;\n    if (voiRange && this.voiRange && this.voiRange.lower === voiRange.lower && this.voiRange.upper === voiRange.upper && !forceRecreateLUTFunction && !this.stackInvalidated) {\n      return;\n    }\n    const defaultActor = this.getDefaultActor();\n    if (!defaultActor) {\n      return;\n    }\n    if (!isImageActor(defaultActor)) {\n      return;\n    }\n    const imageActor = defaultActor.actor;\n    let voiRangeToUse = voiRange;\n    if (typeof voiRangeToUse === 'undefined') {\n      const imageData = imageActor.getMapper().getInputData();\n      const range = imageData.getPointData().getScalars().getRange();\n      const maxVoiRange = {\n        lower: range[0],\n        upper: range[1]\n      };\n      voiRangeToUse = maxVoiRange;\n    }\n    imageActor.getProperty().setUseLookupTableScalarRange(true);\n    let transferFunction = imageActor.getProperty().getRGBTransferFunction(0);\n    const isSigmoidTFun = this.VOILUTFunction === VOILUTFunctionType.SAMPLED_SIGMOID;\n    if (isSigmoidTFun || !transferFunction || forceRecreateLUTFunction) {\n      const transferFunctionCreator = isSigmoidTFun ? createSigmoidRGBTransferFunction : createLinearRGBTransferFunction;\n      transferFunction = transferFunctionCreator(voiRangeToUse);\n      if (this.invert) {\n        invertRgbTransferFunction(transferFunction);\n      }\n      imageActor.getProperty().setRGBTransferFunction(0, transferFunction);\n      this.initialTransferFunctionNodes = getTransferFunctionNodes(transferFunction);\n    }\n    if (!isSigmoidTFun) {\n      transferFunction.setRange(voiRangeToUse.lower, voiRangeToUse.upper);\n    }\n    this.voiRange = voiRangeToUse;\n    if (!this.voiUpdatedWithSetProperties) {\n      this.voiUpdatedWithSetProperties = voiUpdatedWithSetProperties;\n    }\n    if (suppressEvents) {\n      return;\n    }\n    const eventDetail = {\n      viewportId: this.id,\n      range: voiRangeToUse,\n      VOILUTFunction: this.VOILUTFunction\n    };\n    triggerEvent(this.element, Events.VOI_MODIFIED, eventDetail);\n  }\n  _addScalingToViewport(imageIdScalingFactor) {\n    if (this.scaling.PT) {\n      return;\n    }\n    const {\n      suvbw,\n      suvlbm,\n      suvbsa\n    } = imageIdScalingFactor;\n    const ptScaling = {};\n    if (suvlbm) {\n      ptScaling.suvbwToSuvlbm = suvlbm / suvbw;\n    }\n    if (suvbsa) {\n      ptScaling.suvbwToSuvbsa = suvbsa / suvbw;\n    }\n    this.scaling.PT = ptScaling;\n  }\n  _getNumCompsFromPhotometricInterpretation(photometricInterpretation) {\n    let numberOfComponents = 1;\n    if (photometricInterpretation === 'RGB' || photometricInterpretation.indexOf('YBR') !== -1 || photometricInterpretation === 'PALETTE COLOR') {\n      numberOfComponents = 3;\n    }\n    return numberOfComponents;\n  }\n  getImageDataMetadata(image) {\n    const {\n      imagePlaneModule,\n      imagePixelModule\n    } = this.buildMetadata(image);\n    let rowCosines, columnCosines;\n    rowCosines = imagePlaneModule.rowCosines;\n    columnCosines = imagePlaneModule.columnCosines;\n    if (rowCosines == null || columnCosines == null) {\n      rowCosines = [1, 0, 0];\n      columnCosines = [0, 1, 0];\n    }\n    const rowCosineVec = vec3.fromValues(rowCosines[0], rowCosines[1], rowCosines[2]);\n    const colCosineVec = vec3.fromValues(columnCosines[0], columnCosines[1], columnCosines[2]);\n    const scanAxisNormal = vec3.create();\n    vec3.cross(scanAxisNormal, rowCosineVec, colCosineVec);\n    let origin = imagePlaneModule.imagePositionPatient;\n    if (origin == null) {\n      origin = [0, 0, 0];\n    }\n    const xSpacing = imagePlaneModule.columnPixelSpacing || image.columnPixelSpacing;\n    const ySpacing = imagePlaneModule.rowPixelSpacing || image.rowPixelSpacing;\n    const xVoxels = image.columns;\n    const yVoxels = image.rows;\n    const zSpacing = EPSILON;\n    const zVoxels = 1;\n    const numComps = image.numComps || this._getNumCompsFromPhotometricInterpretation(imagePixelModule.photometricInterpretation);\n    return {\n      bitsAllocated: imagePixelModule.bitsAllocated,\n      numComps,\n      origin,\n      direction: [...rowCosineVec, ...colCosineVec, ...scanAxisNormal],\n      dimensions: [xVoxels, yVoxels, zVoxels],\n      spacing: [xSpacing, ySpacing, zSpacing],\n      numVoxels: xVoxels * yVoxels * zVoxels,\n      imagePlaneModule,\n      imagePixelModule\n    };\n  }\n  _getCameraOrientation(imageDataDirection) {\n    const viewPlaneNormal = imageDataDirection.slice(6, 9).map(x => -x);\n    const viewUp = imageDataDirection.slice(3, 6).map(x => -x);\n    return {\n      viewPlaneNormal: [viewPlaneNormal[0], viewPlaneNormal[1], viewPlaneNormal[2]],\n      viewUp: [viewUp[0], viewUp[1], viewUp[2]]\n    };\n  }\n  createVTKImageData({\n    origin,\n    direction,\n    dimensions,\n    spacing,\n    numComps,\n    pixelArray\n  }) {\n    const values = new pixelArray.constructor(pixelArray.length);\n    const scalarArray = vtkDataArray.newInstance({\n      name: 'Pixels',\n      numberOfComponents: numComps,\n      values: values\n    });\n    const imageData = vtkImageData.newInstance();\n    imageData.setDimensions(dimensions);\n    imageData.setSpacing(spacing);\n    imageData.setDirection(direction);\n    imageData.setOrigin(origin);\n    imageData.getPointData().setScalars(scalarArray);\n    return imageData;\n  }\n  _createVTKImageData({\n    origin,\n    direction,\n    dimensions,\n    spacing,\n    numComps,\n    pixelArray\n  }) {\n    this._imageData = this.createVTKImageData({\n      origin,\n      direction,\n      dimensions,\n      spacing,\n      numComps,\n      pixelArray\n    });\n  }\n  async setStack(imageIds, currentImageIdIndex = 0) {\n    this._throwIfDestroyed();\n    this.imageIds = imageIds;\n    this.currentImageIdIndex = currentImageIdIndex;\n    this.targetImageIdIndex = currentImageIdIndex;\n    const imageRetrieveConfiguration = metaData.get(imageRetrieveMetadataProvider.IMAGE_RETRIEVE_CONFIGURATION, imageIds[currentImageIdIndex], 'stack');\n    this.imagesLoader = imageRetrieveConfiguration ? (imageRetrieveConfiguration.create || createProgressive)(imageRetrieveConfiguration) : this;\n    this.stackInvalidated = true;\n    this.flipVertical = false;\n    this.flipHorizontal = false;\n    this.voiRange = null;\n    this.interpolationType = InterpolationType.LINEAR;\n    this.invert = false;\n    this.viewportStatus = ViewportStatus.LOADING;\n    this.fillWithBackgroundColor();\n    if (this.useCPURendering) {\n      this._cpuFallbackEnabledElement.renderingTools = {};\n      delete this._cpuFallbackEnabledElement.viewport.colormap;\n    }\n    const imageId = await this._setImageIdIndex(currentImageIdIndex);\n    const eventDetail = {\n      imageIds,\n      viewportId: this.id,\n      element: this.element,\n      currentImageIdIndex: currentImageIdIndex\n    };\n    triggerEvent(eventTarget, Events.STACK_VIEWPORT_NEW_STACK, eventDetail);\n    return imageId;\n  }\n  _throwIfDestroyed() {\n    if (this.isDisabled) {\n      throw new Error('The stack viewport has been destroyed and is no longer usable. Renderings will not be performed. If you ' + 'are using the same viewportId and have re-enabled the viewport, you need to grab the new viewport instance ' + 'using renderingEngine.getViewport(viewportId), instead of using your lexical scoped reference to the viewport instance.');\n    }\n  }\n  _checkVTKImageDataMatchesCornerstoneImage(image, imageData) {\n    if (!imageData) {\n      return false;\n    }\n    const [xSpacing, ySpacing] = imageData.getSpacing();\n    const [xVoxels, yVoxels] = imageData.getDimensions();\n    const imagePlaneModule = this._getImagePlaneModule(image.imageId);\n    const direction = imageData.getDirection();\n    const rowCosines = direction.slice(0, 3);\n    const columnCosines = direction.slice(3, 6);\n    const dataType = imageData.getPointData().getScalars().getDataType();\n    const isSameXSpacing = isEqual(xSpacing, image.columnPixelSpacing);\n    const isSameYSpacing = isEqual(ySpacing, image.rowPixelSpacing);\n    return (isSameXSpacing || image.columnPixelSpacing === null && xSpacing === 1.0) && (isSameYSpacing || image.rowPixelSpacing === null && ySpacing === 1.0) && xVoxels === image.columns && yVoxels === image.rows && isEqual(imagePlaneModule.rowCosines, rowCosines) && isEqual(imagePlaneModule.columnCosines, columnCosines) && (!this.useNativeDataType || dataType === image.getPixelData().constructor.name);\n  }\n  _updateVTKImageDataFromCornerstoneImage(image) {\n    const imagePlaneModule = this._getImagePlaneModule(image.imageId);\n    let origin = imagePlaneModule.imagePositionPatient;\n    if (origin == null) {\n      origin = [0, 0, 0];\n    }\n    this._imageData.setOrigin(origin);\n    updateVTKImageDataWithCornerstoneImage(this._imageData, image);\n  }\n  _loadAndDisplayImage(imageId, imageIdIndex) {\n    return this.useCPURendering ? this._loadAndDisplayImageCPU(imageId, imageIdIndex) : this._loadAndDisplayImageGPU(imageId, imageIdIndex);\n  }\n  _loadAndDisplayImageCPU(imageId, imageIdIndex) {\n    return new Promise((resolve, reject) => {\n      function successCallback(image, imageIdIndex, imageId) {\n        if (this.currentImageIdIndex !== imageIdIndex) {\n          return;\n        }\n        const pixelData = image.getPixelData();\n        const preScale = image.preScale;\n        const scalingParams = preScale?.scalingParameters;\n        const scaledWithNonIntegers = preScale?.scaled && scalingParams?.rescaleIntercept % 1 !== 0 || scalingParams?.rescaleSlope % 1 !== 0;\n        if (pixelData instanceof Float32Array && scaledWithNonIntegers) {\n          const floatMinMax = {\n            min: image.maxPixelValue,\n            max: image.minPixelValue\n          };\n          const floatRange = Math.abs(floatMinMax.max - floatMinMax.min);\n          const intRange = 65535;\n          const slope = floatRange / intRange;\n          const intercept = floatMinMax.min;\n          const numPixels = pixelData.length;\n          const intPixelData = new Uint16Array(numPixels);\n          let min = 65535;\n          let max = 0;\n          for (let i = 0; i < numPixels; i++) {\n            const rescaledPixel = Math.floor((pixelData[i] - intercept) / slope);\n            intPixelData[i] = rescaledPixel;\n            min = Math.min(min, rescaledPixel);\n            max = Math.max(max, rescaledPixel);\n          }\n          image.minPixelValue = min;\n          image.maxPixelValue = max;\n          image.slope = slope;\n          image.intercept = intercept;\n          image.getPixelData = () => intPixelData;\n          image.preScale = {\n            ...image.preScale,\n            scaled: false\n          };\n        }\n        this._setCSImage(image);\n        this.viewportStatus = ViewportStatus.PRE_RENDER;\n        const eventDetail = {\n          image,\n          imageId,\n          imageIdIndex,\n          viewportId: this.id,\n          renderingEngineId: this.renderingEngineId\n        };\n        triggerEvent(this.element, Events.STACK_NEW_IMAGE, eventDetail);\n        this._updateToDisplayImageCPU(image);\n        this.render();\n        this.currentImageIdIndex = imageIdIndex;\n        resolve(imageId);\n      }\n      function errorCallback(error, imageIdIndex, imageId) {\n        const eventDetail = {\n          error,\n          imageIdIndex,\n          imageId\n        };\n        if (!this.suppressEvents) {\n          triggerEvent(eventTarget, Events.IMAGE_LOAD_ERROR, eventDetail);\n        }\n        reject(error);\n      }\n      function sendRequest(imageId, imageIdIndex, options) {\n        return loadAndCacheImage(imageId, options).then(image => {\n          successCallback.call(this, image, imageIdIndex, imageId);\n        }, error => {\n          errorCallback.call(this, error, imageIdIndex, imageId);\n        });\n      }\n      const priority = -5;\n      const requestType = RequestType.Interaction;\n      const additionalDetails = {\n        imageId,\n        imageIdIndex\n      };\n      const options = {\n        preScale: {\n          enabled: true\n        },\n        useRGBA: true,\n        requestType\n      };\n      const eventDetail = {\n        imageId,\n        imageIdIndex,\n        viewportId: this.id,\n        renderingEngineId: this.renderingEngineId\n      };\n      triggerEvent(this.element, Events.PRE_STACK_NEW_IMAGE, eventDetail);\n      imageLoadPoolManager.addRequest(sendRequest.bind(this, imageId, imageIdIndex, options), requestType, additionalDetails, priority);\n    });\n  }\n  successCallback(imageId, image) {\n    const imageIdIndex = this.imageIds.indexOf(imageId);\n    if (this.currentImageIdIndex !== imageIdIndex) {\n      return;\n    }\n    const csImgFrame = this.csImage?.imageFrame;\n    const imgFrame = image?.imageFrame;\n    if (csImgFrame?.photometricInterpretation !== imgFrame?.photometricInterpretation || this.csImage?.photometricInterpretation !== image?.photometricInterpretation) {\n      this.stackInvalidated = true;\n    }\n    this._setCSImage(image);\n    const eventDetail = {\n      image,\n      imageId,\n      imageIdIndex,\n      viewportId: this.id,\n      renderingEngineId: this.renderingEngineId\n    };\n    triggerEvent(this.element, Events.STACK_NEW_IMAGE, eventDetail);\n    this._updateActorToDisplayImageId(image);\n    this.render();\n    this.currentImageIdIndex = imageIdIndex;\n  }\n  errorCallback(imageId, permanent, error) {\n    if (!permanent) {\n      return;\n    }\n    const imageIdIndex = this.imageIds.indexOf(imageId);\n    const eventDetail = {\n      error,\n      imageIdIndex,\n      imageId\n    };\n    triggerEvent(eventTarget, Events.IMAGE_LOAD_ERROR, eventDetail);\n  }\n  getLoaderImageOptions(imageId) {\n    const imageIdIndex = this.imageIds.indexOf(imageId);\n    const {\n      transferSyntaxUID\n    } = metaData.get('transferSyntax', imageId) || {};\n    const additionalDetails = {\n      imageId,\n      imageIdIndex\n    };\n    const options = {\n      targetBuffer: {\n        type: this.useNativeDataType ? undefined : 'Float32Array'\n      },\n      preScale: {\n        enabled: true\n      },\n      useRGBA: false,\n      transferSyntaxUID,\n      priority: 5,\n      requestType: RequestType.Interaction,\n      additionalDetails\n    };\n    return options;\n  }\n  loadImages(imageIds, listener) {\n    return Promise.allSettled(imageIds.map(imageId => {\n      const options = this.getLoaderImageOptions(imageId);\n      return loadAndCacheImage(imageId, options).then(image => {\n        listener.successCallback(imageId, image);\n        return imageId;\n      }, error => {\n        listener.errorCallback(imageId, true, error);\n        return imageId;\n      });\n    }));\n  }\n  _loadAndDisplayImageGPU(imageId, imageIdIndex) {\n    const eventDetail = {\n      imageId,\n      imageIdIndex,\n      viewportId: this.id,\n      renderingEngineId: this.renderingEngineId\n    };\n    triggerEvent(this.element, Events.PRE_STACK_NEW_IMAGE, eventDetail);\n    return this.imagesLoader.loadImages([imageId], this).then(v => {\n      return imageId;\n    });\n  }\n  _updateToDisplayImageCPU(image) {\n    const metadata = this.getImageDataMetadata(image);\n    const viewport = getDefaultViewport(this.canvas, image, this.modality, this._cpuFallbackEnabledElement.viewport.colormap);\n    const {\n      windowCenter,\n      windowWidth\n    } = viewport.voi;\n    this.voiRange = windowLevelUtil.toLowHighRange(windowWidth, windowCenter);\n    this._cpuFallbackEnabledElement.image = image;\n    this._cpuFallbackEnabledElement.metadata = {\n      ...metadata\n    };\n    this.cpuImagePixelData = image.getPixelData();\n    const viewportSettingToUse = Object.assign({}, viewport, this._cpuFallbackEnabledElement.viewport);\n    this._cpuFallbackEnabledElement.viewport = this.stackInvalidated ? viewport : viewportSettingToUse;\n    this.stackInvalidated = false;\n    this.cpuRenderingInvalidated = true;\n    this._cpuFallbackEnabledElement.transform = calculateTransform(this._cpuFallbackEnabledElement);\n  }\n  async addImages(stackInputs) {\n    const actors = this.getActors();\n    stackInputs.forEach(stackInput => {\n      const image = cache.getImage(stackInput.imageId);\n      const {\n        origin,\n        dimensions,\n        direction,\n        spacing,\n        numComps\n      } = this.getImageDataMetadata(image);\n      const imagedata = this.createVTKImageData({\n        origin,\n        dimensions,\n        direction,\n        spacing,\n        numComps,\n        pixelArray: image.getPixelData()\n      });\n      const imageActor = this.createActorMapper(imagedata);\n      if (imageActor) {\n        actors.push({\n          uid: stackInput.actorUID,\n          actor: imageActor\n        });\n        if (stackInput.callback) {\n          stackInput.callback({\n            imageActor,\n            imageId: stackInput.imageId\n          });\n        }\n      }\n    });\n    this.setActors(actors);\n  }\n  _updateActorToDisplayImageId(image) {\n    const sameImageData = this._checkVTKImageDataMatchesCornerstoneImage(image, this._imageData);\n    const activeCamera = this.getRenderer().getActiveCamera();\n    const previousCameraProps = _cloneDeep(this.getCamera());\n    if (sameImageData && !this.stackInvalidated) {\n      this._updateVTKImageDataFromCornerstoneImage(image);\n      const cameraProps = this.getCamera();\n      const panCache = vec3.subtract(vec3.create(), this.cameraFocalPointOnRender, cameraProps.focalPoint);\n      this.resetCameraNoEvent();\n      this.setCameraNoEvent({\n        flipHorizontal: previousCameraProps.flipHorizontal,\n        flipVertical: previousCameraProps.flipVertical,\n        viewUp: previousCameraProps.viewUp\n      });\n      const {\n        focalPoint\n      } = this.getCamera();\n      this.cameraFocalPointOnRender = focalPoint;\n      activeCamera.setFreezeFocalPoint(true);\n      this._restoreCameraProps(cameraProps, previousCameraProps, panCache);\n      this._setPropertiesFromCache();\n      return;\n    }\n    const {\n      origin,\n      direction,\n      dimensions,\n      spacing,\n      numComps,\n      imagePixelModule\n    } = this.getImageDataMetadata(image);\n    const pixelArray = image.getPixelData();\n    this._createVTKImageData({\n      origin,\n      direction,\n      dimensions,\n      spacing,\n      numComps,\n      pixelArray\n    });\n    this._updateVTKImageDataFromCornerstoneImage(image);\n    const actor = this.createActorMapper(this._imageData);\n    const oldActors = this.getActors();\n    if (oldActors.length && oldActors[0].uid === this.id) {\n      oldActors[0].actor = actor;\n    } else {\n      oldActors.unshift({\n        uid: this.id,\n        actor\n      });\n    }\n    this.setActors(oldActors);\n    const {\n      viewPlaneNormal,\n      viewUp\n    } = this._getCameraOrientation(direction);\n    this.setCameraNoEvent({\n      viewUp,\n      viewPlaneNormal\n    });\n    this.initialViewUp = viewUp;\n    this.resetCameraNoEvent();\n    this.triggerCameraEvent(this.getCamera(), previousCameraProps);\n    activeCamera.setFreezeFocalPoint(true);\n    const monochrome1 = imagePixelModule.photometricInterpretation === 'MONOCHROME1';\n    this.stackInvalidated = true;\n    this.setVOI(this._getInitialVOIRange(image), {\n      forceRecreateLUTFunction: !!monochrome1\n    });\n    this.initialInvert = !!monochrome1;\n    this.setInvertColor(this.invert || this.initialInvert);\n    this.cameraFocalPointOnRender = this.getCamera().focalPoint;\n    this.stackInvalidated = false;\n    if (this._publishCalibratedEvent) {\n      this.triggerCalibrationEvent();\n    }\n  }\n  _getInitialVOIRange(image) {\n    if (this.voiRange && this.voiUpdatedWithSetProperties) {\n      return this.globalDefaultProperties.voiRange;\n    }\n    const {\n      windowCenter,\n      windowWidth\n    } = image;\n    let voiRange = this._getVOIRangeFromWindowLevel(windowWidth, windowCenter);\n    voiRange = this._getPTPreScaledRange() || voiRange;\n    return voiRange;\n  }\n  _getPTPreScaledRange() {\n    if (!this._isCurrentImagePTPrescaled()) {\n      return undefined;\n    }\n    return this._getDefaultPTPrescaledVOIRange();\n  }\n  _isCurrentImagePTPrescaled() {\n    if (this.modality !== 'PT' || !this.csImage.isPreScaled) {\n      return false;\n    }\n    if (!this.csImage.preScale?.scalingParameters?.suvbw) {\n      return false;\n    }\n    return true;\n  }\n  _getDefaultPTPrescaledVOIRange() {\n    return {\n      lower: 0,\n      upper: 5\n    };\n  }\n  _getVOIRangeFromWindowLevel(windowWidth, windowCenter) {\n    let center, width;\n    if (typeof windowCenter === 'number' && typeof windowWidth === 'number') {\n      center = windowCenter;\n      width = windowWidth;\n    } else if (Array.isArray(windowCenter) && Array.isArray(windowWidth)) {\n      center = windowCenter[0];\n      width = windowWidth[0];\n    }\n    if (center !== undefined && width !== undefined) {\n      return windowLevelUtil.toLowHighRange(width, center);\n    }\n  }\n  async _setImageIdIndex(imageIdIndex) {\n    if (imageIdIndex >= this.imageIds.length) {\n      throw new Error(`ImageIdIndex provided ${imageIdIndex} is invalid, the stack only has ${this.imageIds.length} elements`);\n    }\n    this.currentImageIdIndex = imageIdIndex;\n    this.hasPixelSpacing = true;\n    this.viewportStatus = ViewportStatus.PRE_RENDER;\n    const imageId = await this._loadAndDisplayImage(this.imageIds[imageIdIndex], imageIdIndex);\n    if (this.perImageIdDefaultProperties.size >= 1) {\n      const defaultProperties = this.perImageIdDefaultProperties.get(imageId);\n      if (defaultProperties !== undefined) {\n        this.setProperties(defaultProperties);\n      } else if (this.globalDefaultProperties !== undefined) {\n        this.setProperties(this.globalDefaultProperties);\n      }\n    }\n    return imageId;\n  }\n  resetCameraCPU(resetPan, resetZoom) {\n    const {\n      image\n    } = this._cpuFallbackEnabledElement;\n    if (!image) {\n      return;\n    }\n    resetCamera(this._cpuFallbackEnabledElement, resetPan, resetZoom);\n    const {\n      scale\n    } = this._cpuFallbackEnabledElement.viewport;\n    const {\n      clientWidth,\n      clientHeight\n    } = this.element;\n    const center = [clientWidth / 2, clientHeight / 2];\n    const centerWorld = this.canvasToWorldCPU(center);\n    this.setCameraCPU({\n      focalPoint: centerWorld,\n      scale\n    });\n  }\n  resetCameraGPU(resetPan, resetZoom) {\n    this.setCamera({\n      flipHorizontal: false,\n      flipVertical: false,\n      viewUp: this.initialViewUp\n    });\n    const resetToCenter = true;\n    return super.resetCamera(resetPan, resetZoom, resetToCenter);\n  }\n  scroll(delta, debounce = true, loop = false) {\n    const imageIds = this.imageIds;\n    const currentTargetImageIdIndex = this.targetImageIdIndex;\n    const numberOfFrames = imageIds.length;\n    let newTargetImageIdIndex = currentTargetImageIdIndex + delta;\n    newTargetImageIdIndex = Math.max(0, newTargetImageIdIndex);\n    if (loop) {\n      newTargetImageIdIndex = newTargetImageIdIndex % numberOfFrames;\n    } else {\n      newTargetImageIdIndex = Math.min(numberOfFrames - 1, newTargetImageIdIndex);\n    }\n    this.targetImageIdIndex = newTargetImageIdIndex;\n    const targetImageId = imageIds[newTargetImageIdIndex];\n    const imageAlreadyLoaded = cache.isLoaded(targetImageId);\n    if (imageAlreadyLoaded || !debounce) {\n      this.setImageIdIndex(newTargetImageIdIndex);\n    } else {\n      clearTimeout(this.debouncedTimeout);\n      this.debouncedTimeout = window.setTimeout(() => {\n        this.setImageIdIndex(newTargetImageIdIndex);\n      }, 40);\n    }\n    const eventData = {\n      newImageIdIndex: newTargetImageIdIndex,\n      imageId: targetImageId,\n      direction: delta\n    };\n    if (newTargetImageIdIndex !== currentTargetImageIdIndex) {\n      triggerEvent(this.element, Events.STACK_VIEWPORT_SCROLL, eventData);\n    }\n  }\n  setImageIdIndex(imageIdIndex) {\n    this._throwIfDestroyed();\n    if (this.currentImageIdIndex === imageIdIndex) {\n      return Promise.resolve(this.getCurrentImageId());\n    }\n    const imageIdPromise = this._setImageIdIndex(imageIdIndex);\n    return imageIdPromise;\n  }\n  calibrateSpacing(imageId) {\n    const imageIdIndex = this.getImageIds().indexOf(imageId);\n    this.stackInvalidated = true;\n    this._loadAndDisplayImage(imageId, imageIdIndex);\n  }\n  _restoreCameraProps({\n    parallelScale: prevScale\n  }, previousCamera, panCache) {\n    const renderer = this.getRenderer();\n    const {\n      position,\n      focalPoint\n    } = this.getCamera();\n    const newPosition = vec3.subtract(vec3.create(), position, panCache);\n    const newFocal = vec3.subtract(vec3.create(), focalPoint, panCache);\n    this.setCameraNoEvent({\n      parallelScale: prevScale,\n      position: newPosition,\n      focalPoint: newFocal\n    });\n    const camera = this.getCamera();\n    this.triggerCameraEvent(camera, previousCamera);\n    const RESET_CAMERA_EVENT = {\n      type: 'ResetCameraEvent',\n      renderer\n    };\n    renderer.invokeEvent(RESET_CAMERA_EVENT);\n  }\n  triggerCameraEvent(camera, previousCamera) {\n    const eventDetail = {\n      previousCamera,\n      camera,\n      element: this.element,\n      viewportId: this.id,\n      renderingEngineId: this.renderingEngineId\n    };\n    if (!this.suppressEvents) {\n      triggerEvent(this.element, Events.CAMERA_MODIFIED, eventDetail);\n    }\n  }\n  triggerCalibrationEvent() {\n    const {\n      imageData\n    } = this.getImageData();\n    const eventDetail = {\n      element: this.element,\n      viewportId: this.id,\n      renderingEngineId: this.renderingEngineId,\n      imageId: this.getCurrentImageId(),\n      imageData: imageData,\n      worldToIndex: imageData.getWorldToIndex(),\n      ...this._calibrationEvent\n    };\n    if (!this.suppressEvents) {\n      triggerEvent(this.element, Events.IMAGE_SPACING_CALIBRATED, eventDetail);\n    }\n    this._publishCalibratedEvent = false;\n  }\n  _getVOIRangeForCurrentImage() {\n    const {\n      windowCenter,\n      windowWidth\n    } = this.csImage;\n    return this._getVOIRangeFromWindowLevel(windowWidth, windowCenter);\n  }\n  _getValidVOILUTFunction(voiLUTFunction) {\n    if (Object.values(VOILUTFunctionType).indexOf(voiLUTFunction) === -1) {\n      voiLUTFunction = VOILUTFunctionType.LINEAR;\n    }\n    return voiLUTFunction;\n  }\n  getCPUFallbackError(method) {\n    return new Error(`method ${method} cannot be used during CPU Fallback mode`);\n  }\n  fillWithBackgroundColor() {\n    const renderingEngine = this.getRenderingEngine();\n    if (renderingEngine) {\n      renderingEngine.fillCanvasWithBackgroundColor(this.canvas, this.options.background);\n    }\n  }\n  unsetColormapCPU() {\n    delete this._cpuFallbackEnabledElement.viewport.colormap;\n    this._cpuFallbackEnabledElement.renderingTools = {};\n    this.cpuRenderingInvalidated = true;\n    this.fillWithBackgroundColor();\n    this.render();\n  }\n  setColormapCPU(colormapData) {\n    this.colormap = colormapData;\n    const colormap = getColormap(colormapData.name, colormapData);\n    this._cpuFallbackEnabledElement.viewport.colormap = colormap;\n    this._cpuFallbackEnabledElement.renderingTools = {};\n    this.fillWithBackgroundColor();\n    this.cpuRenderingInvalidated = true;\n    this.render();\n  }\n  setColormapGPU(colormap) {\n    const ActorEntry = this.getDefaultActor();\n    const actor = ActorEntry.actor;\n    const actorProp = actor.getProperty();\n    const rgbTransferFunction = actorProp.getRGBTransferFunction();\n    const colormapObj = colormapUtils.getColormap(colormap.name) || vtkColorMaps.getPresetByName(colormap.name);\n    if (!rgbTransferFunction) {\n      const cfun = vtkColorTransferFunction.newInstance();\n      cfun.applyColorMap(colormapObj);\n      cfun.setMappingRange(this.voiRange.lower, this.voiRange.upper);\n      actorProp.setRGBTransferFunction(0, cfun);\n    } else {\n      rgbTransferFunction.applyColorMap(colormapObj);\n      rgbTransferFunction.setMappingRange(this.voiRange.lower, this.voiRange.upper);\n      actorProp.setRGBTransferFunction(0, rgbTransferFunction);\n    }\n    this.colormap = colormap;\n    this.render();\n  }\n  unsetColormapGPU() {\n    throw new Error('unsetColormapGPU not implemented.');\n  }\n  _getImagePlaneModule(imageId) {\n    const imagePlaneModule = metaData.get(MetadataModules.IMAGE_PLANE, imageId);\n    this.calibration ||= imagePlaneModule.calibration;\n    const newImagePlaneModule = {\n      ...imagePlaneModule\n    };\n    if (!newImagePlaneModule.columnPixelSpacing) {\n      newImagePlaneModule.columnPixelSpacing = 1;\n      this.hasPixelSpacing = this.calibration?.scale > 0;\n    }\n    if (!newImagePlaneModule.rowPixelSpacing) {\n      newImagePlaneModule.rowPixelSpacing = 1;\n      this.hasPixelSpacing = this.calibration?.scale > 0;\n    }\n    if (!newImagePlaneModule.columnCosines) {\n      newImagePlaneModule.columnCosines = [0, 1, 0];\n    }\n    if (!newImagePlaneModule.rowCosines) {\n      newImagePlaneModule.rowCosines = [1, 0, 0];\n    }\n    if (!newImagePlaneModule.imagePositionPatient) {\n      newImagePlaneModule.imagePositionPatient = [0, 0, 0];\n    }\n    if (!newImagePlaneModule.imageOrientationPatient) {\n      newImagePlaneModule.imageOrientationPatient = new Float32Array([1, 0, 0, 0, 1, 0]);\n    }\n    return newImagePlaneModule;\n  }\n}\nexport default StackViewport;","map":{"version":3,"names":["vtkDataArray","vtkImageData","vtkCamera","vtkColorTransferFunction","vtkColorMaps","vtkImageMapper","vtkImageSlice","mat4","vec2","vec3","_cloneDeep","eventTarget","metaData","actorIsA","colormap","colormapUtils","createSigmoidRGBTransferFunction","imageIdToURI","imageRetrieveMetadataProvider","invertRgbTransferFunction","isEqual","isImageActor","triggerEvent","updateVTKImageDataWithCornerstoneImage","windowLevel","windowLevelUtil","Viewport","getColormap","drawImageSync","Events","InterpolationType","MetadataModules","RequestType","VOILUTFunctionType","ViewportStatus","loadAndCacheImage","imageLoadPoolManager","calculateTransform","canvasToPixel","getDefaultViewport","pixelToCanvas","resize","cache","getConfiguration","getShouldUseCPURendering","createProgressive","createLinearRGBTransferFunction","getTransferFunctionNodes","setTransferFunctionNodes","correctShift","resetCamera","Transform","EPSILON","StackViewport","constructor","props","imagesLoader","perImageIdDefaultProperties","Map","voiUpdatedWithSetProperties","invert","initialInvert","initialTransferFunctionNodes","stackInvalidated","_publishCalibratedEvent","useNativeDataType","updateRenderingPipeline","_configureRenderingPipeline","useCPURendering","_resizeCPU","_cpuFallbackEnabledElement","viewport","getFrameOfReferenceUID","imageId","getCurrentImageId","imagePlaneModule","get","frameOfReferenceUID","getCornerstoneImage","csImage","createActorMapper","imageData","mapper","newInstance","setInputData","actor","setMapper","preferSizeOverAccuracy","rendering","setPreferSizeOverAccuracy","getPointData","getNumberOfComponents","getProperty","setIndependentComponents","getNumberOfSlices","imageIds","length","getDefaultProperties","imageProperties","undefined","globalDefaultProperties","rotation","getRotation","getProperties","voiRange","VOILUTFunction","interpolationType","isComputedVOI","getRotationCPU","getRotationGPU","viewUp","currentViewUp","viewPlaneNormal","flipVertical","getCamera","initialViewUp","negate","create","initialToCurrentViewUpAngle","angle","Math","PI","initialToCurrentViewUpCross","cross","normalDot","dot","renderImageObject","image","_setCSImage","renderFn","_updateToDisplayImageCPU","_updateActorToDisplayImageId","call","isPreScaled","preScale","scaled","canvasToWorldCPU","canvasPos","px","py","origin","spacing","direction","getImageData","worldPos","fromValues","iVector","slice","jVector","scaleAndAdd","worldToCanvasCPU","diff","subtract","worldPoint","canvasPoint","canvasToWorldGPU","renderer","getRenderer","getVtkActiveCamera","crange","getClippingRange","distance","getDistance","setClippingRange","offscreenMultiRenderWindow","getRenderingEngine","openGLRenderWindow","getOpenGLRenderWindow","size","getSize","devicePixelRatio","window","canvasPosWithDPR","displayCoord","sx","sy","worldCoord","displayToWorld","worldToCanvasGPU","worldToDisplay","canvasCoord","canvasCoordWithDPR","getCurrentImageIdIndex","currentImageIdIndex","getTargetImageIdIndex","targetImageIdIndex","getImageIds","hasImageId","includes","hasImageURI","imageURI","i","customRenderViewportToCanvas","Error","cpuRenderingInvalidated","fillWithBackgroundColor","canvas","element","viewportId","id","renderingEngineId","viewportStatus","renderingPipelineFunctions","cpu","getImageDataCPU","gpu","getImageDataGPU","setColormap","setColormapCPU","setColormapGPU","getCameraCPU","setCamera","setCameraCPU","getPan","getPanCPU","setPan","setPanCPU","getZoom","getZoomCPU","setZoom","setZoomCPU","setVOI","setVOICPU","setVOIGPU","setInterpolationType","setInterpolationTypeCPU","setInterpolationTypeGPU","setInvertColor","setInvertColorCPU","setInvertColorGPU","resetPan","resetZoom","resetCameraCPU","resetCameraGPU","canvasToWorld","worldToCanvas","getCPUFallbackError","getDefaultActor","getActors","getActor","setActors","addActors","addActor","removeAllActors","unsetColormap","unsetColormapCPU","unsetColormapGPU","scaling","modality","_shouldUseNativeDataType","_resetCPUFallbackElement","_resetGPUViewport","cameraFocalPointOnRender","initializeElementDisabledHandler","setUseCPURendering","value","useCustomRenderingPipeline","funcName","functions","Object","entries","renderingTools","transform","camera","setActiveCamera","setDirectionOfProjection","setViewUp","setParallelProjection","setThicknessFromFocalPoint","setFreezeFocalPoint","addEventListener","ELEMENT_DISABLED","elementDisabledHandler","clearTimeout","debouncedTimeout","removeEventListener","defaultActor","getMapper","getInputData","dimensions","getDimensions","getSpacing","getOrigin","getDirection","scalarData","getScalars","getData","metadata","Modality","hasPixelSpacing","calibration","getScalarData","cpuImagePixelData","worldToIndex","point","pixelCoord","indexToWorld","buildMetadata","pixelRepresentation","bitsAllocated","bitsStored","highBit","photometricInterpretation","samplesPerPixel","windowWidth","windowCenter","voiLUTFunction","imageIdScalingFactor","CALIBRATION","_addScalingToViewport","voiLUTFunctionEnum","_getValidVOILUTFunction","_getImagePlaneModule","calibrateIfNecessary","imagePixelModule","isUpdated","scale","rowPixelSpacing","_calibrationEvent","setDefaultProperties","ViewportProperties","set","setProperties","clearDefaultProperties","resetProperties","delete","resetToDefaultProperties","suppressEvents","PRE_RENDER","LOADING","setVOILUTFunction","setRotation","_resetProperties","render","_isCurrentImagePTPrescaled","_getDefaultPTPrescaledVOIRange","_getVOIRangeForCurrentImage","LINEAR","transferFunction","getTransferFunction","currentImageId","properties","name","_setPropertiesFromCache","map","x","rotationMatrix","fromRotation","transformMat4","canvasCenter","clientWidth","clientHeight","canvasCenterWorld","topLeftWorld","bottomLeftWorld","parallelScale","parallelProjection","focalPoint","position","flipHorizontal","cameraInterface","previousCamera","focalPointCanvas","focalPointPixel","prevFocalPointCanvas","prevFocalPointPixel","deltaPixel","shift","y","translation","setFlipCPU","eventDetail","CAMERA_MODIFIED","pan","p","zoom","hflip","vflip","setRotationCPU","setRotationGPU","newVOILUTFunction","forceRecreateLUTFunction","setCameraNoEvent","roll","volumeProperty","pixelReplication","volumeActor","tfunc","getRGBTransferFunction","imageSliceActor","options","ww","wc","wwToUse","Array","isArray","wcToUse","voi","lower","upper","toLowHighRange","toWindowLevel","range","VOI_MODIFIED","imageActor","voiRangeToUse","getRange","maxVoiRange","setUseLookupTableScalarRange","isSigmoidTFun","SAMPLED_SIGMOID","transferFunctionCreator","setRGBTransferFunction","setRange","PT","suvbw","suvlbm","suvbsa","ptScaling","suvbwToSuvlbm","suvbwToSuvbsa","_getNumCompsFromPhotometricInterpretation","numberOfComponents","indexOf","getImageDataMetadata","rowCosines","columnCosines","rowCosineVec","colCosineVec","scanAxisNormal","imagePositionPatient","xSpacing","columnPixelSpacing","ySpacing","xVoxels","columns","yVoxels","rows","zSpacing","zVoxels","numComps","numVoxels","_getCameraOrientation","imageDataDirection","createVTKImageData","pixelArray","values","scalarArray","setDimensions","setSpacing","setDirection","setOrigin","setScalars","_createVTKImageData","_imageData","setStack","_throwIfDestroyed","imageRetrieveConfiguration","IMAGE_RETRIEVE_CONFIGURATION","_setImageIdIndex","STACK_VIEWPORT_NEW_STACK","isDisabled","_checkVTKImageDataMatchesCornerstoneImage","dataType","getDataType","isSameXSpacing","isSameYSpacing","getPixelData","_updateVTKImageDataFromCornerstoneImage","_loadAndDisplayImage","imageIdIndex","_loadAndDisplayImageCPU","_loadAndDisplayImageGPU","Promise","resolve","reject","successCallback","pixelData","scalingParams","scalingParameters","scaledWithNonIntegers","rescaleIntercept","rescaleSlope","Float32Array","floatMinMax","min","maxPixelValue","max","minPixelValue","floatRange","abs","intRange","slope","intercept","numPixels","intPixelData","Uint16Array","rescaledPixel","floor","STACK_NEW_IMAGE","errorCallback","error","IMAGE_LOAD_ERROR","sendRequest","then","priority","requestType","Interaction","additionalDetails","enabled","useRGBA","PRE_STACK_NEW_IMAGE","addRequest","bind","csImgFrame","imageFrame","imgFrame","permanent","getLoaderImageOptions","transferSyntaxUID","targetBuffer","type","loadImages","listener","allSettled","v","viewportSettingToUse","assign","addImages","stackInputs","actors","forEach","stackInput","getImage","imagedata","push","uid","actorUID","callback","sameImageData","activeCamera","getActiveCamera","previousCameraProps","cameraProps","panCache","resetCameraNoEvent","_restoreCameraProps","oldActors","unshift","triggerCameraEvent","monochrome1","_getInitialVOIRange","triggerCalibrationEvent","_getVOIRangeFromWindowLevel","_getPTPreScaledRange","center","width","defaultProperties","centerWorld","resetToCenter","scroll","delta","debounce","loop","currentTargetImageIdIndex","numberOfFrames","newTargetImageIdIndex","targetImageId","imageAlreadyLoaded","isLoaded","setImageIdIndex","setTimeout","eventData","newImageIdIndex","STACK_VIEWPORT_SCROLL","imageIdPromise","calibrateSpacing","prevScale","newPosition","newFocal","RESET_CAMERA_EVENT","invokeEvent","getWorldToIndex","IMAGE_SPACING_CALIBRATED","method","renderingEngine","fillCanvasWithBackgroundColor","background","colormapData","ActorEntry","actorProp","rgbTransferFunction","colormapObj","getPresetByName","cfun","applyColorMap","setMappingRange","IMAGE_PLANE","newImagePlaneModule","imageOrientationPatient"],"sources":["../../../src/RenderingEngine/StackViewport.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}