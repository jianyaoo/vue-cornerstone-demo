{"ast":null,"code":"import { utilities as csUtils } from '@cornerstonejs/core';\nimport { vec3 } from 'gl-matrix';\nimport { getBoundingBoxAroundShapeIJK } from './boundingBox';\nconst {\n  transformWorldToIndex\n} = csUtils;\nfunction getSphereBoundsInfo(circlePoints, imageData, viewport) {\n  const [bottom, top] = circlePoints;\n  const centerWorld = vec3.fromValues((bottom[0] + top[0]) / 2, (bottom[1] + top[1]) / 2, (bottom[2] + top[2]) / 2);\n  const radiusWorld = vec3.distance(bottom, top) / 2;\n  if (!viewport) {\n    throw new Error('viewport is required in order to calculate the sphere bounds');\n  }\n  const {\n    boundsIJK,\n    topLeftWorld,\n    bottomRightWorld\n  } = _computeBoundsIJKWithCamera(imageData, viewport, circlePoints, centerWorld, radiusWorld);\n  return {\n    boundsIJK,\n    centerWorld: centerWorld,\n    radiusWorld,\n    topLeftWorld: topLeftWorld,\n    bottomRightWorld: bottomRightWorld\n  };\n}\nfunction _computeBoundsIJKWithCamera(imageData, viewport, circlePoints, centerWorld, radiusWorld) {\n  const [bottom, top] = circlePoints;\n  const dimensions = imageData.getDimensions();\n  const camera = viewport.getCamera();\n  const viewUp = vec3.fromValues(camera.viewUp[0], camera.viewUp[1], camera.viewUp[2]);\n  const viewPlaneNormal = vec3.fromValues(camera.viewPlaneNormal[0], camera.viewPlaneNormal[1], camera.viewPlaneNormal[2]);\n  const viewRight = vec3.create();\n  vec3.cross(viewRight, viewUp, viewPlaneNormal);\n  const topLeftWorld = vec3.create();\n  const bottomRightWorld = vec3.create();\n  vec3.scaleAndAdd(topLeftWorld, top, viewPlaneNormal, radiusWorld);\n  vec3.scaleAndAdd(bottomRightWorld, bottom, viewPlaneNormal, -radiusWorld);\n  vec3.scaleAndAdd(topLeftWorld, topLeftWorld, viewRight, -radiusWorld);\n  vec3.scaleAndAdd(bottomRightWorld, bottomRightWorld, viewRight, radiusWorld);\n  const topLeftIJK = transformWorldToIndex(imageData, topLeftWorld);\n  const bottomRightIJK = transformWorldToIndex(imageData, bottomRightWorld);\n  const pointsIJK = circlePoints.map(p => transformWorldToIndex(imageData, p));\n  const boundsIJK = getBoundingBoxAroundShapeIJK([topLeftIJK, bottomRightIJK, ...pointsIJK], dimensions);\n  return {\n    boundsIJK,\n    topLeftWorld,\n    bottomRightWorld\n  };\n}\nexport { getSphereBoundsInfo };","map":{"version":3,"names":["utilities","csUtils","vec3","getBoundingBoxAroundShapeIJK","transformWorldToIndex","getSphereBoundsInfo","circlePoints","imageData","viewport","bottom","top","centerWorld","fromValues","radiusWorld","distance","Error","boundsIJK","topLeftWorld","bottomRightWorld","_computeBoundsIJKWithCamera","dimensions","getDimensions","camera","getCamera","viewUp","viewPlaneNormal","viewRight","create","cross","scaleAndAdd","topLeftIJK","bottomRightIJK","pointsIJK","map","p"],"sources":["../../../src/utilities/getSphereBoundsInfo.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}