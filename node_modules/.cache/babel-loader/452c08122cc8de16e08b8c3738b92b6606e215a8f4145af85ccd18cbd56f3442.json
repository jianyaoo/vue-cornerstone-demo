{"ast":null,"code":"import { state } from '../index';\nfunction getSynchronizersForViewport(viewportId, renderingEngineId) {\n  const synchronizersFilteredByIds = [];\n  if (!renderingEngineId && !viewportId) {\n    throw new Error('At least one of renderingEngineId or viewportId should be given');\n  }\n  for (let i = 0; i < state.synchronizers.length; i++) {\n    const synchronizer = state.synchronizers[i];\n    const notDisabled = !synchronizer.isDisabled();\n    const hasSourceViewport = synchronizer.hasSourceViewport(renderingEngineId, viewportId);\n    const hasTargetViewport = synchronizer.hasTargetViewport(renderingEngineId, viewportId);\n    if (notDisabled && (hasSourceViewport || hasTargetViewport)) {\n      synchronizersFilteredByIds.push(synchronizer);\n    }\n  }\n  return synchronizersFilteredByIds;\n}\nexport default getSynchronizersForViewport;","map":{"version":3,"names":["state","getSynchronizersForViewport","viewportId","renderingEngineId","synchronizersFilteredByIds","Error","i","synchronizers","length","synchronizer","notDisabled","isDisabled","hasSourceViewport","hasTargetViewport","push"],"sources":["../../../../src/store/SynchronizerManager/getSynchronizersForViewport.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,KAAK,QAAQ,UAAU;AAUhC,SAASC,2BAA2BA,CAClCC,UAAkB,EAClBC,iBAAyB;EAEzB,MAAMC,0BAA0B,GAAG,EAAE;EAErC,IAAI,CAACD,iBAAiB,IAAI,CAACD,UAAU,EAAE;IACrC,MAAM,IAAIG,KAAK,CACb,iEAAiE,CAClE;;EAGH,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,KAAK,CAACO,aAAa,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;IACnD,MAAMG,YAAY,GAAGT,KAAK,CAACO,aAAa,CAACD,CAAC,CAAC;IAC3C,MAAMI,WAAW,GAAG,CAACD,YAAY,CAACE,UAAU,EAAE;IAC9C,MAAMC,iBAAiB,GAAGH,YAAY,CAACG,iBAAiB,CACtDT,iBAAiB,EACjBD,UAAU,CACX;IAED,MAAMW,iBAAiB,GAAGJ,YAAY,CAACI,iBAAiB,CACtDV,iBAAiB,EACjBD,UAAU,CACX;IAED,IAAIQ,WAAW,KAAKE,iBAAiB,IAAIC,iBAAiB,CAAC,EAAE;MAC3DT,0BAA0B,CAACU,IAAI,CAACL,YAAY,CAAC;;;EAIjD,OAAOL,0BAA0B;AACnC;AAEA,eAAeH,2BAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}