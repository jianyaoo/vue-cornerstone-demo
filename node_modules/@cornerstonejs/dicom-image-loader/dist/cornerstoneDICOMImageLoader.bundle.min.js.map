{"version":3,"file":"cornerstoneDICOMImageLoader.bundle.min.js","mappings":"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","sources":["webpack://cornerstoneDICOMImageLoader/webpack/universalModuleDefinition","webpack://cornerstoneDICOMImageLoader/../../../node_modules/pako/lib/inflate.js","webpack://cornerstoneDICOMImageLoader/../../../node_modules/pako/lib/utils/common.js","webpack://cornerstoneDICOMImageLoader/../../../node_modules/pako/lib/utils/strings.js","webpack://cornerstoneDICOMImageLoader/../../../node_modules/pako/lib/zlib/adler32.js","webpack://cornerstoneDICOMImageLoader/../../../node_modules/pako/lib/zlib/constants.js","webpack://cornerstoneDICOMImageLoader/../../../node_modules/pako/lib/zlib/crc32.js","webpack://cornerstoneDICOMImageLoader/../../../node_modules/pako/lib/zlib/gzheader.js","webpack://cornerstoneDICOMImageLoader/../../../node_modules/pako/lib/zlib/inffast.js","webpack://cornerstoneDICOMImageLoader/../../../node_modules/pako/lib/zlib/inflate.js","webpack://cornerstoneDICOMImageLoader/../../../node_modules/pako/lib/zlib/inftrees.js","webpack://cornerstoneDICOMImageLoader/../../../node_modules/pako/lib/zlib/messages.js","webpack://cornerstoneDICOMImageLoader/../../../node_modules/pako/lib/zlib/zstream.js","webpack://cornerstoneDICOMImageLoader/../../../node_modules/worker-loader/dist/runtime/inline.js","webpack://cornerstoneDICOMImageLoader/external umd {\"commonjs\":\"dicom-parser\",\"commonjs2\":\"dicom-parser\",\"amd\":\"dicom-parser\",\"root\":\"dicomParser\"}","webpack://cornerstoneDICOMImageLoader/webpack/bootstrap","webpack://cornerstoneDICOMImageLoader/webpack/runtime/compat get default export","webpack://cornerstoneDICOMImageLoader/webpack/runtime/define property getters","webpack://cornerstoneDICOMImageLoader/webpack/runtime/global","webpack://cornerstoneDICOMImageLoader/webpack/runtime/hasOwnProperty shorthand","webpack://cornerstoneDICOMImageLoader/webpack/runtime/make namespace object","webpack://cornerstoneDICOMImageLoader/webpack/runtime/publicPath","webpack://cornerstoneDICOMImageLoader/./imageLoader/colorSpaceConverters/convertRGBColorByPixel.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/colorSpaceConverters/convertRGBColorByPlane.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/colorSpaceConverters/convertYBRFullByPixel.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/colorSpaceConverters/convertYBRFullByPlane.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadors/metaData/getValue.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadors/metaData/getNumberString.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadors/metaData/getNumberValue.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadors/metaData/getNumberValues.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/imageIdToURI.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadors/getTagValue.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadors/combineFrameInstance.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadors/retrieveMultiframeMetadata.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadors/metaDataManager.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/isNMReconstructable.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadors/metaData/NMHelpers.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadors/metaData/extractPositioningFromMetadata.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/getInstanceModule.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadors/metaData/getFirstNumberValue.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadors/metaData/getSequenceItems.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadors/metaData/USHelpers.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadors/metaData/metaDataProvider.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadors/metaData/getOverlayPlaneModule.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadors/findIndexOfString.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/internal/options.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/internal/xhrRequest.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/internal/index.ts","webpack://cornerstoneDICOMImageLoader/../../../src/utilities/ProgressiveIterator.ts","webpack://cornerstoneDICOMImageLoader/../../../src/enums/ImageQualityStatus.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadors/extractMultipart.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadors/getImageQualityStatus.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/internal/streamRequest.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/internal/rangeRequest.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadors/getPixelData.ts","webpack://cornerstoneDICOMImageLoader/./shared/getMinMax.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/convertColorSpace.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/colorSpaceConverters/convertYBRFull422ByPixel.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/decodeJPEGBaseline8BitColor.ts","webpack://cornerstoneDICOMImageLoader/./webWorker/index.worker.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/webWorkerManager.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/decodeImageFrame.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/getImageFrame.ts","webpack://cornerstoneDICOMImageLoader/./shared/isColorImage.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/createImage.ts","webpack://cornerstoneDICOMImageLoader/./shared/getPixelDataTypeFromMinMax.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/getScalingParameters.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/isColorConversionRequired.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadors/loadImage.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadors/index.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadors/register.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadouri/metaData/getImagePixelModule.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadouri/metaData/getLUTs.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadouri/metaData/getModalityLUTOutputPixelRepresentation.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadouri/metaData/getNumberValues.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadouri/parseImageId.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadouri/dataset-from-partial-content.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadouri/combineFrameInstanceDataset.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadouri/retrieveMultiframeDataset.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadouri/dataSetCacheManager.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadouri/metaData/extractPositioningFromDataset.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadouri/metaData/USHelpers.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadouri/metaData/metaDataProvider.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadouri/metaData/getOverlayPlaneModule.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadouri/fileManager.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadouri/getEncapsulatedImageFrame.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadouri/unpackBinaryFrame.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadouri/getUncompressedImageFrame.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadouri/loadFileRequest.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadouri/getPixelData.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadouri/loadImage.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadouri/index.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/wadouri/register.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/registerLoaders.ts","webpack://cornerstoneDICOMImageLoader/./externalModules.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/colorSpaceConverters/convertPALETTECOLOR.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/configure.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/isJPEGBaseline8BitColor.ts","webpack://cornerstoneDICOMImageLoader/./imageLoader/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"dicom-parser\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"cornerstoneDICOMImageLoader\", [\"dicom-parser\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"cornerstoneDICOMImageLoader\"] = factory(require(\"dicom-parser\"));\n\telse\n\t\troot[\"cornerstoneDICOMImageLoader\"] = factory(root[\"dicomParser\"]);\n})(this, (__WEBPACK_EXTERNAL_MODULE__713__) => {\nreturn ","'use strict';\n\n\nconst zlib_inflate = require('./zlib/inflate');\nconst utils        = require('./utils/common');\nconst strings      = require('./utils/strings');\nconst msg          = require('./zlib/messages');\nconst ZStream      = require('./zlib/zstream');\nconst GZheader     = require('./zlib/gzheader');\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = require('./zlib/constants');\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  this.options = utils.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  let status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(msg[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = zlib_inflate.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = zlib_inflate.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      zlib_inflate.inflateReset(strm);\n      status = zlib_inflate.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = zlib_inflate.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  const inflator = new Inflate(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || msg[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nmodule.exports.Inflate = Inflate;\nmodule.exports.inflate = inflate;\nmodule.exports.inflateRaw = inflateRaw;\nmodule.exports.ungzip = inflate;\nmodule.exports.constants = require('./zlib/constants');\n","'use strict';\n\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nmodule.exports.assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nmodule.exports.flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n","// String encode/decode helpers\n'use strict';\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nmodule.exports.string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nmodule.exports.buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nmodule.exports.utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n","'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nmodule.exports = adler32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n","'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nmodule.exports = crc32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD = 16209;       /* got a data error -- remain here until reset */\nconst TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32       = require('./adler32');\nconst crc32         = require('./crc32');\nconst inflate_fast  = require('./inffast');\nconst inflate_table = require('./inftrees');\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH, Z_BLOCK, Z_TREES,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR, Z_BUF_ERROR,\n  Z_DEFLATED\n} = require('./constants');\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n};\n\n\nmodule.exports.inflateReset = inflateReset;\nmodule.exports.inflateReset2 = inflateReset2;\nmodule.exports.inflateResetKeep = inflateResetKeep;\nmodule.exports.inflateInit = inflateInit;\nmodule.exports.inflateInit2 = inflateInit2;\nmodule.exports.inflate = inflate;\nmodule.exports.inflateEnd = inflateEnd;\nmodule.exports.inflateGetHeader = inflateGetHeader;\nmodule.exports.inflateSetDictionary = inflateSetDictionary;\nmodule.exports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nmodule.exports = inflate_table;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n","\"use strict\";\n\n/* eslint-env browser */\n\n/* eslint-disable no-undef, no-use-before-define, new-cap */\nmodule.exports = function (content, workerConstructor, workerOptions, url) {\n  var globalScope = self || window;\n\n  try {\n    try {\n      var blob;\n\n      try {\n        // New API\n        blob = new globalScope.Blob([content]);\n      } catch (e) {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;\n        blob = new BlobBuilder();\n        blob.append(content);\n        blob = blob.getBlob();\n      }\n\n      var URL = globalScope.URL || globalScope.webkitURL;\n      var objectURL = URL.createObjectURL(blob);\n      var worker = new globalScope[workerConstructor](objectURL, workerOptions);\n      URL.revokeObjectURL(objectURL);\n      return worker;\n    } catch (e) {\n      return new globalScope[workerConstructor](\"data:application/javascript,\".concat(encodeURIComponent(content)), workerOptions);\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error(\"Inline worker is not supported\");\n    }\n\n    return new globalScope[workerConstructor](url, workerOptions);\n  }\n};","module.exports = __WEBPACK_EXTERNAL_MODULE__713__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","import { ByteArray } from 'dicom-parser';\n\nexport default function (\n  imageFrame: ByteArray,\n  colorBuffer: ByteArray,\n  useRGBA: boolean\n): void {\n  if (imageFrame === undefined) {\n    throw new Error('decodeRGB: rgbBuffer must be defined');\n  }\n  if (imageFrame.length % 3 !== 0) {\n    throw new Error(\n      `decodeRGB: rgbBuffer length ${imageFrame.length} must be divisible by 3`\n    );\n  }\n\n  const numPixels = imageFrame.length / 3;\n\n  let rgbIndex = 0;\n\n  let bufferIndex = 0;\n\n  if (useRGBA) {\n    for (let i = 0; i < numPixels; i++) {\n      colorBuffer[bufferIndex++] = imageFrame[rgbIndex++]; // red\n      colorBuffer[bufferIndex++] = imageFrame[rgbIndex++]; // green\n      colorBuffer[bufferIndex++] = imageFrame[rgbIndex++]; // blue\n      colorBuffer[bufferIndex++] = 255; // alpha\n    }\n\n    return;\n  }\n\n  // if RGB buffer\n  colorBuffer.set(imageFrame);\n}\n","import { ByteArray } from 'dicom-parser';\n\nexport default function (\n  imageFrame: ByteArray,\n  colorBuffer: ByteArray,\n  useRGBA: boolean\n): void {\n  if (imageFrame === undefined) {\n    throw new Error('decodeRGB: rgbBuffer must be defined');\n  }\n  if (imageFrame.length % 3 !== 0) {\n    throw new Error(\n      `decodeRGB: rgbBuffer length ${imageFrame.length} must be divisible by 3`\n    );\n  }\n\n  const numPixels = imageFrame.length / 3;\n\n  let bufferIndex = 0;\n\n  let rIndex = 0;\n\n  let gIndex = numPixels;\n\n  let bIndex = numPixels * 2;\n\n  if (useRGBA) {\n    for (let i = 0; i < numPixels; i++) {\n      colorBuffer[bufferIndex++] = imageFrame[rIndex++]; // red\n      colorBuffer[bufferIndex++] = imageFrame[gIndex++]; // green\n      colorBuffer[bufferIndex++] = imageFrame[bIndex++]; // blue\n      colorBuffer[bufferIndex++] = 255; // alpha\n    }\n  } else {\n    for (let i = 0; i < numPixels; i++) {\n      colorBuffer[bufferIndex++] = imageFrame[rIndex++]; // red\n      colorBuffer[bufferIndex++] = imageFrame[gIndex++]; // green\n      colorBuffer[bufferIndex++] = imageFrame[bIndex++]; // blue\n    }\n  }\n}\n","import { ByteArray } from 'dicom-parser';\n\nexport default function (\n  imageFrame: ByteArray,\n  colorBuffer: ByteArray,\n  useRGBA: boolean\n): void {\n  if (imageFrame === undefined) {\n    throw new Error('convertYBRFullByPixel: ybrBuffer must be defined');\n  }\n  if (imageFrame.length % 3 !== 0) {\n    throw new Error(\n      `convertYBRFullByPixel: ybrBuffer length ${imageFrame.length} must be divisible by 3`\n    );\n  }\n\n  const numPixels = imageFrame.length / 3;\n\n  let ybrIndex = 0;\n\n  let bufferIndex = 0;\n\n  if (useRGBA) {\n    for (let i = 0; i < numPixels; i++) {\n      const y = imageFrame[ybrIndex++];\n      const cb = imageFrame[ybrIndex++];\n      const cr = imageFrame[ybrIndex++];\n\n      colorBuffer[bufferIndex++] = y + 1.402 * (cr - 128); // red\n      colorBuffer[bufferIndex++] =\n        y - 0.34414 * (cb - 128) - 0.71414 * (cr - 128); // green\n      colorBuffer[bufferIndex++] = y + 1.772 * (cb - 128); // blue\n      colorBuffer[bufferIndex++] = 255; // alpha\n    }\n\n    return;\n  }\n\n  for (let i = 0; i < numPixels; i++) {\n    const y = imageFrame[ybrIndex++];\n    const cb = imageFrame[ybrIndex++];\n    const cr = imageFrame[ybrIndex++];\n\n    colorBuffer[bufferIndex++] = y + 1.402 * (cr - 128); // red\n    colorBuffer[bufferIndex++] =\n      y - 0.34414 * (cb - 128) - 0.71414 * (cr - 128); // green\n    colorBuffer[bufferIndex++] = y + 1.772 * (cb - 128); // blue\n  }\n}\n","import { ByteArray } from 'dicom-parser';\n\nexport default function (\n  imageFrame: ByteArray,\n  colorBuffer: ByteArray,\n  useRGBA: boolean\n): void {\n  if (imageFrame === undefined) {\n    throw new Error('convertYBRFullByPlane: ybrBuffer must be defined');\n  }\n  if (imageFrame.length % 3 !== 0) {\n    throw new Error(\n      `convertYBRFullByPlane: ybrBuffer length ${imageFrame.length} must be divisible by 3`\n    );\n  }\n\n  const numPixels = imageFrame.length / 3;\n\n  let bufferIndex = 0;\n\n  let yIndex = 0;\n\n  let cbIndex = numPixels;\n\n  let crIndex = numPixels * 2;\n\n  if (useRGBA) {\n    for (let i = 0; i < numPixels; i++) {\n      const y = imageFrame[yIndex++];\n      const cb = imageFrame[cbIndex++];\n      const cr = imageFrame[crIndex++];\n\n      colorBuffer[bufferIndex++] = y + 1.402 * (cr - 128); // red\n      colorBuffer[bufferIndex++] =\n        y - 0.34414 * (cb - 128) - 0.71414 * (cr - 128); // green\n      colorBuffer[bufferIndex++] = y + 1.772 * (cb - 128); // blue\n      colorBuffer[bufferIndex++] = 255; // alpha\n    }\n\n    return;\n  }\n\n  for (let i = 0; i < numPixels; i++) {\n    const y = imageFrame[yIndex++];\n    const cb = imageFrame[cbIndex++];\n    const cr = imageFrame[crIndex++];\n\n    colorBuffer[bufferIndex++] = y + 1.402 * (cr - 128); // red\n    colorBuffer[bufferIndex++] =\n      y - 0.34414 * (cb - 128) - 0.71414 * (cr - 128); // green\n    colorBuffer[bufferIndex++] = y + 1.772 * (cb - 128); // blue\n  }\n}\n","import { WADORSMetaDataElement } from '../../../types';\n\n/**\n * Returns the raw value\n *\n * @param element - The javascript object for the specified element in the metadata\n * @param [index] - the index of the value in a multi-valued element, default is 0\n * @param [defaultValue] - The default value to return if the element does not exist\n * @returns {*}\n */\nfunction getValue<ReturnType = unknown>(\n  element: WADORSMetaDataElement,\n  index?: number,\n  defaultValue?: ReturnType\n): ReturnType {\n  index = index || 0;\n  if (!element) {\n    return defaultValue;\n  }\n  // Value is not present if the attribute has a zero length value\n  if (!element.Value) {\n    return defaultValue;\n  }\n  // make sure we have the specified index\n  if ((element.Value as any).length <= index) {\n    return defaultValue;\n  }\n\n  return element.Value[index];\n}\n\nexport default getValue;\n","import { WADORSMetaDataElement } from '../../../types';\nimport getValue from './getValue';\n\n/**\n * Returns the first string value as a Javascript number\n *\n * @param element - The javascript object for the specified element in the metadata\n * @param [index] - the index of the value in a multi-valued element, default is 0\n * @param [defaultValue] - The default value to return if the element does not exist\n * @returns {*}\n */\nfunction getNumberString(\n  element: WADORSMetaDataElement,\n  index: number,\n  defaultValue: number\n): number {\n  const value = getValue<any>(element, index, defaultValue);\n\n  if (value === undefined) {\n    return;\n  }\n\n  return parseFloat(value);\n}\n\nexport default getNumberString;\n","import { WADORSMetaDataElement } from '../../../types';\nimport getValue from './getValue';\n\nfunction getNumberValue(\n  element: WADORSMetaDataElement,\n  index?: number\n): number {\n  const value = getValue<any>(element, index);\n\n  if (value === undefined) {\n    return;\n  }\n\n  return parseFloat(value);\n}\n\nexport default getNumberValue;\n","import { WADORSMetaDataElement } from '../../../types';\n\n/**\n * Returns the values as an array of javascript numbers\n *\n * @param element - The javascript object for the specified element in the metadata\n * @param [minimumLength] - the minimum number of values\n * @returns {*}\n */\nfunction getNumberValues(\n  element: WADORSMetaDataElement,\n  minimumLength?: number\n): number[] {\n  if (!element) {\n    return;\n  }\n  // Value is not present if the attribute has a zero length value\n  if (!element.Value) {\n    return;\n  }\n  // Make sure the Value is an array\n  if (!Array.isArray(element.Value)) {\n    return;\n  }\n  // make sure we have the expected length\n  if (minimumLength && element.Value.length < minimumLength) {\n    return;\n  }\n\n  const values: number[] = [];\n\n  for (let i = 0; i < element.Value.length; i++) {\n    // @ts-expect-error\n    values.push(parseFloat(element.Value[i]));\n  }\n\n  return values;\n}\n\nexport default getNumberValues;\n","/**\n * Removes the data loader scheme from the imageId\n *\n * @param {string} imageId Image ID\n * @returns {string} imageId without the data loader scheme\n * @memberof Cache\n */\nexport default function imageIdToURI(imageId: string): string {\n  const colonIndex = imageId.indexOf(':');\n\n  return imageId.substring(colonIndex + 1);\n}\n","export default function getTagValue(tag, justElement = true) {\n  if (tag && tag.Value) {\n    if (tag.Value[0] && justElement) {\n      return tag.Value[0];\n    }\n\n    return tag.Value;\n  }\n\n  return tag;\n}\n","import getTagValue from './getTagValue';\n\nfunction getFrameInformation(\n  PerFrameFunctionalGroupsSequence,\n  SharedFunctionalGroupsSequence,\n  frameNumber\n) {\n  const shared = (\n    SharedFunctionalGroupsSequence\n      ? Object.values(SharedFunctionalGroupsSequence[0])\n      : []\n  )\n    .map((it) => it[0])\n    .filter((it) => it !== undefined && typeof it === 'object');\n  const perFrame = (\n    PerFrameFunctionalGroupsSequence\n      ? Object.values(PerFrameFunctionalGroupsSequence[frameNumber - 1])\n      : []\n  )\n    .map((it: any) => it.Value[0])\n    .filter((it) => it !== undefined && typeof it === 'object');\n\n  return {\n    shared,\n    perFrame,\n  };\n}\n\nfunction getMultiframeInformation(metaData) {\n  let {\n    52009230: PerFrameFunctionalGroupsSequence,\n    52009229: SharedFunctionalGroupsSequence,\n    '00280008': NumberOfFrames,\n    // eslint-disable-next-line prefer-const\n    ...rest\n  } = metaData;\n\n  PerFrameFunctionalGroupsSequence = getTagValue(\n    PerFrameFunctionalGroupsSequence,\n    false\n  );\n  SharedFunctionalGroupsSequence = getTagValue(\n    SharedFunctionalGroupsSequence,\n    false\n  );\n  NumberOfFrames = getTagValue(NumberOfFrames);\n\n  return {\n    PerFrameFunctionalGroupsSequence,\n    SharedFunctionalGroupsSequence,\n    NumberOfFrames,\n    rest,\n  };\n}\n// function that retrieves specific frame metadata information from multiframe\n// metadata\nfunction combineFrameInstance(frameNumber, instance) {\n  const {\n    PerFrameFunctionalGroupsSequence,\n    SharedFunctionalGroupsSequence,\n    NumberOfFrames,\n    rest,\n  } = getMultiframeInformation(instance);\n\n  if (PerFrameFunctionalGroupsSequence || NumberOfFrames > 1) {\n    const { shared, perFrame } = getFrameInformation(\n      PerFrameFunctionalGroupsSequence,\n      SharedFunctionalGroupsSequence,\n      frameNumber\n    );\n\n    const newInstance = Object.assign(instance, { frameNumber });\n\n    // merge the shared first then the per frame to override\n    [...shared, ...perFrame].forEach((item) => {\n      Object.entries(item).forEach(([key, value]) => {\n        newInstance[key] = value;\n      });\n    });\n\n    return Object.assign(rest, { '00280008': NumberOfFrames }, newInstance);\n  }\n\n  return instance;\n}\n\nexport { combineFrameInstance, getMultiframeInformation, getFrameInformation };\n","import getValue from './metaData/getValue';\nimport imageIdToURI from '../imageIdToURI';\nimport { metadataByImageURI } from './metaDataManager';\n\n// get metadata information for the first frame\nfunction _retrieveMultiframeMetadata(imageURI) {\n  const lastSlashIdx = imageURI.indexOf('/frames/') + 8;\n  // imageid string without frame number\n  const imageIdFrameless = imageURI.slice(0, lastSlashIdx);\n  // calculating frame number\n  const frame = parseInt(imageURI.slice(lastSlashIdx), 10);\n  // retrieving the frame 1 that contains multiframe information\n\n  const metadata = metadataByImageURI[`${imageIdFrameless}1`];\n\n  return {\n    metadata,\n    frame,\n  };\n}\n\nfunction retrieveMultiframeMetadata(imageId) {\n  const imageURI = imageIdToURI(imageId);\n\n  return _retrieveMultiframeMetadata(imageURI);\n}\n\nfunction isMultiframe(metadata) {\n  // Checks if dicomTag NumberOf Frames exists and it is greater than one\n  const numberOfFrames = getValue<number>(metadata['00280008']);\n\n  return numberOfFrames && numberOfFrames > 1;\n}\n\nexport default {\n  _retrieveMultiframeMetadata,\n  retrieveMultiframeMetadata,\n  isMultiframe,\n};\n","import { WADORSMetaData } from '../../types';\nimport imageIdToURI from '../imageIdToURI';\nimport { combineFrameInstance } from './combineFrameInstance';\nimport multiframeMetadata from './retrieveMultiframeMetadata';\n\nlet metadataByImageURI = [];\nlet multiframeMetadataByImageURI = {};\n\nfunction add(imageId: string, metadata: WADORSMetaData) {\n  const imageURI = imageIdToURI(imageId);\n\n  Object.defineProperty(metadata, 'isMultiframe', {\n    value: multiframeMetadata.isMultiframe(metadata),\n    enumerable: false,\n  });\n\n  metadataByImageURI[imageURI] = metadata;\n}\n\n// multiframes images will have only one imageId returned by the dicomweb\n// client and registered in metadataByImageURI for all the n frames. If an\n// imageId does not have metadata, or it does not have at all, or the imageID\n// belongs to a frame, not registered in metadataByImageURI\nfunction get(imageId: string): WADORSMetaData {\n  const imageURI = imageIdToURI(imageId);\n\n  // Check if the metadata is already available\n  const metadata = metadataByImageURI[imageURI];\n\n  if (metadata && !metadata?.isMultiframe) {\n    // Return the metadata for single-frame images\n    return metadata;\n  }\n\n  const cachedMetadata = multiframeMetadataByImageURI[imageURI];\n\n  if (cachedMetadata) {\n    return cachedMetadata;\n  }\n\n  // Try to get the metadata for a specific frame of a multiframe image\n  const retrievedMetadata =\n    multiframeMetadata._retrieveMultiframeMetadata(imageURI);\n\n  if (!retrievedMetadata || !retrievedMetadata.metadata) {\n    return;\n  }\n\n  const { metadata: firstFrameMetadata, frame } = retrievedMetadata;\n\n  if (firstFrameMetadata) {\n    // Combine the metadata from the first frame with the metadata from the specified frame\n    const combined = combineFrameInstance(frame, firstFrameMetadata);\n\n    multiframeMetadataByImageURI[imageURI] = combined;\n\n    return combined;\n  }\n}\n\nfunction remove(imageId) {\n  const imageURI = imageIdToURI(imageId);\n\n  metadataByImageURI[imageURI] = undefined;\n\n  multiframeMetadataByImageURI[imageURI] = undefined;\n}\n\nfunction purge() {\n  metadataByImageURI = [];\n  multiframeMetadataByImageURI = {};\n}\n\nexport { metadataByImageURI };\n\nexport default {\n  add,\n  get,\n  remove,\n  purge,\n};\n","export default function isNMReconstructable(imageSubType) {\n  return imageSubType === 'RECON TOMO' || imageSubType === 'RECON GATED TOMO';\n}\n","import getTagValue from '../getTagValue';\nimport getValue from './getValue';\nimport isNMReconstructable from '../../isNMReconstructable';\nimport getNumberValues from './getNumberValues';\n\nfunction isNMModality(metaData) {\n  const modality = getValue(metaData['00080060']);\n\n  return modality.includes('NM');\n}\n\n/**\n * Get a subpart of Image Type dicom tag defined by index\n * @param {*} metaData\n * @param {*} index 0 based index of the subtype\n */\nfunction getImageTypeSubItemFromMetadata(metaData, index) {\n  const imageType = getTagValue(metaData['00080008'], false);\n\n  if (imageType) {\n    // const subTypes = imageType.split('\\\\');\n\n    // if (subTypes.length > index) {\n    //   return subTypes[index];\n    // }\n    return imageType[index];\n  }\n\n  return undefined;\n}\n/**\n * Extracts the orientation from NM multiframe metadata, if image type\n * equal to RECON TOMO or RECON GATED TOMO\n * @param {*} metaData\n * @returns\n */\nfunction extractOrientationFromNMMultiframeMetadata(metaData) {\n  let imageOrientationPatient;\n  const imageSubType = getImageTypeSubItemFromMetadata(metaData, 2);\n\n  if (imageSubType && isNMReconstructable(imageSubType)) {\n    const detectorInformationSequence = getTagValue(metaData['00540022']);\n\n    if (detectorInformationSequence) {\n      imageOrientationPatient = getNumberValues(\n        detectorInformationSequence['00200037'],\n        6\n      );\n    }\n  }\n\n  return imageOrientationPatient;\n}\n\n/**\n * Extracts the position from NM multiframe dataset, if image type\n * equal to RECON TOMO or RECON GATED TOMO\n * @param {*} metaData\n * @returns\n */\nfunction extractPositionFromNMMultiframeMetadata(metaData) {\n  let imagePositionPatient;\n  const imageSubType = getImageTypeSubItemFromMetadata(metaData, 2);\n\n  if (imageSubType && isNMReconstructable(imageSubType)) {\n    const detectorInformationSequence = getTagValue(metaData['00540022']);\n\n    if (detectorInformationSequence) {\n      imagePositionPatient = getNumberValues(\n        detectorInformationSequence['00200032'],\n        3\n      );\n    }\n  }\n\n  return imagePositionPatient;\n}\n\nexport {\n  extractOrientationFromNMMultiframeMetadata,\n  extractPositionFromNMMultiframeMetadata,\n  isNMModality,\n  getImageTypeSubItemFromMetadata,\n};\n","import getNumberValues from './getNumberValues';\nimport {\n  extractOrientationFromNMMultiframeMetadata,\n  extractPositionFromNMMultiframeMetadata,\n  isNMModality,\n} from './NMHelpers';\n\n/**\n * Extract orientation information from a metadata. It tries to get the orientation\n * from the Detector Information Sequence (for NM images) if image type equal\n * to RECON TOMO or RECON GATED TOMO\n * @param {*} metaData\n * @returns\n */\nfunction extractOrientationFromMetadata(metaData) {\n  let imageOrientationPatient = getNumberValues(metaData['00200037'], 6);\n\n  // If orientation not valid to this point, trying to get the orientation\n  // from the Detector Information Sequence (for NM images) with image type\n  // equal to RECON TOMO or RECON GATED TOMO\n\n  if (!imageOrientationPatient && isNMModality(metaData)) {\n    imageOrientationPatient =\n      extractOrientationFromNMMultiframeMetadata(metaData);\n  }\n\n  return imageOrientationPatient;\n}\n\n/**\n * Extract position information from a metaData. It tries to get the position\n * from the Detector Information Sequence (for NM images) if image type equal\n * to RECON TOMO or RECON GATED TOMO\n * @param {*} metaData\n * @returns\n */\nfunction extractPositionFromMetadata(metaData) {\n  let imagePositionPatient = getNumberValues(metaData['00200032'], 3);\n\n  // If position not valid to this point, trying to get the position\n  // from the Detector Information Sequence (for NM images)\n  if (!imagePositionPatient && isNMModality(metaData)) {\n    imagePositionPatient = extractPositionFromNMMultiframeMetadata(metaData);\n  }\n\n  return imagePositionPatient;\n}\n\nexport { extractOrientationFromMetadata, extractPositionFromMetadata };\n","/**\n * Retrieves metadata from a DICOM image and returns it as an object with capitalized keys.\n * @param imageId - the imageId\n * @param metaDataProvider - The metadata provider either wadors or wadouri\n * @param types - An array of metadata types to retrieve.\n * @returns An object containing the retrieved metadata with capitalized keys.\n */\nfunction getInstanceModule(\n  imageId: string,\n  metaDataProvider: any,\n  types: string[]\n): object;\nfunction getInstanceModule(imageId, metaDataProvider, types) {\n  const result = {};\n  for (const t of types) {\n    try {\n      const data = metaDataProvider(t, imageId);\n      if (data) {\n        const capitalizedData = {};\n        for (const key in data) {\n          if (key in data) {\n            // each tag should get capitalized to match dcmjs style. Todo: move all of the tags to dcmjs style\n            const capitalizedKey = capitalizeTag(key);\n            capitalizedData[capitalizedKey] = data[key];\n          }\n        }\n        Object.assign(result, capitalizedData);\n      }\n    } catch (error) {\n      console.error(`Error retrieving ${t} data:`, error);\n    }\n  }\n\n  return result;\n}\n\nconst capitalizeTag = (tag: string) =>\n  tag.charAt(0).toUpperCase() + tag.slice(1);\n\nconst instanceModuleNames = [\n  'multiframeModule',\n  'generalSeriesModule',\n  'patientStudyModule',\n  'imagePlaneModule',\n  'nmMultiframeGeometryModule',\n  'imagePixelModule',\n  'modalityLutModule',\n  'voiLutModule',\n  'sopCommonModule',\n  'petIsotopeModule',\n  'overlayPlaneModule',\n  'transferSyntax',\n  'petSeriesModule',\n  'petImageModule',\n];\n\nexport { getInstanceModule, instanceModuleNames };\n","import getNumberValues from './getNumberValues';\n\n/**\n * This helper function retrieves the first number value from the provided sequence for the given key.\n * @param sequence - The sequence from which to retrieve the number value.\n * @param key - The key for which to retrieve the number value.\n * @returns The first number value for the given key, or null if no value is found.\n */\nfunction getFirstNumberValue(sequence: any, key: string): number | null {\n  const values = getNumberValues(sequence[key]);\n  return values ? values[0] : null;\n}\n\nexport { getFirstNumberValue };\n","import { WADORSMetaDataElement } from 'dicomImageLoader/src/types';\n\nfunction getSequenceItems(element: any): WADORSMetaDataElement[] {\n  // Value is not present if the attribute has a zero length value\n  if (!element?.Value?.length) {\n    return [];\n  }\n\n  if (!Array.isArray(element.Value)) {\n    // If the Value is an object, encapsulate it in an array and log a warning message\n    if (typeof element.Value === 'object') {\n      console.warn(\n        'Warning: Value should be an array, but an object was found. Encapsulating the object in an array.'\n      );\n      return [element.Value];\n    }\n    return [];\n  }\n  return element.Value;\n}\n\nexport default getSequenceItems;\n","import { getFirstNumberValue } from './getFirstNumberValue';\nimport getSequenceItems from './getSequenceItems';\n\n/**\n * This function retrieves the ultrasound regions from the provided metadata.\n * @param metadata - The metadata from which to retrieve the ultrasound regions.\n * @returns An array of ultrasound regions, or null if no regions are found.\n */\nfunction getUSEnhancedRegions(metadata) {\n  const sequenceOfUltrasoundRegions = getSequenceItems(metadata['00186011']);\n\n  if (!sequenceOfUltrasoundRegions || !sequenceOfUltrasoundRegions.length) {\n    return null;\n  }\n\n  const regions = sequenceOfUltrasoundRegions.map((sequence) => {\n    const physicalDeltaX = getFirstNumberValue(sequence, '0018602C');\n    const physicalDeltaY = getFirstNumberValue(sequence, '0018602E');\n    const physicalUnitsXDirection = getFirstNumberValue(sequence, '00186024');\n    const physicalUnitsYDirection = getFirstNumberValue(sequence, '00186026');\n\n    const regionLocationMinY0 = getFirstNumberValue(sequence, '0018601A');\n    const regionLocationMaxY1 = getFirstNumberValue(sequence, '0018601E');\n    const regionLocationMinX0 = getFirstNumberValue(sequence, '00186018');\n    const regionLocationMaxX1 = getFirstNumberValue(sequence, '0018601C');\n    const referencePixelX0 = getFirstNumberValue(sequence, '00186020');\n    const referencePixelY0 = getFirstNumberValue(sequence, '00186022');\n\n    const referencePhysicalPixelValueY = getFirstNumberValue(\n      sequence,\n      '0018602A'\n    );\n    const referencePhysicalPixelValueX = getFirstNumberValue(\n      sequence,\n      '00186028'\n    );\n    const regionSpatialFormat = getFirstNumberValue(sequence, '00186012');\n\n    const regionDataType = getFirstNumberValue(sequence, '00186014');\n    const regionFlags = getFirstNumberValue(sequence, '00186016');\n    const transducerFrequency = getFirstNumberValue(sequence, '00186030');\n\n    return {\n      regionLocationMinY0,\n      regionLocationMaxY1,\n      regionLocationMinX0,\n      regionLocationMaxX1,\n      referencePixelX0,\n      referencePixelY0,\n      physicalDeltaX,\n      physicalDeltaY,\n      physicalUnitsXDirection,\n      physicalUnitsYDirection,\n      referencePhysicalPixelValueY,\n      referencePhysicalPixelValueX,\n      regionSpatialFormat,\n      regionDataType,\n      regionFlags,\n      transducerFrequency,\n    };\n  });\n\n  return regions;\n}\nexport { getUSEnhancedRegions };\n","import external from '../../../externalModules';\nimport getNumberValues from './getNumberValues';\nimport getNumberValue from './getNumberValue';\nimport getOverlayPlaneModule from './getOverlayPlaneModule';\nimport metaDataManager from '../metaDataManager';\nimport getValue from './getValue';\nimport {\n  getMultiframeInformation,\n  getFrameInformation,\n} from '../combineFrameInstance';\nimport multiframeMetadata from '../retrieveMultiframeMetadata';\nimport {\n  extractOrientationFromMetadata,\n  extractPositionFromMetadata,\n} from './extractPositioningFromMetadata';\nimport { getImageTypeSubItemFromMetadata } from './NMHelpers';\nimport isNMReconstructable from '../../isNMReconstructable';\nimport {\n  getInstanceModule,\n  instanceModuleNames,\n} from '../../getInstanceModule';\nimport { getUSEnhancedRegions } from './USHelpers';\n\nfunction metaDataProvider(type, imageId) {\n  const { MetadataModules } = external.cornerstone.Enums;\n  const { dicomParser } = external;\n\n  if (type === MetadataModules.MULTIFRAME) {\n    // the get function removes the PerFrameFunctionalGroupsSequence\n    const { metadata, frame } =\n      multiframeMetadata.retrieveMultiframeMetadata(imageId);\n\n    if (!metadata) {\n      return;\n    }\n    const {\n      PerFrameFunctionalGroupsSequence,\n      SharedFunctionalGroupsSequence,\n      NumberOfFrames,\n    } = getMultiframeInformation(metadata);\n\n    if (PerFrameFunctionalGroupsSequence || NumberOfFrames > 1) {\n      const { shared, perFrame } = getFrameInformation(\n        PerFrameFunctionalGroupsSequence,\n        SharedFunctionalGroupsSequence,\n        frame\n      );\n\n      return {\n        NumberOfFrames,\n        //PerFrameFunctionalGroupsSequence,\n        PerFrameFunctionalInformation: perFrame,\n        SharedFunctionalInformation: shared,\n      };\n    }\n\n    return {\n      NumberOfFrames,\n      //PerFrameFunctionalGroupsSequence,\n    };\n  }\n\n  const metaData = metaDataManager.get(imageId);\n\n  if (!metaData) {\n    return;\n  }\n\n  if (type === MetadataModules.GENERAL_STUDY) {\n    return {\n      studyDescription: getValue<string>(metaData['00081030']),\n      studyDate: dicomParser.parseDA(getValue<string>(metaData['00080020'])),\n      studyTime: dicomParser.parseTM(\n        getValue<string>(metaData['00080030'], 0, '')\n      ),\n      accessionNumber: getValue<string>(metaData['00080050']),\n    };\n  }\n\n  if (type === MetadataModules.GENERAL_SERIES) {\n    return {\n      modality: getValue<string>(metaData['00080060']),\n      seriesInstanceUID: getValue<string>(metaData['0020000E']),\n      seriesNumber: getNumberValue(metaData['00200011']),\n      studyInstanceUID: getValue<string>(metaData['0020000D']),\n      seriesDate: dicomParser.parseDA(getValue<string>(metaData['00080021'])),\n      seriesTime: dicomParser.parseTM(\n        getValue<string>(metaData['00080031'], 0, '')\n      ),\n      acquisitionDate: dicomParser.parseDA(\n        getValue<string>(metaData['00080022'])\n      ),\n      acquisitionTime: dicomParser.parseTM(\n        getValue<string>(metaData['00080032'], 0, '')\n      ),\n    };\n  }\n\n  if (type === MetadataModules.GENERAL_IMAGE) {\n    return {\n      sopInstanceUID: getValue<string>(metaData['00080018']),\n      instanceNumber: getNumberValue(metaData['00200013']),\n      lossyImageCompression: getValue<string>(metaData['00282110']),\n      lossyImageCompressionRatio: getNumberValue(metaData['00282112']),\n      lossyImageCompressionMethod: getValue<string>(metaData['00282114']),\n    };\n  }\n\n  if (type === MetadataModules.PATIENT) {\n    return {\n      patientID: getValue<string>(metaData['00100020']),\n      patientName: getValue<string>(metaData['00100010']),\n    };\n  }\n\n  if (type === MetadataModules.PATIENT_STUDY) {\n    return {\n      patientAge: getNumberValue(metaData['00101010']),\n      patientSize: getNumberValue(metaData['00101020']),\n      patientSex: getValue<'M' | 'F'>(metaData['00100040']),\n      patientWeight: getNumberValue(metaData['00101030']),\n    };\n  }\n\n  if (type === MetadataModules.NM_MULTIFRAME_GEOMETRY) {\n    const modality = getValue(metaData['00080060']);\n    const imageSubType = getImageTypeSubItemFromMetadata(metaData, 2);\n\n    return {\n      modality,\n      imageType: getValue(metaData['00080008']),\n      imageSubType,\n      imageOrientationPatient: extractOrientationFromMetadata(metaData),\n      imagePositionPatient: extractPositionFromMetadata(metaData),\n      sliceThickness: getNumberValue(metaData['00180050']),\n      spacingBetweenSlices: getNumberValue(metaData['00180088']),\n      pixelSpacing: getNumberValues(metaData['00280030'], 2),\n      numberOfFrames: getNumberValue(metaData['00280008']),\n      isNMReconstructable:\n        isNMReconstructable(imageSubType) && modality.includes('NM'),\n    };\n  }\n\n  if (type === MetadataModules.IMAGE_PLANE) {\n    //metaData = fixNMMetadata(metaData);\n    const imageOrientationPatient = extractOrientationFromMetadata(metaData);\n    const imagePositionPatient = extractPositionFromMetadata(metaData);\n    const pixelSpacing = getNumberValues(metaData['00280030'], 2);\n\n    let columnPixelSpacing = null;\n\n    let rowPixelSpacing = null;\n\n    if (pixelSpacing) {\n      rowPixelSpacing = pixelSpacing[0];\n      columnPixelSpacing = pixelSpacing[1];\n    }\n\n    let rowCosines = null;\n\n    let columnCosines = null;\n\n    if (imageOrientationPatient) {\n      rowCosines = [\n        // @ts-expect-error\n        parseFloat(imageOrientationPatient[0]),\n        // @ts-expect-error\n        parseFloat(imageOrientationPatient[1]),\n        // @ts-expect-error\n        parseFloat(imageOrientationPatient[2]),\n      ];\n      columnCosines = [\n        // @ts-expect-error\n        parseFloat(imageOrientationPatient[3]),\n        // @ts-expect-error\n        parseFloat(imageOrientationPatient[4]),\n        // @ts-expect-error\n        parseFloat(imageOrientationPatient[5]),\n      ];\n    }\n\n    return {\n      frameOfReferenceUID: getValue<string>(metaData['00200052']),\n      rows: getNumberValue(metaData['00280010']),\n      columns: getNumberValue(metaData['00280011']),\n      imageOrientationPatient,\n      rowCosines,\n      columnCosines,\n      imagePositionPatient,\n      sliceThickness: getNumberValue(metaData['00180050']),\n      sliceLocation: getNumberValue(metaData['00201041']),\n      pixelSpacing,\n      rowPixelSpacing,\n      columnPixelSpacing,\n    };\n  }\n\n  if (type === MetadataModules.ULTRASOUND_ENHANCED_REGION) {\n    return getUSEnhancedRegions(metaData);\n  }\n\n  if (type === MetadataModules.CALIBRATION) {\n    const modality = getValue(metaData['00080060']);\n\n    if (modality === 'US') {\n      const enhancedRegion = getUSEnhancedRegions(metaData);\n      return {\n        sequenceOfUltrasoundRegions: enhancedRegion,\n      };\n    }\n  }\n\n  if (type === MetadataModules.IMAGE_URL) {\n    return getImageUrlModule(imageId, metaData);\n  }\n\n  if (type === MetadataModules.CINE) {\n    return getCineModule(imageId, metaData);\n  }\n\n  if (type === MetadataModules.IMAGE_PIXEL) {\n    return {\n      samplesPerPixel: getNumberValue(metaData['00280002']),\n      photometricInterpretation: getValue(metaData['00280004']),\n      rows: getNumberValue(metaData['00280010']),\n      columns: getNumberValue(metaData['00280011']),\n      bitsAllocated: getNumberValue(metaData['00280100']),\n      bitsStored: getNumberValue(metaData['00280101']),\n      highBit: getValue(metaData['00280102']),\n      pixelRepresentation: getNumberValue(metaData['00280103']),\n      planarConfiguration: getNumberValue(metaData['00280006']),\n      pixelAspectRatio: getValue(metaData['00280034']),\n      smallestPixelValue: getNumberValue(metaData['00280106']),\n      largestPixelValue: getNumberValue(metaData['00280107']),\n      redPaletteColorLookupTableDescriptor: getNumberValues(\n        metaData['00281101']\n      ),\n      greenPaletteColorLookupTableDescriptor: getNumberValues(\n        metaData['00281102']\n      ),\n      bluePaletteColorLookupTableDescriptor: getNumberValues(\n        metaData['00281103']\n      ),\n      redPaletteColorLookupTableData: getNumberValues(metaData['00281201']),\n      greenPaletteColorLookupTableData: getNumberValues(metaData['00281202']),\n      bluePaletteColorLookupTableData: getNumberValues(metaData['00281203']),\n    };\n  }\n\n  if (type === MetadataModules.VOI_LUT) {\n    return {\n      // TODO VOT LUT Sequence\n      windowCenter: getNumberValues(metaData['00281050'], 1),\n      windowWidth: getNumberValues(metaData['00281051'], 1),\n    };\n  }\n\n  if (type === MetadataModules.MODALITY_LUT) {\n    return {\n      // TODO VOT LUT Sequence\n      rescaleIntercept: getNumberValue(metaData['00281052']),\n      rescaleSlope: getNumberValue(metaData['00281053']),\n      rescaleType: getValue(metaData['00281054']),\n    };\n  }\n\n  if (type === MetadataModules.SOP_COMMON) {\n    return {\n      sopClassUID: getValue<string>(metaData['00080016']),\n      sopInstanceUID: getValue<string>(metaData['00080018']),\n    };\n  }\n\n  if (type === MetadataModules.PET_ISOTOPE) {\n    const radiopharmaceuticalInfo = getValue(metaData['00540016']);\n\n    if (radiopharmaceuticalInfo === undefined) {\n      return;\n    }\n\n    return {\n      radiopharmaceuticalInfo: {\n        radiopharmaceuticalStartTime: dicomParser.parseTM(\n          getValue(radiopharmaceuticalInfo['00181072'], 0, '')\n        ),\n        radiopharmaceuticalStartDateTime: getValue(\n          radiopharmaceuticalInfo['00181078'],\n          0,\n          ''\n        ),\n        radionuclideTotalDose: getNumberValue(\n          radiopharmaceuticalInfo['00181074']\n        ),\n        radionuclideHalfLife: getNumberValue(\n          radiopharmaceuticalInfo['00181075']\n        ),\n      },\n    };\n  }\n\n  if (type === MetadataModules.OVERLAY_PLANE) {\n    return getOverlayPlaneModule(metaData);\n  }\n\n  // Note: this is not a DICOM module, but a useful metadata that can be\n  // retrieved from the image\n  if (type === 'transferSyntax') {\n    return getTransferSyntax(imageId, metaData);\n  }\n\n  if (type === MetadataModules.PET_SERIES) {\n    return {\n      correctedImage: getValue(metaData['00280051']),\n      units: getValue(metaData['00541001']),\n      decayCorrection: getValue(metaData['00541102']),\n    };\n  }\n\n  if (type === MetadataModules.PET_IMAGE) {\n    return {\n      frameReferenceTime: getNumberValue(metaData['00541300']),\n      actualFrameDuration: getNumberValue(metaData['00181242']),\n    };\n  }\n\n  // Note: this is not a DICOM module, but rather an aggregation on all others\n  if (type === 'instance') {\n    return getInstanceModule(imageId, metaDataProvider, instanceModuleNames);\n  }\n}\n\nexport function getImageUrlModule(imageId, metaData) {\n  const { transferSyntaxUID } = getTransferSyntax(imageId, metaData);\n  const isVideo =\n    external.cornerstone.utilities.isVideoTransferSyntax(transferSyntaxUID);\n  const imageUrl = imageId.substring(7);\n  const thumbnail = imageUrl.replace('/frames/', '/thumbnail/');\n  let rendered = imageUrl.replace('/frames/', '/rendered/');\n  if (isVideo) {\n    rendered = rendered.replace('/rendered/1', '/rendered');\n  }\n  return {\n    isVideo,\n    rendered,\n    thumbnail,\n  };\n}\n\nexport function getCineModule(imageId, metaData) {\n  const cineRate = getValue<string>(metaData['00180040']);\n  return {\n    cineRate,\n    numberOfFrames: getNumberValue(metaData['00280008']),\n  };\n}\n\nexport function getTransferSyntax(imageId, metaData) {\n  // Use either the FMI, which is NOT permitted in the DICOMweb data, but\n  // is sometimes found there anyways, or the available transfer syntax, which\n  // is the recommended way of getting it.\n  return {\n    transferSyntaxUID:\n      getValue<string>(metaData['00020010']) ||\n      getValue<string>(metaData['00083002']),\n  };\n}\n\nexport default metaDataProvider;\n","import getValue from './getValue';\nimport getNumberValue from './getNumberValue';\nimport { WADORSMetaData } from '../../../types';\n\nexport default function getOverlayPlaneModule(metaData: WADORSMetaData) {\n  const overlays = [];\n\n  for (let overlayGroup = 0x00; overlayGroup <= 0x1e; overlayGroup += 0x02) {\n    let groupStr = `x60${overlayGroup.toString(16)}`;\n\n    if (groupStr.length === 4) {\n      groupStr = `x600${overlayGroup.toString(16)}`;\n    }\n\n    /**\n     * @todo there is a type issue with WADORSMetaData. Currently WADORSMetaData\n     * on includes  string[] | number[] | boolean. from the look of this, data\n     * is a more complex type\n     */\n    const data = getValue<any>(metaData[`${groupStr}3000`]);\n\n    if (!data) {\n      continue;\n    }\n\n    const pixelData = [];\n\n    for (let i = 0; i < data.length; i++) {\n      for (let k = 0; k < 8; k++) {\n        const byte_as_int = metaData.Value[data.dataOffset + i];\n\n        pixelData[i * 8 + k] = (byte_as_int >> k) & 0b1; // eslint-disable-line no-bitwise\n      }\n    }\n\n    overlays.push({\n      rows: getNumberValue(metaData[`${groupStr}0010`]),\n      columns: getNumberValue(metaData[`${groupStr}0011`]),\n      type: getValue(metaData[`${groupStr}0040`]),\n      x: getNumberValue(metaData[`${groupStr}0050`], 1) - 1,\n      y: getNumberValue(metaData[`${groupStr}0050`], 0) - 1,\n      pixelData,\n      description: getValue(metaData[`${groupStr}0022`]),\n      label: getValue(metaData[`${groupStr}1500`]),\n      roiArea: getValue(metaData[`${groupStr}1301`]),\n      roiMean: getValue(metaData[`${groupStr}1302`]),\n      roiStandardDeviation: getValue(metaData[`${groupStr}1303`]),\n    });\n  }\n\n  return {\n    overlays,\n  };\n}\n","function checkToken(token, data, dataOffset): boolean {\n  if (dataOffset + token.length > data.length) {\n    return false;\n  }\n\n  let endIndex = dataOffset;\n\n  for (let i = 0; i < token.length; i++) {\n    if (token[i] !== data[endIndex++]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction stringToUint8Array(str: string): Uint8Array {\n  const uint = new Uint8Array(str.length);\n\n  for (let i = 0, j = str.length; i < j; i++) {\n    uint[i] = str.charCodeAt(i);\n  }\n\n  return uint;\n}\n\nfunction findIndexOfString(\n  data: Uint8Array,\n  str: string,\n  offset?: number\n): number {\n  offset = offset || 0;\n\n  const token = stringToUint8Array(str);\n\n  for (let i = offset; i < data.length; i++) {\n    if (token[0] === data[i]) {\n      // console.log('match @', i);\n      if (checkToken(token, data, i)) {\n        return i;\n      }\n    }\n  }\n\n  return -1;\n}\nexport default findIndexOfString;\n","import { LoaderOptions } from '../../types';\n\nlet options: LoaderOptions = {\n  // callback to open the object\n  open(xhr, url) {\n    xhr.open('get', url, true);\n  },\n  // callback allowing customization of the xhr (e.g. adding custom auth headers, cors, etc)\n  beforeSend(/* xhr, imageId */) {\n    // before send code\n  },\n  // callback allowing modification of the xhr response before creating image objects\n  beforeProcessing(xhr: XMLHttpRequest) {\n    return Promise.resolve(xhr.response as ArrayBuffer);\n  },\n  // callback allowing modification of newly created image objects\n  imageCreated(/* image */) {\n    // image created code\n  },\n  strict: false,\n  decodeConfig: {\n    convertFloatPixelDataToInt: true,\n    use16BitDataType: false,\n  },\n};\n\nexport function setOptions(newOptions: LoaderOptions): void {\n  options = Object.assign(options, newOptions);\n}\n\nexport function getOptions(): LoaderOptions {\n  return options;\n}\n","import external from '../../externalModules';\nimport { getOptions } from './options';\nimport {\n  LoaderXhrRequestError,\n  LoaderXhrRequestParams,\n  LoaderXhrRequestPromise,\n} from '../../types';\n\nfunction xhrRequest(\n  url: string,\n  imageId: string,\n  defaultHeaders: Record<string, string> = {},\n  params: LoaderXhrRequestParams = {}\n): LoaderXhrRequestPromise<ArrayBuffer> {\n  const { cornerstone } = external;\n  const options = getOptions();\n\n  const errorInterceptor = (xhr: XMLHttpRequest) => {\n    if (typeof options.errorInterceptor === 'function') {\n      const error = new Error('request failed') as LoaderXhrRequestError;\n\n      error.request = xhr;\n      error.response = xhr.response;\n      error.status = xhr.status;\n      options.errorInterceptor(error);\n    }\n  };\n\n  const xhr = new XMLHttpRequest();\n\n  // Make the request for the DICOM P10 SOP Instance\n  const promise: LoaderXhrRequestPromise<ArrayBuffer> =\n    new Promise<ArrayBuffer>((resolve, reject) => {\n      options.open(xhr, url, defaultHeaders, params);\n      const beforeSendHeaders = options.beforeSend(\n        xhr,\n        imageId,\n        defaultHeaders,\n        params\n      );\n\n      xhr.responseType = 'arraybuffer';\n\n      const headers = Object.assign({}, defaultHeaders, beforeSendHeaders);\n\n      Object.keys(headers).forEach(function (key) {\n        if (headers[key] === null) {\n          return;\n        }\n        if (key === 'Accept' && url.indexOf('accept=') !== -1) {\n          return;\n        }\n        xhr.setRequestHeader(key, headers[key]);\n      });\n\n      params.deferred = {\n        resolve,\n        reject,\n      };\n      params.url = url;\n      params.imageId = imageId;\n\n      // Event triggered when downloading an image starts\n      xhr.onloadstart = function (event) {\n        // Action\n        if (options.onloadstart) {\n          options.onloadstart(event, params);\n        }\n\n        // Event\n        const eventData = {\n          url,\n          imageId,\n        };\n\n        cornerstone.triggerEvent(\n          (cornerstone as any).events,\n          'cornerstoneimageloadstart',\n          eventData\n        );\n      };\n\n      // Event triggered when downloading an image ends\n      xhr.onloadend = function (event) {\n        // Action\n        if (options.onloadend) {\n          options.onloadend(event, params);\n        }\n\n        const eventData = {\n          url,\n          imageId,\n        };\n\n        // Event\n        cornerstone.triggerEvent(\n          (cornerstone as any).events,\n          'cornerstoneimageloadend',\n          eventData\n        );\n      };\n\n      // handle response data\n      xhr.onreadystatechange = function (event) {\n        // Action\n        if (options.onreadystatechange) {\n          options.onreadystatechange(event, params);\n\n          return;\n        }\n\n        // Default action\n        // TODO: consider sending out progress messages here as we receive\n        // the pixel data\n        if (xhr.readyState === 4) {\n          // Status OK (200) and partial content (206) are both handled\n          if (xhr.status === 200 || xhr.status === 206) {\n            options\n              .beforeProcessing(xhr)\n              .then(resolve)\n              .catch(() => {\n                errorInterceptor(xhr);\n                // request failed, reject the Promise\n                reject(xhr);\n              });\n          } else {\n            errorInterceptor(xhr);\n            // request failed, reject the Promise\n            reject(xhr);\n          }\n        }\n      };\n\n      // Event triggered when downloading an image progresses\n      xhr.onprogress = function (oProgress) {\n        // console.log('progress:',oProgress)\n        const loaded = oProgress.loaded; // evt.loaded the bytes browser receive\n\n        let total: number;\n\n        let percentComplete: number;\n\n        if (oProgress.lengthComputable) {\n          total = oProgress.total; // evt.total the total bytes seted by the header\n          percentComplete = Math.round((loaded / total) * 100);\n        }\n\n        // Action\n        if (options.onprogress) {\n          options.onprogress(oProgress, params);\n        }\n      };\n      xhr.onerror = function () {\n        errorInterceptor(xhr);\n        reject(xhr);\n      };\n\n      xhr.onabort = function () {\n        errorInterceptor(xhr);\n        reject(xhr);\n      };\n      xhr.send();\n    });\n\n  promise.xhr = xhr;\n\n  return promise;\n}\n\nexport default xhrRequest;\n","import { default as xhrRequest } from './xhrRequest';\nimport { setOptions, getOptions } from './options';\n\nconst internal = {\n  xhrRequest,\n  setOptions,\n  getOptions,\n};\n\nexport { setOptions, getOptions, xhrRequest, internal };\n",null,null,"import { Enums } from '@cornerstonejs/core';\nimport findIndexOfString from './findIndexOfString';\n\nconst { ImageQualityStatus } = Enums;\n/**\n * Extracts multipart/related data or single part data from a response byte\n * array.\n *\n * @param contentType - guess of the root content type\n * @param imageFrameAsArrayBuffer - array buffer containing the image frame\n * @param options - contains already computed values from\n *        earlier calls, allowing additional calls to be made to fetch\n *        additional data.\n * @param isPartial - indicates the file may end partially\n * @returns a compressed image frame containing the pixel data.\n */\nexport default function extractMultipart(\n  contentType: string,\n  imageFrameAsArrayBuffer,\n  options?\n) {\n  options ||= {};\n  // request succeeded, Parse the multi-part mime response\n  const response = new Uint8Array(imageFrameAsArrayBuffer);\n  const isPartial = !!options?.isPartial;\n  if (contentType.indexOf('multipart') === -1) {\n    return {\n      contentType,\n      imageQualityStatus: isPartial\n        ? ImageQualityStatus.SUBRESOLUTION\n        : ImageQualityStatus.FULL_RESOLUTION,\n      pixelData: response,\n    };\n  }\n\n  let { tokenIndex, responseHeaders, boundary, multipartContentType } = options;\n\n  // First look for the multipart mime header\n  tokenIndex ||= findIndexOfString(response, '\\r\\n\\r\\n');\n\n  if (tokenIndex === -1) {\n    throw new Error('invalid response - no multipart mime header');\n  }\n\n  if (!boundary) {\n    const header = uint8ArrayToString(response, 0, tokenIndex);\n    // Now find the boundary  marker\n    responseHeaders = header.split('\\r\\n');\n    boundary = findBoundary(responseHeaders);\n\n    if (!boundary) {\n      throw new Error('invalid response - no boundary marker');\n    }\n  }\n  const offset = tokenIndex + 4; // skip over the \\r\\n\\r\\n\n\n  // find the terminal boundary marker\n  const endIndex = findIndexOfString(response, boundary, offset);\n\n  if (endIndex === -1 && !isPartial) {\n    throw new Error('invalid response - terminating boundary not found');\n  }\n\n  multipartContentType ||= findContentType(responseHeaders);\n\n  options.tokenIndex = tokenIndex;\n  options.boundary = boundary;\n  options.responseHeaders = responseHeaders;\n  options.multipartContentType = multipartContentType;\n  options.isPartial = endIndex === -1;\n\n  // return the info for this pixel data\n  return {\n    contentType: multipartContentType,\n    // done indicates if the read has finished the entire image, not if\n    // the image is completely available\n    extractDone: !isPartial || endIndex !== -1,\n    tokenIndex,\n    responseHeaders,\n    boundary,\n    multipartContentType,\n    // Exclude the \\r\\n as well as the boundary\n    pixelData: imageFrameAsArrayBuffer.slice(offset, endIndex - 2),\n  };\n}\n\nexport function findBoundary(header: string[]): string {\n  for (let i = 0; i < header.length; i++) {\n    if (header[i].substr(0, 2) === '--') {\n      return header[i];\n    }\n  }\n}\n\nexport function findContentType(header: string[]): string {\n  for (let i = 0; i < header.length; i++) {\n    if (header[i].substr(0, 13) === 'Content-Type:') {\n      return header[i].substr(13).trim();\n    }\n  }\n}\n\nexport function uint8ArrayToString(data, offset, length) {\n  offset = offset || 0;\n  length = length || data.length - offset;\n  let str = '';\n\n  for (let i = offset; i < offset + length; i++) {\n    str += String.fromCharCode(data[i]);\n  }\n\n  return str;\n}\n","import { Types, Enums } from '@cornerstonejs/core';\n\nconst { ImageQualityStatus } = Enums;\n\n/** Gets the status of returned images */\nexport function getImageQualityStatus(\n  retrieveOptions: Types.RetrieveOptions,\n  done = true\n) {\n  if (!done) {\n    return ImageQualityStatus.SUBRESOLUTION;\n  }\n  return (\n    retrieveOptions.imageQualityStatus ?? ImageQualityStatus.FULL_RESOLUTION\n  );\n}\n","import { Types, utilities } from '@cornerstonejs/core';\nimport { getOptions } from './options';\nimport { LoaderXhrRequestError } from '../../types';\nimport extractMultipart from '../wadors/extractMultipart';\nimport { getImageQualityStatus } from '../wadors/getImageQualityStatus';\n\nconst { ProgressiveIterator } = utilities;\ntype RetrieveOptions = Types.RetrieveOptions;\n\n/**\n * This function does a streaming parse from an http request, delivering\n * combined/subsequent parts of the result as iterations on a\n * ProgressiveIterator instance.\n *\n * @param url - to request and parse as either multipart or singlepart.\n * @param imageId\n * @param defaultHeaders\n * @returns\n */\nexport default function streamRequest(\n  url: string,\n  imageId: string,\n  defaultHeaders: Record<string, string> = {},\n  options: CornerstoneWadoRsLoaderOptions = {}\n) {\n  const globalOptions = getOptions();\n  const { retrieveOptions = {}, streamingData = {} } = options;\n  const minChunkSize = retrieveOptions.minChunkSize || 128 * 1024;\n\n  const errorInterceptor = (err: any) => {\n    if (typeof globalOptions.errorInterceptor === 'function') {\n      const error = new Error('request failed') as LoaderXhrRequestError;\n      globalOptions.errorInterceptor(error);\n    }\n  };\n\n  // Make the request for the streamable image frame (i.e. HTJ2K)\n  const loadIterator = new ProgressiveIterator('streamRequest');\n  loadIterator.generate(async (iterator, reject) => {\n    const headers = Object.assign({}, defaultHeaders /* beforeSendHeaders */);\n\n    Object.keys(headers).forEach(function (key) {\n      if (headers[key] === null) {\n        headers[key] = undefined;\n      }\n      if (key === 'Accept' && url.indexOf('accept=') !== -1) {\n        headers[key] = undefined;\n      }\n    });\n\n    try {\n      const response = await fetch(url, {\n        headers: defaultHeaders,\n        signal: undefined,\n      });\n\n      // Response is expected to be a 200 status response\n      if (response.status !== 200) {\n        throw new Error(\n          `Couldn't retrieve ${url} got status ${response.status}`\n        );\n      }\n      const responseReader = response.body.getReader();\n      const responseHeaders = response.headers;\n\n      const contentType = responseHeaders.get('content-type');\n\n      const totalBytes = Number(responseHeaders.get('Content-Length'));\n\n      let readDone = false;\n      let encodedData = streamingData.encodedData;\n      let lastSize = streamingData.lastSize || 0;\n      streamingData.isPartial = true;\n\n      while (!readDone) {\n        const { done, value } = await responseReader.read();\n        encodedData = appendChunk(encodedData, value);\n        if (!encodedData) {\n          if (readDone) {\n            throw new Error(`Done but no image frame available ${imageId}`);\n          }\n          continue;\n        }\n        readDone = done || encodedData.byteLength === totalBytes;\n        if (!readDone && encodedData.length < lastSize + minChunkSize) {\n          continue;\n        }\n        lastSize = encodedData.length;\n        streamingData.isPartial = !done;\n        const extracted = extractMultipart(\n          contentType,\n          encodedData,\n          streamingData\n        );\n        const imageQualityStatus = getImageQualityStatus(\n          retrieveOptions,\n          readDone\n        );\n        const detail = {\n          url,\n          imageId,\n          ...extracted,\n          percentComplete: done\n            ? 100\n            : (extracted.pixelData?.length * 100) / totalBytes,\n          imageQualityStatus,\n          done: readDone,\n        };\n\n        // All of the image load events will be handled by the imageLoader\n        // this simply delivers the raw data as it becomes available.\n        iterator.add(detail, readDone);\n      }\n    } catch (err) {\n      errorInterceptor(err);\n      console.error(err);\n      reject(err);\n    }\n  });\n\n  return loadIterator.getNextPromise();\n}\n\nfunction appendChunk(existing: Uint8Array, chunk?: Uint8Array) {\n  // that imageId\n  if (!existing) {\n    return chunk;\n  }\n  if (!chunk) {\n    return existing;\n  }\n  const newDataArray = new Uint8Array(existing.length + chunk.length);\n  newDataArray.set(existing, 0);\n  newDataArray.set(chunk, existing.length);\n  return newDataArray;\n}\n","import { Types, Enums } from '@cornerstonejs/core';\nimport { getOptions } from './options';\nimport { LoaderXhrRequestError, LoaderXhrRequestPromise } from '../../types';\nimport metaDataManager from '../wadors/metaDataManager';\nimport extractMultipart from '../wadors/extractMultipart';\nimport { getImageQualityStatus } from '../wadors/getImageQualityStatus';\nimport { CornerstoneWadoRsLoaderOptions } from '../wadors/loadImage';\n\ntype RangeRetrieveOptions = Types.RangeRetrieveOptions;\n\n/**\n * Performs a range request to fetch part of an encoded image, typically\n * so that partial resolution images can be fetched.\n * The configuration of exactly what is requested is based on the transfer\n * syntax provided.\n * Note this generates 1 response for each call, and those reponses may or may\n * not be combined with each other depending on the configuration applied.\n *\n * * HTJ2K Streaming TSUID -> Use actual range requests, and set it up for streaming\n *   image decoding of byte range requests\n * * JLS and Non-streaming HTJ2K -> Use a sub-resolution (or thumbnail) endpoint\n *   followed by normal endpoint\n *\n * @param url - including an fsiz parameter\n * @param imageId - to fetch for\n * @param defaultHeaders  - to add to the request\n * @returns Compressed image data\n */\nexport default function rangeRequest(\n  url: string,\n  imageId: string,\n  defaultHeaders: Record<string, string> = {},\n  options: CornerstoneWadoRsLoaderOptions = {}\n): LoaderXhrRequestPromise<{\n  contentType: string;\n  pixelData: Uint8Array;\n  imageQualityStatus: Enums.ImageQualityStatus;\n  percentComplete: number;\n}> {\n  const globalOptions = getOptions();\n  const { retrieveOptions = {}, streamingData } = options;\n  const chunkSize =\n    streamingData.chunkSize ||\n    getValue(imageId, retrieveOptions, 'chunkSize') ||\n    65536;\n\n  const errorInterceptor = (err: any) => {\n    if (typeof globalOptions.errorInterceptor === 'function') {\n      const error = new Error('request failed') as LoaderXhrRequestError;\n      globalOptions.errorInterceptor(error);\n    } else {\n      console.warn('rangeRequest:Caught', err);\n    }\n  };\n\n  // Make the request for the streamable image frame (i.e. HTJ2K)\n  const promise = new Promise<{\n    contentType: string;\n    pixelData: Uint8Array;\n    percentComplete: number;\n    imageQualityStatus: Enums.ImageQualityStatus;\n  }>(async (resolve, reject) => {\n    const headers = Object.assign(\n      {},\n      defaultHeaders\n      /* beforeSendHeaders */\n    );\n\n    Object.keys(headers).forEach(function (key) {\n      if (headers[key] === null || headers[key] === undefined) {\n        delete headers[key];\n      }\n    });\n\n    try {\n      if (!streamingData.encodedData) {\n        streamingData.chunkSize = chunkSize;\n        streamingData.rangesFetched = 0;\n      }\n      const byteRange = getByteRange(streamingData, retrieveOptions);\n\n      const { encodedData, responseHeaders } = await fetchRangeAndAppend(\n        url,\n        headers,\n        byteRange,\n        streamingData\n      );\n\n      // Resolve promise with the first range, so it can be passed through to\n      // cornerstone via the usual image loading pathway. All subsequent\n      // ranges will be passed and decoded via events.\n      const contentType = responseHeaders.get('content-type');\n      const { totalBytes } = streamingData;\n      const doneAllBytes = totalBytes === encodedData.byteLength;\n      const extract = extractMultipart(contentType, encodedData, {\n        isPartial: true,\n      });\n\n      // Allow over-writing the done status to indicate complete on partial\n      const imageQualityStatus = getImageQualityStatus(\n        retrieveOptions,\n        doneAllBytes || extract.extractDone\n      );\n      resolve({\n        ...extract,\n        imageQualityStatus,\n        percentComplete: extract.extractDone\n          ? 100\n          : (chunkSize * 100) / totalBytes,\n      });\n    } catch (err: any) {\n      errorInterceptor(err);\n      console.error(err);\n      reject(err);\n    }\n  });\n\n  return promise;\n}\n\nasync function fetchRangeAndAppend(\n  url: string,\n  headers: any,\n  range: [number, number | ''],\n  streamingData\n) {\n  if (range) {\n    headers = Object.assign(headers, {\n      Range: `bytes=${range[0]}-${range[1]}`,\n    });\n  }\n  let { encodedData } = streamingData;\n  if (range[1] && encodedData?.byteLength > range[1]) {\n    return streamingData;\n  }\n  const response = await fetch(url, {\n    headers,\n    signal: undefined,\n  });\n\n  const responseArrayBuffer = await response.arrayBuffer();\n  const responseTypedArray = new Uint8Array(responseArrayBuffer);\n  const { status } = response;\n\n  // Append new data\n  let newByteArray: Uint8Array;\n  if (encodedData) {\n    newByteArray = new Uint8Array(\n      encodedData.length + responseTypedArray.length\n    );\n    newByteArray.set(encodedData, 0);\n    newByteArray.set(responseTypedArray, encodedData.length);\n    streamingData.rangesFetched = 1;\n  } else {\n    newByteArray = new Uint8Array(responseTypedArray.length);\n    newByteArray.set(responseTypedArray, 0);\n    streamingData.rangesFetched++;\n  }\n  streamingData.encodedData = encodedData = newByteArray;\n  streamingData.responseHeaders = response.headers;\n\n  const contentRange = response.headers.get('Content-Range');\n  if (contentRange) {\n    streamingData.totalBytes = Number(contentRange.split('/')[1]);\n  } else if (status !== 206 || !range) {\n    streamingData.totalBytes = encodedData?.byteLength;\n  } else if (range[1] === '' || encodedData?.length < range[1]) {\n    streamingData.totalBytes = encodedData.byteLength;\n  } else {\n    streamingData.totalBytes = Number.MAX_SAFE_INTEGER;\n  }\n\n  return streamingData;\n}\n\nfunction getValue(imageId: string, src, attr: string) {\n  const value = src[attr];\n  if (typeof value !== 'function') {\n    return value;\n  }\n  const metaData = metaDataManager.get(imageId);\n  return value(metaData, imageId);\n}\n\nfunction getByteRange(\n  streamingData,\n  retrieveOptions: RangeRetrieveOptions\n): [number, number | ''] {\n  const { totalBytes, encodedData, chunkSize = 65536 } = streamingData;\n  const { rangeIndex = 0 } = retrieveOptions;\n  if (rangeIndex === -1 && (!totalBytes || !encodedData)) {\n    return [0, ''];\n  }\n  if (rangeIndex === -1 || encodedData?.byteLength > totalBytes - chunkSize) {\n    return [encodedData?.byteLength || 0, ''];\n  }\n  // Note the byte range is inclusive at both ends and zero based,\n  // so the byteLength is the next index to fetch.\n  return [encodedData?.byteLength || 0, chunkSize * (rangeIndex + 1) - 1];\n}\n","import { xhrRequest } from '../internal/index';\n// import rangeRequest from '../internal/rangeRequest';\nimport streamRequest from '../internal/streamRequest';\nimport rangeRequest from '../internal/rangeRequest';\nimport extractMultipart from './extractMultipart';\nimport { getImageQualityStatus } from './getImageQualityStatus';\nimport { CornerstoneWadoRsLoaderOptions } from './loadImage';\nimport { RangeRetrieveOptions } from 'core/dist/types/types';\n\nfunction getPixelData(\n  uri: string,\n  imageId: string,\n  mediaType = 'application/octet-stream',\n  options?: CornerstoneWadoRsLoaderOptions\n) {\n  const { streamingData, retrieveOptions = {} } = options || {};\n  const headers = {\n    Accept: mediaType,\n  };\n\n  // Add urlArguments to the url for retrieving - allows accept and other\n  // parameters to be added.\n  let url = retrieveOptions.urlArguments\n    ? `${uri}${uri.indexOf('?') === -1 ? '?' : '&'}${\n        retrieveOptions.urlArguments\n      }`\n    : uri;\n\n  // Replace the /frames/ part of the path with another path to choose\n  // a different resource type.\n  if (retrieveOptions.framesPath) {\n    url = url.replace('/frames/', retrieveOptions.framesPath);\n  }\n\n  // Swap the streaming data out if a new instance starts.\n  if (streamingData?.url !== url) {\n    options.streamingData = { url };\n  }\n\n  if ((retrieveOptions as RangeRetrieveOptions).rangeIndex !== undefined) {\n    return rangeRequest(url, imageId, headers, options);\n  }\n\n  // Use the streaming parser only when configured to do so\n  if (retrieveOptions.streaming) {\n    return streamRequest(url, imageId, headers, options);\n  }\n\n  /**\n   * Not progressively rendering, use regular xhr request.\n   */\n  const loadPromise = xhrRequest(url, imageId, headers);\n  const { xhr } = loadPromise;\n\n  return loadPromise.then(function (imageFrameAsArrayBuffer /* , xhr*/) {\n    const contentType =\n      xhr.getResponseHeader('Content-Type') || 'application/octet-stream';\n    const extracted = extractMultipart(\n      contentType,\n      new Uint8Array(imageFrameAsArrayBuffer)\n    );\n    extracted.imageQualityStatus = getImageQualityStatus(retrieveOptions, true);\n    return extracted;\n  });\n}\n\nexport default getPixelData;\n","import { PixelDataTypedArray } from '../types';\n\n/**\n * Calculate the minimum and maximum values in an Array\n *\n * @param {Number[]} storedPixelData\n * @return {{min: Number, max: Number}}\n */\nfunction getMinMax(storedPixelData: PixelDataTypedArray): {\n  min: number;\n  max: number;\n} {\n  // we always calculate the min max values since they are not always\n  // present in DICOM and we don't want to trust them anyway as cornerstone\n  // depends on us providing reliable values for these\n  let min = storedPixelData[0];\n\n  let max = storedPixelData[0];\n\n  let storedPixel;\n  const numPixels = storedPixelData.length;\n\n  for (let index = 1; index < numPixels; index++) {\n    storedPixel = storedPixelData[index];\n    min = Math.min(min, storedPixel);\n    max = Math.max(max, storedPixel);\n  }\n\n  return {\n    min,\n    max,\n  };\n}\n\nexport default getMinMax;\n","import {\n  convertRGBColorByPixel,\n  convertRGBColorByPlane,\n  convertYBRFullByPixel,\n  convertYBRFull422ByPixel,\n  convertYBRFullByPlane,\n  convertPALETTECOLOR,\n} from './colorSpaceConverters/index';\n\nfunction convertRGB(imageFrame, colorBuffer, useRGBA) {\n  if (imageFrame.planarConfiguration === 0) {\n    convertRGBColorByPixel(imageFrame.pixelData, colorBuffer, useRGBA);\n  } else {\n    convertRGBColorByPlane(imageFrame.pixelData, colorBuffer, useRGBA);\n  }\n}\n\nfunction convertYBRFull(imageFrame, colorBuffer, useRGBA) {\n  if (imageFrame.planarConfiguration === 0) {\n    convertYBRFullByPixel(imageFrame.pixelData, colorBuffer, useRGBA);\n  } else {\n    convertYBRFullByPlane(imageFrame.pixelData, colorBuffer, useRGBA);\n  }\n}\n\nexport default function convertColorSpace(imageFrame, colorBuffer, useRGBA) {\n  // convert based on the photometric interpretation\n  if (imageFrame.photometricInterpretation === 'RGB') {\n    convertRGB(imageFrame, colorBuffer, useRGBA);\n  } else if (imageFrame.photometricInterpretation === 'YBR_RCT') {\n    convertRGB(imageFrame, colorBuffer, useRGBA);\n  } else if (imageFrame.photometricInterpretation === 'YBR_ICT') {\n    convertRGB(imageFrame, colorBuffer, useRGBA);\n  } else if (imageFrame.photometricInterpretation === 'PALETTE COLOR') {\n    convertPALETTECOLOR(imageFrame, colorBuffer, useRGBA);\n  } else if (imageFrame.photometricInterpretation === 'YBR_FULL_422') {\n    convertYBRFull422ByPixel(imageFrame.pixelData, colorBuffer, useRGBA);\n  } else if (imageFrame.photometricInterpretation === 'YBR_FULL') {\n    convertYBRFull(imageFrame, colorBuffer, useRGBA);\n  } else {\n    // TODO - handle YBR_PARTIAL and 420 colour spaces\n    throw new Error(\n      `No color space conversion for photometric interpretation ${imageFrame.photometricInterpretation}`\n    );\n  }\n}\n","import { ByteArray } from 'dicom-parser';\n\nexport default function (\n  imageFrame: ByteArray,\n  colorBuffer: ByteArray,\n  useRGBA: boolean\n): void {\n  if (imageFrame === undefined) {\n    throw new Error('convertYBRFull422ByPixel: ybrBuffer must be defined');\n  }\n  if (imageFrame.length % 2 !== 0) {\n    throw new Error(\n      `convertYBRFull422ByPixel: ybrBuffer length ${imageFrame.length} must be divisible by 2`\n    );\n  }\n\n  const numPixels = imageFrame.length / 2;\n\n  let ybrIndex = 0;\n\n  let bufferIndex = 0;\n\n  if (useRGBA) {\n    for (let i = 0; i < numPixels; i += 2) {\n      const y1 = imageFrame[ybrIndex++];\n      const y2 = imageFrame[ybrIndex++];\n      const cb = imageFrame[ybrIndex++];\n      const cr = imageFrame[ybrIndex++];\n\n      colorBuffer[bufferIndex++] = y1 + 1.402 * (cr - 128); // red\n      colorBuffer[bufferIndex++] =\n        y1 - 0.34414 * (cb - 128) - 0.71414 * (cr - 128); // green\n      colorBuffer[bufferIndex++] = y1 + 1.772 * (cb - 128); // blue\n      colorBuffer[bufferIndex++] = 255; // alpha\n\n      colorBuffer[bufferIndex++] = y2 + 1.402 * (cr - 128); // red\n      colorBuffer[bufferIndex++] =\n        y2 - 0.34414 * (cb - 128) - 0.71414 * (cr - 128); // green\n      colorBuffer[bufferIndex++] = y2 + 1.772 * (cb - 128); // blue\n      colorBuffer[bufferIndex++] = 255; // alpha\n    }\n\n    return;\n  }\n\n  for (let i = 0; i < numPixels; i += 2) {\n    const y1 = imageFrame[ybrIndex++];\n    const y2 = imageFrame[ybrIndex++];\n    const cb = imageFrame[ybrIndex++];\n    const cr = imageFrame[ybrIndex++];\n\n    colorBuffer[bufferIndex++] = y1 + 1.402 * (cr - 128); // red\n    colorBuffer[bufferIndex++] =\n      y1 - 0.34414 * (cb - 128) - 0.71414 * (cr - 128); // green\n    colorBuffer[bufferIndex++] = y1 + 1.772 * (cb - 128); // blue\n\n    colorBuffer[bufferIndex++] = y2 + 1.402 * (cr - 128); // red\n    colorBuffer[bufferIndex++] =\n      y2 - 0.34414 * (cb - 128) - 0.71414 * (cr - 128); // green\n    colorBuffer[bufferIndex++] = y2 + 1.772 * (cb - 128); // blue\n  }\n}\n","import { ByteArray } from 'dicom-parser';\nimport getMinMax from '../shared/getMinMax';\nimport { ImageFrame } from '../types';\n\n/**\n * Special decoder for 8 bit jpeg that leverages the browser's built in JPEG decoder for increased performance\n */\n\nfunction arrayBufferToString(buffer: ArrayBuffer) {\n  return binaryToString(\n    String.fromCharCode.apply(\n      null,\n      Array.prototype.slice.apply(new Uint8Array(buffer))\n    )\n  );\n}\n\nfunction binaryToString(binary: string) {\n  let error;\n\n  try {\n    return decodeURIComponent(escape(binary));\n  } catch (_error) {\n    error = _error;\n    if (error instanceof URIError) {\n      return binary;\n    }\n    throw error;\n  }\n}\n\nfunction decodeJPEGBaseline8BitColor(\n  imageFrame: ImageFrame,\n  pixelData: ByteArray,\n  canvas: HTMLCanvasElement\n): Promise<ImageFrame> {\n  const start = new Date().getTime();\n  const imgBlob = new Blob([pixelData], { type: 'image/jpeg' });\n\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n\n    if (fileReader.readAsBinaryString === undefined) {\n      fileReader.readAsArrayBuffer(imgBlob);\n    } else {\n      fileReader.readAsBinaryString(imgBlob); // doesn't work on IE11\n    }\n\n    fileReader.onload = function () {\n      const img = new Image();\n\n      img.onload = function () {\n        canvas.height = img.height;\n        canvas.width = img.width;\n        imageFrame.rows = img.height;\n        imageFrame.columns = img.width;\n        const context = canvas.getContext('2d');\n\n        /**\n         * @todo check this context\n         */\n        context.drawImage(this as any, 0, 0);\n        const imageData = context.getImageData(0, 0, img.width, img.height);\n        const end = new Date().getTime();\n\n        imageFrame.pixelData = new Uint8Array(imageData.data.buffer);\n        imageFrame.imageData = imageData;\n        imageFrame.decodeTimeInMS = end - start;\n\n        // calculate smallest and largest PixelValue\n        const minMax = getMinMax(imageFrame.pixelData as any);\n\n        imageFrame.smallestPixelValue = minMax.min;\n        imageFrame.largestPixelValue = minMax.max;\n        imageFrame.pixelDataLength = imageFrame.pixelData.length;\n\n        resolve(imageFrame);\n      };\n\n      img.onerror = function (error) {\n        reject(error);\n      };\n\n      if (fileReader.readAsBinaryString === undefined) {\n        img.src = `data:image/jpeg;base64,${window.btoa(\n          arrayBufferToString(fileReader.result as ArrayBuffer)\n        )}`;\n      } else {\n        img.src = `data:image/jpeg;base64,${window.btoa(\n          fileReader.result as string\n        )}`; // doesn't work on IE11\n      }\n    };\n\n    fileReader.onerror = (e) => {\n      reject(e);\n    };\n  });\n}\n\nexport default decodeJPEGBaseline8BitColor;\n","\nimport worker from \"!!../../../../node_modules/worker-loader/dist/runtime/inline.js\";\n\nexport default function Worker_fn() {\n  return worker(\"(()=>{var A,I,g={37:(A,I,g)=>{var B,Q=(B=(B=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(A){var I,Q,C=void 0!==(A=A||{})?A:{};C.ready=new Promise((function(A,g){I=A,Q=g}));var E,i,o,D=Object.assign({},C),w=[],s=\\\"object\\\"==typeof window,a=\\\"function\\\"==typeof importScripts,G=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,F=\\\"\\\";if(G){var h=g(716),y=g(401);F=a?y.dirname(F)+\\\"/\\\":\\\"//\\\",E=(A,I)=>(A=V(A)?new URL(A):y.normalize(A),h.readFileSync(A,I?void 0:\\\"utf8\\\")),o=A=>{var I=E(A,!0);return I.buffer||(I=new Uint8Array(I)),I},i=(A,I,g)=>{A=V(A)?new URL(A):y.normalize(A),h.readFile(A,(function(A,B){A?g(A):I(B.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\"),w=process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(A){if(!(A instanceof v))throw A})),process.on(\\\"unhandledRejection\\\",(function(A){throw A})),C.inspect=function(){return\\\"[Emscripten Module object]\\\"}}else(s||a)&&(a?F=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(F=document.currentScript.src),B&&(F=B),F=0!==F.indexOf(\\\"blob:\\\")?F.substr(0,F.replace(/[?#].*/,\\\"\\\").lastIndexOf(\\\"/\\\")+1):\\\"\\\",E=A=>{var I=new XMLHttpRequest;return I.open(\\\"GET\\\",A,!1),I.send(null),I.responseText},a&&(o=A=>{var I=new XMLHttpRequest;return I.open(\\\"GET\\\",A,!1),I.responseType=\\\"arraybuffer\\\",I.send(null),new Uint8Array(I.response)}),i=(A,I,g)=>{var B=new XMLHttpRequest;B.open(\\\"GET\\\",A,!0),B.responseType=\\\"arraybuffer\\\",B.onload=()=>{200==B.status||0==B.status&&B.response?I(B.response):g()},B.onerror=g,B.send(null)});C.print||console.log.bind(console);var c,t=C.printErr||console.warn.bind(console);Object.assign(C,D),D=null,C.arguments&&(w=C.arguments),C.thisProgram&&C.thisProgram,C.quit&&C.quit,C.wasmBinary&&(c=C.wasmBinary);var R;C.noExitRuntime;\\\"object\\\"!=typeof WebAssembly&&Z(\\\"no native wasm support detected\\\");var N,U,S,r,k,J,e,n,H,Y=!1,M=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function L(A,I){return A?function(A,I,g){for(var B=I+g,Q=I;A[Q]&&!(Q>=B);)++Q;if(Q-I>16&&A.buffer&&M)return M.decode(A.subarray(I,Q));for(var C=\\\"\\\";I<Q;){var E=A[I++];if(128&E){var i=63&A[I++];if(192!=(224&E)){var o=63&A[I++];if((E=224==(240&E)?(15&E)<<12|i<<6|o:(7&E)<<18|i<<12|o<<6|63&A[I++])<65536)C+=String.fromCharCode(E);else{var D=E-65536;C+=String.fromCharCode(55296|D>>10,56320|1023&D)}}else C+=String.fromCharCode((31&E)<<6|i)}else C+=String.fromCharCode(E)}return C}(S,A,I):\\\"\\\"}function K(A,I,g){return function(A,I,g,B){if(!(B>0))return 0;for(var Q=g,C=g+B-1,E=0;E<A.length;++E){var i=A.charCodeAt(E);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&A.charCodeAt(++E)),i<=127){if(g>=C)break;I[g++]=i}else if(i<=2047){if(g+1>=C)break;I[g++]=192|i>>6,I[g++]=128|63&i}else if(i<=65535){if(g+2>=C)break;I[g++]=224|i>>12,I[g++]=128|i>>6&63,I[g++]=128|63&i}else{if(g+3>=C)break;I[g++]=240|i>>18,I[g++]=128|i>>12&63,I[g++]=128|i>>6&63,I[g++]=128|63&i}}return I[g]=0,g-Q}(A,S,I,g)}function d(A){N=A,C.HEAP8=U=new Int8Array(A),C.HEAP16=r=new Int16Array(A),C.HEAP32=J=new Int32Array(A),C.HEAPU8=S=new Uint8Array(A),C.HEAPU16=k=new Uint16Array(A),C.HEAPU32=e=new Uint32Array(A),C.HEAPF32=n=new Float32Array(A),C.HEAPF64=H=new Float64Array(A)}C.INITIAL_MEMORY;var l,f=[],q=[],p=[],b=0,u=null,W=null;function Z(A){C.onAbort&&C.onAbort(A),t(A=\\\"Aborted(\\\"+A+\\\")\\\"),Y=!0,A+=\\\". Build with -sASSERTIONS for more info.\\\";var I=new WebAssembly.RuntimeError(A);throw Q(I),I}var m,x,T=\\\"data:application/octet-stream;base64,\\\";function X(A){return A.startsWith(T)}function V(A){return A.startsWith(\\\"file://\\\")}function P(A){try{if(A==m&&c)return new Uint8Array(c);if(o)return o(A);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(A){Z(A)}}function v(A){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+A+\\\")\\\",this.status=A}function j(A){for(;A.length>0;)A.shift()(C)}function O(A){this.excPtr=A,this.ptr=A-24,this.set_type=function(A){e[this.ptr+4>>2]=A},this.get_type=function(){return e[this.ptr+4>>2]},this.set_destructor=function(A){e[this.ptr+8>>2]=A},this.get_destructor=function(){return e[this.ptr+8>>2]},this.set_refcount=function(A){J[this.ptr>>2]=A},this.set_caught=function(A){A=A?1:0,U[this.ptr+12|0]=A},this.get_caught=function(){return 0!=U[this.ptr+12|0]},this.set_rethrown=function(A){A=A?1:0,U[this.ptr+13|0]=A},this.get_rethrown=function(){return 0!=U[this.ptr+13|0]},this.init=function(A,I){this.set_adjusted_ptr(0),this.set_type(A),this.set_destructor(I),this.set_refcount(0),this.set_caught(!1),this.set_rethrown(!1)},this.add_ref=function(){var A=J[this.ptr>>2];J[this.ptr>>2]=A+1},this.release_ref=function(){var A=J[this.ptr>>2];return J[this.ptr>>2]=A-1,1===A},this.set_adjusted_ptr=function(A){e[this.ptr+16>>2]=A},this.get_adjusted_ptr=function(){return e[this.ptr+16>>2]},this.get_exception_ptr=function(){if(qI(this.get_type()))return e[this.excPtr>>2];var A=this.get_adjusted_ptr();return 0!==A?A:this.excPtr}}X(m=\\\"charlswasm_decode.wasm\\\")||(x=m,m=C.locateFile?C.locateFile(x,F):F+x);var z={};function $(A){for(;A.length;){var I=A.pop();A.pop()(I)}}function _(A){return this.fromWireType(J[A>>2])}var AA={},IA={},gA={},BA=48,QA=57;function CA(A){if(void 0===A)return\\\"_unknown\\\";var I=(A=A.replace(/[^a-zA-Z0-9_]/g,\\\"$\\\")).charCodeAt(0);return I>=BA&&I<=QA?\\\"_\\\"+A:A}function EA(A,I){return A=CA(A),new Function(\\\"body\\\",\\\"return function \\\"+A+'() {\\\\n    \\\"use strict\\\";    return body.apply(this, arguments);\\\\n};\\\\n')(I)}function iA(A,I){var g=EA(I,(function(A){this.name=I,this.message=A;var g=new Error(A).stack;void 0!==g&&(this.stack=this.toString()+\\\"\\\\n\\\"+g.replace(/^Error(:[^\\\\n]*)?\\\\n/,\\\"\\\"))}));return g.prototype=Object.create(A.prototype),g.prototype.constructor=g,g.prototype.toString=function(){return void 0===this.message?this.name:this.name+\\\": \\\"+this.message},g}var oA=void 0;function DA(A){throw new oA(A)}function wA(A,I,g){function B(I){var B=g(I);B.length!==A.length&&DA(\\\"Mismatched type converter count\\\");for(var Q=0;Q<A.length;++Q)yA(A[Q],B[Q])}A.forEach((function(A){gA[A]=I}));var Q=new Array(I.length),C=[],E=0;I.forEach(((A,I)=>{IA.hasOwnProperty(A)?Q[I]=IA[A]:(C.push(A),AA.hasOwnProperty(A)||(AA[A]=[]),AA[A].push((()=>{Q[I]=IA[A],++E===C.length&&B(Q)})))})),0===C.length&&B(Q)}function sA(A){switch(A){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\\\"Unknown type size: \\\"+A)}}var aA=void 0;function GA(A){for(var I=\\\"\\\",g=A;S[g];)I+=aA[S[g++]];return I}var FA=void 0;function hA(A){throw new FA(A)}function yA(A,I,g={}){if(!(\\\"argPackAdvance\\\"in I))throw new TypeError(\\\"registerType registeredInstance requires argPackAdvance\\\");var B=I.name;if(A||hA('type \\\"'+B+'\\\" must have a positive integer typeid pointer'),IA.hasOwnProperty(A)){if(g.ignoreDuplicateRegistrations)return;hA(\\\"Cannot register type '\\\"+B+\\\"' twice\\\")}if(IA[A]=I,delete gA[A],AA.hasOwnProperty(A)){var Q=AA[A];delete AA[A],Q.forEach((A=>A()))}}function cA(A){if(!(this instanceof uA))return!1;if(!(A instanceof uA))return!1;for(var I=this.$$.ptrType.registeredClass,g=this.$$.ptr,B=A.$$.ptrType.registeredClass,Q=A.$$.ptr;I.baseClass;)g=I.upcast(g),I=I.baseClass;for(;B.baseClass;)Q=B.upcast(Q),B=B.baseClass;return I===B&&g===Q}function tA(A){hA(A.$$.ptrType.registeredClass.name+\\\" instance already deleted\\\")}var RA=!1;function NA(A){}function UA(A){A.count.value-=1,0===A.count.value&&function(A){A.smartPtr?A.smartPtrType.rawDestructor(A.smartPtr):A.ptrType.registeredClass.rawDestructor(A.ptr)}(A)}function SA(A,I,g){if(I===g)return A;if(void 0===g.baseClass)return null;var B=SA(A,I,g.baseClass);return null===B?null:g.downcast(B)}var rA={};function kA(){return Object.keys(MA).length}function JA(){var A=[];for(var I in MA)MA.hasOwnProperty(I)&&A.push(MA[I]);return A}var eA=[];function nA(){for(;eA.length;){var A=eA.pop();A.$$.deleteScheduled=!1,A.delete()}}var HA=void 0;function YA(A){HA=A,eA.length&&HA&&HA(nA)}var MA={};function LA(A,I){return I=function(A,I){for(void 0===I&&hA(\\\"ptr should not be undefined\\\");A.baseClass;)I=A.upcast(I),A=A.baseClass;return I}(A,I),MA[I]}function KA(A,I){return I.ptrType&&I.ptr||DA(\\\"makeClassHandle requires ptr and ptrType\\\"),!!I.smartPtrType!=!!I.smartPtr&&DA(\\\"Both smartPtrType and smartPtr must be specified\\\"),I.count={value:1},lA(Object.create(A,{$$:{value:I}}))}function dA(A){var I=this.getPointee(A);if(!I)return this.destructor(A),null;var g=LA(this.registeredClass,I);if(void 0!==g){if(0===g.$$.count.value)return g.$$.ptr=I,g.$$.smartPtr=A,g.clone();var B=g.clone();return this.destructor(A),B}function Q(){return this.isSmartPointer?KA(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:I,smartPtrType:this,smartPtr:A}):KA(this.registeredClass.instancePrototype,{ptrType:this,ptr:A})}var C,E=this.registeredClass.getActualType(I),i=rA[E];if(!i)return Q.call(this);C=this.isConst?i.constPointerType:i.pointerType;var o=SA(I,this.registeredClass,C.registeredClass);return null===o?Q.call(this):this.isSmartPointer?KA(C.registeredClass.instancePrototype,{ptrType:C,ptr:o,smartPtrType:this,smartPtr:A}):KA(C.registeredClass.instancePrototype,{ptrType:C,ptr:o})}function lA(A){return\\\"undefined\\\"==typeof FinalizationRegistry?(lA=A=>A,A):(RA=new FinalizationRegistry((A=>{UA(A.$$)})),lA=A=>{var I=A.$$;if(I.smartPtr){var g={$$:I};RA.register(A,g,A)}return A},NA=A=>RA.unregister(A),lA(A))}function fA(){if(this.$$.ptr||tA(this),this.$$.preservePointerOnDelete)return this.$$.count.value+=1,this;var A,I=lA(Object.create(Object.getPrototypeOf(this),{$$:{value:(A=this.$$,{count:A.count,deleteScheduled:A.deleteScheduled,preservePointerOnDelete:A.preservePointerOnDelete,ptr:A.ptr,ptrType:A.ptrType,smartPtr:A.smartPtr,smartPtrType:A.smartPtrType})}}));return I.$$.count.value+=1,I.$$.deleteScheduled=!1,I}function qA(){this.$$.ptr||tA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&hA(\\\"Object already scheduled for deletion\\\"),NA(this),UA(this.$$),this.$$.preservePointerOnDelete||(this.$$.smartPtr=void 0,this.$$.ptr=void 0)}function pA(){return!this.$$.ptr}function bA(){return this.$$.ptr||tA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&hA(\\\"Object already scheduled for deletion\\\"),eA.push(this),1===eA.length&&HA&&HA(nA),this.$$.deleteScheduled=!0,this}function uA(){}function WA(A,I,g){if(void 0===A[I].overloadTable){var B=A[I];A[I]=function(){return A[I].overloadTable.hasOwnProperty(arguments.length)||hA(\\\"Function '\\\"+g+\\\"' called with an invalid number of arguments (\\\"+arguments.length+\\\") - expects one of (\\\"+A[I].overloadTable+\\\")!\\\"),A[I].overloadTable[arguments.length].apply(this,arguments)},A[I].overloadTable=[],A[I].overloadTable[B.argCount]=B}}function ZA(A,I,g){C.hasOwnProperty(A)?((void 0===g||void 0!==C[A].overloadTable&&void 0!==C[A].overloadTable[g])&&hA(\\\"Cannot register public name '\\\"+A+\\\"' twice\\\"),WA(C,A,A),C.hasOwnProperty(g)&&hA(\\\"Cannot register multiple overloads of a function with the same number of arguments (\\\"+g+\\\")!\\\"),C[A].overloadTable[g]=I):(C[A]=I,void 0!==g&&(C[A].numArguments=g))}function mA(A,I,g,B,Q,C,E,i){this.name=A,this.constructor=I,this.instancePrototype=g,this.rawDestructor=B,this.baseClass=Q,this.getActualType=C,this.upcast=E,this.downcast=i,this.pureVirtualFunctions=[]}function xA(A,I,g){for(;I!==g;)I.upcast||hA(\\\"Expected null or instance of \\\"+g.name+\\\", got an instance of \\\"+I.name),A=I.upcast(A),I=I.baseClass;return A}function TA(A,I){if(null===I)return this.isReference&&hA(\\\"null is not a valid \\\"+this.name),0;I.$$||hA('Cannot pass \\\"'+GI(I)+'\\\" as a '+this.name),I.$$.ptr||hA(\\\"Cannot pass deleted object as a pointer of type \\\"+this.name);var g=I.$$.ptrType.registeredClass;return xA(I.$$.ptr,g,this.registeredClass)}function XA(A,I){var g;if(null===I)return this.isReference&&hA(\\\"null is not a valid \\\"+this.name),this.isSmartPointer?(g=this.rawConstructor(),null!==A&&A.push(this.rawDestructor,g),g):0;I.$$||hA('Cannot pass \\\"'+GI(I)+'\\\" as a '+this.name),I.$$.ptr||hA(\\\"Cannot pass deleted object as a pointer of type \\\"+this.name),!this.isConst&&I.$$.ptrType.isConst&&hA(\\\"Cannot convert argument of type \\\"+(I.$$.smartPtrType?I.$$.smartPtrType.name:I.$$.ptrType.name)+\\\" to parameter type \\\"+this.name);var B=I.$$.ptrType.registeredClass;if(g=xA(I.$$.ptr,B,this.registeredClass),this.isSmartPointer)switch(void 0===I.$$.smartPtr&&hA(\\\"Passing raw pointer to smart pointer is illegal\\\"),this.sharingPolicy){case 0:I.$$.smartPtrType===this?g=I.$$.smartPtr:hA(\\\"Cannot convert argument of type \\\"+(I.$$.smartPtrType?I.$$.smartPtrType.name:I.$$.ptrType.name)+\\\" to parameter type \\\"+this.name);break;case 1:g=I.$$.smartPtr;break;case 2:if(I.$$.smartPtrType===this)g=I.$$.smartPtr;else{var Q=I.clone();g=this.rawShare(g,aI.toHandle((function(){Q.delete()}))),null!==A&&A.push(this.rawDestructor,g)}break;default:hA(\\\"Unsupporting sharing policy\\\")}return g}function VA(A,I){if(null===I)return this.isReference&&hA(\\\"null is not a valid \\\"+this.name),0;I.$$||hA('Cannot pass \\\"'+GI(I)+'\\\" as a '+this.name),I.$$.ptr||hA(\\\"Cannot pass deleted object as a pointer of type \\\"+this.name),I.$$.ptrType.isConst&&hA(\\\"Cannot convert argument of type \\\"+I.$$.ptrType.name+\\\" to parameter type \\\"+this.name);var g=I.$$.ptrType.registeredClass;return xA(I.$$.ptr,g,this.registeredClass)}function PA(A){return this.rawGetPointee&&(A=this.rawGetPointee(A)),A}function vA(A){this.rawDestructor&&this.rawDestructor(A)}function jA(A){null!==A&&A.delete()}function OA(A,I,g,B,Q,C,E,i,o,D,w){this.name=A,this.registeredClass=I,this.isReference=g,this.isConst=B,this.isSmartPointer=Q,this.pointeeType=C,this.sharingPolicy=E,this.rawGetPointee=i,this.rawConstructor=o,this.rawShare=D,this.rawDestructor=w,Q||void 0!==I.baseClass?this.toWireType=XA:B?(this.toWireType=TA,this.destructorFunction=null):(this.toWireType=VA,this.destructorFunction=null)}function zA(A,I,g){C.hasOwnProperty(A)||DA(\\\"Replacing nonexistant public symbol\\\"),void 0!==C[A].overloadTable&&void 0!==g?C[A].overloadTable[g]=I:(C[A]=I,C[A].argCount=g)}var $A=[];function _A(A){var I=$A[A];return I||(A>=$A.length&&($A.length=A+1),$A[A]=I=l.get(A)),I}function AI(A,I,g){return A.includes(\\\"j\\\")?function(A,I,g){var B=C[\\\"dynCall_\\\"+A];return g&&g.length?B.apply(null,[I].concat(g)):B.call(null,I)}(A,I,g):_A(I).apply(null,g)}function II(A,I){var g,B,Q,C=(A=GA(A)).includes(\\\"j\\\")?(g=A,B=I,Q=[],function(){return Q.length=0,Object.assign(Q,arguments),AI(g,B,Q)}):_A(I);return\\\"function\\\"!=typeof C&&hA(\\\"unknown function pointer with signature \\\"+A+\\\": \\\"+I),C}var gI=void 0;function BI(A){var I=LI(A),g=GA(I);return KI(I),g}function QI(A,I){var g=[],B={};throw I.forEach((function A(I){B[I]||IA[I]||(gA[I]?gA[I].forEach(A):(g.push(I),B[I]=!0))})),new gI(A+\\\": \\\"+g.map(BI).join([\\\", \\\"]))}function CI(A,I){for(var g=[],B=0;B<A;B++)g.push(e[I+4*B>>2]);return g}function EI(A,I,g,B,Q){var C=I.length;C<2&&hA(\\\"argTypes array size mismatch! Must at least get return value and 'this' types!\\\");for(var E=null!==I[1]&&null!==g,i=!1,o=1;o<I.length;++o)if(null!==I[o]&&void 0===I[o].destructorFunction){i=!0;break}var D=\\\"void\\\"!==I[0].name,w=\\\"\\\",s=\\\"\\\";for(o=0;o<C-2;++o)w+=(0!==o?\\\", \\\":\\\"\\\")+\\\"arg\\\"+o,s+=(0!==o?\\\", \\\":\\\"\\\")+\\\"arg\\\"+o+\\\"Wired\\\";var a=\\\"return function \\\"+CA(A)+\\\"(\\\"+w+\\\") {\\\\nif (arguments.length !== \\\"+(C-2)+\\\") {\\\\nthrowBindingError('function \\\"+A+\\\" called with ' + arguments.length + ' arguments, expected \\\"+(C-2)+\\\" args!');\\\\n}\\\\n\\\";i&&(a+=\\\"var destructors = [];\\\\n\\\");var G=i?\\\"destructors\\\":\\\"null\\\",F=[\\\"throwBindingError\\\",\\\"invoker\\\",\\\"fn\\\",\\\"runDestructors\\\",\\\"retType\\\",\\\"classParam\\\"],h=[hA,B,Q,$,I[0],I[1]];for(E&&(a+=\\\"var thisWired = classParam.toWireType(\\\"+G+\\\", this);\\\\n\\\"),o=0;o<C-2;++o)a+=\\\"var arg\\\"+o+\\\"Wired = argType\\\"+o+\\\".toWireType(\\\"+G+\\\", arg\\\"+o+\\\"); // \\\"+I[o+2].name+\\\"\\\\n\\\",F.push(\\\"argType\\\"+o),h.push(I[o+2]);if(E&&(s=\\\"thisWired\\\"+(s.length>0?\\\", \\\":\\\"\\\")+s),a+=(D?\\\"var rv = \\\":\\\"\\\")+\\\"invoker(fn\\\"+(s.length>0?\\\", \\\":\\\"\\\")+s+\\\");\\\\n\\\",i)a+=\\\"runDestructors(destructors);\\\\n\\\";else for(o=E?1:2;o<I.length;++o){var y=1===o?\\\"thisWired\\\":\\\"arg\\\"+(o-2)+\\\"Wired\\\";null!==I[o].destructorFunction&&(a+=y+\\\"_dtor(\\\"+y+\\\"); // \\\"+I[o].name+\\\"\\\\n\\\",F.push(y+\\\"_dtor\\\"),h.push(I[o].destructorFunction))}return D&&(a+=\\\"var ret = retType.fromWireType(rv);\\\\nreturn ret;\\\\n\\\"),a+=\\\"}\\\\n\\\",F.push(a),function(A,I){if(!(A instanceof Function))throw new TypeError(\\\"new_ called with constructor type \\\"+typeof A+\\\" which is not a function\\\");var g=EA(A.name||\\\"unknownFunctionName\\\",(function(){}));g.prototype=A.prototype;var B=new g,Q=A.apply(B,I);return Q instanceof Object?Q:B}(Function,F).apply(null,h)}var iI=[],oI=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function DI(A){A>4&&0==--oI[A].refcount&&(oI[A]=void 0,iI.push(A))}function wI(){for(var A=0,I=5;I<oI.length;++I)void 0!==oI[I]&&++A;return A}function sI(){for(var A=5;A<oI.length;++A)if(void 0!==oI[A])return oI[A];return null}var aI={toValue:A=>(A||hA(\\\"Cannot use deleted val. handle = \\\"+A),oI[A].value),toHandle:A=>{switch(A){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var I=iI.length?iI.pop():oI.length;return oI[I]={refcount:1,value:A},I}}};function GI(A){if(null===A)return\\\"null\\\";var I=typeof A;return\\\"object\\\"===I||\\\"array\\\"===I||\\\"function\\\"===I?A.toString():\\\"\\\"+A}function FI(A,I){switch(I){case 2:return function(A){return this.fromWireType(n[A>>2])};case 3:return function(A){return this.fromWireType(H[A>>3])};default:throw new TypeError(\\\"Unknown float type: \\\"+A)}}function hI(A,I,g){switch(I){case 0:return g?function(A){return U[A]}:function(A){return S[A]};case 1:return g?function(A){return r[A>>1]}:function(A){return k[A>>1]};case 2:return g?function(A){return J[A>>2]}:function(A){return e[A>>2]};default:throw new TypeError(\\\"Unknown integer type: \\\"+A)}}var yI=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf-16le\\\"):void 0;function cI(A,I){for(var g=A,B=g>>1,Q=B+I/2;!(B>=Q)&&k[B];)++B;if((g=B<<1)-A>32&&yI)return yI.decode(S.subarray(A,g));for(var C=\\\"\\\",E=0;!(E>=I/2);++E){var i=r[A+2*E>>1];if(0==i)break;C+=String.fromCharCode(i)}return C}function tI(A,I,g){if(void 0===g&&(g=2147483647),g<2)return 0;for(var B=I,Q=(g-=2)<2*A.length?g/2:A.length,C=0;C<Q;++C){var E=A.charCodeAt(C);r[I>>1]=E,I+=2}return r[I>>1]=0,I-B}function RI(A){return 2*A.length}function NI(A,I){for(var g=0,B=\\\"\\\";!(g>=I/4);){var Q=J[A+4*g>>2];if(0==Q)break;if(++g,Q>=65536){var C=Q-65536;B+=String.fromCharCode(55296|C>>10,56320|1023&C)}else B+=String.fromCharCode(Q)}return B}function UI(A,I,g){if(void 0===g&&(g=2147483647),g<4)return 0;for(var B=I,Q=B+g-4,C=0;C<A.length;++C){var E=A.charCodeAt(C);if(E>=55296&&E<=57343&&(E=65536+((1023&E)<<10)|1023&A.charCodeAt(++C)),J[I>>2]=E,(I+=4)+4>Q)break}return J[I>>2]=0,I-B}function SI(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B>=55296&&B<=57343&&++g,I+=4}return I}var rI={};function kI(){return\\\"object\\\"==typeof globalThis?globalThis:Function(\\\"return this\\\")()}function JI(A,I){var g=IA[A];return void 0===g&&hA(I+\\\" has unknown type \\\"+BI(A)),g}var eI={};function nI(A){try{return R.grow(A-N.byteLength+65535>>>16),d(R.buffer),1}catch(A){}}oA=C.InternalError=iA(Error,\\\"InternalError\\\"),function(){for(var A=new Array(256),I=0;I<256;++I)A[I]=String.fromCharCode(I);aA=A}(),FA=C.BindingError=iA(Error,\\\"BindingError\\\"),uA.prototype.isAliasOf=cA,uA.prototype.clone=fA,uA.prototype.delete=qA,uA.prototype.isDeleted=pA,uA.prototype.deleteLater=bA,C.getInheritedInstanceCount=kA,C.getLiveInheritedInstances=JA,C.flushPendingDeletes=nA,C.setDelayFunction=YA,OA.prototype.getPointee=PA,OA.prototype.destructor=vA,OA.prototype.argPackAdvance=8,OA.prototype.readValueFromPointer=_,OA.prototype.deleteObject=jA,OA.prototype.fromWireType=dA,gI=C.UnboundTypeError=iA(Error,\\\"UnboundTypeError\\\"),C.count_emval_handles=wI,C.get_first_emval=sI;var HI,YI={h:function(A,I,g){throw new O(A).init(I,g),A},q:function(A){var I=z[A];delete z[A];var g=I.rawConstructor,B=I.rawDestructor,Q=I.fields;wA([A],Q.map((A=>A.getterReturnType)).concat(Q.map((A=>A.setterArgumentType))),(A=>{var C={};return Q.forEach(((I,g)=>{var B=I.fieldName,E=A[g],i=I.getter,o=I.getterContext,D=A[g+Q.length],w=I.setter,s=I.setterContext;C[B]={read:A=>E.fromWireType(i(o,A)),write:(A,I)=>{var g=[];w(s,A,D.toWireType(g,I)),$(g)}}})),[{name:I.name,fromWireType:function(A){var I={};for(var g in C)I[g]=C[g].read(A);return B(A),I},toWireType:function(A,I){for(var Q in C)if(!(Q in I))throw new TypeError('Missing field:  \\\"'+Q+'\\\"');var E=g();for(Q in C)C[Q].write(E,I[Q]);return null!==A&&A.push(B,E),E},argPackAdvance:8,readValueFromPointer:_,destructorFunction:B}]}))},r:function(A,I,g,B,Q){},w:function(A,I,g,B,Q){var C=sA(g);yA(A,{name:I=GA(I),fromWireType:function(A){return!!A},toWireType:function(A,I){return I?B:Q},argPackAdvance:8,readValueFromPointer:function(A){var B;if(1===g)B=U;else if(2===g)B=r;else{if(4!==g)throw new TypeError(\\\"Unknown boolean type size: \\\"+I);B=J}return this.fromWireType(B[A>>C])},destructorFunction:null})},p:function(A,I,g,B,Q,C,E,i,o,D,w,s,a){w=GA(w),C=II(Q,C),i&&(i=II(E,i)),D&&(D=II(o,D)),a=II(s,a);var G=CA(w);ZA(G,(function(){QI(\\\"Cannot construct \\\"+w+\\\" due to unbound types\\\",[B])})),wA([A,I,g],B?[B]:[],(function(I){var g,Q;I=I[0],Q=B?(g=I.registeredClass).instancePrototype:uA.prototype;var E=EA(G,(function(){if(Object.getPrototypeOf(this)!==o)throw new FA(\\\"Use 'new' to construct \\\"+w);if(void 0===s.constructor_body)throw new FA(w+\\\" has no accessible constructor\\\");var A=s.constructor_body[arguments.length];if(void 0===A)throw new FA(\\\"Tried to invoke ctor of \\\"+w+\\\" with invalid number of parameters (\\\"+arguments.length+\\\") - expected (\\\"+Object.keys(s.constructor_body).toString()+\\\") parameters instead!\\\");return A.apply(this,arguments)})),o=Object.create(Q,{constructor:{value:E}});E.prototype=o;var s=new mA(w,E,o,a,g,C,i,D),F=new OA(w,s,!0,!1,!1),h=new OA(w+\\\"*\\\",s,!1,!1,!1),y=new OA(w+\\\" const*\\\",s,!1,!0,!1);return rA[A]={pointerType:h,constPointerType:y},zA(G,E),[F,h,y]}))},o:function(A,I,g,B,Q,C){var E;I>0||Z(E);var i=CI(I,g);Q=II(B,Q),wA([],[A],(function(A){var g=\\\"constructor \\\"+(A=A[0]).name;if(void 0===A.registeredClass.constructor_body&&(A.registeredClass.constructor_body=[]),void 0!==A.registeredClass.constructor_body[I-1])throw new FA(\\\"Cannot register multiple constructors with identical number of parameters (\\\"+(I-1)+\\\") for class '\\\"+A.name+\\\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\\\");return A.registeredClass.constructor_body[I-1]=()=>{QI(\\\"Cannot construct \\\"+A.name+\\\" due to unbound types\\\",i)},wA([],i,(function(B){return B.splice(1,0,null),A.registeredClass.constructor_body[I-1]=EI(g,B,null,Q,C),[]})),[]}))},c:function(A,I,g,B,Q,C,E,i){var o=CI(g,B);I=GA(I),C=II(Q,C),wA([],[A],(function(A){var B=(A=A[0]).name+\\\".\\\"+I;function Q(){QI(\\\"Cannot call \\\"+B+\\\" due to unbound types\\\",o)}I.startsWith(\\\"@@\\\")&&(I=Symbol[I.substring(2)]),i&&A.registeredClass.pureVirtualFunctions.push(I);var D=A.registeredClass.instancePrototype,w=D[I];return void 0===w||void 0===w.overloadTable&&w.className!==A.name&&w.argCount===g-2?(Q.argCount=g-2,Q.className=A.name,D[I]=Q):(WA(D,I,B),D[I].overloadTable[g-2]=Q),wA([],o,(function(Q){var i=EI(B,Q,A,C,E);return void 0===D[I].overloadTable?(i.argCount=g-2,D[I]=i):D[I].overloadTable[g-2]=i,[]})),[]}))},v:function(A,I){yA(A,{name:I=GA(I),fromWireType:function(A){var I=aI.toValue(A);return DI(A),I},toWireType:function(A,I){return aI.toHandle(I)},argPackAdvance:8,readValueFromPointer:_,destructorFunction:null})},k:function(A,I,g){var B=sA(g);yA(A,{name:I=GA(I),fromWireType:function(A){return A},toWireType:function(A,I){return I},argPackAdvance:8,readValueFromPointer:FI(I,B),destructorFunction:null})},e:function(A,I,g,B,Q,C){var E=CI(I,g);A=GA(A),Q=II(B,Q),ZA(A,(function(){QI(\\\"Cannot call \\\"+A+\\\" due to unbound types\\\",E)}),I-1),wA([],E,(function(g){var B=[g[0],null].concat(g.slice(1));return zA(A,EI(A,B,null,Q,C),I-1),[]}))},b:function(A,I,g,B,Q){I=GA(I),-1===Q&&(Q=4294967295);var C=sA(g),E=A=>A;if(0===B){var i=32-8*g;E=A=>A<<i>>>i}var o=I.includes(\\\"unsigned\\\");yA(A,{name:I,fromWireType:E,toWireType:o?function(A,I){return this.name,I>>>0}:function(A,I){return this.name,I},argPackAdvance:8,readValueFromPointer:hI(I,C,0!==B),destructorFunction:null})},a:function(A,I,g){var B=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][I];function Q(A){var I=e,g=I[A>>=2],Q=I[A+1];return new B(N,Q,g)}yA(A,{name:g=GA(g),fromWireType:Q,argPackAdvance:8,readValueFromPointer:Q},{ignoreDuplicateRegistrations:!0})},j:function(A,I){var g=\\\"std::string\\\"===(I=GA(I));yA(A,{name:I,fromWireType:function(A){var I,B=e[A>>2],Q=A+4;if(g)for(var C=Q,E=0;E<=B;++E){var i=Q+E;if(E==B||0==S[i]){var o=L(C,i-C);void 0===I?I=o:(I+=String.fromCharCode(0),I+=o),C=i+1}}else{var D=new Array(B);for(E=0;E<B;++E)D[E]=String.fromCharCode(S[Q+E]);I=D.join(\\\"\\\")}return KI(A),I},toWireType:function(A,I){var B;I instanceof ArrayBuffer&&(I=new Uint8Array(I));var Q=\\\"string\\\"==typeof I;Q||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array||hA(\\\"Cannot pass non-string to std::string\\\"),B=g&&Q?function(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B<=127?I++:B<=2047?I+=2:B>=55296&&B<=57343?(I+=4,++g):I+=3}return I}(I):I.length;var C=MI(4+B+1),E=C+4;if(e[C>>2]=B,g&&Q)K(I,E,B+1);else if(Q)for(var i=0;i<B;++i){var o=I.charCodeAt(i);o>255&&(KI(E),hA(\\\"String has UTF-16 code units that do not fit in 8 bits\\\")),S[E+i]=o}else for(i=0;i<B;++i)S[E+i]=I[i];return null!==A&&A.push(KI,C),C},argPackAdvance:8,readValueFromPointer:_,destructorFunction:function(A){KI(A)}})},g:function(A,I,g){var B,Q,C,E,i;g=GA(g),2===I?(B=cI,Q=tI,E=RI,C=()=>k,i=1):4===I&&(B=NI,Q=UI,E=SI,C=()=>e,i=2),yA(A,{name:g,fromWireType:function(A){for(var g,Q=e[A>>2],E=C(),o=A+4,D=0;D<=Q;++D){var w=A+4+D*I;if(D==Q||0==E[w>>i]){var s=B(o,w-o);void 0===g?g=s:(g+=String.fromCharCode(0),g+=s),o=w+I}}return KI(A),g},toWireType:function(A,B){\\\"string\\\"!=typeof B&&hA(\\\"Cannot pass non-string to C++ string type \\\"+g);var C=E(B),o=MI(4+C+I);return e[o>>2]=C>>i,Q(B,o+4,C+I),null!==A&&A.push(KI,o),o},argPackAdvance:8,readValueFromPointer:_,destructorFunction:function(A){KI(A)}})},u:function(A,I,g,B,Q,C){z[A]={name:GA(I),rawConstructor:II(g,B),rawDestructor:II(Q,C),fields:[]}},d:function(A,I,g,B,Q,C,E,i,o,D){z[A].fields.push({fieldName:GA(I),getterReturnType:g,getter:II(B,Q),getterContext:C,setterArgumentType:E,setter:II(i,o),setterContext:D})},x:function(A,I){yA(A,{isVoid:!0,name:I=GA(I),argPackAdvance:0,fromWireType:function(){},toWireType:function(A,I){}})},i:DI,m:function(A){return 0===A?aI.toHandle(kI()):(A=void 0===(g=rI[I=A])?GA(I):g,aI.toHandle(kI()[A]));var I,g},l:function(A){A>4&&(oI[A].refcount+=1)},y:function(A,I,g,B){A=aI.toValue(A);var Q=eI[I];return Q||(Q=function(A){for(var I=\\\"\\\",g=0;g<A;++g)I+=(0!==g?\\\", \\\":\\\"\\\")+\\\"arg\\\"+g;var B=\\\"return function emval_allocator_\\\"+A+\\\"(constructor, argTypes, args) {\\\\n  var HEAPU32 = getMemory();\\\\n\\\";for(g=0;g<A;++g)B+=\\\"var argType\\\"+g+\\\" = requireRegisteredType(HEAPU32[((argTypes)>>2)], 'parameter \\\"+g+\\\"');\\\\nvar arg\\\"+g+\\\" = argType\\\"+g+\\\".readValueFromPointer(args);\\\\nargs += argType\\\"+g+\\\"['argPackAdvance'];\\\\nargTypes += 4;\\\\n\\\";return B+=\\\"var obj = new constructor(\\\"+I+\\\");\\\\nreturn valueToHandle(obj);\\\\n}\\\\n\\\",new Function(\\\"requireRegisteredType\\\",\\\"Module\\\",\\\"valueToHandle\\\",\\\"getMemory\\\",B)(JI,C,aI.toHandle,(()=>e))}(I),eI[I]=Q),Q(A,g,B)},n:function(A,I){var g=(A=JI(A,\\\"_emval_take_value\\\")).readValueFromPointer(I);return aI.toHandle(g)},f:function(){Z(\\\"\\\")},t:function(A,I,g){S.copyWithin(A,I,I+g)},s:function(A){var I,g,B=S.length,Q=2147483648;if((A>>>=0)>Q)return!1;for(var C=1;C<=4;C*=2){var E=B*(1+.2/C);if(E=Math.min(E,A+100663296),nI(Math.min(Q,(I=Math.max(A,E))+((g=65536)-I%g)%g)))return!0}return!1}},MI=(function(){var A={a:YI};function I(A,I){var g,B=A.exports;C.asm=B,d((R=C.asm.z).buffer),l=C.asm.C,g=C.asm.A,q.unshift(g),function(A){if(b--,C.monitorRunDependencies&&C.monitorRunDependencies(b),0==b&&(null!==u&&(clearInterval(u),u=null),W)){var I=W;W=null,I()}}()}function g(A){I(A.instance)}function B(I){return function(){if(!c&&(s||a)){if(\\\"function\\\"==typeof fetch&&!V(m))return fetch(m,{credentials:\\\"same-origin\\\"}).then((function(A){if(!A.ok)throw\\\"failed to load wasm binary file at '\\\"+m+\\\"'\\\";return A.arrayBuffer()})).catch((function(){return P(m)}));if(i)return new Promise((function(A,I){i(m,(function(I){A(new Uint8Array(I))}),I)}))}return Promise.resolve().then((function(){return P(m)}))}().then((function(I){return WebAssembly.instantiate(I,A)})).then((function(A){return A})).then(I,(function(A){t(\\\"failed to asynchronously prepare wasm: \\\"+A),Z(A)}))}if(b++,C.monitorRunDependencies&&C.monitorRunDependencies(b),C.instantiateWasm)try{return C.instantiateWasm(A,I)}catch(A){t(\\\"Module.instantiateWasm callback failed with error: \\\"+A),Q(A)}(c||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||X(m)||V(m)||G||\\\"function\\\"!=typeof fetch?B(g):fetch(m,{credentials:\\\"same-origin\\\"}).then((function(I){return WebAssembly.instantiateStreaming(I,A).then(g,(function(A){return t(\\\"wasm streaming compile failed: \\\"+A),t(\\\"falling back to ArrayBuffer instantiation\\\"),B(g)}))}))).catch(Q)}(),C.___wasm_call_ctors=function(){return(C.___wasm_call_ctors=C.asm.A).apply(null,arguments)},C._malloc=function(){return(MI=C._malloc=C.asm.B).apply(null,arguments)}),LI=C.___getTypeName=function(){return(LI=C.___getTypeName=C.asm.D).apply(null,arguments)},KI=(C.__embind_initialize_bindings=function(){return(C.__embind_initialize_bindings=C.asm.E).apply(null,arguments)},C._free=function(){return(KI=C._free=C.asm.F).apply(null,arguments)}),dI=C.stackSave=function(){return(dI=C.stackSave=C.asm.G).apply(null,arguments)},lI=C.stackRestore=function(){return(lI=C.stackRestore=C.asm.H).apply(null,arguments)},fI=C.stackAlloc=function(){return(fI=C.stackAlloc=C.asm.I).apply(null,arguments)},qI=C.___cxa_is_pointer_type=function(){return(qI=C.___cxa_is_pointer_type=C.asm.J).apply(null,arguments)};function pI(A){function g(){HI||(HI=!0,C.calledRun=!0,Y||(j(q),I(C),C.onRuntimeInitialized&&C.onRuntimeInitialized(),function(){if(C.postRun)for(\\\"function\\\"==typeof C.postRun&&(C.postRun=[C.postRun]);C.postRun.length;)A=C.postRun.shift(),p.unshift(A);var A;j(p)}()))}A=A||w,b>0||(function(){if(C.preRun)for(\\\"function\\\"==typeof C.preRun&&(C.preRun=[C.preRun]);C.preRun.length;)A=C.preRun.shift(),f.unshift(A);var A;j(f)}(),b>0||(C.setStatus?(C.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){C.setStatus(\\\"\\\")}),1),g()}),1)):g()))}if(C.ccall=function(A,I,g,B,Q){var E={string:A=>{var I=0;if(null!=A&&0!==A){var g=1+(A.length<<2);K(A,I=fI(g),g)}return I},array:A=>{var I=fI(A.length);return function(A,I){U.set(A,I)}(A,I),I}},i=function(A){return C[\\\"_\\\"+A]}(A),o=[],D=0;if(B)for(var w=0;w<B.length;w++){var s=E[g[w]];s?(0===D&&(D=dI()),o[w]=s(B[w])):o[w]=B[w]}var a=i.apply(null,o);return a=function(A){return 0!==D&&lI(D),function(A){return\\\"string\\\"===I?L(A):\\\"boolean\\\"===I?Boolean(A):A}(A)}(a)},W=function A(){HI||pI(),HI||(W=A)},C.preInit)for(\\\"function\\\"==typeof C.preInit&&(C.preInit=[C.preInit]);C.preInit.length>0;)C.preInit.pop()();return pI(),A.ready});A.exports=Q},851:(A,I,g)=>{var B,Q=(B=(B=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(A){var I,Q,C=void 0!==(A=A||{})?A:{};C.ready=new Promise((function(A,g){I=A,Q=g}));var E,i,o,D=Object.assign({},C),w=[],s=\\\"./this.program\\\",a=(A,I)=>{throw I},G=\\\"object\\\"==typeof window,F=\\\"function\\\"==typeof importScripts,h=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,y=\\\"\\\";if(h){var c=g(491),t=g(33);y=F?t.dirname(y)+\\\"/\\\":\\\"//\\\",E=(A,I)=>(A=$(A)?new URL(A):t.normalize(A),c.readFileSync(A,I?void 0:\\\"utf8\\\")),o=A=>{var I=E(A,!0);return I.buffer||(I=new Uint8Array(I)),I},i=(A,I,g)=>{A=$(A)?new URL(A):t.normalize(A),c.readFile(A,(function(A,B){A?g(A):I(B.buffer)}))},process.argv.length>1&&(s=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),w=process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(A){if(!(A instanceof AA))throw A})),process.on(\\\"unhandledRejection\\\",(function(A){throw A})),a=(A,I)=>{if(x())throw process.exitCode=A,I;var g;(g=I)instanceof AA||U(\\\"exiting due to exception: \\\"+g),process.exit(A)},C.inspect=function(){return\\\"[Emscripten Module object]\\\"}}else(G||F)&&(F?y=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(y=document.currentScript.src),B&&(y=B),y=0!==y.indexOf(\\\"blob:\\\")?y.substr(0,y.replace(/[?#].*/,\\\"\\\").lastIndexOf(\\\"/\\\")+1):\\\"\\\",E=A=>{var I=new XMLHttpRequest;return I.open(\\\"GET\\\",A,!1),I.send(null),I.responseText},F&&(o=A=>{var I=new XMLHttpRequest;return I.open(\\\"GET\\\",A,!1),I.responseType=\\\"arraybuffer\\\",I.send(null),new Uint8Array(I.response)}),i=(A,I,g)=>{var B=new XMLHttpRequest;B.open(\\\"GET\\\",A,!0),B.responseType=\\\"arraybuffer\\\",B.onload=()=>{200==B.status||0==B.status&&B.response?I(B.response):g()},B.onerror=g,B.send(null)});var R,N=C.print||console.log.bind(console),U=C.printErr||console.warn.bind(console);Object.assign(C,D),D=null,C.arguments&&(w=C.arguments),C.thisProgram&&(s=C.thisProgram),C.quit&&(a=C.quit),C.wasmBinary&&(R=C.wasmBinary);var S,r=C.noExitRuntime||!0;\\\"object\\\"!=typeof WebAssembly&&P(\\\"no native wasm support detected\\\");var k,J,e,n,H,Y,M,L,K,d=!1,l=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function f(A,I,g){for(var B=I+g,Q=I;A[Q]&&!(Q>=B);)++Q;if(Q-I>16&&A.buffer&&l)return l.decode(A.subarray(I,Q));for(var C=\\\"\\\";I<Q;){var E=A[I++];if(128&E){var i=63&A[I++];if(192!=(224&E)){var o=63&A[I++];if((E=224==(240&E)?(15&E)<<12|i<<6|o:(7&E)<<18|i<<12|o<<6|63&A[I++])<65536)C+=String.fromCharCode(E);else{var D=E-65536;C+=String.fromCharCode(55296|D>>10,56320|1023&D)}}else C+=String.fromCharCode((31&E)<<6|i)}else C+=String.fromCharCode(E)}return C}function q(A,I){return A?f(e,A,I):\\\"\\\"}function p(A,I,g){return function(A,I,g,B){if(!(B>0))return 0;for(var Q=g,C=g+B-1,E=0;E<A.length;++E){var i=A.charCodeAt(E);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&A.charCodeAt(++E)),i<=127){if(g>=C)break;I[g++]=i}else if(i<=2047){if(g+1>=C)break;I[g++]=192|i>>6,I[g++]=128|63&i}else if(i<=65535){if(g+2>=C)break;I[g++]=224|i>>12,I[g++]=128|i>>6&63,I[g++]=128|63&i}else{if(g+3>=C)break;I[g++]=240|i>>18,I[g++]=128|i>>12&63,I[g++]=128|i>>6&63,I[g++]=128|63&i}}return I[g]=0,g-Q}(A,e,I,g)}function b(A){k=A,C.HEAP8=J=new Int8Array(A),C.HEAP16=n=new Int16Array(A),C.HEAP32=Y=new Int32Array(A),C.HEAPU8=e=new Uint8Array(A),C.HEAPU16=H=new Uint16Array(A),C.HEAPU32=M=new Uint32Array(A),C.HEAPF32=L=new Float32Array(A),C.HEAPF64=K=new Float64Array(A)}C.INITIAL_MEMORY;var u,W=[],Z=[],m=[];function x(){return r}var T=0,X=null,V=null;function P(A){C.onAbort&&C.onAbort(A),U(A=\\\"Aborted(\\\"+A+\\\")\\\"),d=!0,A+=\\\". Build with -sASSERTIONS for more info.\\\";var I=new WebAssembly.RuntimeError(A);throw Q(I),I}var v,j,O=\\\"data:application/octet-stream;base64,\\\";function z(A){return A.startsWith(O)}function $(A){return A.startsWith(\\\"file://\\\")}function _(A){try{if(A==v&&R)return new Uint8Array(R);if(o)return o(A);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(A){P(A)}}function AA(A){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+A+\\\")\\\",this.status=A}function IA(A){for(;A.length>0;)A.shift()(C)}function gA(A){this.excPtr=A,this.ptr=A-24,this.set_type=function(A){M[this.ptr+4>>2]=A},this.get_type=function(){return M[this.ptr+4>>2]},this.set_destructor=function(A){M[this.ptr+8>>2]=A},this.get_destructor=function(){return M[this.ptr+8>>2]},this.set_refcount=function(A){Y[this.ptr>>2]=A},this.set_caught=function(A){A=A?1:0,J[this.ptr+12|0]=A},this.get_caught=function(){return 0!=J[this.ptr+12|0]},this.set_rethrown=function(A){A=A?1:0,J[this.ptr+13|0]=A},this.get_rethrown=function(){return 0!=J[this.ptr+13|0]},this.init=function(A,I){this.set_adjusted_ptr(0),this.set_type(A),this.set_destructor(I),this.set_refcount(0),this.set_caught(!1),this.set_rethrown(!1)},this.add_ref=function(){var A=Y[this.ptr>>2];Y[this.ptr>>2]=A+1},this.release_ref=function(){var A=Y[this.ptr>>2];return Y[this.ptr>>2]=A-1,1===A},this.set_adjusted_ptr=function(A){M[this.ptr+16>>2]=A},this.get_adjusted_ptr=function(){return M[this.ptr+16>>2]},this.get_exception_ptr=function(){if(VI(this.get_type()))return M[this.excPtr>>2];var A=this.get_adjusted_ptr();return 0!==A?A:this.excPtr}}z(v=\\\"libjpegturbowasm_decode.wasm\\\")||(j=v,v=C.locateFile?C.locateFile(j,y):y+j);var BA={};function QA(A){for(;A.length;){var I=A.pop();A.pop()(I)}}function CA(A){return this.fromWireType(Y[A>>2])}var EA={},iA={},oA={},DA=48,wA=57;function sA(A){if(void 0===A)return\\\"_unknown\\\";var I=(A=A.replace(/[^a-zA-Z0-9_]/g,\\\"$\\\")).charCodeAt(0);return I>=DA&&I<=wA?\\\"_\\\"+A:A}function aA(A,I){return A=sA(A),new Function(\\\"body\\\",\\\"return function \\\"+A+'() {\\\\n    \\\"use strict\\\";    return body.apply(this, arguments);\\\\n};\\\\n')(I)}function GA(A,I){var g=aA(I,(function(A){this.name=I,this.message=A;var g=new Error(A).stack;void 0!==g&&(this.stack=this.toString()+\\\"\\\\n\\\"+g.replace(/^Error(:[^\\\\n]*)?\\\\n/,\\\"\\\"))}));return g.prototype=Object.create(A.prototype),g.prototype.constructor=g,g.prototype.toString=function(){return void 0===this.message?this.name:this.name+\\\": \\\"+this.message},g}var FA=void 0;function hA(A){throw new FA(A)}function yA(A,I,g){function B(I){var B=g(I);B.length!==A.length&&hA(\\\"Mismatched type converter count\\\");for(var Q=0;Q<A.length;++Q)SA(A[Q],B[Q])}A.forEach((function(A){oA[A]=I}));var Q=new Array(I.length),C=[],E=0;I.forEach(((A,I)=>{iA.hasOwnProperty(A)?Q[I]=iA[A]:(C.push(A),EA.hasOwnProperty(A)||(EA[A]=[]),EA[A].push((()=>{Q[I]=iA[A],++E===C.length&&B(Q)})))})),0===C.length&&B(Q)}function cA(A){switch(A){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\\\"Unknown type size: \\\"+A)}}var tA=void 0;function RA(A){for(var I=\\\"\\\",g=A;e[g];)I+=tA[e[g++]];return I}var NA=void 0;function UA(A){throw new NA(A)}function SA(A,I,g={}){if(!(\\\"argPackAdvance\\\"in I))throw new TypeError(\\\"registerType registeredInstance requires argPackAdvance\\\");var B=I.name;if(A||UA('type \\\"'+B+'\\\" must have a positive integer typeid pointer'),iA.hasOwnProperty(A)){if(g.ignoreDuplicateRegistrations)return;UA(\\\"Cannot register type '\\\"+B+\\\"' twice\\\")}if(iA[A]=I,delete oA[A],EA.hasOwnProperty(A)){var Q=EA[A];delete EA[A],Q.forEach((A=>A()))}}function rA(A){if(!(this instanceof XA))return!1;if(!(A instanceof XA))return!1;for(var I=this.$$.ptrType.registeredClass,g=this.$$.ptr,B=A.$$.ptrType.registeredClass,Q=A.$$.ptr;I.baseClass;)g=I.upcast(g),I=I.baseClass;for(;B.baseClass;)Q=B.upcast(Q),B=B.baseClass;return I===B&&g===Q}function kA(A){UA(A.$$.ptrType.registeredClass.name+\\\" instance already deleted\\\")}var JA=!1;function eA(A){}function nA(A){A.count.value-=1,0===A.count.value&&function(A){A.smartPtr?A.smartPtrType.rawDestructor(A.smartPtr):A.ptrType.registeredClass.rawDestructor(A.ptr)}(A)}function HA(A,I,g){if(I===g)return A;if(void 0===g.baseClass)return null;var B=HA(A,I,g.baseClass);return null===B?null:g.downcast(B)}var YA={};function MA(){return Object.keys(qA).length}function LA(){var A=[];for(var I in qA)qA.hasOwnProperty(I)&&A.push(qA[I]);return A}var KA=[];function dA(){for(;KA.length;){var A=KA.pop();A.$$.deleteScheduled=!1,A.delete()}}var lA=void 0;function fA(A){lA=A,KA.length&&lA&&lA(dA)}var qA={};function pA(A,I){return I=function(A,I){for(void 0===I&&UA(\\\"ptr should not be undefined\\\");A.baseClass;)I=A.upcast(I),A=A.baseClass;return I}(A,I),qA[I]}function bA(A,I){return I.ptrType&&I.ptr||hA(\\\"makeClassHandle requires ptr and ptrType\\\"),!!I.smartPtrType!=!!I.smartPtr&&hA(\\\"Both smartPtrType and smartPtr must be specified\\\"),I.count={value:1},WA(Object.create(A,{$$:{value:I}}))}function uA(A){var I=this.getPointee(A);if(!I)return this.destructor(A),null;var g=pA(this.registeredClass,I);if(void 0!==g){if(0===g.$$.count.value)return g.$$.ptr=I,g.$$.smartPtr=A,g.clone();var B=g.clone();return this.destructor(A),B}function Q(){return this.isSmartPointer?bA(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:I,smartPtrType:this,smartPtr:A}):bA(this.registeredClass.instancePrototype,{ptrType:this,ptr:A})}var C,E=this.registeredClass.getActualType(I),i=YA[E];if(!i)return Q.call(this);C=this.isConst?i.constPointerType:i.pointerType;var o=HA(I,this.registeredClass,C.registeredClass);return null===o?Q.call(this):this.isSmartPointer?bA(C.registeredClass.instancePrototype,{ptrType:C,ptr:o,smartPtrType:this,smartPtr:A}):bA(C.registeredClass.instancePrototype,{ptrType:C,ptr:o})}function WA(A){return\\\"undefined\\\"==typeof FinalizationRegistry?(WA=A=>A,A):(JA=new FinalizationRegistry((A=>{nA(A.$$)})),WA=A=>{var I=A.$$;if(I.smartPtr){var g={$$:I};JA.register(A,g,A)}return A},eA=A=>JA.unregister(A),WA(A))}function ZA(){if(this.$$.ptr||kA(this),this.$$.preservePointerOnDelete)return this.$$.count.value+=1,this;var A,I=WA(Object.create(Object.getPrototypeOf(this),{$$:{value:(A=this.$$,{count:A.count,deleteScheduled:A.deleteScheduled,preservePointerOnDelete:A.preservePointerOnDelete,ptr:A.ptr,ptrType:A.ptrType,smartPtr:A.smartPtr,smartPtrType:A.smartPtrType})}}));return I.$$.count.value+=1,I.$$.deleteScheduled=!1,I}function mA(){this.$$.ptr||kA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&UA(\\\"Object already scheduled for deletion\\\"),eA(this),nA(this.$$),this.$$.preservePointerOnDelete||(this.$$.smartPtr=void 0,this.$$.ptr=void 0)}function xA(){return!this.$$.ptr}function TA(){return this.$$.ptr||kA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&UA(\\\"Object already scheduled for deletion\\\"),KA.push(this),1===KA.length&&lA&&lA(dA),this.$$.deleteScheduled=!0,this}function XA(){}function VA(A,I,g){if(void 0===A[I].overloadTable){var B=A[I];A[I]=function(){return A[I].overloadTable.hasOwnProperty(arguments.length)||UA(\\\"Function '\\\"+g+\\\"' called with an invalid number of arguments (\\\"+arguments.length+\\\") - expects one of (\\\"+A[I].overloadTable+\\\")!\\\"),A[I].overloadTable[arguments.length].apply(this,arguments)},A[I].overloadTable=[],A[I].overloadTable[B.argCount]=B}}function PA(A,I,g,B,Q,C,E,i){this.name=A,this.constructor=I,this.instancePrototype=g,this.rawDestructor=B,this.baseClass=Q,this.getActualType=C,this.upcast=E,this.downcast=i,this.pureVirtualFunctions=[]}function vA(A,I,g){for(;I!==g;)I.upcast||UA(\\\"Expected null or instance of \\\"+g.name+\\\", got an instance of \\\"+I.name),A=I.upcast(A),I=I.baseClass;return A}function jA(A,I){if(null===I)return this.isReference&&UA(\\\"null is not a valid \\\"+this.name),0;I.$$||UA('Cannot pass \\\"'+cI(I)+'\\\" as a '+this.name),I.$$.ptr||UA(\\\"Cannot pass deleted object as a pointer of type \\\"+this.name);var g=I.$$.ptrType.registeredClass;return vA(I.$$.ptr,g,this.registeredClass)}function OA(A,I){var g;if(null===I)return this.isReference&&UA(\\\"null is not a valid \\\"+this.name),this.isSmartPointer?(g=this.rawConstructor(),null!==A&&A.push(this.rawDestructor,g),g):0;I.$$||UA('Cannot pass \\\"'+cI(I)+'\\\" as a '+this.name),I.$$.ptr||UA(\\\"Cannot pass deleted object as a pointer of type \\\"+this.name),!this.isConst&&I.$$.ptrType.isConst&&UA(\\\"Cannot convert argument of type \\\"+(I.$$.smartPtrType?I.$$.smartPtrType.name:I.$$.ptrType.name)+\\\" to parameter type \\\"+this.name);var B=I.$$.ptrType.registeredClass;if(g=vA(I.$$.ptr,B,this.registeredClass),this.isSmartPointer)switch(void 0===I.$$.smartPtr&&UA(\\\"Passing raw pointer to smart pointer is illegal\\\"),this.sharingPolicy){case 0:I.$$.smartPtrType===this?g=I.$$.smartPtr:UA(\\\"Cannot convert argument of type \\\"+(I.$$.smartPtrType?I.$$.smartPtrType.name:I.$$.ptrType.name)+\\\" to parameter type \\\"+this.name);break;case 1:g=I.$$.smartPtr;break;case 2:if(I.$$.smartPtrType===this)g=I.$$.smartPtr;else{var Q=I.clone();g=this.rawShare(g,yI.toHandle((function(){Q.delete()}))),null!==A&&A.push(this.rawDestructor,g)}break;default:UA(\\\"Unsupporting sharing policy\\\")}return g}function zA(A,I){if(null===I)return this.isReference&&UA(\\\"null is not a valid \\\"+this.name),0;I.$$||UA('Cannot pass \\\"'+cI(I)+'\\\" as a '+this.name),I.$$.ptr||UA(\\\"Cannot pass deleted object as a pointer of type \\\"+this.name),I.$$.ptrType.isConst&&UA(\\\"Cannot convert argument of type \\\"+I.$$.ptrType.name+\\\" to parameter type \\\"+this.name);var g=I.$$.ptrType.registeredClass;return vA(I.$$.ptr,g,this.registeredClass)}function $A(A){return this.rawGetPointee&&(A=this.rawGetPointee(A)),A}function _A(A){this.rawDestructor&&this.rawDestructor(A)}function AI(A){null!==A&&A.delete()}function II(A,I,g,B,Q,C,E,i,o,D,w){this.name=A,this.registeredClass=I,this.isReference=g,this.isConst=B,this.isSmartPointer=Q,this.pointeeType=C,this.sharingPolicy=E,this.rawGetPointee=i,this.rawConstructor=o,this.rawShare=D,this.rawDestructor=w,Q||void 0!==I.baseClass?this.toWireType=OA:B?(this.toWireType=jA,this.destructorFunction=null):(this.toWireType=zA,this.destructorFunction=null)}var gI=[];function BI(A){var I=gI[A];return I||(A>=gI.length&&(gI.length=A+1),gI[A]=I=u.get(A)),I}function QI(A,I,g){return A.includes(\\\"j\\\")?function(A,I,g){var B=C[\\\"dynCall_\\\"+A];return g&&g.length?B.apply(null,[I].concat(g)):B.call(null,I)}(A,I,g):BI(I).apply(null,g)}function CI(A,I){var g,B,Q,C=(A=RA(A)).includes(\\\"j\\\")?(g=A,B=I,Q=[],function(){return Q.length=0,Object.assign(Q,arguments),QI(g,B,Q)}):BI(I);return\\\"function\\\"!=typeof C&&UA(\\\"unknown function pointer with signature \\\"+A+\\\": \\\"+I),C}var EI=void 0;function iI(A){var I=ZI(A),g=RA(I);return WI(I),g}function oI(A,I){var g=[],B={};throw I.forEach((function A(I){B[I]||iA[I]||(oA[I]?oA[I].forEach(A):(g.push(I),B[I]=!0))})),new EI(A+\\\": \\\"+g.map(iI).join([\\\", \\\"]))}function DI(A,I){for(var g=[],B=0;B<A;B++)g.push(M[I+4*B>>2]);return g}function wI(A,I,g,B,Q){var C=I.length;C<2&&UA(\\\"argTypes array size mismatch! Must at least get return value and 'this' types!\\\");for(var E=null!==I[1]&&null!==g,i=!1,o=1;o<I.length;++o)if(null!==I[o]&&void 0===I[o].destructorFunction){i=!0;break}var D=\\\"void\\\"!==I[0].name,w=\\\"\\\",s=\\\"\\\";for(o=0;o<C-2;++o)w+=(0!==o?\\\", \\\":\\\"\\\")+\\\"arg\\\"+o,s+=(0!==o?\\\", \\\":\\\"\\\")+\\\"arg\\\"+o+\\\"Wired\\\";var a=\\\"return function \\\"+sA(A)+\\\"(\\\"+w+\\\") {\\\\nif (arguments.length !== \\\"+(C-2)+\\\") {\\\\nthrowBindingError('function \\\"+A+\\\" called with ' + arguments.length + ' arguments, expected \\\"+(C-2)+\\\" args!');\\\\n}\\\\n\\\";i&&(a+=\\\"var destructors = [];\\\\n\\\");var G=i?\\\"destructors\\\":\\\"null\\\",F=[\\\"throwBindingError\\\",\\\"invoker\\\",\\\"fn\\\",\\\"runDestructors\\\",\\\"retType\\\",\\\"classParam\\\"],h=[UA,B,Q,QA,I[0],I[1]];for(E&&(a+=\\\"var thisWired = classParam.toWireType(\\\"+G+\\\", this);\\\\n\\\"),o=0;o<C-2;++o)a+=\\\"var arg\\\"+o+\\\"Wired = argType\\\"+o+\\\".toWireType(\\\"+G+\\\", arg\\\"+o+\\\"); // \\\"+I[o+2].name+\\\"\\\\n\\\",F.push(\\\"argType\\\"+o),h.push(I[o+2]);if(E&&(s=\\\"thisWired\\\"+(s.length>0?\\\", \\\":\\\"\\\")+s),a+=(D?\\\"var rv = \\\":\\\"\\\")+\\\"invoker(fn\\\"+(s.length>0?\\\", \\\":\\\"\\\")+s+\\\");\\\\n\\\",i)a+=\\\"runDestructors(destructors);\\\\n\\\";else for(o=E?1:2;o<I.length;++o){var y=1===o?\\\"thisWired\\\":\\\"arg\\\"+(o-2)+\\\"Wired\\\";null!==I[o].destructorFunction&&(a+=y+\\\"_dtor(\\\"+y+\\\"); // \\\"+I[o].name+\\\"\\\\n\\\",F.push(y+\\\"_dtor\\\"),h.push(I[o].destructorFunction))}return D&&(a+=\\\"var ret = retType.fromWireType(rv);\\\\nreturn ret;\\\\n\\\"),a+=\\\"}\\\\n\\\",F.push(a),function(A,I){if(!(A instanceof Function))throw new TypeError(\\\"new_ called with constructor type \\\"+typeof A+\\\" which is not a function\\\");var g=aA(A.name||\\\"unknownFunctionName\\\",(function(){}));g.prototype=A.prototype;var B=new g,Q=A.apply(B,I);return Q instanceof Object?Q:B}(Function,F).apply(null,h)}var sI=[],aI=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function GI(A){A>4&&0==--aI[A].refcount&&(aI[A]=void 0,sI.push(A))}function FI(){for(var A=0,I=5;I<aI.length;++I)void 0!==aI[I]&&++A;return A}function hI(){for(var A=5;A<aI.length;++A)if(void 0!==aI[A])return aI[A];return null}var yI={toValue:A=>(A||UA(\\\"Cannot use deleted val. handle = \\\"+A),aI[A].value),toHandle:A=>{switch(A){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var I=sI.length?sI.pop():aI.length;return aI[I]={refcount:1,value:A},I}}};function cI(A){if(null===A)return\\\"null\\\";var I=typeof A;return\\\"object\\\"===I||\\\"array\\\"===I||\\\"function\\\"===I?A.toString():\\\"\\\"+A}function tI(A,I){switch(I){case 2:return function(A){return this.fromWireType(L[A>>2])};case 3:return function(A){return this.fromWireType(K[A>>3])};default:throw new TypeError(\\\"Unknown float type: \\\"+A)}}function RI(A,I,g){switch(I){case 0:return g?function(A){return J[A]}:function(A){return e[A]};case 1:return g?function(A){return n[A>>1]}:function(A){return H[A>>1]};case 2:return g?function(A){return Y[A>>2]}:function(A){return M[A>>2]};default:throw new TypeError(\\\"Unknown integer type: \\\"+A)}}var NI=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf-16le\\\"):void 0;function UI(A,I){for(var g=A,B=g>>1,Q=B+I/2;!(B>=Q)&&H[B];)++B;if((g=B<<1)-A>32&&NI)return NI.decode(e.subarray(A,g));for(var C=\\\"\\\",E=0;!(E>=I/2);++E){var i=n[A+2*E>>1];if(0==i)break;C+=String.fromCharCode(i)}return C}function SI(A,I,g){if(void 0===g&&(g=2147483647),g<2)return 0;for(var B=I,Q=(g-=2)<2*A.length?g/2:A.length,C=0;C<Q;++C){var E=A.charCodeAt(C);n[I>>1]=E,I+=2}return n[I>>1]=0,I-B}function rI(A){return 2*A.length}function kI(A,I){for(var g=0,B=\\\"\\\";!(g>=I/4);){var Q=Y[A+4*g>>2];if(0==Q)break;if(++g,Q>=65536){var C=Q-65536;B+=String.fromCharCode(55296|C>>10,56320|1023&C)}else B+=String.fromCharCode(Q)}return B}function JI(A,I,g){if(void 0===g&&(g=2147483647),g<4)return 0;for(var B=I,Q=B+g-4,C=0;C<A.length;++C){var E=A.charCodeAt(C);if(E>=55296&&E<=57343&&(E=65536+((1023&E)<<10)|1023&A.charCodeAt(++C)),Y[I>>2]=E,(I+=4)+4>Q)break}return Y[I>>2]=0,I-B}function eI(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B>=55296&&B<=57343&&++g,I+=4}return I}var nI={};function HI(){return\\\"object\\\"==typeof globalThis?globalThis:Function(\\\"return this\\\")()}function YI(A,I){var g=iA[A];return void 0===g&&UA(I+\\\" has unknown type \\\"+iI(A)),g}var MI={};function LI(A){try{return S.grow(A-k.byteLength+65535>>>16),b(S.buffer),1}catch(A){}}var KI={};function dI(){if(!dI.strings){var A={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:s||\\\"./this.program\\\"};for(var I in KI)void 0===KI[I]?delete A[I]:A[I]=KI[I];var g=[];for(var I in A)g.push(I+\\\"=\\\"+A[I]);dI.strings=g}return dI.strings}var lI=function(A,I){var g;g=A,x()||(C.onExit&&C.onExit(g),d=!0),a(g,new AA(g))},fI=[null,[],[]];function qI(A,I){var g=fI[A];0===I||10===I?((1===A?N:U)(f(g,0)),g.length=0):g.push(I)}FA=C.InternalError=GA(Error,\\\"InternalError\\\"),function(){for(var A=new Array(256),I=0;I<256;++I)A[I]=String.fromCharCode(I);tA=A}(),NA=C.BindingError=GA(Error,\\\"BindingError\\\"),XA.prototype.isAliasOf=rA,XA.prototype.clone=ZA,XA.prototype.delete=mA,XA.prototype.isDeleted=xA,XA.prototype.deleteLater=TA,C.getInheritedInstanceCount=MA,C.getLiveInheritedInstances=LA,C.flushPendingDeletes=dA,C.setDelayFunction=fA,II.prototype.getPointee=$A,II.prototype.destructor=_A,II.prototype.argPackAdvance=8,II.prototype.readValueFromPointer=CA,II.prototype.deleteObject=AI,II.prototype.fromWireType=uA,EI=C.UnboundTypeError=GA(Error,\\\"UnboundTypeError\\\"),C.count_emval_handles=FI,C.get_first_emval=hI;var pI,bI={g:function(A,I,g){throw new gA(A).init(I,g),A},A:function(A){var I=BA[A];delete BA[A];var g=I.rawConstructor,B=I.rawDestructor,Q=I.fields;yA([A],Q.map((A=>A.getterReturnType)).concat(Q.map((A=>A.setterArgumentType))),(A=>{var C={};return Q.forEach(((I,g)=>{var B=I.fieldName,E=A[g],i=I.getter,o=I.getterContext,D=A[g+Q.length],w=I.setter,s=I.setterContext;C[B]={read:A=>E.fromWireType(i(o,A)),write:(A,I)=>{var g=[];w(s,A,D.toWireType(g,I)),QA(g)}}})),[{name:I.name,fromWireType:function(A){var I={};for(var g in C)I[g]=C[g].read(A);return B(A),I},toWireType:function(A,I){for(var Q in C)if(!(Q in I))throw new TypeError('Missing field:  \\\"'+Q+'\\\"');var E=g();for(Q in C)C[Q].write(E,I[Q]);return null!==A&&A.push(B,E),E},argPackAdvance:8,readValueFromPointer:CA,destructorFunction:B}]}))},w:function(A,I,g,B,Q){},F:function(A,I,g,B,Q){var C=cA(g);SA(A,{name:I=RA(I),fromWireType:function(A){return!!A},toWireType:function(A,I){return I?B:Q},argPackAdvance:8,readValueFromPointer:function(A){var B;if(1===g)B=J;else if(2===g)B=n;else{if(4!==g)throw new TypeError(\\\"Unknown boolean type size: \\\"+I);B=Y}return this.fromWireType(B[A>>C])},destructorFunction:null})},u:function(A,I,g,B,Q,E,i,o,D,w,s,a,G){s=RA(s),E=CI(Q,E),o&&(o=CI(i,o)),w&&(w=CI(D,w)),G=CI(a,G);var F=sA(s);!function(A,I,g){C.hasOwnProperty(A)?((void 0===g||void 0!==C[A].overloadTable&&void 0!==C[A].overloadTable[g])&&UA(\\\"Cannot register public name '\\\"+A+\\\"' twice\\\"),VA(C,A,A),C.hasOwnProperty(g)&&UA(\\\"Cannot register multiple overloads of a function with the same number of arguments (\\\"+g+\\\")!\\\"),C[A].overloadTable[g]=I):(C[A]=I,void 0!==g&&(C[A].numArguments=g))}(F,(function(){oI(\\\"Cannot construct \\\"+s+\\\" due to unbound types\\\",[B])})),yA([A,I,g],B?[B]:[],(function(I){var g,Q;I=I[0],Q=B?(g=I.registeredClass).instancePrototype:XA.prototype;var i=aA(F,(function(){if(Object.getPrototypeOf(this)!==D)throw new NA(\\\"Use 'new' to construct \\\"+s);if(void 0===a.constructor_body)throw new NA(s+\\\" has no accessible constructor\\\");var A=a.constructor_body[arguments.length];if(void 0===A)throw new NA(\\\"Tried to invoke ctor of \\\"+s+\\\" with invalid number of parameters (\\\"+arguments.length+\\\") - expected (\\\"+Object.keys(a.constructor_body).toString()+\\\") parameters instead!\\\");return A.apply(this,arguments)})),D=Object.create(Q,{constructor:{value:i}});i.prototype=D;var a=new PA(s,i,D,G,g,E,o,w),h=new II(s,a,!0,!1,!1),y=new II(s+\\\"*\\\",a,!1,!1,!1),c=new II(s+\\\" const*\\\",a,!1,!0,!1);return YA[A]={pointerType:y,constPointerType:c},function(A,I,g){C.hasOwnProperty(A)||hA(\\\"Replacing nonexistant public symbol\\\"),void 0!==C[A].overloadTable&&void 0!==g?C[A].overloadTable[g]=I:(C[A]=I,C[A].argCount=g)}(F,i),[h,y,c]}))},t:function(A,I,g,B,Q,C){var E;I>0||P(E);var i=DI(I,g);Q=CI(B,Q),yA([],[A],(function(A){var g=\\\"constructor \\\"+(A=A[0]).name;if(void 0===A.registeredClass.constructor_body&&(A.registeredClass.constructor_body=[]),void 0!==A.registeredClass.constructor_body[I-1])throw new NA(\\\"Cannot register multiple constructors with identical number of parameters (\\\"+(I-1)+\\\") for class '\\\"+A.name+\\\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\\\");return A.registeredClass.constructor_body[I-1]=()=>{oI(\\\"Cannot construct \\\"+A.name+\\\" due to unbound types\\\",i)},yA([],i,(function(B){return B.splice(1,0,null),A.registeredClass.constructor_body[I-1]=wI(g,B,null,Q,C),[]})),[]}))},c:function(A,I,g,B,Q,C,E,i){var o=DI(g,B);I=RA(I),C=CI(Q,C),yA([],[A],(function(A){var B=(A=A[0]).name+\\\".\\\"+I;function Q(){oI(\\\"Cannot call \\\"+B+\\\" due to unbound types\\\",o)}I.startsWith(\\\"@@\\\")&&(I=Symbol[I.substring(2)]),i&&A.registeredClass.pureVirtualFunctions.push(I);var D=A.registeredClass.instancePrototype,w=D[I];return void 0===w||void 0===w.overloadTable&&w.className!==A.name&&w.argCount===g-2?(Q.argCount=g-2,Q.className=A.name,D[I]=Q):(VA(D,I,B),D[I].overloadTable[g-2]=Q),yA([],o,(function(Q){var i=wI(B,Q,A,C,E);return void 0===D[I].overloadTable?(i.argCount=g-2,D[I]=i):D[I].overloadTable[g-2]=i,[]})),[]}))},E:function(A,I){SA(A,{name:I=RA(I),fromWireType:function(A){var I=yI.toValue(A);return GI(A),I},toWireType:function(A,I){return yI.toHandle(I)},argPackAdvance:8,readValueFromPointer:CA,destructorFunction:null})},m:function(A,I,g){var B=cA(g);SA(A,{name:I=RA(I),fromWireType:function(A){return A},toWireType:function(A,I){return I},argPackAdvance:8,readValueFromPointer:tI(I,B),destructorFunction:null})},b:function(A,I,g,B,Q){I=RA(I),-1===Q&&(Q=4294967295);var C=cA(g),E=A=>A;if(0===B){var i=32-8*g;E=A=>A<<i>>>i}var o=I.includes(\\\"unsigned\\\");SA(A,{name:I,fromWireType:E,toWireType:o?function(A,I){return this.name,I>>>0}:function(A,I){return this.name,I},argPackAdvance:8,readValueFromPointer:RI(I,C,0!==B),destructorFunction:null})},a:function(A,I,g){var B=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][I];function Q(A){var I=M,g=I[A>>=2],Q=I[A+1];return new B(k,Q,g)}SA(A,{name:g=RA(g),fromWireType:Q,argPackAdvance:8,readValueFromPointer:Q},{ignoreDuplicateRegistrations:!0})},l:function(A,I){var g=\\\"std::string\\\"===(I=RA(I));SA(A,{name:I,fromWireType:function(A){var I,B=M[A>>2],Q=A+4;if(g)for(var C=Q,E=0;E<=B;++E){var i=Q+E;if(E==B||0==e[i]){var o=q(C,i-C);void 0===I?I=o:(I+=String.fromCharCode(0),I+=o),C=i+1}}else{var D=new Array(B);for(E=0;E<B;++E)D[E]=String.fromCharCode(e[Q+E]);I=D.join(\\\"\\\")}return WI(A),I},toWireType:function(A,I){var B;I instanceof ArrayBuffer&&(I=new Uint8Array(I));var Q=\\\"string\\\"==typeof I;Q||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array||UA(\\\"Cannot pass non-string to std::string\\\"),B=g&&Q?function(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B<=127?I++:B<=2047?I+=2:B>=55296&&B<=57343?(I+=4,++g):I+=3}return I}(I):I.length;var C=uI(4+B+1),E=C+4;if(M[C>>2]=B,g&&Q)p(I,E,B+1);else if(Q)for(var i=0;i<B;++i){var o=I.charCodeAt(i);o>255&&(WI(E),UA(\\\"String has UTF-16 code units that do not fit in 8 bits\\\")),e[E+i]=o}else for(i=0;i<B;++i)e[E+i]=I[i];return null!==A&&A.push(WI,C),C},argPackAdvance:8,readValueFromPointer:CA,destructorFunction:function(A){WI(A)}})},h:function(A,I,g){var B,Q,C,E,i;g=RA(g),2===I?(B=UI,Q=SI,E=rI,C=()=>H,i=1):4===I&&(B=kI,Q=JI,E=eI,C=()=>M,i=2),SA(A,{name:g,fromWireType:function(A){for(var g,Q=M[A>>2],E=C(),o=A+4,D=0;D<=Q;++D){var w=A+4+D*I;if(D==Q||0==E[w>>i]){var s=B(o,w-o);void 0===g?g=s:(g+=String.fromCharCode(0),g+=s),o=w+I}}return WI(A),g},toWireType:function(A,B){\\\"string\\\"!=typeof B&&UA(\\\"Cannot pass non-string to C++ string type \\\"+g);var C=E(B),o=uI(4+C+I);return M[o>>2]=C>>i,Q(B,o+4,C+I),null!==A&&A.push(WI,o),o},argPackAdvance:8,readValueFromPointer:CA,destructorFunction:function(A){WI(A)}})},J:function(A,I,g,B,Q,C){BA[A]={name:RA(I),rawConstructor:CI(g,B),rawDestructor:CI(Q,C),fields:[]}},d:function(A,I,g,B,Q,C,E,i,o,D){BA[A].fields.push({fieldName:RA(I),getterReturnType:g,getter:CI(B,Q),getterContext:C,setterArgumentType:E,setter:CI(i,o),setterContext:D})},G:function(A,I){SA(A,{isVoid:!0,name:I=RA(I),argPackAdvance:0,fromWireType:function(){},toWireType:function(A,I){}})},x:function(){throw 1/0},i:GI,r:function(A){return 0===A?yI.toHandle(HI()):(A=void 0===(g=nI[I=A])?RA(I):g,yI.toHandle(HI()[A]));var I,g},p:function(A){A>4&&(aI[A].refcount+=1)},q:function(A,I,g,B){A=yI.toValue(A);var Q=MI[I];return Q||(Q=function(A){for(var I=\\\"\\\",g=0;g<A;++g)I+=(0!==g?\\\", \\\":\\\"\\\")+\\\"arg\\\"+g;var B=\\\"return function emval_allocator_\\\"+A+\\\"(constructor, argTypes, args) {\\\\n  var HEAPU32 = getMemory();\\\\n\\\";for(g=0;g<A;++g)B+=\\\"var argType\\\"+g+\\\" = requireRegisteredType(HEAPU32[((argTypes)>>2)], 'parameter \\\"+g+\\\"');\\\\nvar arg\\\"+g+\\\" = argType\\\"+g+\\\".readValueFromPointer(args);\\\\nargs += argType\\\"+g+\\\"['argPackAdvance'];\\\\nargTypes += 4;\\\\n\\\";return B+=\\\"var obj = new constructor(\\\"+I+\\\");\\\\nreturn valueToHandle(obj);\\\\n}\\\\n\\\",new Function(\\\"requireRegisteredType\\\",\\\"Module\\\",\\\"valueToHandle\\\",\\\"getMemory\\\",B)(YI,C,yI.toHandle,(()=>M))}(I),MI[I]=Q),Q(A,g,B)},s:function(A,I){var g=(A=YI(A,\\\"_emval_take_value\\\")).readValueFromPointer(I);return yI.toHandle(g)},j:function(){P(\\\"\\\")},D:function(A,I,g){e.copyWithin(A,I,I+g)},y:function(A){var I,g,B=e.length,Q=2147483648;if((A>>>=0)>Q)return!1;for(var C=1;C<=4;C*=2){var E=B*(1+.2/C);if(E=Math.min(E,A+100663296),LI(Math.min(Q,(I=Math.max(A,E))+((g=65536)-I%g)%g)))return!0}return!1},z:function(A,I){var g=0;return dI().forEach((function(B,Q){var C=I+g;M[A+4*Q>>2]=C,function(A,I,g){for(var B=0;B<A.length;++B)J[0|I++]=A.charCodeAt(B);g||(J[0|I]=0)}(B,C),g+=B.length+1})),0},B:function(A,I){var g=dI();M[A>>2]=g.length;var B=0;return g.forEach((function(A){B+=A.length+1})),M[I>>2]=B,0},I:lI,C:function(A){return 52},v:function(A,I,g,B,Q){return 70},k:function(A,I,g,B){for(var Q=0,C=0;C<g;C++){var E=M[I>>2],i=M[I+4>>2];I+=8;for(var o=0;o<i;o++)qI(A,e[E+o]);Q+=i}return M[B>>2]=Q,0},o:function(A,I){var g=xI();try{return BI(A)(I)}catch(A){if(TI(g),A!==A+0)throw A;mI(1,0)}},n:function(A,I,g){var B=xI();try{return BI(A)(I,g)}catch(A){if(TI(B),A!==A+0)throw A;mI(1,0)}},H:function(A,I,g,B){var Q=xI();try{return BI(A)(I,g,B)}catch(A){if(TI(Q),A!==A+0)throw A;mI(1,0)}},f:function(A,I){var g=xI();try{BI(A)(I)}catch(A){if(TI(g),A!==A+0)throw A;mI(1,0)}},e:function(A,I,g,B){var Q=xI();try{BI(A)(I,g,B)}catch(A){if(TI(Q),A!==A+0)throw A;mI(1,0)}}},uI=(function(){var A={a:bI};function I(A,I){var g,B=A.exports;C.asm=B,b((S=C.asm.K).buffer),u=C.asm.M,g=C.asm.L,Z.unshift(g),function(A){if(T--,C.monitorRunDependencies&&C.monitorRunDependencies(T),0==T&&(null!==X&&(clearInterval(X),X=null),V)){var I=V;V=null,I()}}()}function g(A){I(A.instance)}function B(I){return function(){if(!R&&(G||F)){if(\\\"function\\\"==typeof fetch&&!$(v))return fetch(v,{credentials:\\\"same-origin\\\"}).then((function(A){if(!A.ok)throw\\\"failed to load wasm binary file at '\\\"+v+\\\"'\\\";return A.arrayBuffer()})).catch((function(){return _(v)}));if(i)return new Promise((function(A,I){i(v,(function(I){A(new Uint8Array(I))}),I)}))}return Promise.resolve().then((function(){return _(v)}))}().then((function(I){return WebAssembly.instantiate(I,A)})).then((function(A){return A})).then(I,(function(A){U(\\\"failed to asynchronously prepare wasm: \\\"+A),P(A)}))}if(T++,C.monitorRunDependencies&&C.monitorRunDependencies(T),C.instantiateWasm)try{return C.instantiateWasm(A,I)}catch(A){U(\\\"Module.instantiateWasm callback failed with error: \\\"+A),Q(A)}(R||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||z(v)||$(v)||h||\\\"function\\\"!=typeof fetch?B(g):fetch(v,{credentials:\\\"same-origin\\\"}).then((function(I){return WebAssembly.instantiateStreaming(I,A).then(g,(function(A){return U(\\\"wasm streaming compile failed: \\\"+A),U(\\\"falling back to ArrayBuffer instantiation\\\"),B(g)}))}))).catch(Q)}(),C.___wasm_call_ctors=function(){return(C.___wasm_call_ctors=C.asm.L).apply(null,arguments)},C._malloc=function(){return(uI=C._malloc=C.asm.N).apply(null,arguments)}),WI=C._free=function(){return(WI=C._free=C.asm.O).apply(null,arguments)},ZI=C.___getTypeName=function(){return(ZI=C.___getTypeName=C.asm.P).apply(null,arguments)},mI=(C.__embind_initialize_bindings=function(){return(C.__embind_initialize_bindings=C.asm.Q).apply(null,arguments)},C._setThrew=function(){return(mI=C._setThrew=C.asm.R).apply(null,arguments)}),xI=C.stackSave=function(){return(xI=C.stackSave=C.asm.S).apply(null,arguments)},TI=C.stackRestore=function(){return(TI=C.stackRestore=C.asm.T).apply(null,arguments)},XI=C.stackAlloc=function(){return(XI=C.stackAlloc=C.asm.U).apply(null,arguments)},VI=C.___cxa_is_pointer_type=function(){return(VI=C.___cxa_is_pointer_type=C.asm.V).apply(null,arguments)};function PI(A){function g(){pI||(pI=!0,C.calledRun=!0,d||(IA(Z),I(C),C.onRuntimeInitialized&&C.onRuntimeInitialized(),function(){if(C.postRun)for(\\\"function\\\"==typeof C.postRun&&(C.postRun=[C.postRun]);C.postRun.length;)A=C.postRun.shift(),m.unshift(A);var A;IA(m)}()))}A=A||w,T>0||(function(){if(C.preRun)for(\\\"function\\\"==typeof C.preRun&&(C.preRun=[C.preRun]);C.preRun.length;)A=C.preRun.shift(),W.unshift(A);var A;IA(W)}(),T>0||(C.setStatus?(C.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){C.setStatus(\\\"\\\")}),1),g()}),1)):g()))}if(C.dynCall_jiji=function(){return(C.dynCall_jiji=C.asm.W).apply(null,arguments)},C.ccall=function(A,I,g,B,Q){var E={string:A=>{var I=0;if(null!=A&&0!==A){var g=1+(A.length<<2);p(A,I=XI(g),g)}return I},array:A=>{var I=XI(A.length);return function(A,I){J.set(A,I)}(A,I),I}},i=function(A){return C[\\\"_\\\"+A]}(A),o=[],D=0;if(B)for(var w=0;w<B.length;w++){var s=E[g[w]];s?(0===D&&(D=xI()),o[w]=s(B[w])):o[w]=B[w]}var a=i.apply(null,o);return a=function(A){return 0!==D&&TI(D),function(A){return\\\"string\\\"===I?q(A):\\\"boolean\\\"===I?Boolean(A):A}(A)}(a)},V=function A(){pI||PI(),pI||(V=A)},C.preInit)for(\\\"function\\\"==typeof C.preInit&&(C.preInit=[C.preInit]);C.preInit.length>0;)C.preInit.pop()();return PI(),A.ready});A.exports=Q},272:(A,I,g)=>{var B,Q=(B=(B=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(A){var I,Q,C=void 0!==(A=A||{})?A:{};C.ready=new Promise((function(A,g){I=A,Q=g}));var E,i,o,D=Object.assign({},C),w=[],s=\\\"./this.program\\\",a=\\\"object\\\"==typeof window,G=\\\"function\\\"==typeof importScripts,F=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,h=\\\"\\\";if(F){var y=g(261),c=g(926);h=G?c.dirname(h)+\\\"/\\\":\\\"//\\\",E=(A,I)=>(A=j(A)?new URL(A):c.normalize(A),y.readFileSync(A,I?void 0:\\\"utf8\\\")),o=A=>{var I=E(A,!0);return I.buffer||(I=new Uint8Array(I)),I},i=(A,I,g)=>{A=j(A)?new URL(A):c.normalize(A),y.readFile(A,(function(A,B){A?g(A):I(B.buffer)}))},process.argv.length>1&&(s=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),w=process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(A){if(!(A instanceof z))throw A})),process.on(\\\"unhandledRejection\\\",(function(A){throw A})),C.inspect=function(){return\\\"[Emscripten Module object]\\\"}}else(a||G)&&(G?h=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(h=document.currentScript.src),B&&(h=B),h=0!==h.indexOf(\\\"blob:\\\")?h.substr(0,h.replace(/[?#].*/,\\\"\\\").lastIndexOf(\\\"/\\\")+1):\\\"\\\",E=A=>{var I=new XMLHttpRequest;return I.open(\\\"GET\\\",A,!1),I.send(null),I.responseText},G&&(o=A=>{var I=new XMLHttpRequest;return I.open(\\\"GET\\\",A,!1),I.responseType=\\\"arraybuffer\\\",I.send(null),new Uint8Array(I.response)}),i=(A,I,g)=>{var B=new XMLHttpRequest;B.open(\\\"GET\\\",A,!0),B.responseType=\\\"arraybuffer\\\",B.onload=()=>{200==B.status||0==B.status&&B.response?I(B.response):g()},B.onerror=g,B.send(null)});var t,R=C.print||console.log.bind(console),N=C.printErr||console.warn.bind(console);Object.assign(C,D),D=null,C.arguments&&(w=C.arguments),C.thisProgram&&(s=C.thisProgram),C.quit&&C.quit,C.wasmBinary&&(t=C.wasmBinary);var U;C.noExitRuntime;\\\"object\\\"!=typeof WebAssembly&&T(\\\"no native wasm support detected\\\");var S,r,k,J,e,n,H,Y,M,L=!1,K=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function d(A,I,g){for(var B=I+g,Q=I;A[Q]&&!(Q>=B);)++Q;if(Q-I>16&&A.buffer&&K)return K.decode(A.subarray(I,Q));for(var C=\\\"\\\";I<Q;){var E=A[I++];if(128&E){var i=63&A[I++];if(192!=(224&E)){var o=63&A[I++];if((E=224==(240&E)?(15&E)<<12|i<<6|o:(7&E)<<18|i<<12|o<<6|63&A[I++])<65536)C+=String.fromCharCode(E);else{var D=E-65536;C+=String.fromCharCode(55296|D>>10,56320|1023&D)}}else C+=String.fromCharCode((31&E)<<6|i)}else C+=String.fromCharCode(E)}return C}function l(A,I){return A?d(k,A,I):\\\"\\\"}function f(A,I,g){return function(A,I,g,B){if(!(B>0))return 0;for(var Q=g,C=g+B-1,E=0;E<A.length;++E){var i=A.charCodeAt(E);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&A.charCodeAt(++E)),i<=127){if(g>=C)break;I[g++]=i}else if(i<=2047){if(g+1>=C)break;I[g++]=192|i>>6,I[g++]=128|63&i}else if(i<=65535){if(g+2>=C)break;I[g++]=224|i>>12,I[g++]=128|i>>6&63,I[g++]=128|63&i}else{if(g+3>=C)break;I[g++]=240|i>>18,I[g++]=128|i>>12&63,I[g++]=128|i>>6&63,I[g++]=128|63&i}}return I[g]=0,g-Q}(A,k,I,g)}function q(A){S=A,C.HEAP8=r=new Int8Array(A),C.HEAP16=J=new Int16Array(A),C.HEAP32=n=new Int32Array(A),C.HEAPU8=k=new Uint8Array(A),C.HEAPU16=e=new Uint16Array(A),C.HEAPU32=H=new Uint32Array(A),C.HEAPF32=Y=new Float32Array(A),C.HEAPF64=M=new Float64Array(A)}C.INITIAL_MEMORY;var p,b=[],u=[],W=[],Z=0,m=null,x=null;function T(A){C.onAbort&&C.onAbort(A),N(A=\\\"Aborted(\\\"+A+\\\")\\\"),L=!0,A+=\\\". Build with -sASSERTIONS for more info.\\\";var I=new WebAssembly.RuntimeError(A);throw Q(I),I}var X,V,P=\\\"data:application/octet-stream;base64,\\\";function v(A){return A.startsWith(P)}function j(A){return A.startsWith(\\\"file://\\\")}function O(A){try{if(A==X&&t)return new Uint8Array(t);if(o)return o(A);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(A){T(A)}}function z(A){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+A+\\\")\\\",this.status=A}function $(A){for(;A.length>0;)A.shift()(C)}function _(A){this.excPtr=A,this.ptr=A-24,this.set_type=function(A){H[this.ptr+4>>2]=A},this.get_type=function(){return H[this.ptr+4>>2]},this.set_destructor=function(A){H[this.ptr+8>>2]=A},this.get_destructor=function(){return H[this.ptr+8>>2]},this.set_refcount=function(A){n[this.ptr>>2]=A},this.set_caught=function(A){A=A?1:0,r[this.ptr+12|0]=A},this.get_caught=function(){return 0!=r[this.ptr+12|0]},this.set_rethrown=function(A){A=A?1:0,r[this.ptr+13|0]=A},this.get_rethrown=function(){return 0!=r[this.ptr+13|0]},this.init=function(A,I){this.set_adjusted_ptr(0),this.set_type(A),this.set_destructor(I),this.set_refcount(0),this.set_caught(!1),this.set_rethrown(!1)},this.add_ref=function(){var A=n[this.ptr>>2];n[this.ptr>>2]=A+1},this.release_ref=function(){var A=n[this.ptr>>2];return n[this.ptr>>2]=A-1,1===A},this.set_adjusted_ptr=function(A){H[this.ptr+16>>2]=A},this.get_adjusted_ptr=function(){return H[this.ptr+16>>2]},this.get_exception_ptr=function(){if(ZI(this.get_type()))return H[this.excPtr>>2];var A=this.get_adjusted_ptr();return 0!==A?A:this.excPtr}}v(X=\\\"openjpegwasm_decode.wasm\\\")||(V=X,X=C.locateFile?C.locateFile(V,h):h+V);var AA={};function IA(A){for(;A.length;){var I=A.pop();A.pop()(I)}}function gA(A){return this.fromWireType(n[A>>2])}var BA={},QA={},CA={},EA=48,iA=57;function oA(A){if(void 0===A)return\\\"_unknown\\\";var I=(A=A.replace(/[^a-zA-Z0-9_]/g,\\\"$\\\")).charCodeAt(0);return I>=EA&&I<=iA?\\\"_\\\"+A:A}function DA(A,I){return A=oA(A),new Function(\\\"body\\\",\\\"return function \\\"+A+'() {\\\\n    \\\"use strict\\\";    return body.apply(this, arguments);\\\\n};\\\\n')(I)}function wA(A,I){var g=DA(I,(function(A){this.name=I,this.message=A;var g=new Error(A).stack;void 0!==g&&(this.stack=this.toString()+\\\"\\\\n\\\"+g.replace(/^Error(:[^\\\\n]*)?\\\\n/,\\\"\\\"))}));return g.prototype=Object.create(A.prototype),g.prototype.constructor=g,g.prototype.toString=function(){return void 0===this.message?this.name:this.name+\\\": \\\"+this.message},g}var sA=void 0;function aA(A){throw new sA(A)}function GA(A,I,g){function B(I){var B=g(I);B.length!==A.length&&aA(\\\"Mismatched type converter count\\\");for(var Q=0;Q<A.length;++Q)RA(A[Q],B[Q])}A.forEach((function(A){CA[A]=I}));var Q=new Array(I.length),C=[],E=0;I.forEach(((A,I)=>{QA.hasOwnProperty(A)?Q[I]=QA[A]:(C.push(A),BA.hasOwnProperty(A)||(BA[A]=[]),BA[A].push((()=>{Q[I]=QA[A],++E===C.length&&B(Q)})))})),0===C.length&&B(Q)}function FA(A){switch(A){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\\\"Unknown type size: \\\"+A)}}var hA=void 0;function yA(A){for(var I=\\\"\\\",g=A;k[g];)I+=hA[k[g++]];return I}var cA=void 0;function tA(A){throw new cA(A)}function RA(A,I,g={}){if(!(\\\"argPackAdvance\\\"in I))throw new TypeError(\\\"registerType registeredInstance requires argPackAdvance\\\");var B=I.name;if(A||tA('type \\\"'+B+'\\\" must have a positive integer typeid pointer'),QA.hasOwnProperty(A)){if(g.ignoreDuplicateRegistrations)return;tA(\\\"Cannot register type '\\\"+B+\\\"' twice\\\")}if(QA[A]=I,delete CA[A],BA.hasOwnProperty(A)){var Q=BA[A];delete BA[A],Q.forEach((A=>A()))}}function NA(A){if(!(this instanceof mA))return!1;if(!(A instanceof mA))return!1;for(var I=this.$$.ptrType.registeredClass,g=this.$$.ptr,B=A.$$.ptrType.registeredClass,Q=A.$$.ptr;I.baseClass;)g=I.upcast(g),I=I.baseClass;for(;B.baseClass;)Q=B.upcast(Q),B=B.baseClass;return I===B&&g===Q}function UA(A){tA(A.$$.ptrType.registeredClass.name+\\\" instance already deleted\\\")}var SA=!1;function rA(A){}function kA(A){A.count.value-=1,0===A.count.value&&function(A){A.smartPtr?A.smartPtrType.rawDestructor(A.smartPtr):A.ptrType.registeredClass.rawDestructor(A.ptr)}(A)}function JA(A,I,g){if(I===g)return A;if(void 0===g.baseClass)return null;var B=JA(A,I,g.baseClass);return null===B?null:g.downcast(B)}var eA={};function nA(){return Object.keys(dA).length}function HA(){var A=[];for(var I in dA)dA.hasOwnProperty(I)&&A.push(dA[I]);return A}var YA=[];function MA(){for(;YA.length;){var A=YA.pop();A.$$.deleteScheduled=!1,A.delete()}}var LA=void 0;function KA(A){LA=A,YA.length&&LA&&LA(MA)}var dA={};function lA(A,I){return I=function(A,I){for(void 0===I&&tA(\\\"ptr should not be undefined\\\");A.baseClass;)I=A.upcast(I),A=A.baseClass;return I}(A,I),dA[I]}function fA(A,I){return I.ptrType&&I.ptr||aA(\\\"makeClassHandle requires ptr and ptrType\\\"),!!I.smartPtrType!=!!I.smartPtr&&aA(\\\"Both smartPtrType and smartPtr must be specified\\\"),I.count={value:1},pA(Object.create(A,{$$:{value:I}}))}function qA(A){var I=this.getPointee(A);if(!I)return this.destructor(A),null;var g=lA(this.registeredClass,I);if(void 0!==g){if(0===g.$$.count.value)return g.$$.ptr=I,g.$$.smartPtr=A,g.clone();var B=g.clone();return this.destructor(A),B}function Q(){return this.isSmartPointer?fA(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:I,smartPtrType:this,smartPtr:A}):fA(this.registeredClass.instancePrototype,{ptrType:this,ptr:A})}var C,E=this.registeredClass.getActualType(I),i=eA[E];if(!i)return Q.call(this);C=this.isConst?i.constPointerType:i.pointerType;var o=JA(I,this.registeredClass,C.registeredClass);return null===o?Q.call(this):this.isSmartPointer?fA(C.registeredClass.instancePrototype,{ptrType:C,ptr:o,smartPtrType:this,smartPtr:A}):fA(C.registeredClass.instancePrototype,{ptrType:C,ptr:o})}function pA(A){return\\\"undefined\\\"==typeof FinalizationRegistry?(pA=A=>A,A):(SA=new FinalizationRegistry((A=>{kA(A.$$)})),pA=A=>{var I=A.$$;if(I.smartPtr){var g={$$:I};SA.register(A,g,A)}return A},rA=A=>SA.unregister(A),pA(A))}function bA(){if(this.$$.ptr||UA(this),this.$$.preservePointerOnDelete)return this.$$.count.value+=1,this;var A,I=pA(Object.create(Object.getPrototypeOf(this),{$$:{value:(A=this.$$,{count:A.count,deleteScheduled:A.deleteScheduled,preservePointerOnDelete:A.preservePointerOnDelete,ptr:A.ptr,ptrType:A.ptrType,smartPtr:A.smartPtr,smartPtrType:A.smartPtrType})}}));return I.$$.count.value+=1,I.$$.deleteScheduled=!1,I}function uA(){this.$$.ptr||UA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&tA(\\\"Object already scheduled for deletion\\\"),rA(this),kA(this.$$),this.$$.preservePointerOnDelete||(this.$$.smartPtr=void 0,this.$$.ptr=void 0)}function WA(){return!this.$$.ptr}function ZA(){return this.$$.ptr||UA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&tA(\\\"Object already scheduled for deletion\\\"),YA.push(this),1===YA.length&&LA&&LA(MA),this.$$.deleteScheduled=!0,this}function mA(){}function xA(A,I,g){if(void 0===A[I].overloadTable){var B=A[I];A[I]=function(){return A[I].overloadTable.hasOwnProperty(arguments.length)||tA(\\\"Function '\\\"+g+\\\"' called with an invalid number of arguments (\\\"+arguments.length+\\\") - expects one of (\\\"+A[I].overloadTable+\\\")!\\\"),A[I].overloadTable[arguments.length].apply(this,arguments)},A[I].overloadTable=[],A[I].overloadTable[B.argCount]=B}}function TA(A,I,g,B,Q,C,E,i){this.name=A,this.constructor=I,this.instancePrototype=g,this.rawDestructor=B,this.baseClass=Q,this.getActualType=C,this.upcast=E,this.downcast=i,this.pureVirtualFunctions=[]}function XA(A,I,g){for(;I!==g;)I.upcast||tA(\\\"Expected null or instance of \\\"+g.name+\\\", got an instance of \\\"+I.name),A=I.upcast(A),I=I.baseClass;return A}function VA(A,I){if(null===I)return this.isReference&&tA(\\\"null is not a valid \\\"+this.name),0;I.$$||tA('Cannot pass \\\"'+FI(I)+'\\\" as a '+this.name),I.$$.ptr||tA(\\\"Cannot pass deleted object as a pointer of type \\\"+this.name);var g=I.$$.ptrType.registeredClass;return XA(I.$$.ptr,g,this.registeredClass)}function PA(A,I){var g;if(null===I)return this.isReference&&tA(\\\"null is not a valid \\\"+this.name),this.isSmartPointer?(g=this.rawConstructor(),null!==A&&A.push(this.rawDestructor,g),g):0;I.$$||tA('Cannot pass \\\"'+FI(I)+'\\\" as a '+this.name),I.$$.ptr||tA(\\\"Cannot pass deleted object as a pointer of type \\\"+this.name),!this.isConst&&I.$$.ptrType.isConst&&tA(\\\"Cannot convert argument of type \\\"+(I.$$.smartPtrType?I.$$.smartPtrType.name:I.$$.ptrType.name)+\\\" to parameter type \\\"+this.name);var B=I.$$.ptrType.registeredClass;if(g=XA(I.$$.ptr,B,this.registeredClass),this.isSmartPointer)switch(void 0===I.$$.smartPtr&&tA(\\\"Passing raw pointer to smart pointer is illegal\\\"),this.sharingPolicy){case 0:I.$$.smartPtrType===this?g=I.$$.smartPtr:tA(\\\"Cannot convert argument of type \\\"+(I.$$.smartPtrType?I.$$.smartPtrType.name:I.$$.ptrType.name)+\\\" to parameter type \\\"+this.name);break;case 1:g=I.$$.smartPtr;break;case 2:if(I.$$.smartPtrType===this)g=I.$$.smartPtr;else{var Q=I.clone();g=this.rawShare(g,GI.toHandle((function(){Q.delete()}))),null!==A&&A.push(this.rawDestructor,g)}break;default:tA(\\\"Unsupporting sharing policy\\\")}return g}function vA(A,I){if(null===I)return this.isReference&&tA(\\\"null is not a valid \\\"+this.name),0;I.$$||tA('Cannot pass \\\"'+FI(I)+'\\\" as a '+this.name),I.$$.ptr||tA(\\\"Cannot pass deleted object as a pointer of type \\\"+this.name),I.$$.ptrType.isConst&&tA(\\\"Cannot convert argument of type \\\"+I.$$.ptrType.name+\\\" to parameter type \\\"+this.name);var g=I.$$.ptrType.registeredClass;return XA(I.$$.ptr,g,this.registeredClass)}function jA(A){return this.rawGetPointee&&(A=this.rawGetPointee(A)),A}function OA(A){this.rawDestructor&&this.rawDestructor(A)}function zA(A){null!==A&&A.delete()}function $A(A,I,g,B,Q,C,E,i,o,D,w){this.name=A,this.registeredClass=I,this.isReference=g,this.isConst=B,this.isSmartPointer=Q,this.pointeeType=C,this.sharingPolicy=E,this.rawGetPointee=i,this.rawConstructor=o,this.rawShare=D,this.rawDestructor=w,Q||void 0!==I.baseClass?this.toWireType=PA:B?(this.toWireType=VA,this.destructorFunction=null):(this.toWireType=vA,this.destructorFunction=null)}var _A=[];function AI(A){var I=_A[A];return I||(A>=_A.length&&(_A.length=A+1),_A[A]=I=p.get(A)),I}function II(A,I,g){return A.includes(\\\"j\\\")?function(A,I,g){var B=C[\\\"dynCall_\\\"+A];return g&&g.length?B.apply(null,[I].concat(g)):B.call(null,I)}(A,I,g):AI(I).apply(null,g)}function gI(A,I){var g,B,Q,C=(A=yA(A)).includes(\\\"j\\\")?(g=A,B=I,Q=[],function(){return Q.length=0,Object.assign(Q,arguments),II(g,B,Q)}):AI(I);return\\\"function\\\"!=typeof C&&tA(\\\"unknown function pointer with signature \\\"+A+\\\": \\\"+I),C}var BI=void 0;function QI(A){var I=pI(A),g=yA(I);return qI(I),g}function CI(A,I){var g=[],B={};throw I.forEach((function A(I){B[I]||QA[I]||(CA[I]?CA[I].forEach(A):(g.push(I),B[I]=!0))})),new BI(A+\\\": \\\"+g.map(QI).join([\\\", \\\"]))}function EI(A,I){for(var g=[],B=0;B<A;B++)g.push(H[I+4*B>>2]);return g}function iI(A,I,g,B,Q){var C=I.length;C<2&&tA(\\\"argTypes array size mismatch! Must at least get return value and 'this' types!\\\");for(var E=null!==I[1]&&null!==g,i=!1,o=1;o<I.length;++o)if(null!==I[o]&&void 0===I[o].destructorFunction){i=!0;break}var D=\\\"void\\\"!==I[0].name,w=\\\"\\\",s=\\\"\\\";for(o=0;o<C-2;++o)w+=(0!==o?\\\", \\\":\\\"\\\")+\\\"arg\\\"+o,s+=(0!==o?\\\", \\\":\\\"\\\")+\\\"arg\\\"+o+\\\"Wired\\\";var a=\\\"return function \\\"+oA(A)+\\\"(\\\"+w+\\\") {\\\\nif (arguments.length !== \\\"+(C-2)+\\\") {\\\\nthrowBindingError('function \\\"+A+\\\" called with ' + arguments.length + ' arguments, expected \\\"+(C-2)+\\\" args!');\\\\n}\\\\n\\\";i&&(a+=\\\"var destructors = [];\\\\n\\\");var G=i?\\\"destructors\\\":\\\"null\\\",F=[\\\"throwBindingError\\\",\\\"invoker\\\",\\\"fn\\\",\\\"runDestructors\\\",\\\"retType\\\",\\\"classParam\\\"],h=[tA,B,Q,IA,I[0],I[1]];for(E&&(a+=\\\"var thisWired = classParam.toWireType(\\\"+G+\\\", this);\\\\n\\\"),o=0;o<C-2;++o)a+=\\\"var arg\\\"+o+\\\"Wired = argType\\\"+o+\\\".toWireType(\\\"+G+\\\", arg\\\"+o+\\\"); // \\\"+I[o+2].name+\\\"\\\\n\\\",F.push(\\\"argType\\\"+o),h.push(I[o+2]);if(E&&(s=\\\"thisWired\\\"+(s.length>0?\\\", \\\":\\\"\\\")+s),a+=(D?\\\"var rv = \\\":\\\"\\\")+\\\"invoker(fn\\\"+(s.length>0?\\\", \\\":\\\"\\\")+s+\\\");\\\\n\\\",i)a+=\\\"runDestructors(destructors);\\\\n\\\";else for(o=E?1:2;o<I.length;++o){var y=1===o?\\\"thisWired\\\":\\\"arg\\\"+(o-2)+\\\"Wired\\\";null!==I[o].destructorFunction&&(a+=y+\\\"_dtor(\\\"+y+\\\"); // \\\"+I[o].name+\\\"\\\\n\\\",F.push(y+\\\"_dtor\\\"),h.push(I[o].destructorFunction))}return D&&(a+=\\\"var ret = retType.fromWireType(rv);\\\\nreturn ret;\\\\n\\\"),a+=\\\"}\\\\n\\\",F.push(a),function(A,I){if(!(A instanceof Function))throw new TypeError(\\\"new_ called with constructor type \\\"+typeof A+\\\" which is not a function\\\");var g=DA(A.name||\\\"unknownFunctionName\\\",(function(){}));g.prototype=A.prototype;var B=new g,Q=A.apply(B,I);return Q instanceof Object?Q:B}(Function,F).apply(null,h)}var oI=[],DI=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function wI(A){A>4&&0==--DI[A].refcount&&(DI[A]=void 0,oI.push(A))}function sI(){for(var A=0,I=5;I<DI.length;++I)void 0!==DI[I]&&++A;return A}function aI(){for(var A=5;A<DI.length;++A)if(void 0!==DI[A])return DI[A];return null}var GI={toValue:A=>(A||tA(\\\"Cannot use deleted val. handle = \\\"+A),DI[A].value),toHandle:A=>{switch(A){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var I=oI.length?oI.pop():DI.length;return DI[I]={refcount:1,value:A},I}}};function FI(A){if(null===A)return\\\"null\\\";var I=typeof A;return\\\"object\\\"===I||\\\"array\\\"===I||\\\"function\\\"===I?A.toString():\\\"\\\"+A}function hI(A,I){switch(I){case 2:return function(A){return this.fromWireType(Y[A>>2])};case 3:return function(A){return this.fromWireType(M[A>>3])};default:throw new TypeError(\\\"Unknown float type: \\\"+A)}}function yI(A,I,g){switch(I){case 0:return g?function(A){return r[A]}:function(A){return k[A]};case 1:return g?function(A){return J[A>>1]}:function(A){return e[A>>1]};case 2:return g?function(A){return n[A>>2]}:function(A){return H[A>>2]};default:throw new TypeError(\\\"Unknown integer type: \\\"+A)}}var cI=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf-16le\\\"):void 0;function tI(A,I){for(var g=A,B=g>>1,Q=B+I/2;!(B>=Q)&&e[B];)++B;if((g=B<<1)-A>32&&cI)return cI.decode(k.subarray(A,g));for(var C=\\\"\\\",E=0;!(E>=I/2);++E){var i=J[A+2*E>>1];if(0==i)break;C+=String.fromCharCode(i)}return C}function RI(A,I,g){if(void 0===g&&(g=2147483647),g<2)return 0;for(var B=I,Q=(g-=2)<2*A.length?g/2:A.length,C=0;C<Q;++C){var E=A.charCodeAt(C);J[I>>1]=E,I+=2}return J[I>>1]=0,I-B}function NI(A){return 2*A.length}function UI(A,I){for(var g=0,B=\\\"\\\";!(g>=I/4);){var Q=n[A+4*g>>2];if(0==Q)break;if(++g,Q>=65536){var C=Q-65536;B+=String.fromCharCode(55296|C>>10,56320|1023&C)}else B+=String.fromCharCode(Q)}return B}function SI(A,I,g){if(void 0===g&&(g=2147483647),g<4)return 0;for(var B=I,Q=B+g-4,C=0;C<A.length;++C){var E=A.charCodeAt(C);if(E>=55296&&E<=57343&&(E=65536+((1023&E)<<10)|1023&A.charCodeAt(++C)),n[I>>2]=E,(I+=4)+4>Q)break}return n[I>>2]=0,I-B}function rI(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B>=55296&&B<=57343&&++g,I+=4}return I}var kI={};function JI(){return\\\"object\\\"==typeof globalThis?globalThis:Function(\\\"return this\\\")()}function eI(A,I){var g=QA[A];return void 0===g&&tA(I+\\\" has unknown type \\\"+QI(A)),g}var nI={};function HI(A){try{return U.grow(A-S.byteLength+65535>>>16),q(U.buffer),1}catch(A){}}var YI={};function MI(){if(!MI.strings){var A={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:s||\\\"./this.program\\\"};for(var I in YI)void 0===YI[I]?delete A[I]:A[I]=YI[I];var g=[];for(var I in A)g.push(I+\\\"=\\\"+A[I]);MI.strings=g}return MI.strings}var LI=[null,[],[]];function KI(A,I){var g=LI[A];0===I||10===I?((1===A?R:N)(d(g,0)),g.length=0):g.push(I)}sA=C.InternalError=wA(Error,\\\"InternalError\\\"),function(){for(var A=new Array(256),I=0;I<256;++I)A[I]=String.fromCharCode(I);hA=A}(),cA=C.BindingError=wA(Error,\\\"BindingError\\\"),mA.prototype.isAliasOf=NA,mA.prototype.clone=bA,mA.prototype.delete=uA,mA.prototype.isDeleted=WA,mA.prototype.deleteLater=ZA,C.getInheritedInstanceCount=nA,C.getLiveInheritedInstances=HA,C.flushPendingDeletes=MA,C.setDelayFunction=KA,$A.prototype.getPointee=jA,$A.prototype.destructor=OA,$A.prototype.argPackAdvance=8,$A.prototype.readValueFromPointer=gA,$A.prototype.deleteObject=zA,$A.prototype.fromWireType=qA,BI=C.UnboundTypeError=wA(Error,\\\"UnboundTypeError\\\"),C.count_emval_handles=sI,C.get_first_emval=aI;var dI,lI={D:function(A,I,g){throw new _(A).init(I,g),A},e:function(A){var I=AA[A];delete AA[A];var g=I.rawConstructor,B=I.rawDestructor,Q=I.fields;GA([A],Q.map((A=>A.getterReturnType)).concat(Q.map((A=>A.setterArgumentType))),(A=>{var C={};return Q.forEach(((I,g)=>{var B=I.fieldName,E=A[g],i=I.getter,o=I.getterContext,D=A[g+Q.length],w=I.setter,s=I.setterContext;C[B]={read:A=>E.fromWireType(i(o,A)),write:(A,I)=>{var g=[];w(s,A,D.toWireType(g,I)),IA(g)}}})),[{name:I.name,fromWireType:function(A){var I={};for(var g in C)I[g]=C[g].read(A);return B(A),I},toWireType:function(A,I){for(var Q in C)if(!(Q in I))throw new TypeError('Missing field:  \\\"'+Q+'\\\"');var E=g();for(Q in C)C[Q].write(E,I[Q]);return null!==A&&A.push(B,E),E},argPackAdvance:8,readValueFromPointer:gA,destructorFunction:B}]}))},t:function(A,I,g,B,Q){},B:function(A,I,g,B,Q){var C=FA(g);RA(A,{name:I=yA(I),fromWireType:function(A){return!!A},toWireType:function(A,I){return I?B:Q},argPackAdvance:8,readValueFromPointer:function(A){var B;if(1===g)B=r;else if(2===g)B=J;else{if(4!==g)throw new TypeError(\\\"Unknown boolean type size: \\\"+I);B=n}return this.fromWireType(B[A>>C])},destructorFunction:null})},r:function(A,I,g,B,Q,E,i,o,D,w,s,a,G){s=yA(s),E=gI(Q,E),o&&(o=gI(i,o)),w&&(w=gI(D,w)),G=gI(a,G);var F=oA(s);!function(A,I,g){C.hasOwnProperty(A)?((void 0===g||void 0!==C[A].overloadTable&&void 0!==C[A].overloadTable[g])&&tA(\\\"Cannot register public name '\\\"+A+\\\"' twice\\\"),xA(C,A,A),C.hasOwnProperty(g)&&tA(\\\"Cannot register multiple overloads of a function with the same number of arguments (\\\"+g+\\\")!\\\"),C[A].overloadTable[g]=I):(C[A]=I,void 0!==g&&(C[A].numArguments=g))}(F,(function(){CI(\\\"Cannot construct \\\"+s+\\\" due to unbound types\\\",[B])})),GA([A,I,g],B?[B]:[],(function(I){var g,Q;I=I[0],Q=B?(g=I.registeredClass).instancePrototype:mA.prototype;var i=DA(F,(function(){if(Object.getPrototypeOf(this)!==D)throw new cA(\\\"Use 'new' to construct \\\"+s);if(void 0===a.constructor_body)throw new cA(s+\\\" has no accessible constructor\\\");var A=a.constructor_body[arguments.length];if(void 0===A)throw new cA(\\\"Tried to invoke ctor of \\\"+s+\\\" with invalid number of parameters (\\\"+arguments.length+\\\") - expected (\\\"+Object.keys(a.constructor_body).toString()+\\\") parameters instead!\\\");return A.apply(this,arguments)})),D=Object.create(Q,{constructor:{value:i}});i.prototype=D;var a=new TA(s,i,D,G,g,E,o,w),h=new $A(s,a,!0,!1,!1),y=new $A(s+\\\"*\\\",a,!1,!1,!1),c=new $A(s+\\\" const*\\\",a,!1,!0,!1);return eA[A]={pointerType:y,constPointerType:c},function(A,I,g){C.hasOwnProperty(A)||aA(\\\"Replacing nonexistant public symbol\\\"),void 0!==C[A].overloadTable&&void 0!==g?C[A].overloadTable[g]=I:(C[A]=I,C[A].argCount=g)}(F,i),[h,y,c]}))},q:function(A,I,g,B,Q,C){var E;I>0||T(E);var i=EI(I,g);Q=gI(B,Q),GA([],[A],(function(A){var g=\\\"constructor \\\"+(A=A[0]).name;if(void 0===A.registeredClass.constructor_body&&(A.registeredClass.constructor_body=[]),void 0!==A.registeredClass.constructor_body[I-1])throw new cA(\\\"Cannot register multiple constructors with identical number of parameters (\\\"+(I-1)+\\\") for class '\\\"+A.name+\\\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\\\");return A.registeredClass.constructor_body[I-1]=()=>{CI(\\\"Cannot construct \\\"+A.name+\\\" due to unbound types\\\",i)},GA([],i,(function(B){return B.splice(1,0,null),A.registeredClass.constructor_body[I-1]=iI(g,B,null,Q,C),[]})),[]}))},b:function(A,I,g,B,Q,C,E,i){var o=EI(g,B);I=yA(I),C=gI(Q,C),GA([],[A],(function(A){var B=(A=A[0]).name+\\\".\\\"+I;function Q(){CI(\\\"Cannot call \\\"+B+\\\" due to unbound types\\\",o)}I.startsWith(\\\"@@\\\")&&(I=Symbol[I.substring(2)]),i&&A.registeredClass.pureVirtualFunctions.push(I);var D=A.registeredClass.instancePrototype,w=D[I];return void 0===w||void 0===w.overloadTable&&w.className!==A.name&&w.argCount===g-2?(Q.argCount=g-2,Q.className=A.name,D[I]=Q):(xA(D,I,B),D[I].overloadTable[g-2]=Q),GA([],o,(function(Q){var i=iI(B,Q,A,C,E);return void 0===D[I].overloadTable?(i.argCount=g-2,D[I]=i):D[I].overloadTable[g-2]=i,[]})),[]}))},A:function(A,I){RA(A,{name:I=yA(I),fromWireType:function(A){var I=GI.toValue(A);return wI(A),I},toWireType:function(A,I){return GI.toHandle(I)},argPackAdvance:8,readValueFromPointer:gA,destructorFunction:null})},l:function(A,I,g){var B=FA(g);RA(A,{name:I=yA(I),fromWireType:function(A){return A},toWireType:function(A,I){return I},argPackAdvance:8,readValueFromPointer:hI(I,B),destructorFunction:null})},d:function(A,I,g,B,Q){I=yA(I),-1===Q&&(Q=4294967295);var C=FA(g),E=A=>A;if(0===B){var i=32-8*g;E=A=>A<<i>>>i}var o=I.includes(\\\"unsigned\\\");RA(A,{name:I,fromWireType:E,toWireType:o?function(A,I){return this.name,I>>>0}:function(A,I){return this.name,I},argPackAdvance:8,readValueFromPointer:yI(I,C,0!==B),destructorFunction:null})},a:function(A,I,g){var B=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][I];function Q(A){var I=H,g=I[A>>=2],Q=I[A+1];return new B(S,Q,g)}RA(A,{name:g=yA(g),fromWireType:Q,argPackAdvance:8,readValueFromPointer:Q},{ignoreDuplicateRegistrations:!0})},k:function(A,I){var g=\\\"std::string\\\"===(I=yA(I));RA(A,{name:I,fromWireType:function(A){var I,B=H[A>>2],Q=A+4;if(g)for(var C=Q,E=0;E<=B;++E){var i=Q+E;if(E==B||0==k[i]){var o=l(C,i-C);void 0===I?I=o:(I+=String.fromCharCode(0),I+=o),C=i+1}}else{var D=new Array(B);for(E=0;E<B;++E)D[E]=String.fromCharCode(k[Q+E]);I=D.join(\\\"\\\")}return qI(A),I},toWireType:function(A,I){var B;I instanceof ArrayBuffer&&(I=new Uint8Array(I));var Q=\\\"string\\\"==typeof I;Q||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array||tA(\\\"Cannot pass non-string to std::string\\\"),B=g&&Q?function(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B<=127?I++:B<=2047?I+=2:B>=55296&&B<=57343?(I+=4,++g):I+=3}return I}(I):I.length;var C=fI(4+B+1),E=C+4;if(H[C>>2]=B,g&&Q)f(I,E,B+1);else if(Q)for(var i=0;i<B;++i){var o=I.charCodeAt(i);o>255&&(qI(E),tA(\\\"String has UTF-16 code units that do not fit in 8 bits\\\")),k[E+i]=o}else for(i=0;i<B;++i)k[E+i]=I[i];return null!==A&&A.push(qI,C),C},argPackAdvance:8,readValueFromPointer:gA,destructorFunction:function(A){qI(A)}})},f:function(A,I,g){var B,Q,C,E,i;g=yA(g),2===I?(B=tI,Q=RI,E=NI,C=()=>e,i=1):4===I&&(B=UI,Q=SI,E=rI,C=()=>H,i=2),RA(A,{name:g,fromWireType:function(A){for(var g,Q=H[A>>2],E=C(),o=A+4,D=0;D<=Q;++D){var w=A+4+D*I;if(D==Q||0==E[w>>i]){var s=B(o,w-o);void 0===g?g=s:(g+=String.fromCharCode(0),g+=s),o=w+I}}return qI(A),g},toWireType:function(A,B){\\\"string\\\"!=typeof B&&tA(\\\"Cannot pass non-string to C++ string type \\\"+g);var C=E(B),o=fI(4+C+I);return H[o>>2]=C>>i,Q(B,o+4,C+I),null!==A&&A.push(qI,o),o},argPackAdvance:8,readValueFromPointer:gA,destructorFunction:function(A){qI(A)}})},g:function(A,I,g,B,Q,C){AA[A]={name:yA(I),rawConstructor:gI(g,B),rawDestructor:gI(Q,C),fields:[]}},c:function(A,I,g,B,Q,C,E,i,o,D){AA[A].fields.push({fieldName:yA(I),getterReturnType:g,getter:gI(B,Q),getterContext:C,setterArgumentType:E,setter:gI(i,o),setterContext:D})},C:function(A,I){RA(A,{isVoid:!0,name:I=yA(I),argPackAdvance:0,fromWireType:function(){},toWireType:function(A,I){}})},h:wI,o:function(A){return 0===A?GI.toHandle(JI()):(A=void 0===(g=kI[I=A])?yA(I):g,GI.toHandle(JI()[A]));var I,g},m:function(A){A>4&&(DI[A].refcount+=1)},n:function(A,I,g,B){A=GI.toValue(A);var Q=nI[I];return Q||(Q=function(A){for(var I=\\\"\\\",g=0;g<A;++g)I+=(0!==g?\\\", \\\":\\\"\\\")+\\\"arg\\\"+g;var B=\\\"return function emval_allocator_\\\"+A+\\\"(constructor, argTypes, args) {\\\\n  var HEAPU32 = getMemory();\\\\n\\\";for(g=0;g<A;++g)B+=\\\"var argType\\\"+g+\\\" = requireRegisteredType(HEAPU32[((argTypes)>>2)], 'parameter \\\"+g+\\\"');\\\\nvar arg\\\"+g+\\\" = argType\\\"+g+\\\".readValueFromPointer(args);\\\\nargs += argType\\\"+g+\\\"['argPackAdvance'];\\\\nargTypes += 4;\\\\n\\\";return B+=\\\"var obj = new constructor(\\\"+I+\\\");\\\\nreturn valueToHandle(obj);\\\\n}\\\\n\\\",new Function(\\\"requireRegisteredType\\\",\\\"Module\\\",\\\"valueToHandle\\\",\\\"getMemory\\\",B)(eI,C,GI.toHandle,(()=>H))}(I),nI[I]=Q),Q(A,g,B)},p:function(A,I){var g=(A=eI(A,\\\"_emval_take_value\\\")).readValueFromPointer(I);return GI.toHandle(g)},i:function(){T(\\\"\\\")},v:function(){return 2147483648},z:function(A,I,g){k.copyWithin(A,I,I+g)},u:function(A){var I,g,B=k.length,Q=2147483648;if((A>>>=0)>Q)return!1;for(var C=1;C<=4;C*=2){var E=B*(1+.2/C);if(E=Math.min(E,A+100663296),HI(Math.min(Q,(I=Math.max(A,E))+((g=65536)-I%g)%g)))return!0}return!1},w:function(A,I){var g=0;return MI().forEach((function(B,Q){var C=I+g;H[A+4*Q>>2]=C,function(A,I,g){for(var B=0;B<A.length;++B)r[0|I++]=A.charCodeAt(B);g||(r[0|I]=0)}(B,C),g+=B.length+1})),0},x:function(A,I){var g=MI();H[A>>2]=g.length;var B=0;return g.forEach((function(A){B+=A.length+1})),H[I>>2]=B,0},y:function(A){return 52},s:function(A,I,g,B,Q){return 70},j:function(A,I,g,B){for(var Q=0,C=0;C<g;C++){var E=H[I>>2],i=H[I+4>>2];I+=8;for(var o=0;o<i;o++)KI(A,k[E+o]);Q+=i}return H[B>>2]=Q,0}},fI=(function(){var A={a:lI};function I(A,I){var g,B=A.exports;C.asm=B,q((U=C.asm.E).buffer),p=C.asm.G,g=C.asm.F,u.unshift(g),function(A){if(Z--,C.monitorRunDependencies&&C.monitorRunDependencies(Z),0==Z&&(null!==m&&(clearInterval(m),m=null),x)){var I=x;x=null,I()}}()}function g(A){I(A.instance)}function B(I){return function(){if(!t&&(a||G)){if(\\\"function\\\"==typeof fetch&&!j(X))return fetch(X,{credentials:\\\"same-origin\\\"}).then((function(A){if(!A.ok)throw\\\"failed to load wasm binary file at '\\\"+X+\\\"'\\\";return A.arrayBuffer()})).catch((function(){return O(X)}));if(i)return new Promise((function(A,I){i(X,(function(I){A(new Uint8Array(I))}),I)}))}return Promise.resolve().then((function(){return O(X)}))}().then((function(I){return WebAssembly.instantiate(I,A)})).then((function(A){return A})).then(I,(function(A){N(\\\"failed to asynchronously prepare wasm: \\\"+A),T(A)}))}if(Z++,C.monitorRunDependencies&&C.monitorRunDependencies(Z),C.instantiateWasm)try{return C.instantiateWasm(A,I)}catch(A){N(\\\"Module.instantiateWasm callback failed with error: \\\"+A),Q(A)}(t||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||v(X)||j(X)||F||\\\"function\\\"!=typeof fetch?B(g):fetch(X,{credentials:\\\"same-origin\\\"}).then((function(I){return WebAssembly.instantiateStreaming(I,A).then(g,(function(A){return N(\\\"wasm streaming compile failed: \\\"+A),N(\\\"falling back to ArrayBuffer instantiation\\\"),B(g)}))}))).catch(Q)}(),C.___wasm_call_ctors=function(){return(C.___wasm_call_ctors=C.asm.F).apply(null,arguments)},C._malloc=function(){return(fI=C._malloc=C.asm.H).apply(null,arguments)}),qI=C._free=function(){return(qI=C._free=C.asm.I).apply(null,arguments)},pI=C.___getTypeName=function(){return(pI=C.___getTypeName=C.asm.J).apply(null,arguments)},bI=(C.__embind_initialize_bindings=function(){return(C.__embind_initialize_bindings=C.asm.K).apply(null,arguments)},C.stackSave=function(){return(bI=C.stackSave=C.asm.L).apply(null,arguments)}),uI=C.stackRestore=function(){return(uI=C.stackRestore=C.asm.M).apply(null,arguments)},WI=C.stackAlloc=function(){return(WI=C.stackAlloc=C.asm.N).apply(null,arguments)},ZI=C.___cxa_is_pointer_type=function(){return(ZI=C.___cxa_is_pointer_type=C.asm.O).apply(null,arguments)};function mI(A){function g(){dI||(dI=!0,C.calledRun=!0,L||($(u),I(C),C.onRuntimeInitialized&&C.onRuntimeInitialized(),function(){if(C.postRun)for(\\\"function\\\"==typeof C.postRun&&(C.postRun=[C.postRun]);C.postRun.length;)A=C.postRun.shift(),W.unshift(A);var A;$(W)}()))}A=A||w,Z>0||(function(){if(C.preRun)for(\\\"function\\\"==typeof C.preRun&&(C.preRun=[C.preRun]);C.preRun.length;)A=C.preRun.shift(),b.unshift(A);var A;$(b)}(),Z>0||(C.setStatus?(C.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){C.setStatus(\\\"\\\")}),1),g()}),1)):g()))}if(C.dynCall_iji=function(){return(C.dynCall_iji=C.asm.P).apply(null,arguments)},C.dynCall_jji=function(){return(C.dynCall_jji=C.asm.Q).apply(null,arguments)},C.dynCall_iiji=function(){return(C.dynCall_iiji=C.asm.R).apply(null,arguments)},C.dynCall_jiji=function(){return(C.dynCall_jiji=C.asm.S).apply(null,arguments)},C.ccall=function(A,I,g,B,Q){var E={string:A=>{var I=0;if(null!=A&&0!==A){var g=1+(A.length<<2);f(A,I=WI(g),g)}return I},array:A=>{var I=WI(A.length);return function(A,I){r.set(A,I)}(A,I),I}},i=function(A){return C[\\\"_\\\"+A]}(A),o=[],D=0;if(B)for(var w=0;w<B.length;w++){var s=E[g[w]];s?(0===D&&(D=bI()),o[w]=s(B[w])):o[w]=B[w]}var a=i.apply(null,o);return a=function(A){return 0!==D&&uI(D),function(A){return\\\"string\\\"===I?l(A):\\\"boolean\\\"===I?Boolean(A):A}(A)}(a)},x=function A(){dI||mI(),dI||(x=A)},C.preInit)for(\\\"function\\\"==typeof C.preInit&&(C.preInit=[C.preInit]);C.preInit.length>0;)C.preInit.pop()();return mI(),A.ready});A.exports=Q},430:(A,I,g)=>{var B,Q=(B=(B=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(A){var I,Q;(A=void 0!==(A=A||{})?A:{}).ready=new Promise((function(A,g){I=A,Q=g}));var C,E,i,o=Object.assign({},A),D=[],w=\\\"object\\\"==typeof window,s=\\\"function\\\"==typeof importScripts,a=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,G=\\\"\\\";if(a){var F=g(280),h=g(103);G=s?h.dirname(G)+\\\"/\\\":\\\"//\\\",C=(A,I)=>(A=P(A)?new URL(A):h.normalize(A),F.readFileSync(A,I?void 0:\\\"utf8\\\")),i=A=>{var I=C(A,!0);return I.buffer||(I=new Uint8Array(I)),I},E=(A,I,g)=>{A=P(A)?new URL(A):h.normalize(A),F.readFile(A,(function(A,B){A?g(A):I(B.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\"),D=process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(A){if(!(A instanceof j))throw A})),process.on(\\\"unhandledRejection\\\",(function(A){throw A})),A.inspect=function(){return\\\"[Emscripten Module object]\\\"}}else(w||s)&&(s?G=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(G=document.currentScript.src),B&&(G=B),G=0!==G.indexOf(\\\"blob:\\\")?G.substr(0,G.replace(/[?#].*/,\\\"\\\").lastIndexOf(\\\"/\\\")+1):\\\"\\\",C=A=>{var I=new XMLHttpRequest;return I.open(\\\"GET\\\",A,!1),I.send(null),I.responseText},s&&(i=A=>{var I=new XMLHttpRequest;return I.open(\\\"GET\\\",A,!1),I.responseType=\\\"arraybuffer\\\",I.send(null),new Uint8Array(I.response)}),E=(A,I,g)=>{var B=new XMLHttpRequest;B.open(\\\"GET\\\",A,!0),B.responseType=\\\"arraybuffer\\\",B.onload=()=>{200==B.status||0==B.status&&B.response?I(B.response):g()},B.onerror=g,B.send(null)});var y,c=A.print||console.log.bind(console),t=A.printErr||console.warn.bind(console);Object.assign(A,o),o=null,A.arguments&&(D=A.arguments),A.thisProgram&&A.thisProgram,A.quit&&A.quit,A.wasmBinary&&(y=A.wasmBinary);var R;A.noExitRuntime;\\\"object\\\"!=typeof WebAssembly&&m(\\\"no native wasm support detected\\\");var N,U,S,r,k,J,e,n,H,Y=!1,M=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function L(A,I,g){for(var B=I+g,Q=I;A[Q]&&!(Q>=B);)++Q;if(Q-I>16&&A.buffer&&M)return M.decode(A.subarray(I,Q));for(var C=\\\"\\\";I<Q;){var E=A[I++];if(128&E){var i=63&A[I++];if(192!=(224&E)){var o=63&A[I++];if((E=224==(240&E)?(15&E)<<12|i<<6|o:(7&E)<<18|i<<12|o<<6|63&A[I++])<65536)C+=String.fromCharCode(E);else{var D=E-65536;C+=String.fromCharCode(55296|D>>10,56320|1023&D)}}else C+=String.fromCharCode((31&E)<<6|i)}else C+=String.fromCharCode(E)}return C}function K(A,I){return A?L(S,A,I):\\\"\\\"}function d(A,I,g){return function(A,I,g,B){if(!(B>0))return 0;for(var Q=g,C=g+B-1,E=0;E<A.length;++E){var i=A.charCodeAt(E);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&A.charCodeAt(++E)),i<=127){if(g>=C)break;I[g++]=i}else if(i<=2047){if(g+1>=C)break;I[g++]=192|i>>6,I[g++]=128|63&i}else if(i<=65535){if(g+2>=C)break;I[g++]=224|i>>12,I[g++]=128|i>>6&63,I[g++]=128|63&i}else{if(g+3>=C)break;I[g++]=240|i>>18,I[g++]=128|i>>12&63,I[g++]=128|i>>6&63,I[g++]=128|63&i}}return I[g]=0,g-Q}(A,S,I,g)}function l(I){N=I,A.HEAP8=U=new Int8Array(I),A.HEAP16=r=new Int16Array(I),A.HEAP32=J=new Int32Array(I),A.HEAPU8=S=new Uint8Array(I),A.HEAPU16=k=new Uint16Array(I),A.HEAPU32=e=new Uint32Array(I),A.HEAPF32=n=new Float32Array(I),A.HEAPF64=H=new Float64Array(I)}A.INITIAL_MEMORY;var f,q=[],p=[],b=[],u=0,W=null,Z=null;function m(I){A.onAbort&&A.onAbort(I),t(I=\\\"Aborted(\\\"+I+\\\")\\\"),Y=!0,I+=\\\". Build with -sASSERTIONS for more info.\\\";var g=new WebAssembly.RuntimeError(I);throw Q(g),g}var x,T,X=\\\"data:application/octet-stream;base64,\\\";function V(A){return A.startsWith(X)}function P(A){return A.startsWith(\\\"file://\\\")}function v(A){try{if(A==x&&y)return new Uint8Array(y);if(i)return i(A);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(A){m(A)}}function j(A){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+A+\\\")\\\",this.status=A}function O(I){for(;I.length>0;)I.shift()(A)}V(x=\\\"openjphjs.wasm\\\")||(T=x,x=A.locateFile?A.locateFile(T,G):G+T);var z=[],$=0,_=[];function AA(A){var I=_[A];return I||(A>=_.length&&(_.length=A+1),_[A]=I=f.get(A)),I}function IA(A){this.excPtr=A,this.ptr=A-24,this.set_type=function(A){e[this.ptr+4>>2]=A},this.get_type=function(){return e[this.ptr+4>>2]},this.set_destructor=function(A){e[this.ptr+8>>2]=A},this.get_destructor=function(){return e[this.ptr+8>>2]},this.set_refcount=function(A){J[this.ptr>>2]=A},this.set_caught=function(A){A=A?1:0,U[this.ptr+12|0]=A},this.get_caught=function(){return 0!=U[this.ptr+12|0]},this.set_rethrown=function(A){A=A?1:0,U[this.ptr+13|0]=A},this.get_rethrown=function(){return 0!=U[this.ptr+13|0]},this.init=function(A,I){this.set_adjusted_ptr(0),this.set_type(A),this.set_destructor(I),this.set_refcount(0),this.set_caught(!1),this.set_rethrown(!1)},this.add_ref=function(){var A=J[this.ptr>>2];J[this.ptr>>2]=A+1},this.release_ref=function(){var A=J[this.ptr>>2];return J[this.ptr>>2]=A-1,1===A},this.set_adjusted_ptr=function(A){e[this.ptr+16>>2]=A},this.get_adjusted_ptr=function(){return e[this.ptr+16>>2]},this.get_exception_ptr=function(){if(WI(this.get_type()))return e[this.excPtr>>2];var A=this.get_adjusted_ptr();return 0!==A?A:this.excPtr}}var gA={};function BA(A){for(;A.length;){var I=A.pop();A.pop()(I)}}function QA(A){return this.fromWireType(J[A>>2])}var CA={},EA={},iA={},oA=48,DA=57;function wA(A){if(void 0===A)return\\\"_unknown\\\";var I=(A=A.replace(/[^a-zA-Z0-9_]/g,\\\"$\\\")).charCodeAt(0);return I>=oA&&I<=DA?\\\"_\\\"+A:A}function sA(A,I){return A=wA(A),new Function(\\\"body\\\",\\\"return function \\\"+A+'() {\\\\n    \\\"use strict\\\";    return body.apply(this, arguments);\\\\n};\\\\n')(I)}function aA(A,I){var g=sA(I,(function(A){this.name=I,this.message=A;var g=new Error(A).stack;void 0!==g&&(this.stack=this.toString()+\\\"\\\\n\\\"+g.replace(/^Error(:[^\\\\n]*)?\\\\n/,\\\"\\\"))}));return g.prototype=Object.create(A.prototype),g.prototype.constructor=g,g.prototype.toString=function(){return void 0===this.message?this.name:this.name+\\\": \\\"+this.message},g}var GA=void 0;function FA(A){throw new GA(A)}function hA(A,I,g){function B(I){var B=g(I);B.length!==A.length&&FA(\\\"Mismatched type converter count\\\");for(var Q=0;Q<A.length;++Q)UA(A[Q],B[Q])}A.forEach((function(A){iA[A]=I}));var Q=new Array(I.length),C=[],E=0;I.forEach(((A,I)=>{EA.hasOwnProperty(A)?Q[I]=EA[A]:(C.push(A),CA.hasOwnProperty(A)||(CA[A]=[]),CA[A].push((()=>{Q[I]=EA[A],++E===C.length&&B(Q)})))})),0===C.length&&B(Q)}function yA(A){switch(A){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\\\"Unknown type size: \\\"+A)}}var cA=void 0;function tA(A){for(var I=\\\"\\\",g=A;S[g];)I+=cA[S[g++]];return I}var RA=void 0;function NA(A){throw new RA(A)}function UA(A,I,g={}){if(!(\\\"argPackAdvance\\\"in I))throw new TypeError(\\\"registerType registeredInstance requires argPackAdvance\\\");var B=I.name;if(A||NA('type \\\"'+B+'\\\" must have a positive integer typeid pointer'),EA.hasOwnProperty(A)){if(g.ignoreDuplicateRegistrations)return;NA(\\\"Cannot register type '\\\"+B+\\\"' twice\\\")}if(EA[A]=I,delete iA[A],CA.hasOwnProperty(A)){var Q=CA[A];delete CA[A],Q.forEach((A=>A()))}}function SA(A){if(!(this instanceof TA))return!1;if(!(A instanceof TA))return!1;for(var I=this.$$.ptrType.registeredClass,g=this.$$.ptr,B=A.$$.ptrType.registeredClass,Q=A.$$.ptr;I.baseClass;)g=I.upcast(g),I=I.baseClass;for(;B.baseClass;)Q=B.upcast(Q),B=B.baseClass;return I===B&&g===Q}function rA(A){NA(A.$$.ptrType.registeredClass.name+\\\" instance already deleted\\\")}var kA=!1;function JA(A){}function eA(A){A.count.value-=1,0===A.count.value&&function(A){A.smartPtr?A.smartPtrType.rawDestructor(A.smartPtr):A.ptrType.registeredClass.rawDestructor(A.ptr)}(A)}function nA(A,I,g){if(I===g)return A;if(void 0===g.baseClass)return null;var B=nA(A,I,g.baseClass);return null===B?null:g.downcast(B)}var HA={};function YA(){return Object.keys(fA).length}function MA(){var A=[];for(var I in fA)fA.hasOwnProperty(I)&&A.push(fA[I]);return A}var LA=[];function KA(){for(;LA.length;){var A=LA.pop();A.$$.deleteScheduled=!1,A.delete()}}var dA=void 0;function lA(A){dA=A,LA.length&&dA&&dA(KA)}var fA={};function qA(A,I){return I=function(A,I){for(void 0===I&&NA(\\\"ptr should not be undefined\\\");A.baseClass;)I=A.upcast(I),A=A.baseClass;return I}(A,I),fA[I]}function pA(A,I){return I.ptrType&&I.ptr||FA(\\\"makeClassHandle requires ptr and ptrType\\\"),!!I.smartPtrType!=!!I.smartPtr&&FA(\\\"Both smartPtrType and smartPtr must be specified\\\"),I.count={value:1},uA(Object.create(A,{$$:{value:I}}))}function bA(A){var I=this.getPointee(A);if(!I)return this.destructor(A),null;var g=qA(this.registeredClass,I);if(void 0!==g){if(0===g.$$.count.value)return g.$$.ptr=I,g.$$.smartPtr=A,g.clone();var B=g.clone();return this.destructor(A),B}function Q(){return this.isSmartPointer?pA(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:I,smartPtrType:this,smartPtr:A}):pA(this.registeredClass.instancePrototype,{ptrType:this,ptr:A})}var C,E=this.registeredClass.getActualType(I),i=HA[E];if(!i)return Q.call(this);C=this.isConst?i.constPointerType:i.pointerType;var o=nA(I,this.registeredClass,C.registeredClass);return null===o?Q.call(this):this.isSmartPointer?pA(C.registeredClass.instancePrototype,{ptrType:C,ptr:o,smartPtrType:this,smartPtr:A}):pA(C.registeredClass.instancePrototype,{ptrType:C,ptr:o})}function uA(A){return\\\"undefined\\\"==typeof FinalizationRegistry?(uA=A=>A,A):(kA=new FinalizationRegistry((A=>{eA(A.$$)})),uA=A=>{var I=A.$$;if(I.smartPtr){var g={$$:I};kA.register(A,g,A)}return A},JA=A=>kA.unregister(A),uA(A))}function WA(){if(this.$$.ptr||rA(this),this.$$.preservePointerOnDelete)return this.$$.count.value+=1,this;var A,I=uA(Object.create(Object.getPrototypeOf(this),{$$:{value:(A=this.$$,{count:A.count,deleteScheduled:A.deleteScheduled,preservePointerOnDelete:A.preservePointerOnDelete,ptr:A.ptr,ptrType:A.ptrType,smartPtr:A.smartPtr,smartPtrType:A.smartPtrType})}}));return I.$$.count.value+=1,I.$$.deleteScheduled=!1,I}function ZA(){this.$$.ptr||rA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&NA(\\\"Object already scheduled for deletion\\\"),JA(this),eA(this.$$),this.$$.preservePointerOnDelete||(this.$$.smartPtr=void 0,this.$$.ptr=void 0)}function mA(){return!this.$$.ptr}function xA(){return this.$$.ptr||rA(this),this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete&&NA(\\\"Object already scheduled for deletion\\\"),LA.push(this),1===LA.length&&dA&&dA(KA),this.$$.deleteScheduled=!0,this}function TA(){}function XA(A,I,g){if(void 0===A[I].overloadTable){var B=A[I];A[I]=function(){return A[I].overloadTable.hasOwnProperty(arguments.length)||NA(\\\"Function '\\\"+g+\\\"' called with an invalid number of arguments (\\\"+arguments.length+\\\") - expects one of (\\\"+A[I].overloadTable+\\\")!\\\"),A[I].overloadTable[arguments.length].apply(this,arguments)},A[I].overloadTable=[],A[I].overloadTable[B.argCount]=B}}function VA(I,g,B){A.hasOwnProperty(I)?((void 0===B||void 0!==A[I].overloadTable&&void 0!==A[I].overloadTable[B])&&NA(\\\"Cannot register public name '\\\"+I+\\\"' twice\\\"),XA(A,I,I),A.hasOwnProperty(B)&&NA(\\\"Cannot register multiple overloads of a function with the same number of arguments (\\\"+B+\\\")!\\\"),A[I].overloadTable[B]=g):(A[I]=g,void 0!==B&&(A[I].numArguments=B))}function PA(A,I,g,B,Q,C,E,i){this.name=A,this.constructor=I,this.instancePrototype=g,this.rawDestructor=B,this.baseClass=Q,this.getActualType=C,this.upcast=E,this.downcast=i,this.pureVirtualFunctions=[]}function vA(A,I,g){for(;I!==g;)I.upcast||NA(\\\"Expected null or instance of \\\"+g.name+\\\", got an instance of \\\"+I.name),A=I.upcast(A),I=I.baseClass;return A}function jA(A,I){if(null===I)return this.isReference&&NA(\\\"null is not a valid \\\"+this.name),0;I.$$||NA('Cannot pass \\\"'+yI(I)+'\\\" as a '+this.name),I.$$.ptr||NA(\\\"Cannot pass deleted object as a pointer of type \\\"+this.name);var g=I.$$.ptrType.registeredClass;return vA(I.$$.ptr,g,this.registeredClass)}function OA(A,I){var g;if(null===I)return this.isReference&&NA(\\\"null is not a valid \\\"+this.name),this.isSmartPointer?(g=this.rawConstructor(),null!==A&&A.push(this.rawDestructor,g),g):0;I.$$||NA('Cannot pass \\\"'+yI(I)+'\\\" as a '+this.name),I.$$.ptr||NA(\\\"Cannot pass deleted object as a pointer of type \\\"+this.name),!this.isConst&&I.$$.ptrType.isConst&&NA(\\\"Cannot convert argument of type \\\"+(I.$$.smartPtrType?I.$$.smartPtrType.name:I.$$.ptrType.name)+\\\" to parameter type \\\"+this.name);var B=I.$$.ptrType.registeredClass;if(g=vA(I.$$.ptr,B,this.registeredClass),this.isSmartPointer)switch(void 0===I.$$.smartPtr&&NA(\\\"Passing raw pointer to smart pointer is illegal\\\"),this.sharingPolicy){case 0:I.$$.smartPtrType===this?g=I.$$.smartPtr:NA(\\\"Cannot convert argument of type \\\"+(I.$$.smartPtrType?I.$$.smartPtrType.name:I.$$.ptrType.name)+\\\" to parameter type \\\"+this.name);break;case 1:g=I.$$.smartPtr;break;case 2:if(I.$$.smartPtrType===this)g=I.$$.smartPtr;else{var Q=I.clone();g=this.rawShare(g,hI.toHandle((function(){Q.delete()}))),null!==A&&A.push(this.rawDestructor,g)}break;default:NA(\\\"Unsupporting sharing policy\\\")}return g}function zA(A,I){if(null===I)return this.isReference&&NA(\\\"null is not a valid \\\"+this.name),0;I.$$||NA('Cannot pass \\\"'+yI(I)+'\\\" as a '+this.name),I.$$.ptr||NA(\\\"Cannot pass deleted object as a pointer of type \\\"+this.name),I.$$.ptrType.isConst&&NA(\\\"Cannot convert argument of type \\\"+I.$$.ptrType.name+\\\" to parameter type \\\"+this.name);var g=I.$$.ptrType.registeredClass;return vA(I.$$.ptr,g,this.registeredClass)}function $A(A){return this.rawGetPointee&&(A=this.rawGetPointee(A)),A}function _A(A){this.rawDestructor&&this.rawDestructor(A)}function AI(A){null!==A&&A.delete()}function II(A,I,g,B,Q,C,E,i,o,D,w){this.name=A,this.registeredClass=I,this.isReference=g,this.isConst=B,this.isSmartPointer=Q,this.pointeeType=C,this.sharingPolicy=E,this.rawGetPointee=i,this.rawConstructor=o,this.rawShare=D,this.rawDestructor=w,Q||void 0!==I.baseClass?this.toWireType=OA:B?(this.toWireType=jA,this.destructorFunction=null):(this.toWireType=zA,this.destructorFunction=null)}function gI(I,g,B){A.hasOwnProperty(I)||FA(\\\"Replacing nonexistant public symbol\\\"),void 0!==A[I].overloadTable&&void 0!==B?A[I].overloadTable[B]=g:(A[I]=g,A[I].argCount=B)}function BI(I,g,B){return I.includes(\\\"j\\\")?function(I,g,B){var Q=A[\\\"dynCall_\\\"+I];return B&&B.length?Q.apply(null,[g].concat(B)):Q.call(null,g)}(I,g,B):AA(g).apply(null,B)}function QI(A,I){var g,B,Q,C=(A=tA(A)).includes(\\\"j\\\")?(g=A,B=I,Q=[],function(){return Q.length=0,Object.assign(Q,arguments),BI(g,B,Q)}):AA(I);return\\\"function\\\"!=typeof C&&NA(\\\"unknown function pointer with signature \\\"+A+\\\": \\\"+I),C}var CI=void 0;function EI(A){var I=lI(A),g=tA(I);return dI(I),g}function iI(A,I){var g=[],B={};throw I.forEach((function A(I){B[I]||EA[I]||(iA[I]?iA[I].forEach(A):(g.push(I),B[I]=!0))})),new CI(A+\\\": \\\"+g.map(EI).join([\\\", \\\"]))}function oI(A,I){for(var g=[],B=0;B<A;B++)g.push(e[I+4*B>>2]);return g}function DI(A,I,g,B,Q){var C=I.length;C<2&&NA(\\\"argTypes array size mismatch! Must at least get return value and 'this' types!\\\");for(var E=null!==I[1]&&null!==g,i=!1,o=1;o<I.length;++o)if(null!==I[o]&&void 0===I[o].destructorFunction){i=!0;break}var D=\\\"void\\\"!==I[0].name,w=\\\"\\\",s=\\\"\\\";for(o=0;o<C-2;++o)w+=(0!==o?\\\", \\\":\\\"\\\")+\\\"arg\\\"+o,s+=(0!==o?\\\", \\\":\\\"\\\")+\\\"arg\\\"+o+\\\"Wired\\\";var a=\\\"return function \\\"+wA(A)+\\\"(\\\"+w+\\\") {\\\\nif (arguments.length !== \\\"+(C-2)+\\\") {\\\\nthrowBindingError('function \\\"+A+\\\" called with ' + arguments.length + ' arguments, expected \\\"+(C-2)+\\\" args!');\\\\n}\\\\n\\\";i&&(a+=\\\"var destructors = [];\\\\n\\\");var G=i?\\\"destructors\\\":\\\"null\\\",F=[\\\"throwBindingError\\\",\\\"invoker\\\",\\\"fn\\\",\\\"runDestructors\\\",\\\"retType\\\",\\\"classParam\\\"],h=[NA,B,Q,BA,I[0],I[1]];for(E&&(a+=\\\"var thisWired = classParam.toWireType(\\\"+G+\\\", this);\\\\n\\\"),o=0;o<C-2;++o)a+=\\\"var arg\\\"+o+\\\"Wired = argType\\\"+o+\\\".toWireType(\\\"+G+\\\", arg\\\"+o+\\\"); // \\\"+I[o+2].name+\\\"\\\\n\\\",F.push(\\\"argType\\\"+o),h.push(I[o+2]);if(E&&(s=\\\"thisWired\\\"+(s.length>0?\\\", \\\":\\\"\\\")+s),a+=(D?\\\"var rv = \\\":\\\"\\\")+\\\"invoker(fn\\\"+(s.length>0?\\\", \\\":\\\"\\\")+s+\\\");\\\\n\\\",i)a+=\\\"runDestructors(destructors);\\\\n\\\";else for(o=E?1:2;o<I.length;++o){var y=1===o?\\\"thisWired\\\":\\\"arg\\\"+(o-2)+\\\"Wired\\\";null!==I[o].destructorFunction&&(a+=y+\\\"_dtor(\\\"+y+\\\"); // \\\"+I[o].name+\\\"\\\\n\\\",F.push(y+\\\"_dtor\\\"),h.push(I[o].destructorFunction))}return D&&(a+=\\\"var ret = retType.fromWireType(rv);\\\\nreturn ret;\\\\n\\\"),a+=\\\"}\\\\n\\\",F.push(a),function(A,I){if(!(A instanceof Function))throw new TypeError(\\\"new_ called with constructor type \\\"+typeof A+\\\" which is not a function\\\");var g=sA(A.name||\\\"unknownFunctionName\\\",(function(){}));g.prototype=A.prototype;var B=new g,Q=A.apply(B,I);return Q instanceof Object?Q:B}(Function,F).apply(null,h)}var wI=[],sI=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function aI(A){A>4&&0==--sI[A].refcount&&(sI[A]=void 0,wI.push(A))}function GI(){for(var A=0,I=5;I<sI.length;++I)void 0!==sI[I]&&++A;return A}function FI(){for(var A=5;A<sI.length;++A)if(void 0!==sI[A])return sI[A];return null}var hI={toValue:A=>(A||NA(\\\"Cannot use deleted val. handle = \\\"+A),sI[A].value),toHandle:A=>{switch(A){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var I=wI.length?wI.pop():sI.length;return sI[I]={refcount:1,value:A},I}}};function yI(A){if(null===A)return\\\"null\\\";var I=typeof A;return\\\"object\\\"===I||\\\"array\\\"===I||\\\"function\\\"===I?A.toString():\\\"\\\"+A}function cI(A,I){switch(I){case 2:return function(A){return this.fromWireType(n[A>>2])};case 3:return function(A){return this.fromWireType(H[A>>3])};default:throw new TypeError(\\\"Unknown float type: \\\"+A)}}function tI(A,I,g){switch(I){case 0:return g?function(A){return U[A]}:function(A){return S[A]};case 1:return g?function(A){return r[A>>1]}:function(A){return k[A>>1]};case 2:return g?function(A){return J[A>>2]}:function(A){return e[A>>2]};default:throw new TypeError(\\\"Unknown integer type: \\\"+A)}}var RI=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf-16le\\\"):void 0;function NI(A,I){for(var g=A,B=g>>1,Q=B+I/2;!(B>=Q)&&k[B];)++B;if((g=B<<1)-A>32&&RI)return RI.decode(S.subarray(A,g));for(var C=\\\"\\\",E=0;!(E>=I/2);++E){var i=r[A+2*E>>1];if(0==i)break;C+=String.fromCharCode(i)}return C}function UI(A,I,g){if(void 0===g&&(g=2147483647),g<2)return 0;for(var B=I,Q=(g-=2)<2*A.length?g/2:A.length,C=0;C<Q;++C){var E=A.charCodeAt(C);r[I>>1]=E,I+=2}return r[I>>1]=0,I-B}function SI(A){return 2*A.length}function rI(A,I){for(var g=0,B=\\\"\\\";!(g>=I/4);){var Q=J[A+4*g>>2];if(0==Q)break;if(++g,Q>=65536){var C=Q-65536;B+=String.fromCharCode(55296|C>>10,56320|1023&C)}else B+=String.fromCharCode(Q)}return B}function kI(A,I,g){if(void 0===g&&(g=2147483647),g<4)return 0;for(var B=I,Q=B+g-4,C=0;C<A.length;++C){var E=A.charCodeAt(C);if(E>=55296&&E<=57343&&(E=65536+((1023&E)<<10)|1023&A.charCodeAt(++C)),J[I>>2]=E,(I+=4)+4>Q)break}return J[I>>2]=0,I-B}function JI(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B>=55296&&B<=57343&&++g,I+=4}return I}function eI(A){try{return R.grow(A-N.byteLength+65535>>>16),l(R.buffer),1}catch(A){}}var nI=[null,[],[]];function HI(A,I){var g=nI[A];0===I||10===I?((1===A?c:t)(L(g,0)),g.length=0):g.push(I)}GA=A.InternalError=aA(Error,\\\"InternalError\\\"),function(){for(var A=new Array(256),I=0;I<256;++I)A[I]=String.fromCharCode(I);cA=A}(),RA=A.BindingError=aA(Error,\\\"BindingError\\\"),TA.prototype.isAliasOf=SA,TA.prototype.clone=WA,TA.prototype.delete=ZA,TA.prototype.isDeleted=mA,TA.prototype.deleteLater=xA,A.getInheritedInstanceCount=YA,A.getLiveInheritedInstances=MA,A.flushPendingDeletes=KA,A.setDelayFunction=lA,II.prototype.getPointee=$A,II.prototype.destructor=_A,II.prototype.argPackAdvance=8,II.prototype.readValueFromPointer=QA,II.prototype.deleteObject=AI,II.prototype.fromWireType=bA,CI=A.UnboundTypeError=aA(Error,\\\"UnboundTypeError\\\"),A.count_emval_handles=GI,A.get_first_emval=FI;var YI,MI={L:function(A){var I=new IA(A);return I.get_caught()||I.set_caught(!0),I.set_rethrown(!1),z.push(I),function(A){A.add_ref()}(I),I.get_exception_ptr()},v:function(){_setThrew(0),function(A){if(A.release_ref()&&!A.get_rethrown()){var I=A.get_destructor();I&&AA(I)(A.excPtr),KI(A.excPtr)}}(z.pop()),$=0},c:function(){var A=$;if(!A)return fI(0),0;var I=new IA(A);I.set_adjusted_ptr(A);var g=I.get_type();if(!g)return fI(0),A;for(var B=0;B<arguments.length;B++){var Q=arguments[B];if(0===Q||Q===g)break;var C=I.ptr+16;if(uI(Q,g,C))return fI(Q),A}return fI(g),A},k:function(){var A=$;if(!A)return fI(0),0;var I=new IA(A);I.set_adjusted_ptr(A);var g=I.get_type();if(!g)return fI(0),A;for(var B=0;B<arguments.length;B++){var Q=arguments[B];if(0===Q||Q===g)break;var C=I.ptr+16;if(uI(Q,g,C))return fI(Q),A}return fI(g),A},i:function(A,I,g){throw new IA(A).init(I,g),$=A,A},f:function(A){throw $||($=A),A},A:function(A){var I=gA[A];delete gA[A];var g=I.rawConstructor,B=I.rawDestructor,Q=I.fields;hA([A],Q.map((A=>A.getterReturnType)).concat(Q.map((A=>A.setterArgumentType))),(A=>{var C={};return Q.forEach(((I,g)=>{var B=I.fieldName,E=A[g],i=I.getter,o=I.getterContext,D=A[g+Q.length],w=I.setter,s=I.setterContext;C[B]={read:A=>E.fromWireType(i(o,A)),write:(A,I)=>{var g=[];w(s,A,D.toWireType(g,I)),BA(g)}}})),[{name:I.name,fromWireType:function(A){var I={};for(var g in C)I[g]=C[g].read(A);return B(A),I},toWireType:function(A,I){for(var Q in C)if(!(Q in I))throw new TypeError('Missing field:  \\\"'+Q+'\\\"');var E=g();for(Q in C)C[Q].write(E,I[Q]);return null!==A&&A.push(B,E),E},argPackAdvance:8,readValueFromPointer:QA,destructorFunction:B}]}))},D:function(A,I,g,B,Q){},I:function(A,I,g,B,Q){var C=yA(g);UA(A,{name:I=tA(I),fromWireType:function(A){return!!A},toWireType:function(A,I){return I?B:Q},argPackAdvance:8,readValueFromPointer:function(A){var B;if(1===g)B=U;else if(2===g)B=r;else{if(4!==g)throw new TypeError(\\\"Unknown boolean type size: \\\"+I);B=J}return this.fromWireType(B[A>>C])},destructorFunction:null})},y:function(A,I,g,B,Q,C,E,i,o,D,w,s,a){w=tA(w),C=QI(Q,C),i&&(i=QI(E,i)),D&&(D=QI(o,D)),a=QI(s,a);var G=wA(w);VA(G,(function(){iI(\\\"Cannot construct \\\"+w+\\\" due to unbound types\\\",[B])})),hA([A,I,g],B?[B]:[],(function(I){var g,Q;I=I[0],Q=B?(g=I.registeredClass).instancePrototype:TA.prototype;var E=sA(G,(function(){if(Object.getPrototypeOf(this)!==o)throw new RA(\\\"Use 'new' to construct \\\"+w);if(void 0===s.constructor_body)throw new RA(w+\\\" has no accessible constructor\\\");var A=s.constructor_body[arguments.length];if(void 0===A)throw new RA(\\\"Tried to invoke ctor of \\\"+w+\\\" with invalid number of parameters (\\\"+arguments.length+\\\") - expected (\\\"+Object.keys(s.constructor_body).toString()+\\\") parameters instead!\\\");return A.apply(this,arguments)})),o=Object.create(Q,{constructor:{value:E}});E.prototype=o;var s=new PA(w,E,o,a,g,C,i,D),F=new II(w,s,!0,!1,!1),h=new II(w+\\\"*\\\",s,!1,!1,!1),y=new II(w+\\\" const*\\\",s,!1,!0,!1);return HA[A]={pointerType:h,constPointerType:y},gI(G,E),[F,h,y]}))},x:function(A,I,g,B,Q,C){var E;I>0||m(E);var i=oI(I,g);Q=QI(B,Q),hA([],[A],(function(A){var g=\\\"constructor \\\"+(A=A[0]).name;if(void 0===A.registeredClass.constructor_body&&(A.registeredClass.constructor_body=[]),void 0!==A.registeredClass.constructor_body[I-1])throw new RA(\\\"Cannot register multiple constructors with identical number of parameters (\\\"+(I-1)+\\\") for class '\\\"+A.name+\\\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\\\");return A.registeredClass.constructor_body[I-1]=()=>{iI(\\\"Cannot construct \\\"+A.name+\\\" due to unbound types\\\",i)},hA([],i,(function(B){return B.splice(1,0,null),A.registeredClass.constructor_body[I-1]=DI(g,B,null,Q,C),[]})),[]}))},a:function(A,I,g,B,Q,C,E,i){var o=oI(g,B);I=tA(I),C=QI(Q,C),hA([],[A],(function(A){var B=(A=A[0]).name+\\\".\\\"+I;function Q(){iI(\\\"Cannot call \\\"+B+\\\" due to unbound types\\\",o)}I.startsWith(\\\"@@\\\")&&(I=Symbol[I.substring(2)]),i&&A.registeredClass.pureVirtualFunctions.push(I);var D=A.registeredClass.instancePrototype,w=D[I];return void 0===w||void 0===w.overloadTable&&w.className!==A.name&&w.argCount===g-2?(Q.argCount=g-2,Q.className=A.name,D[I]=Q):(XA(D,I,B),D[I].overloadTable[g-2]=Q),hA([],o,(function(Q){var i=DI(B,Q,A,C,E);return void 0===D[I].overloadTable?(i.argCount=g-2,D[I]=i):D[I].overloadTable[g-2]=i,[]})),[]}))},H:function(A,I){UA(A,{name:I=tA(I),fromWireType:function(A){var I=hI.toValue(A);return aI(A),I},toWireType:function(A,I){return hI.toHandle(I)},argPackAdvance:8,readValueFromPointer:QA,destructorFunction:null})},u:function(A,I,g){var B=yA(g);UA(A,{name:I=tA(I),fromWireType:function(A){return A},toWireType:function(A,I){return I},argPackAdvance:8,readValueFromPointer:cI(I,B),destructorFunction:null})},o:function(A,I,g,B,Q,C){var E=oI(I,g);A=tA(A),Q=QI(B,Q),VA(A,(function(){iI(\\\"Cannot call \\\"+A+\\\" due to unbound types\\\",E)}),I-1),hA([],E,(function(g){var B=[g[0],null].concat(g.slice(1));return gI(A,DI(A,B,null,Q,C),I-1),[]}))},h:function(A,I,g,B,Q){I=tA(I),-1===Q&&(Q=4294967295);var C=yA(g),E=A=>A;if(0===B){var i=32-8*g;E=A=>A<<i>>>i}var o=I.includes(\\\"unsigned\\\");UA(A,{name:I,fromWireType:E,toWireType:o?function(A,I){return this.name,I>>>0}:function(A,I){return this.name,I},argPackAdvance:8,readValueFromPointer:tI(I,C,0!==B),destructorFunction:null})},d:function(A,I,g){var B=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][I];function Q(A){var I=e,g=I[A>>=2],Q=I[A+1];return new B(N,Q,g)}UA(A,{name:g=tA(g),fromWireType:Q,argPackAdvance:8,readValueFromPointer:Q},{ignoreDuplicateRegistrations:!0})},t:function(A,I){var g=\\\"std::string\\\"===(I=tA(I));UA(A,{name:I,fromWireType:function(A){var I,B=e[A>>2],Q=A+4;if(g)for(var C=Q,E=0;E<=B;++E){var i=Q+E;if(E==B||0==S[i]){var o=K(C,i-C);void 0===I?I=o:(I+=String.fromCharCode(0),I+=o),C=i+1}}else{var D=new Array(B);for(E=0;E<B;++E)D[E]=String.fromCharCode(S[Q+E]);I=D.join(\\\"\\\")}return dI(A),I},toWireType:function(A,I){var B;I instanceof ArrayBuffer&&(I=new Uint8Array(I));var Q=\\\"string\\\"==typeof I;Q||I instanceof Uint8Array||I instanceof Uint8ClampedArray||I instanceof Int8Array||NA(\\\"Cannot pass non-string to std::string\\\"),B=g&&Q?function(A){for(var I=0,g=0;g<A.length;++g){var B=A.charCodeAt(g);B<=127?I++:B<=2047?I+=2:B>=55296&&B<=57343?(I+=4,++g):I+=3}return I}(I):I.length;var C=LI(4+B+1),E=C+4;if(e[C>>2]=B,g&&Q)d(I,E,B+1);else if(Q)for(var i=0;i<B;++i){var o=I.charCodeAt(i);o>255&&(dI(E),NA(\\\"String has UTF-16 code units that do not fit in 8 bits\\\")),S[E+i]=o}else for(i=0;i<B;++i)S[E+i]=I[i];return null!==A&&A.push(dI,C),C},argPackAdvance:8,readValueFromPointer:QA,destructorFunction:function(A){dI(A)}})},q:function(A,I,g){var B,Q,C,E,i;g=tA(g),2===I?(B=NI,Q=UI,E=SI,C=()=>k,i=1):4===I&&(B=rI,Q=kI,E=JI,C=()=>e,i=2),UA(A,{name:g,fromWireType:function(A){for(var g,Q=e[A>>2],E=C(),o=A+4,D=0;D<=Q;++D){var w=A+4+D*I;if(D==Q||0==E[w>>i]){var s=B(o,w-o);void 0===g?g=s:(g+=String.fromCharCode(0),g+=s),o=w+I}}return dI(A),g},toWireType:function(A,B){\\\"string\\\"!=typeof B&&NA(\\\"Cannot pass non-string to C++ string type \\\"+g);var C=E(B),o=LI(4+C+I);return e[o>>2]=C>>i,Q(B,o+4,C+I),null!==A&&A.push(dI,o),o},argPackAdvance:8,readValueFromPointer:QA,destructorFunction:function(A){dI(A)}})},p:function(A,I,g,B,Q,C){gA[A]={name:tA(I),rawConstructor:QI(g,B),rawDestructor:QI(Q,C),fields:[]}},B:function(A,I,g,B,Q,C,E,i,o,D){gA[A].fields.push({fieldName:tA(I),getterReturnType:g,getter:QI(B,Q),getterContext:C,setterArgumentType:E,setter:QI(i,o),setterContext:D})},J:function(A,I){UA(A,{isVoid:!0,name:I=tA(I),argPackAdvance:0,fromWireType:function(){},toWireType:function(A,I){}})},N:aI,O:function(A){A>4&&(sI[A].refcount+=1)},n:function(A,I){var g,B,Q;B=\\\"_emval_take_value\\\",void 0===(Q=EA[g=A])&&NA(B+\\\" has unknown type \\\"+EI(g));var C=(A=Q).readValueFromPointer(I);return hI.toHandle(C)},r:function(){m(\\\"\\\")},G:function(A,I,g){S.copyWithin(A,I,I+g)},E:function(A){var I,g,B=S.length,Q=2147483648;if((A>>>=0)>Q)return!1;for(var C=1;C<=4;C*=2){var E=B*(1+.2/C);if(E=Math.min(E,A+100663296),eI(Math.min(Q,(I=Math.max(A,E))+((g=65536)-I%g)%g)))return!0}return!1},F:function(A){return 52},C:function(A,I,g,B,Q){return 70},s:function(A,I,g,B){for(var Q=0,C=0;C<g;C++){var E=e[I>>2],i=e[I+4>>2];I+=8;for(var o=0;o<i;o++)HI(A,S[E+o]);Q+=i}return e[B>>2]=Q,0},b:function(A,I){var g=qI();try{return AA(A)(I)}catch(A){if(pI(g),A!==A+0)throw A;_setThrew(1,0)}},z:function(A,I,g){var B=qI();try{return AA(A)(I,g)}catch(A){if(pI(B),A!==A+0)throw A;_setThrew(1,0)}},w:function(A,I,g,B){var Q=qI();try{return AA(A)(I,g,B)}catch(A){if(pI(Q),A!==A+0)throw A;_setThrew(1,0)}},e:function(A,I){var g=qI();try{AA(A)(I)}catch(A){if(pI(g),A!==A+0)throw A;_setThrew(1,0)}},l:function(A,I,g){var B=qI();try{AA(A)(I,g)}catch(A){if(pI(B),A!==A+0)throw A;_setThrew(1,0)}},m:function(A,I,g,B){var Q=qI();try{AA(A)(I,g,B)}catch(A){if(pI(Q),A!==A+0)throw A;_setThrew(1,0)}},j:function(A,I,g,B,Q){var C=qI();try{AA(A)(I,g,B,Q)}catch(A){if(pI(C),A!==A+0)throw A;_setThrew(1,0)}},K:function(A,I,g,B,Q,C,E){var i=qI();try{AA(A)(I,g,B,Q,C,E)}catch(A){if(pI(i),A!==A+0)throw A;_setThrew(1,0)}},g:function(A,I,g,B,Q,C,E,i,o,D,w){var s=qI();try{AA(A)(I,g,B,Q,C,E,i,o,D,w)}catch(A){if(pI(s),A!==A+0)throw A;_setThrew(1,0)}},M:function(A){return A}},LI=(function(){var I={a:MI};function g(I,g){var B,Q=I.exports;A.asm=Q,l((R=A.asm.P).buffer),f=A.asm.T,B=A.asm.Q,p.unshift(B),function(I){if(u--,A.monitorRunDependencies&&A.monitorRunDependencies(u),0==u&&(null!==W&&(clearInterval(W),W=null),Z)){var g=Z;Z=null,g()}}()}function B(A){g(A.instance)}function C(A){return function(){if(!y&&(w||s)){if(\\\"function\\\"==typeof fetch&&!P(x))return fetch(x,{credentials:\\\"same-origin\\\"}).then((function(A){if(!A.ok)throw\\\"failed to load wasm binary file at '\\\"+x+\\\"'\\\";return A.arrayBuffer()})).catch((function(){return v(x)}));if(E)return new Promise((function(A,I){E(x,(function(I){A(new Uint8Array(I))}),I)}))}return Promise.resolve().then((function(){return v(x)}))}().then((function(A){return WebAssembly.instantiate(A,I)})).then((function(A){return A})).then(A,(function(A){t(\\\"failed to asynchronously prepare wasm: \\\"+A),m(A)}))}if(u++,A.monitorRunDependencies&&A.monitorRunDependencies(u),A.instantiateWasm)try{return A.instantiateWasm(I,g)}catch(A){t(\\\"Module.instantiateWasm callback failed with error: \\\"+A),Q(A)}(y||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||V(x)||P(x)||a||\\\"function\\\"!=typeof fetch?C(B):fetch(x,{credentials:\\\"same-origin\\\"}).then((function(A){return WebAssembly.instantiateStreaming(A,I).then(B,(function(A){return t(\\\"wasm streaming compile failed: \\\"+A),t(\\\"falling back to ArrayBuffer instantiation\\\"),C(B)}))}))).catch(Q)}(),A.___wasm_call_ctors=function(){return(A.___wasm_call_ctors=A.asm.Q).apply(null,arguments)},A._malloc=function(){return(LI=A._malloc=A.asm.R).apply(null,arguments)}),KI=A.___cxa_free_exception=function(){return(KI=A.___cxa_free_exception=A.asm.S).apply(null,arguments)},dI=A._free=function(){return(dI=A._free=A.asm.U).apply(null,arguments)},lI=A.___getTypeName=function(){return(lI=A.___getTypeName=A.asm.V).apply(null,arguments)},fI=(A.__embind_initialize_bindings=function(){return(A.__embind_initialize_bindings=A.asm.W).apply(null,arguments)},A.setTempRet0=function(){return(fI=A.setTempRet0=A.asm.X).apply(null,arguments)}),qI=A.stackSave=function(){return(qI=A.stackSave=A.asm.Y).apply(null,arguments)},pI=A.stackRestore=function(){return(pI=A.stackRestore=A.asm.Z).apply(null,arguments)},bI=A.stackAlloc=function(){return(bI=A.stackAlloc=A.asm._).apply(null,arguments)},uI=A.___cxa_can_catch=function(){return(uI=A.___cxa_can_catch=A.asm.$).apply(null,arguments)},WI=A.___cxa_is_pointer_type=function(){return(WI=A.___cxa_is_pointer_type=A.asm.aa).apply(null,arguments)};function ZI(g){function B(){YI||(YI=!0,A.calledRun=!0,Y||(O(p),I(A),A.onRuntimeInitialized&&A.onRuntimeInitialized(),function(){if(A.postRun)for(\\\"function\\\"==typeof A.postRun&&(A.postRun=[A.postRun]);A.postRun.length;)I=A.postRun.shift(),b.unshift(I);var I;O(b)}()))}g=g||D,u>0||(function(){if(A.preRun)for(\\\"function\\\"==typeof A.preRun&&(A.preRun=[A.preRun]);A.preRun.length;)I=A.preRun.shift(),q.unshift(I);var I;O(q)}(),u>0||(A.setStatus?(A.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){A.setStatus(\\\"\\\")}),1),B()}),1)):B()))}if(A.dynCall_ji=function(){return(A.dynCall_ji=A.asm.ba).apply(null,arguments)},A.dynCall_iiji=function(){return(A.dynCall_iiji=A.asm.ca).apply(null,arguments)},A.dynCall_jiji=function(){return(A.dynCall_jiji=A.asm.da).apply(null,arguments)},A.ccall=function(I,g,B,Q,C){var E={string:A=>{var I=0;if(null!=A&&0!==A){var g=1+(A.length<<2);d(A,I=bI(g),g)}return I},array:A=>{var I=bI(A.length);return function(A,I){U.set(A,I)}(A,I),I}},i=function(I){return A[\\\"_\\\"+I]}(I),o=[],D=0;if(Q)for(var w=0;w<Q.length;w++){var s=E[B[w]];s?(0===D&&(D=qI()),o[w]=s(Q[w])):o[w]=Q[w]}var a=i.apply(null,o);return a=function(A){return 0!==D&&pI(D),function(A){return\\\"string\\\"===g?K(A):\\\"boolean\\\"===g?Boolean(A):A}(A)}(a)},Z=function A(){YI||ZI(),YI||(Z=A)},A.preInit)for(\\\"function\\\"==typeof A.preInit&&(A.preInit=[A.preInit]);A.preInit.length>0;)A.preInit.pop()();return ZI(),A.ready});A.exports=Q},945:function(A,I){var g={Unkown:0,Grayscale:1,AdobeRGB:2,RGB:3,CYMK:4},B=function(){\\\"use strict\\\";var A=new Int32Array([0,1,8,16,9,2,3,10,17,24,32,25,18,11,4,5,12,19,26,33,40,48,41,34,27,20,13,6,7,14,21,28,35,42,49,56,57,50,43,36,29,22,15,23,30,37,44,51,58,59,52,45,38,31,39,46,53,60,61,54,47,55,62,63]),I=4017,B=799,Q=3406,C=2276,E=1567,i=3784,o=5793,D=2896;function w(A,I){for(var g,B,Q=0,C=[],E=16;E>0&&!A[E-1];)E--;C.push({children:[],index:0});var i,o=C[0];for(g=0;g<E;g++){for(B=0;B<A[g];B++){for((o=C.pop()).children[o.index]=I[Q];o.index>0;)o=C.pop();for(o.index++,C.push(o);C.length<=g;)C.push(i={children:[],index:0}),o.children[o.index]=i.children,o=i;Q++}g+1<E&&(C.push(i={children:[],index:0}),o.children[o.index]=i.children,o=i)}return C[0].children}function s(A,I,g){return 64*((A.blocksPerLine+1)*I+g)}function a(I,g,B,Q,C,E,i,o,D){B.precision,B.samplesPerLine,B.scanLines;var w=B.mcusPerLine,a=B.progressive,G=(B.maxH,B.maxV,g),F=0,h=0;function y(){if(h>0)return h--,F>>h&1;if(255==(F=I[g++])){var A=I[g++];if(A)throw\\\"unexpected marker: \\\"+(F<<8|A).toString(16)}return h=7,F>>>7}function c(A){for(var I,g=A;null!==(I=y());){if(\\\"number\\\"==typeof(g=g[I]))return g;if(\\\"object\\\"!=typeof g)throw\\\"invalid huffman sequence\\\"}return null}function t(A){for(var I=0;A>0;){var g=y();if(null===g)return;I=I<<1|g,A--}return I}function R(A){var I=t(A);return I>=1<<A-1?I:I+(-1<<A)+1}var N=0;var U,S=0;function r(A,I,g,B,Q){var C=g%w;I(A,s(A,(g/w|0)*A.v+B,C*A.h+Q))}function k(A,I,g){I(A,s(A,g/A.blocksPerLine|0,g%A.blocksPerLine))}var J,e,n,H,Y,M,L=Q.length;M=a?0===E?0===o?function(A,I){var g=c(A.huffmanTableDC),B=0===g?0:R(g)<<D;A.blockData[I]=A.pred+=B}:function(A,I){A.blockData[I]|=y()<<D}:0===o?function(I,g){if(N>0)N--;else for(var B=E,Q=i;B<=Q;){var C=c(I.huffmanTableAC),o=15&C,w=C>>4;if(0!==o){var s=A[B+=w];I.blockData[g+s]=R(o)*(1<<D),B++}else{if(w<15){N=t(w)+(1<<w)-1;break}B+=16}}}:function(I,g){for(var B=E,Q=i,C=0;B<=Q;){var o=A[B];switch(S){case 0:var w=c(I.huffmanTableAC),s=15&w;if(C=w>>4,0===s)C<15?(N=t(C)+(1<<C),S=4):(C=16,S=1);else{if(1!==s)throw\\\"invalid ACn encoding\\\";U=R(s),S=C?2:3}continue;case 1:case 2:I.blockData[g+o]?I.blockData[g+o]+=y()<<D:0==--C&&(S=2==S?3:0);break;case 3:I.blockData[g+o]?I.blockData[g+o]+=y()<<D:(I.blockData[g+o]=U<<D,S=0);break;case 4:I.blockData[g+o]&&(I.blockData[g+o]+=y()<<D)}B++}4===S&&0==--N&&(S=0)}:function(I,g){var B=c(I.huffmanTableDC),Q=0===B?0:R(B);I.blockData[g]=I.pred+=Q;for(var C=1;C<64;){var E=c(I.huffmanTableAC),i=15&E,o=E>>4;if(0!==i){var D=A[C+=o];I.blockData[g+D]=R(i),C++}else{if(o<15)break;C+=16}}};var K,d,l,f,q=0;for(d=1==L?Q[0].blocksPerLine*Q[0].blocksPerColumn:w*B.mcusPerColumn,C||(C=d);q<d;){for(e=0;e<L;e++)Q[e].pred=0;if(N=0,1==L)for(J=Q[0],Y=0;Y<C;Y++)k(J,M,q),q++;else for(Y=0;Y<C;Y++){for(e=0;e<L;e++)for(l=(J=Q[e]).h,f=J.v,n=0;n<f;n++)for(H=0;H<l;H++)r(J,M,q,n,H);q++}if(h=0,(K=I[g]<<8|I[g+1])<=65280)throw\\\"marker was not found\\\";if(!(K>=65488&&K<=65495))break;g+=2}return g-G}function G(A,g,w){var s,a,G,F,h,y,c,t,R,N,U=A.quantizationTable;for(N=0;N<64;N++)w[N]=A.blockData[g+N]*U[N];for(N=0;N<8;++N){var S=8*N;0!==w[1+S]||0!==w[2+S]||0!==w[3+S]||0!==w[4+S]||0!==w[5+S]||0!==w[6+S]||0!==w[7+S]?(s=o*w[0+S]+128>>8,a=o*w[4+S]+128>>8,G=w[2+S],F=w[6+S],h=D*(w[1+S]-w[7+S])+128>>8,t=D*(w[1+S]+w[7+S])+128>>8,y=w[3+S]<<4,c=w[5+S]<<4,R=s-a+1>>1,s=s+a+1>>1,a=R,R=G*i+F*E+128>>8,G=G*E-F*i+128>>8,F=R,R=h-c+1>>1,h=h+c+1>>1,c=R,R=t+y+1>>1,y=t-y+1>>1,t=R,R=s-F+1>>1,s=s+F+1>>1,F=R,R=a-G+1>>1,a=a+G+1>>1,G=R,R=h*C+t*Q+2048>>12,h=h*Q-t*C+2048>>12,t=R,R=y*B+c*I+2048>>12,y=y*I-c*B+2048>>12,c=R,w[0+S]=s+t,w[7+S]=s-t,w[1+S]=a+c,w[6+S]=a-c,w[2+S]=G+y,w[5+S]=G-y,w[3+S]=F+h,w[4+S]=F-h):(R=o*w[0+S]+512>>10,w[0+S]=R,w[1+S]=R,w[2+S]=R,w[3+S]=R,w[4+S]=R,w[5+S]=R,w[6+S]=R,w[7+S]=R)}for(N=0;N<8;++N){var r=N;0!==w[8+r]||0!==w[16+r]||0!==w[24+r]||0!==w[32+r]||0!==w[40+r]||0!==w[48+r]||0!==w[56+r]?(s=o*w[0+r]+2048>>12,a=o*w[32+r]+2048>>12,G=w[16+r],F=w[48+r],h=D*(w[8+r]-w[56+r])+2048>>12,t=D*(w[8+r]+w[56+r])+2048>>12,y=w[24+r],c=w[40+r],R=s-a+1>>1,s=s+a+1>>1,a=R,R=G*i+F*E+2048>>12,G=G*E-F*i+2048>>12,F=R,R=h-c+1>>1,h=h+c+1>>1,c=R,R=t+y+1>>1,y=t-y+1>>1,t=R,R=s-F+1>>1,s=s+F+1>>1,F=R,R=a-G+1>>1,a=a+G+1>>1,G=R,R=h*C+t*Q+2048>>12,h=h*Q-t*C+2048>>12,t=R,R=y*B+c*I+2048>>12,y=y*I-c*B+2048>>12,c=R,w[0+r]=s+t,w[56+r]=s-t,w[8+r]=a+c,w[48+r]=a-c,w[16+r]=G+y,w[40+r]=G-y,w[24+r]=F+h,w[32+r]=F-h):(R=o*w[N+0]+8192>>14,w[0+r]=R,w[8+r]=R,w[16+r]=R,w[24+r]=R,w[32+r]=R,w[40+r]=R,w[48+r]=R,w[56+r]=R)}for(N=0;N<64;++N){var k=g+N,J=w[N];J=J<=-2056/A.bitConversion?0:J>=2024/A.bitConversion?255/A.bitConversion:J+2056/A.bitConversion>>4,A.blockData[k]=J}}function F(A,I){for(var g=I.blocksPerLine,B=I.blocksPerColumn,Q=new Int32Array(64),C=0;C<B;C++)for(var E=0;E<g;E++){G(I,s(I,C,E),Q)}return I.blockData}function h(A){return A<=0?0:A>=255?255:0|A}class y{}return Object.setPrototypeOf(y.prototype,{load:function(A){var I=function(A){this.parse(A),this.onload&&this.onload()}.bind(this);if(A.indexOf(\\\"data:\\\")>-1){for(var g=A.indexOf(\\\"base64,\\\")+7,B=atob(A.substring(g)),Q=new Uint8Array(B.length),C=B.length-1;C>=0;C--)Q[C]=B.charCodeAt(C);I(B)}else{var E=new XMLHttpRequest;E.open(\\\"GET\\\",A,!0),E.responseType=\\\"arraybuffer\\\",E.onload=function(){var A=new Uint8Array(E.response);I(A)}.bind(this),E.send(null)}},parse:function(I){function B(){var A=I[o]<<8|I[o+1];return o+=2,A}function Q(){var A=B(),g=I.subarray(o,o+A-2);return o+=g.length,g}function C(A){for(var I=Math.ceil(A.samplesPerLine/8/A.maxH),g=Math.ceil(A.scanLines/8/A.maxV),B=0;B<A.components.length;B++){X=A.components[B];var Q=Math.ceil(Math.ceil(A.samplesPerLine/8)*X.h/A.maxH),C=Math.ceil(Math.ceil(A.scanLines/8)*X.v/A.maxV),E=I*X.h,i=64*(g*X.v)*(E+1);X.blockData=new Int16Array(i),X.blocksPerLine=Q,X.blocksPerColumn=C}A.mcusPerLine=I,A.mcusPerColumn=g}var E,i,o=0,D=(I.length,null),s=null,G=[],h=[],y=[],c=B();if(65496!=c)throw\\\"SOI not found\\\";for(c=B();65497!=c;){var t,R;switch(c){case 65504:case 65505:case 65506:case 65507:case 65508:case 65509:case 65510:case 65511:case 65512:case 65513:case 65514:case 65515:case 65516:case 65517:case 65518:case 65519:case 65534:var N=Q();65504===c&&74===N[0]&&70===N[1]&&73===N[2]&&70===N[3]&&0===N[4]&&(D={version:{major:N[5],minor:N[6]},densityUnits:N[7],xDensity:N[8]<<8|N[9],yDensity:N[10]<<8|N[11],thumbWidth:N[12],thumbHeight:N[13],thumbData:N.subarray(14,14+3*N[12]*N[13])}),65518===c&&65===N[0]&&100===N[1]&&111===N[2]&&98===N[3]&&101===N[4]&&0===N[5]&&(s={version:N[6],flags0:N[7]<<8|N[8],flags1:N[9]<<8|N[10],transformCode:N[11]});break;case 65499:for(var U=B()+o-2;o<U;){var S=I[o++],r=new Int32Array(64);if(S>>4){if(S>>4!=1)throw\\\"DQT: invalid table spec\\\";for(t=0;t<64;t++){r[A[t]]=B()}}else for(t=0;t<64;t++){r[A[t]]=I[o++]}G[15&S]=r}break;case 65472:case 65473:case 65474:if(E)throw\\\"Only single frame JPEGs supported\\\";B(),(E={}).extended=65473===c,E.progressive=65474===c,E.precision=I[o++],E.scanLines=B(),E.samplesPerLine=B(),E.components=[],E.componentIds={};var k,J=I[o++],e=0,n=0;for(T=0;T<J;T++){k=I[o];var H=I[o+1]>>4,Y=15&I[o+1];e<H&&(e=H),n<Y&&(n=Y);var M=I[o+2];R=E.components.push({h:H,v:Y,quantizationTable:G[M],quantizationTableId:M,bitConversion:255/((1<<E.precision)-1)}),E.componentIds[k]=R-1,o+=3}E.maxH=e,E.maxV=n,C(E);break;case 65476:var L=B();for(T=2;T<L;){var K=I[o++],d=new Uint8Array(16),l=0;for(t=0;t<16;t++,o++)l+=d[t]=I[o];var f=new Uint8Array(l);for(t=0;t<l;t++,o++)f[t]=I[o];T+=17+l,(K>>4?h:y)[15&K]=w(d,f)}break;case 65501:B(),i=B();break;case 65498:B();var q=I[o++],p=[];for(T=0;T<q;T++){var b=E.componentIds[I[o++]];X=E.components[b];var u=I[o++];X.huffmanTableDC=y[u>>4],X.huffmanTableAC=h[15&u],p.push(X)}var W=I[o++],Z=I[o++],m=I[o++],x=a(I,o,E,p,i,W,Z,m>>4,15&m);o+=x;break;case 65535:255!==I[o]&&o--;break;default:if(255==I[o-3]&&I[o-2]>=192&&I[o-2]<=254){o-=3;break}throw\\\"unknown JPEG marker \\\"+c.toString(16)}c=B()}switch(this.width=E.samplesPerLine,this.height=E.scanLines,this.jfif=D,this.adobe=s,this.components=[],E.components.length){case 1:this.colorspace=g.Grayscale;break;case 3:this.adobe?this.colorspace=g.AdobeRGB:this.colorspace=g.RGB;break;case 4:this.colorspace=g.CYMK;break;default:this.colorspace=g.Unknown}for(var T=0;T<E.components.length;T++){var X;(X=E.components[T]).quantizationTable||null===X.quantizationTableId||(X.quantizationTable=G[X.quantizationTableId]),this.components.push({output:F(0,X),scaleX:X.h/E.maxH,scaleY:X.v/E.maxV,blocksPerLine:X.blocksPerLine,blocksPerColumn:X.blocksPerColumn,bitConversion:X.bitConversion})}},getData16:function(A,I){if(1!==this.components.length)throw\\\"Unsupported color mode\\\";var g,B,Q,C,E,i,o=this.width/A,D=this.height/I,w=0,a=this.components.length,G=new Uint16Array(A*I*a),F=new Uint16Array((this.components[0].blocksPerLine<<3)*this.components[0].blocksPerColumn*8);for(i=0;i<a;i++){for(var h,y,c,t=(g=this.components[i]).blocksPerLine,R=g.blocksPerColumn,N=t<<3,U=0,S=0;S<R;S++)for(var r=S<<3,k=0;k<t;k++){var J=s(g,S,k),e=(w=0,k<<3);for(h=0;h<8;h++){U=(r+h)*N;for(y=0;y<8;y++)F[U+e+y]=g.output[J+w++]}}for(B=g.scaleX*o,Q=g.scaleY*D,w=i,E=0;E<I;E++)for(C=0;C<A;C++)c=(0|E*Q)*N+(0|C*B),G[w]=F[c],w+=a}return G},getData:function(A,I){var g,B,Q,C,E,i,o,D,w,a,G,F,y,c,t,R=this.width/A,N=this.height/I,U=0,S=this.components.length,r=A*I*S,k=new Uint8Array(r),J=new Uint8Array((this.components[0].blocksPerLine<<3)*this.components[0].blocksPerColumn*8);for(i=0;i<S;i++){for(var e,n,H,Y=(g=this.components[i]).blocksPerLine,M=g.blocksPerColumn,L=Y<<3,K=0,d=0;d<M;d++)for(var l=d<<3,f=0;f<Y;f++){var q=s(g,d,f),p=(U=0,f<<3);for(e=0;e<8;e++){K=(l+e)*L;for(n=0;n<8;n++)J[K+p+n]=g.output[q+U++]*g.bitConversion}}for(B=g.scaleX*R,Q=g.scaleY*N,U=i,E=0;E<I;E++)for(C=0;C<A;C++)H=(0|E*Q)*L+(0|C*B),k[U]=J[H],U+=S}switch(S){case 1:case 2:break;case 3:if(t=!0,this.adobe&&this.adobe.transformCode?t=!0:void 0!==this.colorTransform&&(t=!!this.colorTransform),t)for(i=0;i<r;i+=S)o=k[i],D=k[i+1],F=h(o-179.456+1.402*(w=k[i+2])),y=h(o+135.459-.344*D-.714*w),c=h(o-226.816+1.772*D),k[i]=F,k[i+1]=y,k[i+2]=c;break;case 4:if(!this.adobe)throw\\\"Unsupported color mode (4 components)\\\";if(t=!1,this.adobe&&this.adobe.transformCode?t=!0:void 0!==this.colorTransform&&(t=!!this.colorTransform),t)for(i=0;i<r;i+=S)o=k[i],D=k[i+1],a=h(434.456-o-1.402*(w=k[i+2])),G=h(119.541-o+.344*D+.714*w),o=h(481.816-o-1.772*D),k[i]=a,k[i+1]=G,k[i+2]=o;break;default:throw\\\"Unsupported color mode\\\"}return k}}),y}();A.exports={JpegImage:B}},610:function(A,I){!function(g){if(\\\"object\\\"==typeof I&&void 0!==A)A.exports=g();else if(\\\"function\\\"==typeof define&&define.amd)define([],g);else{(\\\"undefined\\\"!=typeof window?window:\\\"undefined\\\"!=typeof global?global:\\\"undefined\\\"!=typeof self?self:this).jpeg=g()}}((function(){return function A(I,g,B){function Q(E,i){if(!g[E]){if(!I[E]){var o=\\\"function\\\"==typeof require&&require;if(!i&&o)return o(E,!0);if(C)return C(E,!0);var D=new Error(\\\"Cannot find module '\\\"+E+\\\"'\\\");throw D.code=\\\"MODULE_NOT_FOUND\\\",D}var w=g[E]={exports:{}};I[E][0].call(w.exports,(function(A){var g=I[E][1][A];return Q(g||A)}),w,w.exports,A,I,g,B)}return g[E].exports}for(var C=\\\"function\\\"==typeof require&&require,E=0;E<B.length;E++)Q(B[E]);return Q}({1:[function(A,I,g){var B=B||{};B.lossless=B.lossless||{},B.lossless.ComponentSpec=B.lossless.ComponentSpec||function(){this.hSamp=0,this.quantTableSel=0,this.vSamp=0},\\\"undefined\\\"!==typeof I&&I.exports&&(I.exports=B.lossless.ComponentSpec)},{}],2:[function(A,I,g){var B=B||{};B.lossless=B.lossless||{},B.lossless.DataStream=B.lossless.DataStream||function(A,I,g){this.buffer=new Uint8Array(A,I,g),this.index=0},B.lossless.DataStream.prototype.get16=function(){var A=(this.buffer[this.index]<<8)+this.buffer[this.index+1];return this.index+=2,A},B.lossless.DataStream.prototype.get8=function(){var A=this.buffer[this.index];return this.index+=1,A},\\\"undefined\\\"!==typeof I&&I.exports&&(I.exports=B.lossless.DataStream)},{}],3:[function(A,I,g){var B,Q=Q||{};Q.lossless=Q.lossless||{},Q.lossless.DataStream=Q.lossless.DataStream||(void 0!==A?A(\\\"./data-stream.js\\\"):null),Q.lossless.HuffmanTable=Q.lossless.HuffmanTable||(void 0!==A?A(\\\"./huffman-table.js\\\"):null),Q.lossless.QuantizationTable=Q.lossless.QuantizationTable||(void 0!==A?A(\\\"./quantization-table.js\\\"):null),Q.lossless.ScanHeader=Q.lossless.ScanHeader||(void 0!==A?A(\\\"./scan-header.js\\\"):null),Q.lossless.FrameHeader=Q.lossless.FrameHeader||(void 0!==A?A(\\\"./frame-header.js\\\"):null),Q.lossless.Utils=Q.lossless.Utils||(void 0!==A?A(\\\"./utils.js\\\"):null),Q.lossless.Decoder=Q.lossless.Decoder||function(A,I){this.buffer=A,this.frame=new Q.lossless.FrameHeader,this.huffTable=new Q.lossless.HuffmanTable,this.quantTable=new Q.lossless.QuantizationTable,this.scan=new Q.lossless.ScanHeader,this.DU=Q.lossless.Utils.createArray(10,4,64),this.HuffTab=Q.lossless.Utils.createArray(4,2,12800),this.IDCT_Source=[],this.nBlock=[],this.acTab=Q.lossless.Utils.createArray(10,1),this.dcTab=Q.lossless.Utils.createArray(10,1),this.qTab=Q.lossless.Utils.createArray(10,1),this.marker=0,this.markerIndex=0,this.numComp=0,this.restartInterval=0,this.selection=0,this.xDim=0,this.yDim=0,this.xLoc=0,this.yLoc=0,this.numBytes=0,this.outputData=null,this.restarting=!1,this.mask=0,void 0!==I&&(this.numBytes=I)},Q.lossless.Decoder.IDCT_P=[0,5,40,16,45,2,7,42,21,56,8,61,18,47,1,4,41,23,58,13,32,24,37,10,63,17,44,3,6,43,20,57,15,34,29,48,53,26,39,9,60,19,46,22,59,12,33,31,50,55,25,36,11,62,14,35,28,49,52,27,38,30,51,54],Q.lossless.Decoder.TABLE=[0,1,5,6,14,15,27,28,2,4,7,13,16,26,29,42,3,8,12,17,25,30,41,43,9,11,18,24,31,40,44,53,10,19,23,32,39,45,52,54,20,22,33,38,46,51,55,60,21,34,37,47,50,56,59,61,35,36,48,49,57,58,62,63],Q.lossless.Decoder.MAX_HUFFMAN_SUBTREE=50,Q.lossless.Decoder.MSB=2147483648,Q.lossless.Decoder.RESTART_MARKER_BEGIN=65488,Q.lossless.Decoder.RESTART_MARKER_END=65495,Q.lossless.Decoder.prototype.decompress=function(A,I,g){return this.decode(A,I,g).buffer},Q.lossless.Decoder.prototype.decode=function(A,I,g,B){var C,E,i,o,D=0,w=[],s=[],a=[];if(void 0!==A&&(this.buffer=A),void 0!==B&&(this.numBytes=B),this.stream=new Q.lossless.DataStream(this.buffer,I,g),this.buffer=null,this.xLoc=0,this.yLoc=0,65496!==(C=this.stream.get16()))throw new Error(\\\"Not a JPEG file\\\");for(C=this.stream.get16();C>>4!=4092||65476===C;){switch(C){case 65476:this.huffTable.read(this.stream,this.HuffTab);break;case 65484:throw new Error(\\\"Program doesn't support arithmetic coding. (format throw new IOException)\\\");case 65499:this.quantTable.read(this.stream,Q.lossless.Decoder.TABLE);break;case 65501:this.restartInterval=this.readNumber();break;case 65504:case 65505:case 65506:case 65507:case 65508:case 65509:case 65510:case 65511:case 65512:case 65513:case 65514:case 65515:case 65516:case 65517:case 65518:case 65519:this.readApp();break;case 65534:this.readComment();break;default:if(C>>8!=255)throw new Error(\\\"ERROR: format throw new IOException! (decode)\\\")}C=this.stream.get16()}if(C<65472||C>65479)throw new Error(\\\"ERROR: could not handle arithmetic code!\\\");this.frame.read(this.stream),C=this.stream.get16();do{for(;65498!==C;){switch(C){case 65476:this.huffTable.read(this.stream,this.HuffTab);break;case 65484:throw new Error(\\\"Program doesn't support arithmetic coding. (format throw new IOException)\\\");case 65499:this.quantTable.read(this.stream,Q.lossless.Decoder.TABLE);break;case 65501:this.restartInterval=this.readNumber();break;case 65504:case 65505:case 65506:case 65507:case 65508:case 65509:case 65510:case 65511:case 65512:case 65513:case 65514:case 65515:case 65516:case 65517:case 65518:case 65519:this.readApp();break;case 65534:this.readComment();break;default:if(C>>8!=255)throw new Error(\\\"ERROR: format throw new IOException! (Parser.decode)\\\")}C=this.stream.get16()}switch(this.precision=this.frame.precision,this.components=this.frame.components,this.numBytes||(this.numBytes=parseInt(Math.ceil(this.precision/8))),1==this.numBytes?this.mask=255:this.mask=65535,this.scan.read(this.stream),this.numComp=this.scan.numComp,this.selection=this.scan.selection,1===this.numBytes?3===this.numComp?(this.getter=this.getValueRGB,this.setter=this.setValueRGB,this.output=this.outputRGB):(this.getter=this.getValue8,this.setter=this.setValue8,this.output=this.outputSingle):(this.getter=this.getValue16,this.setter=this.setValue16,this.output=this.outputSingle),this.selection){case 2:this.selector=this.select2;break;case 3:this.selector=this.select3;break;case 4:this.selector=this.select4;break;case 5:this.selector=this.select5;break;case 6:this.selector=this.select6;break;case 7:this.selector=this.select7;break;default:this.selector=this.select1}for(this.scanComps=this.scan.components,this.quantTables=this.quantTable.quantTables,E=0;E<this.numComp;E+=1)i=this.scanComps[E].scanCompSel,this.qTab[E]=this.quantTables[this.components[i].quantTableSel],this.nBlock[E]=this.components[i].vSamp*this.components[i].hSamp,this.dcTab[E]=this.HuffTab[this.scanComps[E].dcTabSel][0],this.acTab[E]=this.HuffTab[this.scanComps[E].acTabSel][1];for(this.xDim=this.frame.dimX,this.yDim=this.frame.dimY,1==this.numBytes?this.outputData=new Uint8Array(new ArrayBuffer(this.xDim*this.yDim*this.numBytes*this.numComp)):this.outputData=new Uint16Array(new ArrayBuffer(this.xDim*this.yDim*this.numBytes*this.numComp)),D+=1;;){for(s[0]=0,a[0]=0,E=0;E<10;E+=1)w[E]=1<<this.precision-1;if(0===this.restartInterval){for(C=this.decodeUnit(w,s,a);0===C&&this.xLoc<this.xDim&&this.yLoc<this.yDim;)this.output(w),C=this.decodeUnit(w,s,a);break}for(o=0;o<this.restartInterval&&(this.restarting=0==o,C=this.decodeUnit(w,s,a),this.output(w),0===C);o+=1);if(0===C&&(0!==this.markerIndex?(C=65280|this.marker,this.markerIndex=0):C=this.stream.get16()),!(C>=Q.lossless.Decoder.RESTART_MARKER_BEGIN&&C<=Q.lossless.Decoder.RESTART_MARKER_END))break}65500===C&&1===D&&(this.readNumber(),C=this.stream.get16())}while(65497!==C&&this.xLoc<this.xDim&&this.yLoc<this.yDim&&0===D);return this.outputData},Q.lossless.Decoder.prototype.decodeUnit=function(A,I,g){return 1==this.numComp?this.decodeSingle(A,I,g):3==this.numComp?this.decodeRGB(A,I,g):-1},Q.lossless.Decoder.prototype.select1=function(A){return this.getPreviousX(A)},Q.lossless.Decoder.prototype.select2=function(A){return this.getPreviousY(A)},Q.lossless.Decoder.prototype.select3=function(A){return this.getPreviousXY(A)},Q.lossless.Decoder.prototype.select4=function(A){return this.getPreviousX(A)+this.getPreviousY(A)-this.getPreviousXY(A)},Q.lossless.Decoder.prototype.select5=function(A){return this.getPreviousX(A)+(this.getPreviousY(A)-this.getPreviousXY(A)>>1)},Q.lossless.Decoder.prototype.select6=function(A){return this.getPreviousY(A)+(this.getPreviousX(A)-this.getPreviousXY(A)>>1)},Q.lossless.Decoder.prototype.select7=function(A){return(this.getPreviousX(A)+this.getPreviousY(A))/2},Q.lossless.Decoder.prototype.decodeRGB=function(A,I,g){var B,C,E,i,o,D,w,s;for(A[0]=this.selector(0),A[1]=this.selector(1),A[2]=this.selector(2),o=0;o<this.numComp;o+=1)for(i=this.qTab[o],C=this.acTab[o],E=this.dcTab[o],D=0;D<this.nBlock[o];D+=1){for(w=0;w<this.IDCT_Source.length;w+=1)this.IDCT_Source[w]=0;if((B=this.getHuffmanValue(E,I,g))>=65280)return B;for(A[o]=this.IDCT_Source[0]=A[o]+this.getn(g,B,I,g),this.IDCT_Source[0]*=i[0],s=1;s<64;s+=1){if((B=this.getHuffmanValue(C,I,g))>=65280)return B;if(s+=B>>4,15&B)this.IDCT_Source[Q.lossless.Decoder.IDCT_P[s]]=this.getn(g,15&B,I,g)*i[s];else if(!(B>>4))break}}return 0},Q.lossless.Decoder.prototype.decodeSingle=function(A,I,g){var B,C,E,i;for(this.restarting?(this.restarting=!1,A[0]=1<<this.frame.precision-1):A[0]=this.selector(),C=0;C<this.nBlock[0];C+=1){if((B=this.getHuffmanValue(this.dcTab[0],I,g))>=65280)return B;if((i=(E=this.getn(A,B,I,g))>>8)>=Q.lossless.Decoder.RESTART_MARKER_BEGIN&&i<=Q.lossless.Decoder.RESTART_MARKER_END)return i;A[0]+=E}return 0},Q.lossless.Decoder.prototype.getHuffmanValue=function(A,I,g){var B,C;if(65535,g[0]<8?(I[0]<<=8,255===(C=this.stream.get8())&&(this.marker=this.stream.get8(),0!==this.marker&&(this.markerIndex=9)),I[0]|=C):g[0]-=8,(B=A[I[0]>>g[0]])&Q.lossless.Decoder.MSB){if(0!==this.markerIndex)return this.markerIndex=0,65280|this.marker;I[0]&=65535>>16-g[0],I[0]<<=8,255===(C=this.stream.get8())&&(this.marker=this.stream.get8(),0!==this.marker&&(this.markerIndex=9)),I[0]|=C,B=A[256*(255&B)+(I[0]>>g[0])],g[0]+=8}if(g[0]+=8-(B>>8),g[0]<0)throw new Error(`index=${g[0]} temp=${I[0]} code=${B} in HuffmanValue()`);return g[0]<this.markerIndex?(this.markerIndex=0,65280|this.marker):(I[0]&=65535>>16-g[0],255&B)},Q.lossless.Decoder.prototype.getn=function(A,I,g,B){var Q,C;if(1,-1,65535,0===I)return 0;if(16===I)return A[0]>=0?-32768:32768;if(B[0]-=I,B[0]>=0){if(B[0]<this.markerIndex&&!this.isLastPixel())return this.markerIndex=0,(65280|this.marker)<<8;Q=g[0]>>B[0],g[0]&=65535>>16-B[0]}else{if(g[0]<<=8,255===(C=this.stream.get8())&&(this.marker=this.stream.get8(),0!==this.marker&&(this.markerIndex=9)),g[0]|=C,B[0]+=8,B[0]<0){if(0!==this.markerIndex)return this.markerIndex=0,(65280|this.marker)<<8;g[0]<<=8,255===(C=this.stream.get8())&&(this.marker=this.stream.get8(),0!==this.marker&&(this.markerIndex=9)),g[0]|=C,B[0]+=8}if(B[0]<0)throw new Error(`index=${B[0]} in getn()`);if(B[0]<this.markerIndex)return this.markerIndex=0,(65280|this.marker)<<8;Q=g[0]>>B[0],g[0]&=65535>>16-B[0]}return Q<1<<I-1&&(Q+=1+(-1<<I)),Q},Q.lossless.Decoder.prototype.getPreviousX=function(A){return this.xLoc>0?this.getter(this.yLoc*this.xDim+this.xLoc-1,A):this.yLoc>0?this.getPreviousY(A):1<<this.frame.precision-1},Q.lossless.Decoder.prototype.getPreviousXY=function(A){return this.xLoc>0&&this.yLoc>0?this.getter((this.yLoc-1)*this.xDim+this.xLoc-1,A):this.getPreviousY(A)},Q.lossless.Decoder.prototype.getPreviousY=function(A){return this.yLoc>0?this.getter((this.yLoc-1)*this.xDim+this.xLoc,A):this.getPreviousX(A)},Q.lossless.Decoder.prototype.isLastPixel=function(){return this.xLoc===this.xDim-1&&this.yLoc===this.yDim-1},Q.lossless.Decoder.prototype.outputSingle=function(A){this.xLoc<this.xDim&&this.yLoc<this.yDim&&(this.setter(this.yLoc*this.xDim+this.xLoc,this.mask&A[0]),this.xLoc+=1,this.xLoc>=this.xDim&&(this.yLoc+=1,this.xLoc=0))},Q.lossless.Decoder.prototype.outputRGB=function(A){var I=this.yLoc*this.xDim+this.xLoc;this.xLoc<this.xDim&&this.yLoc<this.yDim&&(this.setter(I,A[0],0),this.setter(I,A[1],1),this.setter(I,A[2],2),this.xLoc+=1,this.xLoc>=this.xDim&&(this.yLoc+=1,this.xLoc=0))},Q.lossless.Decoder.prototype.setValue8=function(A,I){this.outputData[A]=I},Q.lossless.Decoder.prototype.getValue8=function(A){return this.outputData[A]},(B=new ArrayBuffer(2),new DataView(B).setInt16(0,256,!0),256===new Int16Array(B)[0])?(Q.lossless.Decoder.prototype.setValue16=Q.lossless.Decoder.prototype.setValue8,Q.lossless.Decoder.prototype.getValue16=Q.lossless.Decoder.prototype.getValue8):(Q.lossless.Decoder.prototype.setValue16=function(A,I){this.outputData[A]=(255&I)<<8|I>>8&255},Q.lossless.Decoder.prototype.getValue16=function(A){var I=this.outputData[A];return(255&I)<<8|I>>8&255}),Q.lossless.Decoder.prototype.setValueRGB=function(A,I,g){this.outputData[3*A+g]=I},Q.lossless.Decoder.prototype.getValueRGB=function(A,I){return this.outputData[3*A+I]},Q.lossless.Decoder.prototype.readApp=function(){var A=0,I=this.stream.get16();for(A+=2;A<I;)this.stream.get8(),A+=1;return I},Q.lossless.Decoder.prototype.readComment=function(){var A,I=\\\"\\\",g=0;for(A=this.stream.get16(),g+=2;g<A;)I+=this.stream.get8(),g+=1;return I},Q.lossless.Decoder.prototype.readNumber=function(){if(4!==this.stream.get16())throw new Error(\\\"ERROR: Define number format throw new IOException [Ld!=4]\\\");return this.stream.get16()},\\\"undefined\\\"!==typeof I&&I.exports&&(I.exports=Q.lossless.Decoder)},{\\\"./data-stream.js\\\":2,\\\"./frame-header.js\\\":4,\\\"./huffman-table.js\\\":5,\\\"./quantization-table.js\\\":7,\\\"./scan-header.js\\\":9,\\\"./utils.js\\\":10}],4:[function(A,I,g){var B=B||{};B.lossless=B.lossless||{},B.lossless.ComponentSpec=B.lossless.ComponentSpec||(void 0!==A?A(\\\"./component-spec.js\\\"):null),B.lossless.DataStream=B.lossless.DataStream||(void 0!==A?A(\\\"./data-stream.js\\\"):null),B.lossless.FrameHeader=B.lossless.FrameHeader||function(){this.components=[],this.dimX=0,this.dimY=0,this.numComp=0,this.precision=0},B.lossless.FrameHeader.prototype.read=function(A){var I,g,Q,C,E=0;for(I=A.get16(),E+=2,this.precision=A.get8(),E+=1,this.dimY=A.get16(),E+=2,this.dimX=A.get16(),E+=2,this.numComp=A.get8(),E+=1,g=1;g<=this.numComp;g+=1){if(E>I)throw new Error(\\\"ERROR: frame format error\\\");if(Q=A.get8(),(E+=1)>=I)throw new Error(\\\"ERROR: frame format error [c>=Lf]\\\");C=A.get8(),E+=1,this.components[Q]||(this.components[Q]=new B.lossless.ComponentSpec),this.components[Q].hSamp=C>>4,this.components[Q].vSamp=15&C,this.components[Q].quantTableSel=A.get8(),E+=1}if(E!==I)throw new Error(\\\"ERROR: frame format error [Lf!=count]\\\");return 1},\\\"undefined\\\"!==typeof I&&I.exports&&(I.exports=B.lossless.FrameHeader)},{\\\"./component-spec.js\\\":1,\\\"./data-stream.js\\\":2}],5:[function(A,I,g){var B=B||{};B.lossless=B.lossless||{},B.lossless.DataStream=B.lossless.DataStream||(void 0!==A?A(\\\"./data-stream.js\\\"):null),B.lossless.Utils=B.lossless.Utils||(void 0!==A?A(\\\"./utils.js\\\"):null),B.lossless.HuffmanTable=B.lossless.HuffmanTable||function(){this.l=B.lossless.Utils.createArray(4,2,16),this.th=[],this.v=B.lossless.Utils.createArray(4,2,16,200),this.tc=B.lossless.Utils.createArray(4,2),this.tc[0][0]=0,this.tc[1][0]=0,this.tc[2][0]=0,this.tc[3][0]=0,this.tc[0][1]=0,this.tc[1][1]=0,this.tc[2][1]=0,this.tc[3][1]=0,this.th[0]=0,this.th[1]=0,this.th[2]=0,this.th[3]=0},B.lossless.HuffmanTable.MSB=2147483648,B.lossless.HuffmanTable.prototype.read=function(A,I){var g,B,Q,C,E,i,o=0;for(g=A.get16(),o+=2;o<g;){if(o+=1,(Q=15&(B=A.get8()))>3)throw new Error(\\\"ERROR: Huffman table ID > 3\\\");if((C=B>>4)>2)throw new Error(\\\"ERROR: Huffman table [Table class > 2 ]\\\");for(this.th[Q]=1,this.tc[Q][C]=1,E=0;E<16;E+=1)this.l[Q][C][E]=A.get8(),o+=1;for(E=0;E<16;E+=1)for(i=0;i<this.l[Q][C][E];i+=1){if(o>g)throw new Error(\\\"ERROR: Huffman table format error [count>Lh]\\\");this.v[Q][C][E][i]=A.get8(),o+=1}}if(o!==g)throw new Error(\\\"ERROR: Huffman table format error [count!=Lf]\\\");for(E=0;E<4;E+=1)for(i=0;i<2;i+=1)0!==this.tc[E][i]&&this.buildHuffTable(I[E][i],this.l[E][i],this.v[E][i]);return 1},B.lossless.HuffmanTable.prototype.buildHuffTable=function(A,I,g){var Q,C,E,i,o;for(256,C=0,E=0;E<8;E+=1)for(i=0;i<I[E];i+=1)for(o=0;o<256>>E+1;o+=1)A[C]=g[E][i]|E+1<<8,C+=1;for(E=1;C<256;E+=1,C+=1)A[C]=E|B.lossless.HuffmanTable.MSB;for(Q=1,C=0,E=8;E<16;E+=1)for(i=0;i<I[E];i+=1){for(o=0;o<256>>E-7;o+=1)A[256*Q+C]=g[E][i]|E+1<<8,C+=1;if(C>=256){if(C>256)throw new Error(\\\"ERROR: Huffman table error(1)!\\\");C=0,Q+=1}}},\\\"undefined\\\"!==typeof I&&I.exports&&(I.exports=B.lossless.HuffmanTable)},{\\\"./data-stream.js\\\":2,\\\"./utils.js\\\":10}],6:[function(A,I,g){var B=B||{};B.lossless=B.lossless||{},B.lossless.ComponentSpec=B.lossless.ComponentSpec||(void 0!==A?A(\\\"./component-spec.js\\\"):null),B.lossless.DataStream=B.lossless.DataStream||(void 0!==A?A(\\\"./data-stream.js\\\"):null),B.lossless.Decoder=B.lossless.Decoder||(void 0!==A?A(\\\"./decoder.js\\\"):null),B.lossless.FrameHeader=B.lossless.FrameHeader||(void 0!==A?A(\\\"./frame-header.js\\\"):null),B.lossless.HuffmanTable=B.lossless.HuffmanTable||(void 0!==A?A(\\\"./huffman-table.js\\\"):null),B.lossless.QuantizationTable=B.lossless.QuantizationTable||(void 0!==A?A(\\\"./quantization-table.js\\\"):null),B.lossless.ScanComponent=B.lossless.ScanComponent||(void 0!==A?A(\\\"./scan-component.js\\\"):null),B.lossless.ScanHeader=B.lossless.ScanHeader||(void 0!==A?A(\\\"./scan-header.js\\\"):null),B.lossless.Utils=B.lossless.Utils||(void 0!==A?A(\\\"./utils.js\\\"):null),\\\"undefined\\\"!==typeof I&&I.exports&&(I.exports=B)},{\\\"./component-spec.js\\\":1,\\\"./data-stream.js\\\":2,\\\"./decoder.js\\\":3,\\\"./frame-header.js\\\":4,\\\"./huffman-table.js\\\":5,\\\"./quantization-table.js\\\":7,\\\"./scan-component.js\\\":8,\\\"./scan-header.js\\\":9,\\\"./utils.js\\\":10}],7:[function(A,I,g){var B=B||{};B.lossless=B.lossless||{},B.lossless.DataStream=B.lossless.DataStream||(void 0!==A?A(\\\"./data-stream.js\\\"):null),B.lossless.Utils=B.lossless.Utils||(void 0!==A?A(\\\"./utils.js\\\"):null),B.lossless.QuantizationTable=B.lossless.QuantizationTable||function(){this.precision=[],this.tq=[],this.quantTables=B.lossless.Utils.createArray(4,64),this.tq[0]=0,this.tq[1]=0,this.tq[2]=0,this.tq[3]=0},B.lossless.QuantizationTable.enhanceQuantizationTable=function(A,I){var g;for(g=0;g<8;g+=1)A[I[0+g]]*=90,A[I[32+g]]*=90,A[I[16+g]]*=118,A[I[48+g]]*=49,A[I[40+g]]*=71,A[I[8+g]]*=126,A[I[56+g]]*=25,A[I[24+g]]*=106;for(g=0;g<8;g+=1)A[I[0+8*g]]*=90,A[I[4+8*g]]*=90,A[I[2+8*g]]*=118,A[I[6+8*g]]*=49,A[I[5+8*g]]*=71,A[I[1+8*g]]*=126,A[I[7+8*g]]*=25,A[I[3+8*g]]*=106;for(g=0;g<64;g+=1)A[g]>>=6},B.lossless.QuantizationTable.prototype.read=function(A,I){var g,Q,C,E,i=0;for(g=A.get16(),i+=2;i<g;){if(i+=1,(C=15&(Q=A.get8()))>3)throw new Error(\\\"ERROR: Quantization table ID > 3\\\");if(this.precision[C]=Q>>4,0===this.precision[C])this.precision[C]=8;else{if(1!==this.precision[C])throw new Error(\\\"ERROR: Quantization table precision error\\\");this.precision[C]=16}if(this.tq[C]=1,8===this.precision[C]){for(E=0;E<64;E+=1){if(i>g)throw new Error(\\\"ERROR: Quantization table format error\\\");this.quantTables[C][E]=A.get8(),i+=1}B.lossless.QuantizationTable.enhanceQuantizationTable(this.quantTables[C],I)}else{for(E=0;E<64;E+=1){if(i>g)throw new Error(\\\"ERROR: Quantization table format error\\\");this.quantTables[C][E]=A.get16(),i+=2}B.lossless.QuantizationTable.enhanceQuantizationTable(this.quantTables[C],I)}}if(i!==g)throw new Error(\\\"ERROR: Quantization table error [count!=Lq]\\\");return 1},\\\"undefined\\\"!==typeof I&&I.exports&&(I.exports=B.lossless.QuantizationTable)},{\\\"./data-stream.js\\\":2,\\\"./utils.js\\\":10}],8:[function(A,I,g){var B=B||{};B.lossless=B.lossless||{},B.lossless.ScanComponent=B.lossless.ScanComponent||function(){this.acTabSel=0,this.dcTabSel=0,this.scanCompSel=0},\\\"undefined\\\"!==typeof I&&I.exports&&(I.exports=B.lossless.ScanComponent)},{}],9:[function(A,I,g){var B=B||{};B.lossless=B.lossless||{},B.lossless.DataStream=B.lossless.DataStream||(void 0!==A?A(\\\"./data-stream.js\\\"):null),B.lossless.ScanComponent=B.lossless.ScanComponent||(void 0!==A?A(\\\"./scan-component.js\\\"):null),B.lossless.ScanHeader=B.lossless.ScanHeader||function(){this.ah=0,this.al=0,this.numComp=0,this.selection=0,this.spectralEnd=0,this.components=[]},B.lossless.ScanHeader.prototype.read=function(A){var I,g,Q,C=0;for(I=A.get16(),C+=2,this.numComp=A.get8(),C+=1,g=0;g<this.numComp;g+=1){if(this.components[g]=new B.lossless.ScanComponent,C>I)throw new Error(\\\"ERROR: scan header format error\\\");this.components[g].scanCompSel=A.get8(),C+=1,Q=A.get8(),C+=1,this.components[g].dcTabSel=Q>>4,this.components[g].acTabSel=15&Q}if(this.selection=A.get8(),C+=1,this.spectralEnd=A.get8(),C+=1,Q=A.get8(),this.ah=Q>>4,this.al=15&Q,(C+=1)!==I)throw new Error(\\\"ERROR: scan header format error [count!=Ns]\\\");return 1},\\\"undefined\\\"!==typeof I&&I.exports&&(I.exports=B.lossless.ScanHeader)},{\\\"./data-stream.js\\\":2,\\\"./scan-component.js\\\":8}],10:[function(A,I,g){var B=B||{};B.lossless=B.lossless||{},B.lossless.Utils=B.lossless.Utils||{},B.lossless.Utils.createArray=function(A){var I=new Array(A||0),g=A;if(arguments.length>1)for(var Q=Array.prototype.slice.call(arguments,1);g--;)I[A-1-g]=B.lossless.Utils.createArray.apply(this,Q);return I},B.lossless.Utils.makeCRCTable=function(){for(var A,I=[],g=0;g<256;g++){A=g;for(var B=0;B<8;B++)A=1&A?3988292384^A>>>1:A>>>1;I[g]=A}return I},B.lossless.Utils.crc32=function(A){for(var I=new Uint8Array(A.buffer),g=B.lossless.Utils.crcTable||(B.lossless.Utils.crcTable=B.lossless.Utils.makeCRCTable()),Q=~0,C=0;C<I.length;C++)Q=Q>>>8^g[255&(Q^I[C])];return~Q>>>0},\\\"undefined\\\"!==typeof I&&I.exports&&(I.exports=B.lossless.Utils)},{}]},{},[6])(6)}))},716:()=>{},401:()=>{},491:()=>{},33:()=>{},261:()=>{},926:()=>{},280:()=>{},103:()=>{}},B={};function Q(A){var I=B[A];if(void 0!==I)return I.exports;var C=B[A]={exports:{}};return g[A].call(C.exports,C,C.exports,Q),C.exports}Q.n=A=>{var I=A&&A.__esModule?()=>A.default:()=>A;return Q.d(I,{a:I}),I},I=Object.getPrototypeOf?A=>Object.getPrototypeOf(A):A=>A.__proto__,Q.t=function(g,B){if(1&B&&(g=this(g)),8&B)return g;if(\\\"object\\\"==typeof g&&g){if(4&B&&g.__esModule)return g;if(16&B&&\\\"function\\\"==typeof g.then)return g}var C=Object.create(null);Q.r(C);var E={};A=A||[null,I({}),I([]),I(I)];for(var i=2&B&&g;\\\"object\\\"==typeof i&&!~A.indexOf(i);i=I(i))Object.getOwnPropertyNames(i).forEach((A=>E[A]=()=>g[A]));return E.default=()=>g,Q.d(C,E),C},Q.d=(A,I)=>{for(var g in I)Q.o(I,g)&&!Q.o(A,g)&&Object.defineProperty(A,g,{enumerable:!0,get:I[g]})},Q.o=(A,I)=>Object.prototype.hasOwnProperty.call(A,I),Q.r=A=>{\\\"undefined\\\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(A,Symbol.toStringTag,{value:\\\"Module\\\"}),Object.defineProperty(A,\\\"__esModule\\\",{value:!0})},(()=>{\\\"use strict\\\";const A={};let I,g=!1;function B(B){if(A[B.taskType])return console.log('attempt to register duplicate task handler \\\"',B.taskType,'\\\"'),!1;A[B.taskType]=B,g&&B.initialize(I.taskConfiguration)}self.onmessage=async function(Q){if(Q.data.taskType)if(\\\"initialize\\\"!==Q.data.taskType){if(\\\"loadWebWorkerTask\\\"===Q.data.taskType)return C=Q.data,I=C.config,void self.importScripts(C.sourcePath);var C;if(A[Q.data.taskType])try{await A[Q.data.taskType].handler(Q.data,(function(A,I){self.postMessage({taskType:Q.data.taskType,status:\\\"success\\\",result:A,workerIndex:Q.data.workerIndex},I)}))}catch(A){console.log(`task ${Q.data.taskType} failed - ${A.message}`,A),self.postMessage({taskType:Q.data.taskType,status:\\\"failed\\\",result:A.message,workerIndex:Q.data.workerIndex})}else console.log(\\\"no task handler for \\\",Q.data.taskType),console.log(A),self.postMessage({taskType:Q.data.taskType,status:\\\"failed - no task handler registered\\\",workerIndex:Q.data.workerIndex})}else!function(Q){if(!g){if(I=Q.config,self.registerTaskHandler=B,Q.config.webWorkerTaskPaths)for(let A=0;A<Q.config.webWorkerTaskPaths.length;A++)self.importScripts(Q.config.webWorkerTaskPaths[A]);Object.keys(A).forEach((function(g){A[g].initialize(I.taskConfiguration)})),self.postMessage({taskType:\\\"initialize\\\",status:\\\"success\\\",result:{},workerIndex:Q.workerIndex}),g=!0}}(Q.data);else console.log(Q.data)};var C=Q(272),E=Q.n(C);const i=\\\"data:application/wasm;base64,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AiACQf8BThsiAkEAIAJBAEobOgAAIANBAmohAyABQQJqIgEgD0cNAAsLIBBFDQIgAyAIakH/ASAHIANBAnRqKAIAIgEgAUH/AU4bIgFBACABQQBKGzoAAAwCCyAAKAIMIANqIQggAC0AHgRAIAlFDQJBACEDQQAhASAMBEADQCAIIANBAXRqQYCAfkH//wEgByADQQJ0aigCACICIAJB//8BThsiAiACQYCAfkwbOwEAIAggA0EBciICQQF0akGAgH5B//8BIAcgAkECdGooAgAiAiACQf//AU4bIgIgAkGAgH5MGzsBACADQQJqIQMgAUECaiIBIA9HDQALCyAQRQ0CIAggA0EBdGpBgIB+Qf//ASAHIANBAnRqKAIAIgEgAUH//wFOGyIBIAFBgIB+TBs7AQAMAgsgCUUNAUEAIQNBACEBIAwEQANAIAggA0EBdGpB//8DIAcgA0ECdGooAgAiAiACQf//A04bIgJBACACQQBKGzsBACAIIANBAXIiAkEBdGpB//8DIAcgAkECdGooAgAiAiACQf//A04bIgJBACACQQBKGzsBACADQQJqIQMgAUECaiIBIA9HDQALCyAQRQ0BIAggA0EBdGpB//8DIAcgA0ECdGooAgAiASABQf//A04bIgFBACABQQBKGzsBAAwBCyAALQAcQQhLDQAgCUUNACAAKAIMIANqIQFBACEDA0AgASADQQNsaiIIIAMgB2pBAnQiAiAGKAIMKAIYKAIsaigCADoAACAIIAYoAgwoAhgoAmAgAmooAgA6AAEgCCAGKAIMKAIYKAKUASACaigCADoAAiADQQFqIgMgCUcNAAsLIBRBAWoiFCANRw0ACwsgBBBIIAUQTyAGKAIMEDMLIAZB0MAAaiQADwsQbgALaAEDf0HYABAwQdAAaiIAQbjhATYCACAAQeThATYCAEGaChBVIgFBDWoQJSICQQA2AgggAiABNgIEIAIgATYCACAAIAJBDGpBmgogAUEBahAhNgIEIABBlOIBNgIAIABBtOIBQTkQHQALWgECfyMAQRBrIgIkACABIAAoAgQiA0EBdWohASAAKAIAIQAgAkEIaiABIANBAXEEfyABKAIAIABqKAIABSAACxEEAEEIECUiACACKQMINwMAIAJBEGokACAACxwAIAAgAUEIIAKnIAJCIIinIAOnIANCIIinEBML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ACgCHBEOAEUEQCAAIAAoAkRBCHI2AkRBAA8LIAAgATcDOEEBDwsgACAAKAJEQQhyNgJEIAJBBEH2/gBBABAeIAAgACgCREEIcjYCREEACwQAQn8LBABBAAsgACMAQRBrIgEkACABIAA2AgBB+AkgARBXIAFBEGokAAsgACMAQRBrIgEkACABIAA2AgBBjQogARBXIAFBEGokAAsgACMAQRBrIgEkACABIAA2AgBBgwogARBXIAFBEGokAAsHACAAKAJQCwcAIAAoAkwLDAAgACABKQJENwIACwwAIAAgASkCPDcCAAsMACAAIAEpAjQ3AgALIAAgASABKAIAIACnIAEoAggiASABrSAAVRtqNgIEQQELDAAgACABKQIsNwIACwcAIAAoAigLBwAgAC0AJAsHACAAKAIgC0cBAX8gASAAKAIEIgJBAXVqIQEgACgCACEAIAEgAkEBcQR/IAEoAgAgAGooAgAFIAALEQMAIQBBCBAlIgEgACkBADcDACABCwcAIABBGGoLOQEBfyABIAAoAgQiBEEBdWohASAAKAIAIQAgASACIAMgBEEBcQR/IAEoAgAgAGooAgAFIAALEQUACw8AIAAgAjYCVCAAIAEQbQsPACAAQQA2AlQgAEEAEG0LOAECfyABKAIAIAEoAghqIgMgASgCBCICRgRAQX8PCyABIAAgAmo2AgQgAyACayIBIAAgACABSxsLXAECfyMAQRBrIgMkACABIAAoAgQiBEEBdWohASAAKAIAIQAgA0EIaiABIAIgBEEBcQR/IAEoAgAgAGooAgAFIAALEQUAQQgQJSIAIAMpAwg3AwAgA0EQaiQAIAALIgEBfiABIAKtIAOtQiCGhCAEIAARCgAiBUIgiKckASAFpwsVACABIAKtIAOtQiCGhCAEIAARDwALIAEBfiABrSACrUIghoQgAyAAERAAIgRCIIinJAEgBKcLuAEBBH8gAS8BGiEDIAAgAS8BGCIBNgIAIAIEQAJAIAJBA3EiBkUEQCACIQQMAQsgAiEEA0AgBEEBayEEIANBAWpBAXYhAyABQQFqQQF2IQEgBUEBaiIFIAZHDQALCyACQQRPBEADQCADQQFqQQF2QQFqQQF2QQFqQQF2QQFqQQF2IQMgAUEBakEBdkEBakEBdkEBakEBdkEBakEBdiEBIARBBGsiBA0ACwsgACABNgIA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NgIECyAEQQA6AAAgACAAKAIsIgE2AhwgACABNgIUIAILigUCBn4CfyABIAEoAgBBB2pBeHEiAUEQajYCACAAIQkgASkDACEEIAEpAwghBSMAQSBrIgAkAAJAIAVC////////////AIMiA0KAgICAgIDAgDx9IANCgICAgICAwP/DAH1UBEAgBUIEhiAEQjyIhCEDIARC//////////8PgyIEQoGAgICAgICACFoEQCADQoGAgICAgICAwAB8IQIMAgsgA0KAgICAgICAgEB9IQIgBEKAgICAgICAgAhSDQEgAiADQgGDfCECDAELIARQIANCgICAgICAwP//AFQgA0KAgICAgIDA//8AURtFBEAgBUIEhiAEQjyIhEL/////////A4NCgICAgICAgPz/AIQhAgwBC0KAgICAgICA+P8AIQIgA0L///////+//8MAVg0AQgAhAiADQjCIpyIBQZH3AEkNACAEIQIgBUL///////8/g0KAgICAgIDAAIQiAyEGAkAgAUGB9wBrIghBwABxBEAgAiAIQUBqrYYhBkIAIQIMAQsgCEUNACAGIAitIgeGIAJBwAAgCGutiIQhBiACIAeGIQILIAAgAjcDECAAIAY3AxgCQEGB+AAgAWsiAUHAAHEEQCADIAFBQGqtiCEEQgAhAwwBCyABRQ0AIANBwAAgAWuthiAEIAGtIgKIhCEEIAMgAoghAwsgACAENwMAIAAgAzcDCCAAKQMIQgSGIAApAwAiBEI8iIQhAiAAKQMQIAApAxiEQgBSrSAEQv//////////D4OEIgRCgYCAgICAgIAIWgRAIAJCAXwhAgwBCyAEQoCAgICAgICACFINACACQgGDIAJ8IQILIABBIGokACAJIAIgBUKAgICAgICAgIB/g4S/OQMAC6kYAxJ/AXwCfiMAQbAEayILJAAgC0EANgIsAkAgAb0iGUIAUwRAQQEhEEHMCCETIAGaIgG9IRkMAQsgBEGAEHEEQEEBIRBBzwghEwwBC0HSCEHNCCAEQQFxIhAbIRMgEEUhFQsCQCAZQoCAgICAgID4/wCDQoCAgICAgID4/wBRBEAgAEEgIAIgEEEDaiIDIARB//97cRAsIAAgEyAQECogAEHBDEG7DyAFQSBxIgUbQawOQb8PIAUbIAEgAWIbQQMQKiAAQSAgAiADIARBgMAAcxAsIAMgAiACIANIGyEJDAELIAtBEGohEQJAAn8CQCABIAtBLGoQfiIBIAGgIgFEAAAAAAAAAABiBEAgCyALKAIsIgZBAWs2AiwgBUEgciIOQeEARw0BDAMLIAVBIHIiDkHhAEYNAiALKAIsIQpBBiADIANBAEgbDAELIAsgBkEdayIKNgIsIAFEAAAAAAAAsEGiIQFBBiADIANBAEgbCyEMIAtBMGpBoAJBACAKQQBOG2oiDSEHA0AgBwJ/IAFEAAAAAAAA8EFjIAFEAAAAAAAAAABmcQRAIAGrDAELQQALIgM2AgAgB0EEaiEHIAEgA7ihRAAAAABlzc1BoiIBRAAAAAAAAAAAYg0ACwJAIApBAEwEQCAKIQMgByEGIA0hCAwBCyANIQggCiEDA0BBHSADIANBHU4bIQMCQCAHQQRrIgYgCEkNACADrSEaQgAhGQNAIAYgGUL/////D4MgBjUCACAahnwiGSAZQoCU69wDgCIZQoCU69wDfn0+AgAgBkEEayIGIAhPDQALIBmnIgZFDQAgCEEEayIIIAY2AgALA0AgCCAHIgZJBEAgBkEEayIHKAIARQ0BCwsgCyALKAIsIANrIgM2AiwgBiEHIANBAEoNAAsLIANBAEgEQCAMQRlqQQluQQFqIQ8gDkHmAEYhEgNAQQlBACADayIDIANBCU4bIQkCQCAGIAhNBEAgCCgCACEHDAELQYCU69wDIAl2IRRBfyAJdEF/cyEWQQAhAyAIIQcDQCAHIAMgBygCACIXIAl2ajYCACAWIBdxIBRsIQMgB0EEaiIHIAZJDQALIAgoAgAhByADRQ0AIAYgAzYCACAGQQRqIQYLIAsgCygCLCAJaiIDNgIsIA0gCCAHRUECdGoiCCASGyIHIA9BAnRqIAYgBiAHa0ECdSAPShshBiADQQBIDQALC0EAIQMCQCAGIAhNDQAgDSAIa0ECdUEJbCEDQQohByAIKAIAIglBCkkNAANAIANBAWohAyAJIAdBCmwiB08NAAsLIAwgA0EAIA5B5gBHG2sgDkHnAEYgDEEAR3FrIgcgBiANa0ECdUEJbEEJa0gEQEEEQaQCIApBAEgbIAtqIAdBgMgAaiIJQQltIg9BAnRqQdAfayEKQQohByAJIA9BCWxrIglBB0wEQANAIAdBCmwhByAJQQFqIglBCEcNAAsLAkAgCigCACISIBIgB24iDyAHbGsiCUUgCkEEaiIUIAZGcQ0AAkAgD0EBcUUEQEQAAAAAAABAQyEBIAdBgJTr3ANHDQEgCCAKTw0BIApBBGstAABBAXFFDQELRAEAAAAAAEBDIQELRAAAAAAAAOA/RAAAAAAAAPA/RAAAAAAAAPg/IAYgFEYbRAAAAAAAAPg/IAkgB0EBdiIURhsgCSAUSRshGAJAIBUNACATLQAAQS1HDQAgGJohGCABmiEBCyAKIBIgCWsiCTYCACABIBigIAFhDQAgCiAHIAlqIgM2AgAgA0GAlOvcA08EQANAIApBADYCACAIIApBBGsiCksEQCAIQQRrIghBADYCAAsgCiAKKAIAQQFqIgM2AgAgA0H/k+vcA0sNAAsLIA0gCGtBAnVBCWwhA0EKIQcgCCgCACIJQQpJDQADQCADQQFqIQMgCSAHQQpsIgdPDQALCyAKQQRqIgcgBiAGIAdLGyEGCwNAIAYiByAITSIJRQRAIAdBBGsiBigCAEUNAQsLAkAgDkHnAEcEQCAEQQhxIQoMAQsgA0F/c0F/IAxBASAMGyIGIANKIANBe0pxIgobIAZqIQxBf0F+IAobIAVqIQUgBEEIcSIKDQBBdyEGAkAgCQ0AIAdBBGsoAgAiDkUNAEEKIQlBACEGIA5BCnANAANAIAYiCkEBaiEGIA4gCUEKbCIJcEUNAAsgCkF/cyEGCyAHIA1rQQJ1QQlsIQkgBUFfcUHGAEYEQEEAIQogDCAGIAlqQQlrIgZBACAGQQBKGyIGIAYgDEobIQwMAQtBACEKIAwgAyAJaiAGakEJayIGQQAgBkEAShsiBiAGIAxKGyEMC0F/IQkgDEH9////B0H+////ByAKIAxyIhIbSg0BIAwgEkEAR2pBAWohDgJAIAVBX3EiFUHGAEYEQCADIA5B/////wdzSg0DIANBACADQQBKGyEGDAELIBEgAyADQR91IgZzIAZrrSAREDsiBmtBAUwEQANAIAZBAWsiBkEwOgAAIBEgBmtBAkgNAAsLIAZBAmsiDyAFOgAAIAZBAWtBLUErIANBAEgbOgAAIBEgD2siBiAOQf////8Hc0oNAgsgBiAOaiIDIBBB/////wdzSg0BIABBICACIAMgEGoiBSAEECwgACATIBAQKiAAQTAgAiAFIARBgIAEcxAsAkACQAJAIBVBxgBGBEAgC0EQaiIGQQhyIQMgBkEJciEKIA0gCCAIIA1LGyIJIQgDQCAINQIAIAoQOyEGAkAgCCAJRwRAIAYgC0EQak0NAQNAIAZBAWsiBkEwOgAAIAYgC0EQaksNAAsMAQsgBiAKRw0AIAtBMDoAGCADIQYLIAAgBiAKIAZrECogCEEEaiIIIA1NDQALIBIEQCAAQacVQQEQKgsgByAITQ0BIAxBAEwNAQNAIAg1AgAgChA7IgYgC0EQaksEQANAIAZBAWsiBkEwOgAAIAYgC0EQaksNAAsLIAAgBkEJIAwgDEEJThsQKiAMQQlrIQYgCEEEaiIIIAdPDQMgDEEJSiEDIAYhDCADDQALDAILAkAgDEEASA0AIAcgCEEEaiAHIAhLGyEJIAtBEGoiBkEIciEDIAZBCXIhDSAIIQcDQCANIAc1AgAgDRA7IgZGBEAgC0EwOgAYIAMhBgsCQCAHIAhHBEAgBiALQRBqTQ0BA0AgBkEBayIGQTA6AAAgBiALQRBqSw0ACwwBCyAAIAZBARAqIAZBAWohBiAKIAxyRQ0AIABBpxVBARAqCyAAIAYgDCANIAZrIgYgBiAMShsQKiAMIAZrIQwgB0EEaiIHIAlPDQEgDEEATg0ACwsgAEEwIAxBEmpBEkEAECwgACAPIBEgD2sQKgwCCyAMIQYLIABBMCAGQQlqQQlBABAsCyAAQSAgAiAFIARBgMAAcxAsIAUgAiACIAVIGyEJDAELIBMgBUEadEEfdUEJcWohDAJAIANBC0sNAEEMIANrIQZEAAAAAAAAMEAhGANAIBhEAAAAAAAAMECiIRggBkEBayIGDQALIAwtAABBLUYEQCAYIAGaIBihoJohAQwBCyABIBigIBihIQELIBEgCygCLCIGIAZBH3UiBnMgBmutIBEQOyIGRgRAIAtBMDoADyALQQ9qIQYLIBBBAnIhCiAFQSBxIQggCygCLCEHIAZBAmsiDSAFQQ9qOgAAIAZBAWtBLUErIAdBAEgbOgAAIARBCHEhBiALQRBqIQcDQCAHIgUCfyABmUQAAAAAAADgQWMEQCABqgwBC0GAgICAeAsiB0HA2wFqLQAAIAhyOgAAIAEgB7ehRAAAAAAAADBAoiEBAkAgBUEBaiIHIAtBEGprQQFHDQACQCAGDQAgA0EASg0AIAFEAAAAAAAAAABhDQELIAVBLjoAASAFQQJqIQcLIAFEAAAAAAAAAABiDQALQX8hCUH9////ByAKIBEgDWsiBWoiBmsgA0gNACAAQSAgAiAGAn8CQCADRQ0AIAcgC0EQamsiCEECayADTg0AIANBAmoMAQsgByALQRBqayIICyIHaiIDIAQQLCAAIAwgChAqIABBMCACIAMgBEGAgARzECwgACALQRBqIAgQKiAAQTAgByAIa0EAQQAQLCAAIA0gBRAqIABBICACIAMgBEGAwABzECwgAyACIAIgA0gbIQkLIAtBsARqJAAgCQvOAgEDfyMAQRBrIgMkAEGk5QEtAABFBEBBpOUBQQE6AABBgOUBQbAIEA42AgBB/PcBLQAARQRAAn8DQCACQYDmAWotAABFBEAgAkGA5gFqQQE6AAAgAkECdEGA5wFqQQA2AgBBgPgBIAI2AgBBAAwCCyACQQFqIgJBgAFHDQALQQYLBEAQCAALQfz3AUEBOgAACwJAQf33AS0AAEUEQEEcIQICQEGA+AEoAgAiBEH/AEsNACAEQYDmAWotAABFDQAgBEECdEGA5wFqQYD4ATYCAEEAIQILIAINAUH99wFBAToAAAtBDBAwIgJFDQAgAkEANgIEIAJBMjYCACACQYT4ASgCADYCCEGE+AEgAjYCAAsLIAEoAhAhAiADIAEoAgwiATYCDCADIAIgAWs2AgggAEGA5QEoAgBBAUGMiQEgA0EIahANNgIAIANBEGokAAsEAEIAC14BAn8jAEEQayIDJAAgASAAKAIEIgRBAXVqIQEgACgCACEAIANBCGogASACIARBAXEEfyABKAIAIABqKAIABSAACxEFACADKAIIEAwgAygCCCIAEAcgA0EQaiQAIAALBABBAAuZAwEJfwJ/QasPIQACQANAIAAtAAAiAUUNASABQT1GDQEgAEEBaiIAQQNxDQALAkAgACgCACIBQX9zIAFBgYKECGtxQYCBgoR4cQ0AA0AgAUG9+vTpA3MiAUF/cyABQYGChAhrcUGAgYKEeHENASAAKAIEIQEgAEEEaiEAIAFBgYKECGsgAUF/c3FBgIGChHhxRQ0ACwsDQCAAIgEtAAAiAwRAIAFBAWohACADQT1HDQELCyABDAELIAALIgBBqw9GBEBBAA8LAkAgAEGrD2siA0GrD2otAAANAEG85QEoAgAiAkUNACACKAIAIgBFDQADQAJAAn9BACEFQasPIQRBACADIgZFDQAaAkBBqw8tAAAiAUUNAANAAkAgAC0AACIHRQ0AIAZBAWsiBkUNACABIAdHDQAgAEEBaiEAIAQtAAEhASAEQQFqIQQgAQ0BDAILCyABIQULIAVB/wFxIAAtAABrC0UEQCACKAIAIANqIgAtAABBPUYNAQsgAigCBCEAIAJBBGohAiAADQEMAgsLIABBAWohCAsgCAsJACAAKAI8EBgLhgIBBn8jAEEQayIHJAACQAJAIAECfyACIAEoAgQiAyABKAIAIgVrIgRLBEAgAiAEayIIIAEoAggiBiADa00EQCADQQAgCBAkIAhqDAILIAJBAEgNA0H/////ByAGIAVrIgNBAXQiBiACIAIgBkkbIANB/////wNPGyIDECUiBiAEakEAIAgQJBogASAGIAUgBBCCASIEIANqNgIIIAEgAiAEaiIDNgIEIAEgBDYCACAFRQ0CIAUQHyABKAIEIQMMAgsgAiAETw0BIAIgBWoLIgM2AgQLIAcgASgCACIBNgIMIAcgAyABazYCCCAAQfyIASAHQQhqEA82AgAgB0EQaiQADwsQbgAL9gIBB38jAEEgayIDJAAgAyAAKAIcIgQ2AhAgACgCFCEFIAMgAjYCHCADIAE2AhggAyAFIARrIgE2AhQgASACaiEFQQIhBwJ/AkACQAJAIAAoAjwgA0EQaiIBQQIgA0EMahAJIgQEf0G45QEgBDYCAEF/BUEACwRAIAEhBAwBCwNAIAUgAygCDCIGRg0CIAZBAEgEQCABIQQMBAsgASAGIAEoAgQiCEsiCUEDdGoiBCAGIAhBACAJG2siCCAEKAIAajYCACABQQxBBCAJG2oiASABKAIAIAhrNgIAIAUgBmshBSAAKAI8IAQiASAHIAlrIgcgA0EMahAJIgYEf0G45QEgBjYCAEF/BUEAC0UNAAsLIAVBf0cNAQsgACAAKAIsIgE2AhwgACABNgIUIAAgASAAKAIwajYCECACDAELIABBADYCHCAAQgA3AxAgACAAKAIAQSByNgIAQQAgB0ECRg0AGiACIAQoAgRrCyEAIANBIGokACAAC1YBAX8gACgCPCEDIwBBEGsiACQAIAMgAacgAUIgiKcgAkH/AXEgAEEIahASIgIEf0G45QEgAjYCAEF/BUEACyECIAApAwghASAAQRBqJABCfyABIAIbC40BAQR/A0AgACIBQQFqIQAgASwAACICQSBGIAJBCWtBBUlyDQALAkACQAJAIAEsAAAiAkEraw4DAQIAAgtBASEECyAALAAAIQIgACEBCyACQTBrQQpJBEADQCADQQpsIAEsAABrQTBqIQMgASwAASEAIAFBAWohASAAQTBrQQpJDQALCyADQQAgA2sgBBsLJAEBf0Gs5QEoAgAiAARAA0AgACgCABEIACAAKAIEIgANAAsLCyQBAn8gACgCBCIAEFVBAWoiARAwIgIEfyACIAAgARAhBUEACwtDAQF/QdgAECUiAEIANwIAIABCADcCLCAAQQE2AlQgAEIANwIQIABCADcCCCAAQgA3AjQgAEIANwI8IABCADcCRCAACwcAIAARCQALRgECfyACKAIAIAIoAghqIgQgAigCBCIDRgRAQX8PCyAAIAMgBCADayIAIAEgACABSRsiABAhGiACIAIoAgQgAGo2AgQgAAuPAQEEfyAAKAIYIgEEQCAAKAIcIgNBNE8EfyADQTRuIQRBACEDA0AgASgCACICBEAgAkEBaxAfIAFBADYCAAsgASgCBCICBEAgAhAfIAFBADYCBAsgASgCCCICBEAgAhAfIAFBADYCCAsgAUE0aiEBIANBAWoiAyAERw0ACyAAKAIYBSABCxAfIABBADYCGAsLNwEBfyAABEAgACgCDCIBBEAgACABNgIQIAEQHwsgACgCACIBBEAgACABNgIEIAEQHwsgABAfCwuGAQEEfyAAKAIYIgEEQCAAKAIcIgJBwABPBH8gAkEGdiEEQQAhAgNAIAEoAgAiAwRAIAMQHyABQQA2AgALIAEoAgQiAwRAIAMQHyABQQA2AgQLIAEoAjwQHyABQQA2AjwgAUFAayEBIAJBAWoiAiAERw0ACyAAKAIYBSABCxAfIABBADYCGAsLPwEBfyAABEAgACgCdCIBBEAgARAfIABBADYCdAsgACgCeCIBBEAgARAfIABBADYCeAsgACgClAEQHyAAEB8LC8OdBQM7fwR+AX0jAEHgAGsiJSQAIAAoAgghGAJAAkACQCAAKAIARQRAIBggGCgCECAYKAIIayAYKAIUIBgoAgxrbEECdCIGECgiBDYCPCAERQRAIAAoAiQaIAAoAiBBAUHGxgBBABAeIAAoAiQaIABBHGohCQwDCyAEQQAgBhAkGgwBCyAYKAI8IgRFDQAgBBAf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akEDajYCeCARQX8gAUECdkEHcSINdEF/cyAmIBN2cSABQQV2akEDajYCfCAPICRqIBNqIA1qCyEBAkAgKCARKAJ4Ig1PBEAgESgCfCIPIChNDQELICAEQEEAIQIgHUEBQY6AAUEAEB4MBwtBACECIB1BAUGOgAFBABAeDAYLIBEgBSABazYC8AEgESA9IAGtiDcD6AEgCEHwAXEgF0EPcXJB/wFB/wEgEEEEaiIFIBRrQQF0diAFIBRMGyIBIAFB1QBxICFBAUobIgFBf3NxBEAgIARAQQAhAiAdQQFBpOQAQQAQHgwHC0EAIQIgHUEBQaTkAEEAEB4MBgsCQAJAIBsEQCARQcABahAtIRcgESARKALQASANIAJBE3RBH3VqIhNrNgLQASARIBEpA8gBIBOtiDcDyAEgF0F/IBN0QX9zcSACQQh2QQFxIBN0ckEBckECaiAedCAXQR90ciETDAELQQAhEyABQQFxRQ0BCyAKIBM2AgALAkAgAkEgcQRAIBFBwAFqEC0hFyARIBEoAtABIA0gAkESdEEfdWoiE2s2AtABIBEgESkDyAEgE62INwPIASAKIBRBAnRqIBdBfyATdEF/c3EgAkEJdkEBcSATdHJBAXIiE0ECaiAedCAXQR90cjYCACAGQSAgE2drIhMgBi0AAEH/AHEiFyATIBdLG0GAAXI6AAAMAQsgAUECcUUNACAKIBRBAnRqQQA2AgALIApBBGohEwJAAkAgAkHAAHEEQCARQcABahAtIRsgESARKALQASANIAJBEXRBH3VqIhdrNgLQASARIBEpA8gBIBetiDcDyAEgG0F/IBd0QX9zcSACQQp2QQFxIBd0ckEBckECaiAedCAbQR90ciEXDAELQQAhFyABQQRxRQ0BCyATIBc2AgALIAZBADoAAQJAIAJBgAFxBEAgEUHAAWoQLSEXIBEgESgC0AEgDSACQRB0QR91aiINazYC0AEgESARKQPIASANrYg3A8gBIBMgFEECdGogF0F/IA10QX9zcSACQQt2QQFxIA10ckEBciICQQJqIB50IBdBH3RyNgIAIAZBoH8gAmdrOgABDAELIAFBCHFFDQAgEyAUQQJ0akEANgIACyAKQQhqIQICQAJAIAhBEHEEQCARQcABahAtIQ0gESARKALQASAPIAhBE3RBH3VqIhNrNgLQASARIBEpA8gB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AUEEaiEBIABBCGohACAEQQFqIgQgAkcNAAsLIANBEGokAAuEAQICfwF9IwBBEGsiAyQAIAIEQANAIAMgAC0AADoADyADIAAtAAE6AA4gAyAALQACOgANIAMgAC0AAzoADCABAn8gAyoCDCIFi0MAAABPXQRAIAWoDAELQYCAgIB4CzYCACABQQRqIQEgAEEEaiEAIARBAWoiBCACRw0ACwsgA0EQaiQAC0sBAn8jAEEQayIDJAAgAgRAA0AgACADQQxqQQQQICABIAMoAgw2AgAgAUEEaiEBIABBBGohACAEQQFqIgQgAkcNAAsLIANBEGokAAtLAQJ/IwBBEGsiAyQAIAIEQANAIAAgA0EMakECECAgASADKAIMNgIAIAFBBGohASAAQQJqIQAgBEEBaiIEIAJHDQALCyADQRBqJAALSgECfyMAQRBrIgMkACACBEADQCAAIANBCGoQaiABIAMrAwi2OAIAIAFBBGohASAAQQhqIQAgBEEBaiIEIAJHDQALCyADQRBqJAALaAECfyMAQRBrIgMkACACBEADQCADIAAtAAA6AA8gAyAALQABOgAOIAMgAC0AAjoADSADIAAtAAM6AAwgASADKgIMOAIAIAFBBGohASAAQQRqIQAgBEEBaiIEIAJHDQALCyADQRBqJAALTAECfyMAQRBrIgMkACACBEADQCAAIANBDGpBBBAgIAEgAygCDLM4AgAgAUEEaiEBIABBBGohACAEQQFqIgQgAkcNAAsLIANBEGokAAtMAQJ/IwBBEGsiAyQAIAIEQANAIAAgA0EMakECECAgASADKAIMszgCACABQQRqIQEgAEECaiEAIARBAWoiBCACRw0ACwsgA0EQaiQAC50HAQd/IwBBEGsiBiQAAn8gACgCCEEQRgRAIAAoApwBIAAoAswBQYwsbGoMAQsgACgCDAshBwJAIAJFBEAgA0EBQcspQQAQHgwBCyAAKAJIIQhBASEEIAEgBkEIakEBECAgBigCCCIFQQJPBEAgA0ECQbvSAEEAEB4MAQsgAiAFQQFqRwRAQQAhBCADQQJByylBABAeDAELAkAgCCgCECIDRQ0AIAcoAtArIQQgA0EITwRAIANBeHEhCEEAIQIDQCAEQQA2ArQIIARBvMMAakEANgIAIARBhDtqQQA2AgAgBEHMMmpBADYCACAEQZQqakEANgIA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DQEgBEEMNgIwIANBAkHa4QAgBEEwahAeIAQoAmwFIAULRQRAIANBBEGn2QBBABAeIABBATYCOAsCQAJAAkACQCACIAFBjCxsaiIGKALYKyIFBEAgBCgCZCICIAVJDQEgBCAFNgIkIAQgAjYCICADQQFB4DAgBEEgahAeIABBATYCOEEAIQUMBgsgBCgCaCICDQEMAwsgBCgCaCICRQ0BCyAEIAIgAC0AREEEdkEBcWoiBTYCaCAEKAJkIQICQCAGQdgraiIJKAIAIgZFDQAgAiAGSQ0AIAQgBjYCFCAEIAI2AhAgA0EBQf0vIARBEGoQHiAAQQE2AjhBACEFDAQLIAIgBU8EQCAEIAU2AgQgBCACNgIAIANBAUHEMSAEEB4gAEEBNgI4QQAhBQwECyAJIAU2AgALIAUgBCgCZEEBakcNACAAIAAtAERBAXI6AEQLIAQoAmwhAiAAQRA2AgggAEEAIAJBDGsgACgCOBs2AhgCQCAAKAIsIgJBf0YEQEEEIQUgASAHIAhsayIBIAAoAhxJDQEgASAAKAIkTw0BIAcgACgCIEkNASAHIAAoAihPQQJ0IQUMAQsgACgCzAEgAkdBAnQhBQsgACAALQBEQfsBcSAFcjoAREEBIQUgACgCyAEiAUUNASABKAIoIgYgACgCzAEiAkEobGoiASACNgIAIAEgBCgCZDYCDCAEKAJoIgcEQCABIAc2AgQgASAEKAJoNgIIIAQoAmghAiABKAIQIgFFBEAgAkEYECIhASAAKALIASgCKCAAKALMAUEobGogATYCECABDQNBACEFIANBAUGKPkEAEB4MAwsgASACQRhsECchASAAKALIASgCKCAAKALMAUEobGohAiABRQRAIAIoAhAQH0EAIQUgACgCyAEoAiggACgCzAFBKGxqQQA2AhAgA0EBQYo+QQAQHgwDCyACIAE2AhAMAgsCQCABKAIQIgENACAGIAJBKGxqQQo2AghBCkEYECIhASAAKALIASgCKCIGIAAoAswBIgJBKGxqIgcgATYCECABDQBBACEFIAdBADYCCCADQQFBij5BABAeDAILIAQoAmQiByAGIAJBKGxqIgIoAghJDQEgAiAHQQFqIgI2AgggASACQRhsECchASAAKALIASgCKCAAKALMAUEobGohAiABRQRAIAIoAhAQH0EAIQUgACgCyAEoAigg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IAJBBEHbhgEgA0EQahAeIAEpAwgiCVAEfkIABSAJIAEpAzh9C1AEQCAAKAIIQcAARg0BCyAIQQFqIgggACgCaCIEIAAoAmxsRw0BCwsgACACEJkBQQBHIQQLIANB0ABqJAAgBAsLAEGA5QEoAgAQBwsLhtkBKgBBgAgLpoEBY2Fubm90IGFsbG9jYXRlIG9wal90Y2Rfc2VnX2RhdGFfY2h1bmtfdCogYXJyYXkAVWludDhDbGFtcGVkQXJyYXkALSsgICAwWDB4AC0wWCswWCAwWC0weCsweCAweAB1bnNpZ25lZCBzaG9ydABjb21wb25lbnRDb3VudABQb2ludAB1bnNpZ25lZCBpbnQAaGVpZ2h0AGdldFRpbGVPZmZzZXQAZ2V0SW1hZ2VPZmZzZXQAZmxvYXQAdWludDY0X3QAZ2V0TnVtTGF5ZXJzAGdldE51bURlY29tcG9zaXRpb25zAGdldEJsb2NrRGltZW5zaW9ucwBbRVJST1JdICVzAFtJTkZPXSAlcwBbV0FSTklOR10gJXMAdmVjdG9yAGdldEVuY29kZWRCdWZmZXIAZ2V0RGVjb2RlZEJ1ZmZlcgBnZXRQcm9ncmVzc2lvbk9yZGVyAFtFUlJPUl0gb3BqX2RlY29tcHJlc3M6IGZhaWxlZCB0byBzZXR1cCB0aGUgZGVjb2RlcgBKMktEZWNvZGVyAFtFUlJPUl0gb3BqX2RlY29tcHJlc3M6IGZhaWxlZCB0byByZWFkIHRoZSBoZWFkZXIAcmVhZEhlYWRlcgB1bnNpZ25lZCBjaGFyAC9yb290L3JlcG8vcGFja2FnZXMvb3BlbmpwZWcvc3JjL0oyS0RlY29kZXIuaHBwAGdldEZyYW1lSW5mbwBkZWNvZGVTdWJSZXNvbHV0aW9uAHN0ZDo6ZXhjZXB0aW9uAG5hbgBib29sAGNhbGN1bGF0ZVNpemVBdERlY29tcG9zaXRpb25MZXZlbABlbXNjcmlwdGVuOjp2YWwAKmxfdGlsZV9sZW4gPiBVSU5UX01BWCAtIE9QSl9DT01NT05fQ0JMS19EQVRBX0VYVFJBIC0gcF9qMmstPm1fc3BlY2lmaWNfcGFyYW0ubV9kZWNvZGVyLm1fc290X2xlbmd0aAB3aWR0aAB1bnNpZ25lZCBsb25nAHN0ZDo6d3N0cmluZwBzdGQ6OnN0cmluZwBzdGQ6OnUxNnN0cmluZwBzdGQ6OnUzMnN0cmluZwBpbmYAZ2V0VGlsZVNpemUAYml0c1BlclNhbXBsZQBkb3VibGUAZ2V0SXNSZXZlcnNpYmxlAEludmFsaWQgYWNjZXNzIHRvIHBpLT5pbmNsdWRlAGRlY29kZQBnZXRDb2xvclNwYWNlAHZvaWQAaXNTaWduZWQAQUxMX0NQVVMAT1BKX05VTV9USFJFQURTAE5BTgBJTkYAcF9qMmstPm1fc3BlY2lmaWNfcGFyYW0ubV9kZWNvZGVyLm1fc290X2xlbmd0aCA+IFVJTlRfTUFYIC0gT1BKX0NPTU1PTl9DQkxLX0RBVEFfRVhUUkEAZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8c2hvcnQ+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVuc2lnbmVkIHNob3J0PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxpbnQ+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVuc2lnbmVkIGludD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8ZmxvYXQ+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVpbnQ4X3Q+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGludDhfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dWludDE2X3Q+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGludDE2X3Q+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVpbnQzMl90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxpbnQzMl90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxjaGFyPgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzx1bnNpZ25lZCBjaGFyPgBzdGQ6OmJhc2ljX3N0cmluZzx1bnNpZ25lZCBjaGFyPgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxzaWduZWQgY2hhcj4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8bG9uZz4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dW5zaWduZWQgbG9uZz4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8ZG91YmxlPgAJCQkgcHJlY2NpbnRzaXplICh3LGgpPQAJCQkgc3RlcHNpemVzIChtLGUpPQAuAChudWxsKQBzdGQ6Ol9fbGliY3BwX3Rsc19jcmVhdGUoKSBmYWlsZWQgaW4gX19jeGFfdGhyZWFkX2F0ZXhpdCgpAFtFUlJPUl0gb3BqX2RlY29tcHJlc3M6IGZhaWxlZCB0byBkZWNvZGUgdGlsZSEAKCVkLCVkKSAAJXN9CgAJCSB9CgBbREVWXSBEdW1wIGFuIGltYWdlX2NvbXBfaGVhZGVyIHN0cnVjdCB7CgBbREVWXSBEdW1wIGFuIGltYWdlX2hlYWRlciBzdHJ1Y3QgewoASW1hZ2UgaW5mbyB7CgAJIGRlZmF1bHQgdGlsZSB7CgAlcwkgY29tcG9uZW50ICVkIHsKAAkJIGNvbXAgJWQgewoACSBUaWxlIGluZGV4OiB7CgAJIE1hcmtlciBsaXN0OiB7CgBDb2Rlc3RyZWFtIGluZGV4IGZyb20gbWFpbiBoZWFkZXI6IHsKAENvZGVzdHJlYW0gaW5mbyBmcm9tIG1haW4gaGVhZGVyOiB7CgBTdHJlYW0gZXJyb3Igd2hpbGUgcmVhZGluZyBKUDIgSGVhZGVyIGJveAoARm91bmQgYSBtaXNwbGFjZWQgJyVjJWMlYyVjJyBib3ggb3V0c2lkZSBqcDJoIGJveAoATWFsZm9ybWVkIEpQMiBmaWxlIGZvcm1hdDogZmlyc3QgYm94IG11c3QgYmUgSlBFRyAyMDAwIHNpZ25hdHVyZSBib3gKAE1hbGZvcm1lZCBKUDIgZmlsZSBmb3JtYXQ6IHNlY29uZCBib3ggbXVzdCBiZSBmaWxlIHR5cGUgYm94CgBOb3QgZW5vdWdoIG1lbW9yeSB0byBoYW5kbGUganBlZzIwMDAgYm94CgBOb3QgZW5vdWdoIG1lbW9yeSB3aXRoIEZUWVAgQm94CgBBIG1hcmtlciBJRCB3YXMgZXhwZWN0ZWQgKDB4ZmYtLSkgaW5zdGVhZCBvZiAlLjh4CgAJCSBtY3Q9JXgKAAkJCSBjYmxrc3R5PSUjeAoACQkJIGNzdHk9JSN4CgAJCSBwcmc9JSN4CgBJbnRlZ2VyIG92ZXJmbG93CgBJbnZhbGlkIGNvbXBvbmVudCBpbmRleDogJXUKAFN0cmVhbSB0b28gc2hvcnQKAE1hcmtlciBoYW5kbGVyIGZ1bmN0aW9uIGZhaWxlZCB0byByZWFkIHRoZSBtYXJrZXIgc2VnbWVudAoATm90IGVub3VnaCBtZW1vcnkgZm9yIGN1cnJlbnQgcHJlY2luY3QgY29kZWJsb2NrIGVsZW1lbnQKAEVycm9yIHJlYWRpbmcgU1BDb2QgU1BDb2MgZWxlbWVudAoARXJyb3IgcmVhZGluZyBTUWNkIG9yIFNRY2MgZWxlbWVudAoAQSBCUENDIGhlYWRlciBib3ggaXMgYXZhaWxhYmxlIGFsdGhvdWdoIEJQQyBnaXZlbiBieSB0aGUgSUhEUiBib3ggKCVkKSBpbmRpY2F0ZSBjb21wb25lbnRzIGJpdCBkZXB0aCBpcyBjb25zdGFudAoARXJyb3Igd2l0aCBTSVogbWFya2VyOiBpbGxlZ2FsIHRpbGUgb2Zmc2V0CgBJbnZhbGlkIHByZWNpbmN0CgBOb3QgZW5vdWdoIG1lbW9yeSB0byBoYW5kbGUgYmFuZCBwcmVjaW50cwoARmFpbGVkIHRvIGRlY29kZSBhbGwgdXNlZCBjb21wb25lbnRzCgBTaXplIG9mIGNvZGUgYmxvY2sgZGF0YSBleGNlZWRzIHN5c3RlbSBsaW1pdHMKAFNpemUgb2YgdGlsZSBkYXRhIGV4Y2VlZHMgc3lzdGVtIGxpbWl0cwoAQ2Fubm90IHRha2UgaW4gY2hhcmdlIG11bHRpcGxlIE1DVCBtYXJrZXJzCgBDb3JydXB0ZWQgUFBNIG1hcmtlcnMKAE5vdCBlbm91Z2ggbWVtb3J5IGZvciB0aWxlIHJlc29sdXRpb25zCgBDYW5ub3QgdGFrZSBpbiBjaGFyZ2UgbXVsdGlwbGUgY29sbGVjdGlvbnMKAEludmFsaWQgUENMUiBib3guIFJlcG9ydHMgMCBwYWxldHRlIGNvbHVtbnMKAFdlIGRvIG5vdCBzdXBwb3J0IFJPSSBpbiBkZWNvZGluZyBIVCBjb2RlYmxvY2tzCgBDYW5ub3QgaGFuZGxlIGJveCBvZiB1bmRlZmluZWQgc2l6ZXMKAENhbm5vdCB0YWtlIGluIGNoYXJnZSBjb2xsZWN0aW9ucyB3aXRob3V0IHNhbWUgbnVtYmVyIG9mIGluZGl4ZXMKAEludmFsaWQgdGlsZWMtPndpbl94eHggdmFsdWVzCgBDYW5ub3QgaGFuZGxlIGJveCBvZiBsZXNzIHRoYW4gOCBieXRlcwoAQ2Fubm90IGhhbmRsZSBYTCBib3ggb2YgbGVzcyB0aGFuIDE2IGJ5dGVzCgBDb21wb25lbnQgaW5kZXggJXUgdXNlZCBzZXZlcmFsIHRpbWVzCgBJbnZhbGlkIFBDTFIgYm94LiBSZXBvcnRzICVkIGVudHJpZXMKAE5vdCBlbm91Z2ggbWVtb3J5IHRvIGNyZWF0ZSBUYWctdHJlZSBub2RlcwoAQ2Fubm90IHRha2UgaW4gY2hhcmdlIG1jdCBkYXRhIHdpdGhpbiBtdWx0aXBsZSBNQ1QgcmVjb3JkcwoAQ2Fubm90IGRlY29kZSB0aWxlLCBtZW1vcnkgZXJyb3IKAG9wal9qMmtfYXBwbHlfbmJfdGlsZV9wYXJ0c19jb3JyZWN0aW9uIGVycm9yCgBQcm9ibGVtIHdpdGggc2tpcHBpbmcgSlBFRzIwMDAgYm94LCBzdHJlYW0gZXJyb3IKAFByb2JsZW0gd2l0aCByZWFkaW5nIEpQRUcyMDAwIGJveCwgc3RyZWFtIGVycm9yCgBVbmtub3duIG1hcmtlcgoATm90IGVub3VnaCBtZW1vcnkgdG8gYWRkIHRsIG1hcmtlcgoATm90IGVub3VnaCBtZW1vcnkgdG8gYWRkIG1oIG1hcmtlcgoATm90IGVub3VnaCBtZW1vcnkgdG8gdGFrZSBpbiBjaGFyZ2UgU0laIG1hcmtlcgoARXJyb3IgcmVhZGluZyBQUFQgbWFya2VyCgBOb3QgZW5vdWdoIG1lbW9yeSB0byByZWFkIFBQVCBtYXJrZXIKAEVycm9yIHJlYWRpbmcgU09UIG1hcmtlcgoARXJyb3IgcmVhZGluZyBQTFQgbWFya2VyCgBFcnJvciByZWFkaW5nIE1DVCBtYXJrZXIKAE5vdCBlbm91Z2ggbWVtb3J5IHRvIHJlYWQgTUNUIG1hcmtlcgoATm90IGVub3VnaCBzcGFjZSBmb3IgZXhwZWN0ZWQgU09QIG1hcmtlcgoARXhwZWN0ZWQgU09QIG1hcmtlcgoARXJyb3IgcmVhZGluZyBNQ08gbWFya2VyCgBFcnJvciByZWFkaW5nIFJHTiBtYXJrZXIKAEVycm9yIHJlYWRpbmcgUFBNIG1hcmtlcgoATm90IGVub3VnaCBtZW1vcnkgdG8gcmVhZCBQUE0gbWFya2VyCgBFcnJvciByZWFkaW5nIFRMTSBtYXJrZXIKAEVycm9yIHJlYWRpbmcgUExNIG1hcmtlcgoATm90IGVub3VnaCBzcGFjZSBmb3IgZXhwZWN0ZWQgRVBIIG1hcmtlcgoARXhwZWN0ZWQgRVBIIG1hcmtlcgoARXJyb3IgcmVhZGluZyBDUkcgbWFya2VyCgBVbmtub3duIHByb2dyZXNzaW9uIG9yZGVyIGluIENPRCBtYXJrZXIKAFVua25vd24gU2NvZCB2YWx1ZSBpbiBDT0QgbWFya2VyCgBFcnJvciByZWFkaW5nIENPRCBtYXJrZXIKAEVycm9yIHJlYWRpbmcgUUNEIG1hcmtlcgoAQ3Jyb3IgcmVhZGluZyBDQkQgbWFya2VyCgBFcnJvciByZWFkaW5nIFBPQyBtYXJrZXIKAEVycm9yIHJlYWRpbmcgQ09DIG1hcmtlcgoARXJyb3IgcmVhZGluZyBRQ0MgbWFya2VyCgBFcnJvciByZWFkaW5nIE1DQyBtYXJrZXIKAE5vdCBlbm91Z2ggbWVtb3J5IHRvIHJlYWQgTUNDIG1hcmtlcgoAcmVxdWlyZWQgU0laIG1hcmtlciBub3QgZm91bmQgaW4gbWFpbiBoZWFkZXIKAHJlcXVpcmVkIENPRCBtYXJrZXIgbm90IGZvdW5kIGluIG1haW4gaGVhZGVyCgByZXF1aXJlZCBRQ0QgbWFya2VyIG5vdCBmb3VuZCBpbiBtYWluIGhlYWRlcgoATm90IGVub3VnaCBtZW1vcnkgdG8gaGFuZGxlIGpwZWcyMDAwIGZpbGUgaGVhZGVyCgBOb3QgZW5vdWdoIG1lbW9yeSB0byByZWFkIGhlYWRlcgoARXJyb3Igd2l0aCBKUCBTaWduYXR1cmUgOiBiYWQgbWFnaWMgbnVtYmVyCgBJbiBTT1QgbWFya2VyLCBUUFNvdCAoJWQpIGlzIG5vdCB2YWxpZCByZWdhcmRzIHRvIHRoZSBjdXJyZW50IG51bWJlciBvZiB0aWxlLXBhcnQgKCVkKSwgZ2l2aW5nIHVwCgBJbiBTT1QgbWFya2VyLCBUUFNvdCAoJWQpIGlzIG5vdCB2YWxpZCByZWdhcmRzIHRvIHRoZSBwcmV2aW91cyBudW1iZXIgb2YgdGlsZS1wYXJ0ICglZCksIGdpdmluZyB1cAoASW4gU09UIG1hcmtlciwgVFBTb3QgKCVkKSBpcyBub3QgdmFsaWQgcmVnYXJkcyB0byB0aGUgY3VycmVudCBudW1iZXIgb2YgdGlsZS1wYXJ0IChoZWFkZXIpICglZCksIGdpdmluZyB1cAoAdGlsZXMgcmVxdWlyZSBhdCBsZWFzdCBvbmUgcmVzb2x1dGlvbgoATWFya2VyIGlzIG5vdCBjb21wbGlhbnQgd2l0aCBpdHMgcG9zaXRpb24KAFByb2JsZW0gd2l0aCBzZWVrIGZ1bmN0aW9uCgBFcnJvciByZWFkaW5nIFNQQ29kIFNQQ29jIGVsZW1lbnQsIEludmFsaWQgY2Jsa3cvY2Jsa2ggY29tYmluYXRpb24KAEludmFsaWQgbXVsdGlwbGUgY29tcG9uZW50IHRyYW5zZm9ybWF0aW9uCgBDYW5ub3QgdGFrZSBpbiBjaGFyZ2UgY29sbGVjdGlvbnMgb3RoZXIgdGhhbiBhcnJheSBkZWNvcnJlbGF0aW9uCgBOb3QgZW5vdWdoIGJ5dGVzIHRvIHJlYWQgTnBwbQoAYmFkIHBsYWNlZCBqcGVnIGNvZGVzdHJlYW0KAAkgTWFpbiBoZWFkZXIgc3RhcnQgcG9zaXRpb249JWxsaQoJIE1haW4gaGVhZGVyIGVuZCBwb3NpdGlvbj0lbGxpCgBNYXJrZXIgc2l6ZSBpbmNvbnNpc3RlbnQgd2l0aCBzdHJlYW0gbGVuZ3RoCgBUaWxlIHBhcnQgbGVuZ3RoIHNpemUgaW5jb25zaXN0ZW50IHdpdGggc3RyZWFtIGxlbmd0aAoAQ2Fubm90IHRha2UgaW4gY2hhcmdlIG11bHRpcGxlIGRhdGEgc3Bhbm5pbmcKAFdyb25nIGZsYWcKAEVycm9yIHdpdGggRlRZUCBzaWduYXR1cmUgQm94IHNpemUKAEVycm9yIHdpdGggSlAgc2lnbmF0dXJlIEJveCBzaXplCgBJbnZhbGlkIHByZWNpbmN0IHNpemUKAEluY29uc2lzdGVudCBtYXJrZXIgc2l6ZQoASW52YWxpZCBtYXJrZXIgc2l6ZQoARXJyb3Igd2l0aCBTSVogbWFya2VyIHNpemUKAE5vdCBlbm91Z2ggbWVtb3J5IHRvIGFkZCBhIG5ldyB2YWxpZGF0aW9uIHByb2NlZHVyZQoATm90IGVub3VnaCBtZW1vcnkgdG8gZGVjb2RlIHRpbGUKAEZhaWxlZCB0byBkZWNvZGUgdGhlIGNvZGVzdHJlYW0gaW4gdGhlIEpQMiBmaWxlCgBDYW5ub3QgdGFrZSBpbiBjaGFyZ2UgY29sbGVjdGlvbnMgd2l0aCBpbmRpeCBzaHVmZmxlCgBDYW5ub3QgYWxsb2NhdGUgVGllciAxIGhhbmRsZQoATm8gZGVjb2RlZCBhcmVhIHBhcmFtZXRlcnMsIHNldCB0aGUgZGVjb2RlZCBhcmVhIHRvIHRoZSB3aG9sZSBpbWFnZQoATm90IGVub3VnaCBtZW1vcnkgdG8gY3JlYXRlIFRhZy10cmVlCgBOb3QgZW5vdWdoIG1lbW9yeSB0byByZWluaXRpYWxpemUgdGhlIHRhZyB0cmVlCgBFcnJvciByZWFkaW5nIFNQQ29kIFNQQ29jIGVsZW1lbnQsIEludmFsaWQgdHJhbnNmb3JtYXRpb24gZm91bmQKAEVycm9yIHJlYWRpbmcgU1BDb2QgU1BDb2MgZWxlbWVudC4gVW5zdXBwb3J0ZWQgTWl4ZWQgSFQgY29kZS1ibG9jayBzdHlsZSBmb3VuZAoAVGlsZSBZIGNvb3JkaW5hdGVzIGFyZSBub3Qgc3VwcG9ydGVkCgBUaWxlIFggY29vcmRpbmF0ZXMgYXJlIG5vdCBzdXBwb3J0ZWQKAEltYWdlIGNvb3JkaW5hdGVzIGFib3ZlIElOVF9NQVggYXJlIG5vdCBzdXBwb3J0ZWQKAEpQRUcyMDAwIEhlYWRlciBib3ggbm90IHJlYWQgeWV0LCAnJWMlYyVjJWMnIGJveCB3aWxsIGJlIGlnbm9yZWQKAG9wal9qMmtfbWVyZ2VfcHB0KCkgaGFzIGFscmVhZHkgYmVlbiBjYWxsZWQKAE5vdCBlbm91Z2ggbWVtb3J5IHRvIHJlYWQgU09UIG1hcmtlci4gVGlsZSBpbmRleCBhbGxvY2F0aW9uIGZhaWxlZAoASWdub3JpbmcgaWhkciBib3guIEZpcnN0IGloZHIgYm94IGFscmVhZHkgcmVhZAoAWnBwdCAldSBhbHJlYWR5IHJlYWQKAFpwcG0gJXUgYWxyZWFkeSByZWFkCgBQVEVSTSBjaGVjayBmYWlsdXJlOiAlZCBzeW50aGV0aXplZCAweEZGIG1hcmtlcnMgcmVhZAoACQkJIGNibGt3PTJeJWQKAAkJCSBjYmxraD0yXiVkCgAJCQkgcW50c3R5PSVkCgAJIHRkeD0lZCwgdGR5PSVkCgAlcyBkeD0lZCwgZHk9JWQKAAkJCSByb2lzaGlmdD0lZAoACQkJIG51bWdiaXRzPSVkCgAJCSBudW1sYXllcnM9JWQKACVzIG51bWNvbXBzPSVkCgBvcGpfanAyX2FwcGx5X2NkZWY6IGFjbj0lZCwgbnVtY29tcHM9JWQKAG9wal9qcDJfYXBwbHlfY2RlZjogY249JWQsIG51bWNvbXBzPSVkCgAJCQkgbnVtcmVzb2x1dGlvbnM9JWQKAAkJIHR5cGU9JSN4LCBwb3M9JWxsaSwgbGVuPSVkCgAJIHR3PSVkLCB0aD0lZAoAJXMgc2duZD0lZAoACQkJIHFtZmJpZD0lZAoAJXMgcHJlYz0lZAoACQkgbmIgb2YgdGlsZS1wYXJ0IGluIHRpbGUgWyVkXT0lZAoAJXMgeDE9JWQsIHkxPSVkCgAJIHR4MD0lZCwgdHkwPSVkCgAlcyB4MD0lZCwgeTA9JWQKAEZhaWxlZCB0byBkZWNvZGUgdGlsZSAlZC8lZAoAU2V0dGluZyBkZWNvZGluZyBhcmVhIHRvICVkLCVkLCVkLCVkCgBGYWlsZWQgdG8gZGVjb2RlIGNvbXBvbmVudCAlZAoASW52YWxpZCB2YWx1ZSBmb3IgbnVtcmVzb2x1dGlvbnMgOiAlZCwgbWF4IHZhbHVlIGlzIHNldCBpbiBvcGVuanBlZy5oIGF0ICVkCgBJbnZhbGlkIGNvbXBvbmVudCBudW1iZXI6ICVkLCByZWdhcmRpbmcgdGhlIG51bWJlciBvZiBjb21wb25lbnRzICVkCgBUb28gbWFueSBQT0NzICVkCgBJbnZhbGlkIHRpbGUgbnVtYmVyICVkCgBJbnZhbGlkIHRpbGUgcGFydCBpbmRleCBmb3IgdGlsZSBudW1iZXIgJWQuIEdvdCAlZCwgZXhwZWN0ZWQgJWQKAEVycm9yIHdpdGggU0laIG1hcmtlcjogbnVtYmVyIG9mIGNvbXBvbmVudCBpcyBpbGxlZ2FsIC0+ICVkCgBOb3QgZW5vdWdoIG1lbW9yeSBmb3IgY2llbGFiCgBDYW5ub3QgYWxsb2NhdGUgY2Jsay0+ZGVjb2RlZF9kYXRhCgBGYWlsZWQgdG8gbWVyZ2UgUFBUIGRhdGEKAEZhaWxlZCB0byBtZXJnZSBQUE0gZGF0YQoASW52YWxpZCBudW1iZXIgb2YgbGF5ZXJzIGluIENPRCBtYXJrZXIgOiAlZCBub3QgaW4gcmFuZ2UgWzEtNjU1MzVdCgAlczolZDpjb2xvcl9jbXlrX3RvX3JnYgoJQ0FOIE5PVCBDT05WRVJUCgAlczolZDpjb2xvcl9lc3ljY190b19yZ2IKCUNBTiBOT1QgQ09OVkVSVAoAJXM6JWQ6Y29sb3Jfc3ljY190b19yZ2IKCUNBTiBOT1QgQ09OVkVSVAoAU3RyZWFtIHRvbyBzaG9ydCwgZXhwZWN0ZWQgU09UCgBVbmFibGUgdG8gc2V0IHQxIGhhbmRsZSBhcyBUTFMKAFN0cmVhbSBkb2VzIG5vdCBlbmQgd2l0aCBFT0MKAENhbm5vdCBoYW5kbGUgYm94IHNpemVzIGhpZ2hlciB0aGFuIDJeMzIKAG9wal9waV9uZXh0X2xyY3AoKTogaW52YWxpZCBjb21wbm8wL2NvbXBubzEKAG9wal9waV9uZXh0X3JsY3AoKTogaW52YWxpZCBjb21wbm8wL2NvbXBubzEKAG9wal9waV9uZXh0X2NwcmwoKTogaW52YWxpZCBjb21wbm8wL2NvbXBubzEKAG9wal9waV9uZXh0X3BjcmwoKTogaW52YWxpZCBjb21wbm8wL2NvbXBubzEKAG9wal9waV9uZXh0X3JwY2woKTogaW52YWxpZCBjb21wbm8wL2NvbXBubzEKAG9wal90MV9kZWNvZGVfY2JsaygpOiB1bnN1cHBvcnRlZCBicG5vX3BsdXNfb25lID0gJWQgPj0gMzEKAEZhaWxlZCB0byBkZWNvZGUgdGlsZSAxLzEKAEluc3VmZmljaWVudCBkYXRhIGZvciBDTUFQIGJveC4KAE5lZWQgdG8gcmVhZCBhIFBDTFIgYm94IGJlZm9yZSB0aGUgQ01BUCBib3guCgBJbnN1ZmZpY2llbnQgZGF0YSBmb3IgQ0RFRiBib3guCgBOdW1iZXIgb2YgY2hhbm5lbCBkZXNjcmlwdGlvbiBpcyBlcXVhbCB0byB6ZXJvIGluIENERUYgYm94LgoAU3RyZWFtIGVycm9yIHdoaWxlIHJlYWRpbmcgSlAyIEhlYWRlciBib3g6IG5vICdpaGRyJyBib3guCgBOb24gY29uZm9ybWFudCBjb2Rlc3RyZWFtIFRQc290PT1UTnNvdC4KAFN0cmVhbSBlcnJvciB3aGlsZSByZWFkaW5nIEpQMiBIZWFkZXIgYm94OiBib3ggbGVuZ3RoIGlzIGluY29uc2lzdGVudC4KAEJveCBsZW5ndGggaXMgaW5jb25zaXN0ZW50LgoAUmVzb2x1dGlvbiBmYWN0b3IgaXMgZ3JlYXRlciB0aGFuIHRoZSBtYXhpbXVtIHJlc29sdXRpb24gaW4gdGhlIGNvbXBvbmVudC4KAENvbXBvbmVudCBtYXBwaW5nIHNlZW1zIHdyb25nLiBUcnlpbmcgdG8gY29ycmVjdC4KAEluY29tcGxldGUgY2hhbm5lbCBkZWZpbml0aW9ucy4KAE1hbGZvcm1lZCBIVCBjb2RlYmxvY2suIEludmFsaWQgY29kZWJsb2NrIGxlbmd0aCB2YWx1ZXMuCgBXZSBkbyBub3Qgc3VwcG9ydCBtb3JlIHRoYW4gMyBjb2RpbmcgcGFzc2VzIGluIGFuIEhUIGNvZGVibG9jazsgVGhpcyBjb2RlYmxvY2tzIGhhcyAlZCBwYXNzZXMuCgBNYWxmb3JtZWQgSFQgY29kZWJsb2NrLiBEZWNvZGluZyB0aGlzIGNvZGVibG9jayBpcyBzdG9wcGVkLiBUaGVyZSBhcmUgJWQgemVybyBiaXRwbGFuZXMgaW4gJWQgYml0cGxhbmVzLgoAQ2Fubm90IHRha2UgaW4gY2hhcmdlIG11bHRpcGxlIHRyYW5zZm9ybWF0aW9uIHN0YWdlcy4KAFVua25vd24gbWFya2VyIGhhcyBiZWVuIGRldGVjdGVkIGFuZCBnZW5lcmF0ZWQgZXJyb3IuCgBDb2RlYyBwcm92aWRlZCB0byB0aGUgb3BqX3NldHVwX2RlY29kZXIgZnVuY3Rpb24gaXMgbm90IGEgZGVjb21wcmVzc29yIGhhbmRsZXIuCgBDb2RlYyBwcm92aWRlZCB0byB0aGUgb3BqX3JlYWRfaGVhZGVyIGZ1bmN0aW9uIGlzIG5vdCBhIGRlY29tcHJlc3NvciBoYW5kbGVyLgoAVGlsZXMgZG9uJ3QgYWxsIGhhdmUgdGhlIHNhbWUgZGltZW5zaW9uLiBTa2lwIHRoZSBNQ1Qgc3RlcC4KAE51bWJlciBvZiBjb21wb25lbnRzICglZCkgaXMgaW5jb25zaXN0ZW50IHdpdGggYSBNQ1QuIFNraXAgdGhlIE1DVCBzdGVwLgoASlAyIGJveCB3aGljaCBhcmUgYWZ0ZXIgdGhlIGNvZGVzdHJlYW0gd2lsbCBub3QgYmUgcmVhZCBieSB0aGlzIGZ1bmN0aW9uLgoATWFsZm9ybWVkIEhUIGNvZGVibG9jay4gV2hlbiB0aGUgbnVtYmVyIG9mIHplcm8gcGxhbmVzIGJpdHBsYW5lcyBpcyBlcXVhbCB0byB0aGUgbnVtYmVyIG9mIGJpdHBsYW5lcywgb25seSB0aGUgY2xlYW51cCBwYXNzIG1ha2VzIHNlbnNlLCBidXQgd2UgaGF2ZSAlZCBwYXNzZXMgaW4gdGhpcyBjb2RlYmxvY2suIFRoZXJlZm9yZSwgb25seSB0aGUgY2xlYW51cCBwYXNzIHdpbGwgYmUgZGVjb2RlZC4gVGhpcyBtZXNzYWdlIHdpbGwgbm90IGJlIGRpc3BsYXllZCBhZ2Fpbi4KAEltYWdlIGhhcyBsZXNzIGNvbXBvbmVudHMgdGhhbiBjb2Rlc3RyZWFtLgoATmVlZCB0byBkZWNvZGUgdGhlIG1haW4gaGVhZGVyIGJlZm9yZSBiZWdpbiB0byBkZWNvZGUgdGhlIHJlbWFpbmluZyBjb2Rlc3RyZWFtLgoAUHNvdCB2YWx1ZSBvZiB0aGUgY3VycmVudCB0aWxlLXBhcnQgaXMgZXF1YWwgdG8gemVybywgd2UgYXNzdW1pbmcgaXQgaXMgdGhlIGxhc3QgdGlsZS1wYXJ0IG9mIHRoZSBjb2Rlc3RyZWFtLgoAQSBtYWxmb3JtZWQgY29kZWJsb2NrIHRoYXQgaGFzIG1vcmUgdGhhbiBvbmUgY29kaW5nIHBhc3MsIGJ1dCB6ZXJvIGxlbmd0aCBmb3IgMm5kIGFuZCBwb3RlbnRpYWxseSB0aGUgM3JkIHBhc3MgaW4gYW4gSFQgY29kZWJsb2NrLgoACQkJIHRpbGUtcGFydFslZF06IHN0YXJfcG9zPSVsbGksIGVuZF9oZWFkZXI9JWxsaSwgZW5kX3Bvcz0lbGxpLgoAVGlsZSAldSBoYXMgVFBzb3QgPT0gMCBhbmQgVE5zb3QgPT0gMCwgYnV0IG5vIG90aGVyIHRpbGUtcGFydHMgd2VyZSBmb3VuZC4gRU9DIGlzIGFsc28gbWlzc2luZy4KAENvbXBvbmVudCAlZCBkb2Vzbid0IGhhdmUgYSBtYXBwaW5nLgoAQSBjb25mb3JtaW5nIEpQMiByZWFkZXIgc2hhbGwgaWdub3JlIGFsbCBDb2xvdXIgU3BlY2lmaWNhdGlvbiBib3hlcyBhZnRlciB0aGUgZmlyc3QsIHNvIHdlIGlnbm9yZSB0aGlzIG9uZS4KAFRoZSBzaWduYXR1cmUgYm94IG11c3QgYmUgdGhlIGZpcnN0IGJveCBpbiB0aGUgZmlsZS4KAFRoZSAgYm94IG11c3QgYmUgdGhlIGZpcnN0IGJveCBpbiB0aGUgZmlsZS4KAFRoZSBmdHlwIGJveCBtdXN0IGJlIHRoZSBzZWNvbmQgYm94IGluIHRoZSBmaWxlLgoARmFpbGVkIHRvIGRlY29kZS4KAE1hbGZvcm1lZCBIVCBjb2RlYmxvY2suIEluY29ycmVjdCBNRUwgc2VnbWVudCBzZXF1ZW5jZS4KAENvbXBvbmVudCAlZCBpcyBtYXBwZWQgdHdpY2UuCgBPbmx5IG9uZSBDTUFQIGJveCBpcyBhbGxvd2VkLgoAV2UgbmVlZCBhbiBpbWFnZSBwcmV2aW91c2x5IGNyZWF0ZWQuCgBJSERSIGJveF9taXNzaW5nLiBSZXF1aXJlZC4KAEpQMkggYm94IG1pc3NpbmcuIFJlcXVpcmVkLgoATm90IHN1cmUgaG93IHRoYXQgaGFwcGVuZWQuCgBNYWluIGhlYWRlciBoYXMgYmVlbiBjb3JyZWN0bHkgZGVjb2RlZC4KAFRpbGUgJWQvJWQgaGFzIGJlZW4gZGVjb2RlZC4KAEhlYWRlciBvZiB0aWxlICVkIC8gJWQgaGFzIGJlZW4gcmVhZC4KAEVtcHR5IFNPVCBtYXJrZXIgZGV0ZWN0ZWQ6IFBzb3Q9JWQuCgBEaXJlY3QgdXNlIGF0ICMlZCBob3dldmVyIHBjb2w9JWQuCgBJbXBsZW1lbnRhdGlvbiBsaW1pdGF0aW9uOiBmb3IgcGFsZXR0ZSBtYXBwaW5nLCBwY29sWyVkXSBzaG91bGQgYmUgZXF1YWwgdG8gJWQsIGJ1dCBpcyBlcXVhbCB0byAlZC4KAEludmFsaWQgY29tcG9uZW50L3BhbGV0dGUgaW5kZXggZm9yIGRpcmVjdCBtYXBwaW5nICVkLgoASW52YWxpZCB2YWx1ZSBmb3IgY21hcFslZF0ubXR5cCA9ICVkLgoAUHNvdCB2YWx1ZSBpcyBub3QgY29ycmVjdCByZWdhcmRzIHRvIHRoZSBKUEVHMjAwMCBub3JtOiAlZC4KAE1hbGZvcm1lZCBIVCBjb2RlYmxvY2suIFZMQyBjb2RlIHByb2R1Y2VzIHNpZ25pZmljYW50IHNhbXBsZXMgb3V0c2lkZSB0aGUgY29kZWJsb2NrIGFyZWEuCgBVbmV4cGVjdGVkIE9PTS4KADMyIGJpdHMgYXJlIG5vdCBlbm91Z2ggdG8gZGVjb2RlIHRoaXMgY29kZWJsb2NrLCBzaW5jZSB0aGUgbnVtYmVyIG9mIGJpdHBsYW5lLCAlZCwgaXMgbGFyZ2VyIHRoYW4gMzAuCgBCb3R0b20gcG9zaXRpb24gb2YgdGhlIGRlY29kZWQgYXJlYSAocmVnaW9uX3kxPSVkKSBzaG91bGQgYmUgPiAwLgoAUmlnaHQgcG9zaXRpb24gb2YgdGhlIGRlY29kZWQgYXJlYSAocmVnaW9uX3gxPSVkKSBzaG91bGQgYmUgPiAwLgoAVXAgcG9zaXRpb24gb2YgdGhlIGRlY29kZWQgYXJlYSAocmVnaW9uX3kwPSVkKSBzaG91bGQgYmUgPj0gMC4KAExlZnQgcG9zaXRpb24gb2YgdGhlIGRlY29kZWQgYXJlYSAocmVnaW9uX3gwPSVkKSBzaG91bGQgYmUgPj0gMC4KAEVycm9yIHJlYWRpbmcgUFBUIG1hcmtlcjogcGFja2V0IGhlYWRlciBoYXZlIGJlZW4gcHJldmlvdXNseSBmb3VuZCBpbiB0aGUgbWFpbiBoZWFkZXIgKFBQTSBtYXJrZXIpLgoAU3RhcnQgdG8gcmVhZCBqMmsgbWFpbiBoZWFkZXIgKCVsbGQpLgoAQm90dG9tIHBvc2l0aW9uIG9mIHRoZSBkZWNvZGVkIGFyZWEgKHJlZ2lvbl95MT0lZCkgaXMgb3V0c2lkZSB0aGUgaW1hZ2UgYXJlYSAoWXNpej0lZCkuCgBVcCBwb3NpdGlvbiBvZiB0aGUgZGVjb2RlZCBhcmVhIChyZWdpb25feTA9JWQpIGlzIG91dHNpZGUgdGhlIGltYWdlIGFyZWEgKFlzaXo9JWQpLgoAUmlnaHQgcG9zaXRpb24gb2YgdGhlIGRlY29kZWQgYXJlYSAocmVnaW9uX3gxPSVkKSBpcyBvdXRzaWRlIHRoZSBpbWFnZSBhcmVhIChYc2l6PSVkKS4KAExlZnQgcG9zaXRpb24gb2YgdGhlIGRlY29kZWQgYXJlYSAocmVnaW9uX3gwPSVkKSBpcyBvdXRzaWRlIHRoZSBpbWFnZSBhcmVhIChYc2l6PSVkKS4KAEJvdHRvbSBwb3NpdGlvbiBvZiB0aGUgZGVjb2RlZCBhcmVhIChyZWdpb25feTE9JWQpIGlzIG91dHNpZGUgdGhlIGltYWdlIGFyZWEgKFlPc2l6PSVkKS4KAFVwIHBvc2l0aW9uIG9mIHRoZSBkZWNvZGVkIGFyZWEgKHJlZ2lvbl95MD0lZCkgaXMgb3V0c2lkZSB0aGUgaW1hZ2UgYXJlYSAoWU9zaXo9JWQpLgoAUmlnaHQgcG9zaXRpb24gb2YgdGhlIGRlY29kZWQgYXJlYSAocmVnaW9uX3gxPSVkKSBpcyBvdXRzaWRlIHRoZSBpbWFnZSBhcmVhIChYT3Npej0lZCkuCgBMZWZ0IHBvc2l0aW9uIG9mIHRoZSBkZWNvZGVkIGFyZWEgKHJlZ2lvbl94MD0lZCkgaXMgb3V0c2lkZSB0aGUgaW1hZ2UgYXJlYSAoWE9zaXo9JWQpLgoAU2l6ZSB4IG9mIHRoZSBkZWNvZGVkIGNvbXBvbmVudCBpbWFnZSBpcyBpbmNvcnJlY3QgKGNvbXBbJWRdLnc9JWQpLgoAU2l6ZSB5IG9mIHRoZSBkZWNvZGVkIGNvbXBvbmVudCBpbWFnZSBpcyBpbmNvcnJlY3QgKGNvbXBbJWRdLmg9JWQpLgoAVGlsZSByZWFkLCBkZWNvZGVkIGFuZCB1cGRhdGVkIGlzIG5vdCB0aGUgZGVzaXJlZCBvbmUgKCVkIHZzICVkKS4KAEludmFsaWQgY29tcG9uZW50IGluZGV4ICVkICg+PSAlZCkuCgBvcGpfcmVhZF9oZWFkZXIoKSBzaG91bGQgYmUgY2FsbGVkIGJlZm9yZSBvcGpfc2V0X2RlY29kZWRfY29tcG9uZW50cygpLgoATWVtb3J5IGFsbG9jYXRpb24gZmFpbHVyZSBpbiBvcGpfanAyX2FwcGx5X3BjbHIoKS4KAGltYWdlLT5jb21wc1slZF0uZGF0YSA9PSBOVUxMIGluIG9wal9qcDJfYXBwbHlfcGNscigpLgoAaW52YWxpZCBib3ggc2l6ZSAlZCAoJXgpCgBGYWlsIHRvIHJlYWQgdGhlIGN1cnJlbnQgbWFya2VyIHNlZ21lbnQgKCUjeCkKAEVycm9yIHdpdGggU0laIG1hcmtlcjogSUhEUiB3KCV1KSBoKCV1KSB2cy4gU0laIHcoJXUpIGgoJXUpCgBFcnJvciByZWFkaW5nIENPQyBtYXJrZXIgKGJhZCBudW1iZXIgb2YgY29tcG9uZW50cykKAEludmFsaWQgbnVtYmVyIG9mIHRpbGVzIDogJXUgeCAldSAobWF4aW11bSBmaXhlZCBieSBqcGVnMjAwMCBub3JtIGlzIDY1NTM1IHRpbGVzKQoASW52YWxpZCBudW1iZXIgb2YgY29tcG9uZW50cyAoaWhkcikKAE5vdCBlbm91Z2ggbWVtb3J5IHRvIGhhbmRsZSBpbWFnZSBoZWFkZXIgKGloZHIpCgBXcm9uZyB2YWx1ZXMgZm9yOiB3KCVkKSBoKCVkKSBudW1jb21wcyglZCkgKGloZHIpCgBJbnZhbGlkIHZhbHVlcyBmb3IgY29tcCA9ICVkIDogZHg9JXUgZHk9JXUgKHNob3VsZCBiZSBiZXR3ZWVuIDEgYW5kIDI1NSBhY2NvcmRpbmcgdG8gdGhlIEpQRUcyMDAwIG5vcm0pCgBCYWQgaW1hZ2UgaGVhZGVyIGJveCAoYmFkIHNpemUpCgBCYWQgQ09MUiBoZWFkZXIgYm94IChiYWQgc2l6ZSkKAEJhZCBCUENDIGhlYWRlciBib3ggKGJhZCBzaXplKQoARXJyb3Igd2l0aCBTSVogbWFya2VyOiBuZWdhdGl2ZSBvciB6ZXJvIGltYWdlIHNpemUgKCVsbGQgeCAlbGxkKQoAc2tpcDogc2VnbWVudCB0b28gbG9uZyAoJWQpIHdpdGggbWF4ICglZCkgZm9yIGNvZGVibG9jayAlZCAocD0lZCwgYj0lZCwgcj0lZCwgYz0lZCkKAHJlYWQ6IHNlZ21lbnQgdG9vIGxvbmcgKCVkKSB3aXRoIG1heCAoJWQpIGZvciBjb2RlYmxvY2sgJWQgKHA9JWQsIGI9JWQsIHI9JWQsIGM9JWQpCgBEZXNwaXRlIEpQMiBCUEMhPTI1NSwgcHJlY2lzaW9uIGFuZC9vciBzZ25kIHZhbHVlcyBmb3IgY29tcFslZF0gaXMgZGlmZmVyZW50IHRoYW4gY29tcFswXToKICAgICAgICBbMF0gcHJlYyglZCkgc2duZCglZCkgWyVkXSBwcmVjKCVkKSBzZ25kKCVkKQoAYmFkIGNvbXBvbmVudCBudW1iZXIgaW4gUkdOICglZCB3aGVuIHRoZXJlIGFyZSBvbmx5ICVkKQoARXJyb3Igd2l0aCBTSVogbWFya2VyOiBudW1iZXIgb2YgY29tcG9uZW50IGlzIG5vdCBjb21wYXRpYmxlIHdpdGggdGhlIHJlbWFpbmluZyBudW1iZXIgb2YgcGFyYW1ldGVycyAoICVkIHZzICVkKQoARXJyb3Igd2l0aCBTSVogbWFya2VyOiBpbnZhbGlkIHRpbGUgc2l6ZSAodGR4OiAlZCwgdGR5OiAlZCkKAEJhZCBDT0xSIGhlYWRlciBib3ggKGJhZCBzaXplOiAlZCkKAEJhZCBDT0xSIGhlYWRlciBib3ggKENJRUxhYiwgYmFkIHNpemU6ICVkKQoAUFRFUk0gY2hlY2sgZmFpbHVyZTogJWQgcmVtYWluaW5nIGJ5dGVzIGluIGNvZGUgYmxvY2sgKCVkIHVzZWQgLyAlZCkKAE1hbGZvcm1lZCBIVCBjb2RlYmxvY2suIE9uZSBvZiB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbiBpcyBub3QgbWV0OiAyIDw9IFNjdXAgPD0gbWluKExjdXAsIDQwNzkpCgBJbnZhbGlkIHZhbHVlcyBmb3IgY29tcCA9ICVkIDogcHJlYz0ldSAoc2hvdWxkIGJlIGJldHdlZW4gMSBhbmQgMzggYWNjb3JkaW5nIHRvIHRoZSBKUEVHMjAwMCBub3JtLiBPcGVuSnBlZyBvbmx5IHN1cHBvcnRzIHVwIHRvIDMxKQoASW52YWxpZCBiaXQgbnVtYmVyICVkIGluIG9wal90Ml9yZWFkX3BhY2tldF9oZWFkZXIoKQoAU3RyZWFtIGVycm9yIQoARXJyb3Igb24gd3JpdGluZyBzdHJlYW0hCgBTdHJlYW0gcmVhY2hlZCBpdHMgZW5kICEKAEV4cGVjdGVkIGEgU09DIG1hcmtlciAKAEludmFsaWQgYm94IHNpemUgJWQgZm9yIGJveCAnJWMlYyVjJWMnLiBOZWVkICVkIGJ5dGVzLCAlZCBieXRlcyByZW1haW5pbmcgCgBNYWxmb3JtZWQgSFQgY29kZWJsb2NrLiBEZWNvZGluZyB0aGlzIGNvZGVibG9jayBpcyBzdG9wcGVkLiBVX3EgaXMgbGFyZ2VyIHRoYW4gemVybyBiaXRwbGFuZXMgKyAxIAoATWFsZm9ybWVkIEhUIGNvZGVibG9jay4gRGVjb2RpbmcgdGhpcyBjb2RlYmxvY2sgaXMgc3RvcHBlZC4gVV9xIGlzbGFyZ2VyIHRoYW4gYml0cGxhbmVzICsgMSAKAENPTFIgQk9YIG1ldGggdmFsdWUgaXMgbm90IGEgcmVndWxhciB2YWx1ZSAoJWQpLCBzbyB3ZSB3aWxsIGlnbm9yZSB0aGUgZW50aXJlIENvbG91ciBTcGVjaWZpY2F0aW9uIGJveC4gCgBXaGlsZSByZWFkaW5nIENDUF9RTlRTVFkgZWxlbWVudCBpbnNpZGUgUUNEIG9yIFFDQyBtYXJrZXIgc2VnbWVudCwgbnVtYmVyIG9mIHN1YmJhbmRzICglZCkgaXMgZ3JlYXRlciB0byBPUEpfSjJLX01BWEJBTkRTICglZCkuIFNvIHdlIGxpbWl0IHRoZSBudW1iZXIgb2YgZWxlbWVudHMgc3RvcmVkIHRvIE9QSl9KMktfTUFYQkFORFMgKCVkKSBhbmQgc2tpcCB0aGUgcmVzdC4gCgBKUDIgSUhEUiBib3g6IGNvbXByZXNzaW9uIHR5cGUgaW5kaWNhdGUgdGhhdCB0aGUgZmlsZSBpcyBub3QgYSBjb25mb3JtaW5nIEpQMiBmaWxlICglZCkgCgBUaWxlIGluZGV4IHByb3ZpZGVkIGJ5IHRoZSB1c2VyIGlzIGluY29ycmVjdCAlZCAobWF4ID0gJWQpIAoARXJyb3IgZGVjb2RpbmcgY29tcG9uZW50ICVkLgpUaGUg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WAAAAUgAAAAAAAAgWAAAwFgAAAFIAAABAAAAMFgAANBYAAABOAAAAAAAAEBYAADAWAAAATgAAAEAAABQWAAA0FgAAAEwAAAAAAAAYFgAACBZAAABMAAAAQAAAHBYAAAwWQAAASQAAAAAAACAWAAAQFkAAAEkAAABAAAAkFgAAFBZAAABHAAAAAAAAKBYAACAWQAAARwAAAEAAACwWAAAkFkAAAEWAAAAAAAAoFoAAKBZAAABFgAAAQAAALBaAACwWQAAAVYAAAAAAADgWAAA0FgAAAFWAAABAAAA8FgAAMBYAAABVAAAAAAAAABZAADAWAAAAVQAAAEAAAAQWQAA0FgAAAFRAAAAAAAAIFkAAOBYAAABUQAAAQAAADBZAADwWAAAAUgAAAAAAABAWQAAAFkAAAFIAAABAAAAUFkAABBZAAABOAAAAAAAAGBZAAAgWQAAATgAAAEAAABwWQAAMFkAAAE0AAAAAAAAgFkAAEBZAAABNAAAAQAAAJBZAABQWQAAATAAAAAAAACgWQAAYFkAAAEwAAABAAAAsFkAAHBZAAABKAAAAAAAAMBZAABgWQAAASgAAAEAAADQWQAAcFkAAAEkAAAAAAAA4FkAAIBZAAABJAAAAQAAAPBZAACQWQAAASIAAAAAAAAAWgAAoFkAAAEiAAABAAAAEFoAALBZAAABHAAAAAAAACBaAADAWQAAARwAAAEAAAAwWgAA0FkAAAEYAAAAAAAAQFoAAOBZAAABGAAAAQAAAFBaAADwWQAAARYAAAAAAABgWgAAAFoAAAEWAAABAAAAcFoAABBaAAABFAAAAAAAAIBaAAAgWgAAARQAAAEAAACQWgAAMFoAAAESAAAAAAAAoFoAAEBaAAABEgAAAQAAALBaAABQWgAAAREAAAAAAADAWgAAYFoAAAERAAABAAAA0FoAAHBaAADBCgAAAAAAAOBaAACAWgAAwQoAAAEAAADwWgAAkFoAAMEJAAAAAAAAAFsAAKBaAADBCQAAAQAAABBbAACwWgAAoQgAAAAAAAAgWwAAwFoAAKEIAAABAAAAMFsAANBaAAAhBQAAAAAAAEBbAADgWgAAIQUAAAEAAABQWwAA8FoAAEEEAAAAAAAAYFsAAABbAABBBAAAAQAAAHBbAAAQWwAAoQIAAAAAAACAWwAAIFsAAKECAAABAAAAkFsAADBbAAAhAgAAAAAAAKBbAABAWwAAIQIAAAEAAACwWwAAUFsAAEEBAAAAAAAAwFsAAGBbAABBAQAAAQAAANBbAABwWwAAEQEAAAAAAADgWwAAgFsAABEBAAABAAAA8FsAAJBbAACFAAAAAAAAAABcAACgWwAAhQAAAAEAAAAQXAAAsFsAAEkAAAAAAAAAIFwAAMBbAABJAAAAAQAAADBcAADQWwAAJQAAAAAAAABAXAAA4FsAACUAAAABAAAAUFwAAPBbAAAVAAAAAAAAAGBcAAAAXAAAFQAAAAEAAABwXAAAEFwAAAkAAAAAAAAAgFwAACBcAAAJAAAAAQAAAJBcAAAwXAAABQAAAAAAAACgXAAAQFwAAAUAAAABAAAAsFwAAFBcAAABAAAAAAAAAKBcAABgXAAAAQAAAAEAAACwXAAAcFwAAAFWAAAAAAAAwFwAAMBcAAABVgAAAQAAANBcAADQXAAAAAEDAwECAwMFBgcHBgYHBwABAwMBAgMDBQYHBwYGBwcFBgcHBgYHBwgICAgICAgIBQYHBwYGBwcICAgICAgICAECAwMCAgMDBgYHBwYGBwcBAgMDAgIDAwYGBwcGBgcHBgYHBwYGBwcICAgICAgICAYGBwcGBgcHCAgICAgICAgDAwQEAwMEBAcHBwcHBwcHAwMEBAMDBAQHBwcHBwcHBwcHBwcHBwcHCAgICAgICAgHBwcHBwcHBwgICAgICAgIAwMEBAMDBAQHBwcHBwcHBwMDBAQDAwQEBwcHBwcHBwcHBwcHBwcHBwgICAgICAgIBwcHBwcHBwcICAgICAgICAECAwMCAgMDBgYHBwYGBwcBAgMDAgIDAwYGBwcGBgcHBgYHBwYGBwcICAgICAgICAYGBwcGBgcHCAgICAgICAgCAgMDAgIDAwYGBwcGBgcHAgIDAwICAwMGBgcHBgYHBwYGBwcGBgcHCAgICAgICAgGBgcHBgYHBwgICAgICAgIAwMEBAMDBAQHBwcHBwcHBwMDBAQDAwQEBwcHBwcHBwcHBwcHBwcHBwgICAgICAgIBwcHBwcHBwcICAgICAgICAMDBAQDAwQEBwcHBwcHBwcDAwQEAwMEBAcHBwcHBwcHBwcHBwcHBwcICAgICAgICAcHBwcHBwcHCAgICAgICAgAAQUGAQIGBgMDBwcDAwcHAAEFBgECBgYDAwcHAwMHBwMDBwcDAwcHBAQHBwQEBwcDAwcHAwMHBwQEBwcEBAcHAQIGBgICBgYDAwcHAwMHBwECBgYCAgYGAwMHBwMDBwcDAwcHAwMHBwQEBwcEBAcHAwMHBwMDBwcEBAcHBAQHBwUGCAgGBggIBwcICAcHCAgFBggIBgYICAcHCAgHBwgIBwcICAcHCAgHBwgIBwcICAcHCAgHBwgIBwcICAcHCAgGBggIBgYICAcHCAgHBwgIBgYICAYGCAgHBwgIBwcICAcHCAgHBwgIBwcICAcHCAgHBwgIBwcICAcHCAgHBwgIAQIGBgICBgYDAwcHAwMHBwECBgYCAgYGAwMHBwMDBwcDAwcHAwMHBwQEBwcEBAcHAwMHBwMDBwcEBAcHBAQHBwICBgYCAgYGAwMHBwMDBwcCAgYGAgIGBgMDBwcDAwcHAwMHBwMDBwcEBAcHBAQHBwMDBwcDAwcHBAQHBwQEBwcGBggIBgYICAcHCAgHBwgIBgYICAYGCAgHBwgIBwcICAcHCAgHBwgIBwcICAcHCAgHBwgIBwcICAcHCAgHBwgIBgYICAYGCAgHBwgIBwcICAYGCAgGBggIBwcICAcHCAgHBwgIBwcICAcHCAgHBwgIBwcICAcHCAgHBwgIBwcICAABAwMBAgMDBQYHBwYGBwcAAQMDAQIDAwUGBwcGBgcHBQYHBwYGBwcICAgICAgICAUGBwcGBgcHCAgICAgICAgBAgMDAgIDAwYGBwcGBgcHAQIDAwICAwMGBgcHBgYHBwYGBwcGBgcHCAgICAgICAgGBgcHBgYHBwgICAgICAgIAwMEBAMDBAQHBwcHBwcHBwMDBAQDAwQEBwcHBwcHBwcHBwcHBwcHBwgICAgICAgIBwcHBwcHBwcICAgICAgICAMDBAQDAwQEBwcHBwcHBwcDAwQEAwMEBAcHBwcHBwcHBwcHBwcHBwcICAgICAgICAcHBwcHBwcHCAgICAgICAgBAgMDAgIDAwYGBwcGBgcHAQIDAwICAwMGBgcHBgYHBwYGBwcGBgcHCAgICAgICAgGBgcHBgYHBwgICAgICAgIAgIDAwICAwMGBgcHBgYHBwICAwMCAgMDBgYHBwYGBwcGBgcHBgYHBwgICAgICAgIBgYHBwYGBwcICAgICAgICAMDBAQDAwQEBwcHBwcHBwcDAwQEAwMEBAcHBwcHBwcHBwcHBwcHBwcICAgICAgICAcHBwcHBwcHCAgICAgICAgDAwQEAwMEBAcHBwcHBwcHAwMEBAMDBAQHBwcHBwcHBwcHBwcHBwcHCAgICAgICAgHBwcHBwcHBwgICAgICAgIAAMBBAMGBAcBBAIFBAcFBwADAQQDBgQHAQQCBQQHBQcBBAIFBAcFBwIFAgUFBwUHAQQCBQQHBQcCBQIFBQcFBwMGBAcGCAcIBAcFBwcIBwgDBgQHBggHCAQHBQcHCAcIBAcFBwcIBwgFBwUHBwgHCAQHBQcHCAcIBQcFBwcIBwgBBAIFBAcFBwIFAgUFBwUHAQQCBQQHBQcCBQIFBQcFBwIFAgUFBwUHAgUCBQUHBQcCBQIFBQcFBwIFAgUFBwUHBAcFBwcIBwgFBwUHBwgHCAQHBQcHCAcIBQcFBwcIBwgFBwUHBwgHCAUHBQcHCAcIBQcFBwcIBwgFBwUHBwgHCAMGBAcGCAcIBAcFBwcIBwgDBgQHBggHCAQHBQcHCAcIBAcFBwcIBwgFBwUHBwgHCAQHBQcHCAcIBQcFBwcIBwgGCAcICAgICAcIBwgICAgIBggHCAgICAgHCAcICAgICAcIBwgICAgIBwgHCAgICAgHCAcICAgICAcIBwgICAgIBAcFBwcIBwgFBwUHBwgHCAQHBQcHCAcIBQcFBwcIBwgFBwUHBwgHCAUHBQcHCAcIBQcFBwcIBwgFBwUHBwgHCAcIBwgICAgIBwgHCAgICAgHCAcICAgICAcIBwgICAgIBwgHCAgICAgHCAcICAgICAcIBwgICAgIBwgHCAgICAgJCQoKCQkKCgwMDQsMDA0LCQkKCgkJCgoMDAsNDAwLDQwMDQ0MDAsLDAkNCgkMCgsMDAsLDAwNDQwJCwoJDAoNCQkKCgkJCgoMDA0LDAwNCwkJCgoJCQoKDAwLDQwMCw0MDA0NDAwLCwwJDQoJDAoLDAwLCwwMDQ0MCQsKCQwKDQoKCgoKCgoKDQsNCw0LDQsKCgkJCgoJCQ0LDAwNCwwMDQ0NDQsLCwsNCg0KCgsKCw0NDAwLCwwMDQoMCQoLCQwKCgkJCgoJCQsNDAwLDQwMCgoKCgoKCgoLDQsNCw0LDQsLDAwNDQwMCwoMCQoNCQwLCwsLDQ0NDQsKCwoKDQoNAEHpywELNwEAAQABAAEAAAEBAAABAQABAAEAAQABAAAAAAEBAQEAAAAAAAEAAQAAAAABAQEBAAAAAQABAQEAQanMAQs3AQABAAEAAQAAAQEAAAEBAAEAAQABAAEAAAAAAQEBAQAAAAAAAQABAAAAAAEBAQEAAAABAAEBAQBB6cwBCwcBAAEAAQABAEH5zAEL7QYBAAEAAQABAAAAAAEBAQEAAAAAAAEAAQAAAAABAQEBAAAAAAABAAEBAQAAAQEAAAABAAEAAQABAQEBAQEBAQEAAQABAAEAAQAAAAABAQEBAAEAAAEBAAEAAAAAAQEBAQABAAEBAQEBTlN0M19fMjEyYmFzaWNfc3RyaW5nSWNOU18xMWNoYXJfdHJhaXRzSWNFRU5TXzlhbGxvY2F0b3JJY0VFRUUAABhwAADgZgAATlN0M19fMjEyYmFzaWNfc3RyaW5nSWhOU18xMWNoYXJfdHJhaXRzSWhFRU5TXzlhbGxvY2F0b3JJaEVFRUUAABhwAAAoZwAATlN0M19fMjEyYmFzaWNfc3RyaW5nSXdOU18xMWNoYXJfdHJhaXRzSXdFRU5TXzlhbGxvY2F0b3JJd0VFRUUAABhwAABwZwAATlN0M19fMjEyYmFzaWNfc3RyaW5nSURzTlNfMTFjaGFyX3RyYWl0c0lEc0VFTlNfOWFsbG9jYXRvcklEc0VFRUUAAAAYcAAAuGcAAE5TdDNfXzIxMmJhc2ljX3N0cmluZ0lEaU5TXzExY2hhcl90cmFpdHNJRGlFRU5TXzlhbGxvY2F0b3JJRGlFRUVFAAAAGHAAAARoAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0ljRUUAABhwAABQaAAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJYUVFAAAYcAAAeGgAAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SXNFRQAAGHAAAKBoAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0l0RUUAABhwAADIaAAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJaUVFAAAYcAAA8GgAAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SWpFRQAAGHAAABhpAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0lsRUUAABhwAABAaQAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJbUVFAAAYcAAAaGkAAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SWZFRQAAGHAAAJBpAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0lkRUUAABhwAAC4aQAAWHEAAOhxAEHw0wELagL/AARkACAAAAT//wYAAQABAAEA//8B/wH//////wH/Af8B/wH/Af8B/wH/Af//////Cv8gAP//A/8B/wT/HgAAAQX//////2MAAAhjAOgDAgAAAP//////AAAAAf8B//////////////8AQenUAQsBBABB9tQBC0QB/wH//////wABIAAEAIAAAAj//wH/Af////////8B/wb/B/8I/wn//////7wCvAIBAP//AQABAP//AAD//////////wBBytUBCwEUAEHq1QELHv//AQAK////////////Af8B/wAAAAAAAAH/Af8B/wBBmtYBC0gB/wAAAAAAAAH/Af8BAAAAAQAAAAH//////wAAAAAB////AAAAAP////////////8oAAr//////wEACv////8A//////////8AQcbXAQscAf8B////AQD//////////////////wr//////wBB8NcBC0EZAAoAGRkZAAAAAAUAAAAAAAAJAAAAAAsAAAAAAAAAABkAEQoZGRkDCgcAAQAJCxgAAAkGCwAACwAGGQAAABkZGQBBwdgBCyEOAAAAAAAAAAAZAAoNGRkZAA0AAAIACQ4AAAAJAA4AAA4AQfvYAQsBDABBh9kBCxUTAAAAABMAAAAACQwAAAAAAAwAAAwAQbXZAQsBEABBwdkBCxUPAAAABA8AAAAACRAAAAAAABAAABAAQe/ZAQsBEgBB+9kBCx4RAAAAABEAAAAACRIAAAAAABIAABIAABoAAAAaGhoAQbLaAQsOGgAAABoaGgAAAAAAAAkAQePaAQsBFABB79oBCxUXAAAAABcAAAAACRQAAAAAABQAABQAQZ3bAQsBFgBBqdsBC60HFQAAAAAVAAAAAAkWAAAAAAAWAAAWAAAwMTIzNDU2Nzg5QUJDREVGTjEwX19jeHhhYml2MTE2X19zaGltX3R5cGVfaW5mb0UAAAAAQHAAANBtAABQcQAATjEwX19jeHhhYml2MTE3X19jbGFzc190eXBlX2luZm9FAAAAQHAAAABuAAD0bQAATjEwX19jeHhhYml2MTE3X19wYmFzZV90eXBlX2luZm9FAAAAQHAAADBuAAD0bQAATjEwX19jeHhhYml2MTE5X19wb2ludGVyX3R5cGVfaW5mb0UAQHAAAGBuAABUbgAATjEwX19jeHhhYml2MTIwX19mdW5jdGlvbl90eXBlX2luZm9FAAAAAEBwAACQbgAA9G0AAE4xMF9fY3h4YWJpdjEyOV9fcG9pbnRlcl90b19tZW1iZXJfdHlwZV9pbmZvRQAAAEBwAADEbgAAVG4AAAAAAABEbwAAqQAAAKoAAACrAAAArAAAAK0AAABOMTBfX2N4eGFiaXYxMjNfX2Z1bmRhbWVudGFsX3R5cGVfaW5mb0UAQHAAABxvAAD0bQAAdgAAAAhvAABQbwAARG4AAAhvAABcbwAAYgAAAAhvAABobwAAYwAAAAhvAAB0bwAAaAAAAAhvAACAbwAAYQAAAAhvAACMbwAAcwAAAAhvAACYbwAAdAAAAAhvAACkbwAAaQAAAAhvAACwbwAAagAAAAhvAAC8bwAAbAAAAAhvAADIbwAAbQAAAAhvAADUbwAAeAAAAAhvAADgbwAAeQAAAAhvAADsbwAAZgAAAAhvAAD4bwAAZAAAAAhvAAAEcAAAAAAAACRuAACpAAAArgAAAKsAAACsAAAArwAAALAAAACxAAAAsgAAAAAAAACIcAAAqQAAALMAAACrAAAArAAAAK8AAAC0AAAAtQAAALYAAABOMTBfX2N4eGFiaXYxMjBfX3NpX2NsYXNzX3R5cGVfaW5mb0UAAAAAQHAAAGBwAAAkbgAAAAAAAIRuAACpAAAAtwAAAKsAAACsAAAAuAAAAAAAAADUcAAAuQAAALoAAAC7AAAAU3Q5ZXhjZXB0aW9uAAAAABhwAADEcAAAAAAAAABxAAA5AAAAvAAAAL0AAABTdDExbG9naWNfZXJyb3IAQHAAAPBwAADUcAAAAAAAADRxAAA5AAAAvgAAAL0AAABTdDEybGVuZ3RoX2Vycm9yAAAAAEBwAAAgcQAAAHEAAFN0OXR5cGVfaW5mbwAAAAAYcAAAQHEAQdjiAQsBBQBB5OIBCwGfAEH84gELCqAAAAChAAAAAHYAQZTjAQsBAgBBpOMBCwj//////////wBB6OMBCwEFAEH04wELAaIAQYzkAQsOoAAAAKMAAAAIdgAAAAQAQaTkAQsBAQBBtOQBCwX/////CgBB+OQBCwMQfAE=\\\",o={codec:void 0,decoder:void 0,decodeConfig:{}};function D(A){if(o.decodeConfig=A,o.codec)return Promise.resolve();const I=E()({locateFile:A=>A.endsWith(\\\".wasm\\\")?i.toString():A});return new Promise(((A,g)=>{I.then((I=>{o.codec=I,o.decoder=new I.J2KDecoder,A()}),g)}))}const w=async function(A,I){await D();const g=o.decoder,B=g.getEncodedBuffer(A.length);B.set(A),g.decode();const Q=g.getFrameInfo(),C=g.getDecodedBuffer();new Uint8Array(C.length).set(C);const E=`x: ${g.getImageOffset().x}, y: ${g.getImageOffset().y}`,i=g.getNumDecompositions(),w=g.getNumLayers(),s=[\\\"unknown\\\",\\\"LRCP\\\",\\\"RLCP\\\",\\\"RPCL\\\",\\\"PCRL\\\",\\\"CPRL\\\"][g.getProgressionOrder()+1],a=g.getIsReversible(),G=`${g.getBlockDimensions().width} x ${g.getBlockDimensions().height}`,F=`${g.getTileSize().width} x ${g.getTileSize().height}`,h=`${g.getTileOffset().x}, ${g.getTileOffset().y}`,y=g.getColorSpace(),c=`${C.length.toLocaleString()} bytes`,t=`${(C.length/B.length).toFixed(2)}:1`,R={columns:Q.width,rows:Q.height,bitsPerPixel:Q.bitsPerSample,signed:Q.isSigned,bytesPerPixel:I.bytesPerPixel,componentsPerPixel:Q.componentCount},N=function(A,I){if(A.bitsPerSample>8)return A.isSigned?new Int16Array(I.buffer,I.byteOffset,I.byteLength/2):new Uint16Array(I.buffer,I.byteOffset,I.byteLength/2);if(A.isSigned)return new Int8Array(I.buffer,I.byteOffset,I.byteLength);return new Uint8Array(I.buffer,I.byteOffset,I.byteLength)}(Q,C),U={imageOffset:E,numDecompositions:i,numLayers:w,progessionOrder:s,reversible:a,blockDimensions:G,tileSize:F,tileOffset:h,colorTransform:y,decodedSize:c,compressionRatio:t};return{...I,pixelData:N,imageInfo:R,encodeOptions:U,...U,...R}};var s=Q(37),a=Q.n(s);const G=\\\"data:application/wasm;base64,\\\",F={codec:void 0,decoder:void 0,decodeConfig:{}};function h(A){if(F.decodeConfig=A,F.codec)return Promise.resolve();const I=a()({locateFile:A=>A.endsWith(\\\".wasm\\\")?G.toString():A});return new Promise(((A,g)=>{I.then((I=>{F.codec=I,F.decoder=new I.JpegLSDecoder,A()}),g)}))}const y=async function(A,I){try{await h();const g=F.decoder;g.getEncodedBuffer(A.length).set(A),g.decode();const B=g.getFrameInfo(),Q=g.getInterleaveMode(),C=g.getNearLossless(),E=g.getDecodedBuffer(),i={columns:B.width,rows:B.height,bitsPerPixel:B.bitsPerSample,signed:I.signed,bytesPerPixel:I.bytesPerPixel,componentsPerPixel:B.componentCount},o=function(A,I,g){if(A.bitsPerSample>8)return g?new Int16Array(I.buffer,I.byteOffset,I.byteLength/2):new Uint16Array(I.buffer,I.byteOffset,I.byteLength/2);if(g)return new Int8Array(I.buffer,I.byteOffset,I.byteLength);return new Uint8Array(I.buffer,I.byteOffset,I.byteLength)}(B,E,I.signed),D={nearLossless:C,interleaveMode:Q,frameInfo:B};return{...I,pixelData:o,imageInfo:i,encodeOptions:D,...D,...i}}catch(A){throw\\\"number\\\"==typeof(g=A)?F.codec.getExceptionMessage(g):g}var g};const c=function(A){let I,g=A[0],B=A[0];const Q=A.length;for(let C=1;C<Q;C++)I=A[C],g=Math.min(g,I),B=Math.max(B,I);return{min:g,max:B}};function t(A){return\\\"number\\\"==typeof A}const R=async function(A,I){let g=I.buffer,B=I.byteOffset;const Q=I.length;return 16===A.bitsAllocated?(B%2&&(g=g.slice(B),B=0),0===A.pixelRepresentation?A.pixelData=new Uint16Array(g,B,Q/2):A.pixelData=new Int16Array(g,B,Q/2)):8===A.bitsAllocated||1===A.bitsAllocated?A.pixelData=I:32===A.bitsAllocated&&(B%2&&(g=g.slice(B),B=0),A.pixelData=new Float32Array(g,B,Q/4)),A};const N=async function(A,I){if(16===A.bitsAllocated){let B=I.buffer,Q=I.byteOffset;const C=I.length;Q%2&&(B=B.slice(Q),Q=0),0===A.pixelRepresentation?A.pixelData=new Uint16Array(B,Q,C/2):A.pixelData=new Int16Array(B,Q,C/2);for(let I=0;I<A.pixelData.length;I++)A.pixelData[I]=(255&(g=A.pixelData[I]))<<8|g>>8&255}else 8===A.bitsAllocated&&(A.pixelData=I);var g;return A};const U=async function(A,I){if(8===A.bitsAllocated)return A.planarConfiguration?function(A,I){const g=I,B=A.rows*A.columns,Q=new ArrayBuffer(B*A.samplesPerPixel),C=new DataView(g.buffer,g.byteOffset),E=new Int8Array(g.buffer,g.byteOffset),i=new Int8Array(Q);let o=0;const D=C.getInt32(0,!0);for(let A=0;A<D;++A){o=A*B;let I=C.getInt32(4*(A+1),!0),Q=C.getInt32(4*(A+2),!0);0===Q&&(Q=g.length);const w=B*D;for(;I<Q;){const A=E[I++];if(A>=0&&A<=127)for(let g=0;g<A+1&&o<w;++g)i[o]=E[I++],o++;else if(A<=-1&&A>=-127){const g=E[I++];for(let I=0;I<1-A&&o<w;++I)i[o]=g,o++}}}return A.pixelData=new Uint8Array(Q),A}(A,I):function(A,I){const g=I,B=A.rows*A.columns,Q=new ArrayBuffer(B*A.samplesPerPixel),C=new DataView(g.buffer,g.byteOffset),E=new Int8Array(g.buffer,g.byteOffset),i=new Int8Array(Q);let o=0;const D=C.getInt32(0,!0);for(let I=0;I<D;++I){o=I;let Q=C.getInt32(4*(I+1),!0),w=C.getInt32(4*(I+2),!0);0===w&&(w=g.length);const s=B*D;for(;Q<w;){const I=E[Q++];if(I>=0&&I<=127)for(let g=0;g<I+1&&o<s;++g)i[o]=E[Q++],o+=A.samplesPerPixel;else if(I<=-1&&I>=-127){const g=E[Q++];for(let B=0;B<1-I&&o<s;++B)i[o]=g,o+=A.samplesPerPixel}}}return A.pixelData=new Uint8Array(Q),A}(A,I);if(16===A.bitsAllocated)return function(A,I){const g=I,B=A.rows*A.columns,Q=new ArrayBuffer(B*A.samplesPerPixel*2),C=new DataView(g.buffer,g.byteOffset),E=new Int8Array(g.buffer,g.byteOffset),i=new Int8Array(Q),o=C.getInt32(0,!0);for(let A=0;A<o;++A){let I=0;const Q=0===A?1:0;let o=C.getInt32(4*(A+1),!0),D=C.getInt32(4*(A+2),!0);for(0===D&&(D=g.length);o<D;){const A=E[o++];if(A>=0&&A<=127)for(let g=0;g<A+1&&I<B;++g)i[2*I+Q]=E[o++],I++;else if(A<=-1&&A>=-127){const g=E[o++];for(let C=0;C<1-A&&I<B;++C)i[2*I+Q]=g,I++}}}0===A.pixelRepresentation?A.pixelData=new Uint16Array(Q):A.pixelData=new Int16Array(Q);return A}(A,I);throw new Error(\\\"unsupported pixel format for RLE\\\")};var S=Q(851),r=Q.n(S);const k=\\\"data:application/wasm;base64,\\\",J={codec:void 0,decoder:void 0};const e=async function(A,I){await function(){if(J.codec)return Promise.resolve();const A=r()({locateFile:A=>A.endsWith(\\\".wasm\\\")?k.toString():A});return new Promise(((I,g)=>{A.then((A=>{J.codec=A,J.decoder=new A.JPEGDecoder,I()}),g)}))}();const g=J.decoder;g.getEncodedBuffer(A.length).set(A),g.decode();const B=g.getFrameInfo(),Q=g.getDecodedBuffer(),C={columns:B.width,rows:B.height,bitsPerPixel:B.bitsPerSample,signed:I.signed,bytesPerPixel:I.bytesPerPixel,componentsPerPixel:B.componentCount},E=function(A,I){if(A.isSigned)return new Int8Array(I.buffer,I.byteOffset,I.byteLength);return new Uint8Array(I.buffer,I.byteOffset,I.byteLength)}(B,Q),i={frameInfo:B};return{...I,pixelData:E,imageInfo:C,encodeOptions:i,...i,...C}},n={JpegImage:void 0,decodeConfig:{}};const H=async function(A,I){if(await function(A){return n.decodeConfig=A,n.JpegImage?Promise.resolve():new Promise(((A,I)=>{Promise.resolve().then(Q.t.bind(Q,945,23)).then((({JpegImage:I})=>{n.JpegImage=I,A()}),I)}))}(),void 0===n.JpegImage)throw new Error(\\\"No JPEG Baseline decoder loaded\\\");const g=new n.JpegImage;return g.parse(I),g.colorTransform=!1,8===A.bitsAllocated?(A.pixelData=g.getData(A.columns,A.rows),A):16===A.bitsAllocated?(A.pixelData=g.getData16(A.columns,A.rows),A):void 0},Y={jpeg:void 0,decodeConfig:{}};const M=async function(A,I){if(await function(A){return Y.decodeConfig=A,Y.jpeg?Promise.resolve():new Promise(((A,I)=>{Promise.resolve().then(Q.t.bind(Q,610,23)).then((I=>{Y.jpeg=I,A()}),I)}))}(),void 0===Y.jpeg||void 0===Y.jpeg.lossless||void 0===Y.jpeg.lossless.Decoder)throw new Error(\\\"No JPEG Lossless decoder loaded\\\");const g=A.bitsAllocated<=8?1:2,B=I.buffer,C=(new Y.jpeg.lossless.Decoder).decode(B,I.byteOffset,I.length,g);return 0===A.pixelRepresentation?16===A.bitsAllocated?(A.pixelData=new Uint16Array(C.buffer),A):(A.pixelData=new Uint8Array(C.buffer),A):(A.pixelData=new Int16Array(C.buffer),A)};var L=Q(430),K=Q.n(L);const d=\\\"data:application/wasm;base64,\\\",l={codec:void 0,decoder:void 0,decodeConfig:{}};const f=async function(A,I){await function(A){if(l.decodeConfig=A,l.codec)return Promise.resolve();const I=K()({locateFile:A=>A.endsWith(\\\".wasm\\\")?d:A});return new Promise(((A,g)=>{I.then((I=>{l.codec=I,l.decoder=new I.HTJ2KDecoder,A()}),g)}))}();const g=new l.codec.HTJ2KDecoder,B=g.getEncodedBuffer(A.length);B.set(A);const Q=I.decodeLevel||0;g.decodeSubResolution(Q);const C=g.getFrameInfo();if(I.decodeLevel>0){const{width:A,height:g}=function(A,I,g){const B={width:I,height:g};for(;A>0;)B.width=Math.ceil(B.width/2),B.height=Math.ceil(B.height/2),A--;return B}(I.decodeLevel,C.width,C.height);C.width=A,C.height=g}const E=g.getDecodedBuffer();new Uint8Array(E.length).set(E);const i=`x: ${g.getImageOffset().x}, y: ${g.getImageOffset().y}`,o=g.getNumDecompositions(),D=g.getNumLayers(),w=[\\\"unknown\\\",\\\"LRCP\\\",\\\"RLCP\\\",\\\"RPCL\\\",\\\"PCRL\\\",\\\"CPRL\\\"][g.getProgressionOrder()+1],s=g.getIsReversible(),a=`${g.getBlockDimensions().width} x ${g.getBlockDimensions().height}`,G=`${g.getTileSize().width} x ${g.getTileSize().height}`,F=`${g.getTileOffset().x}, ${g.getTileOffset().y}`,h=`${E.length.toLocaleString()} bytes`,y=`${(E.length/B.length).toFixed(2)}:1`,c={columns:C.width,rows:C.height,bitsPerPixel:C.bitsPerSample,signed:C.isSigned,bytesPerPixel:I.bytesPerPixel,componentsPerPixel:C.componentCount};let t=function(A,I){if(A.bitsPerSample>8)return A.isSigned?new Int16Array(I.buffer,I.byteOffset,I.byteLength/2):new Uint16Array(I.buffer,I.byteOffset,I.byteLength/2);if(A.isSigned)return new Int8Array(I.buffer,I.byteOffset,I.byteLength);return new Uint8Array(I.buffer,I.byteOffset,I.byteLength)}(C,E);const{buffer:R,byteOffset:N,byteLength:U}=t,S=R.slice(N,N+U);t=new t.constructor(S);const r={imageOffset:i,numDecompositions:o,numLayers:D,progessionOrder:w,reversible:s,blockDimensions:a,tileSize:G,tileOffset:F,decodedSize:h,compressionRatio:y};return{...I,pixelData:t,imageInfo:c,encodeOptions:r,...r,...c}};const q={bilinear:function(A,I){const{rows:g,columns:B,data:Q}=A,{rows:C,columns:E,data:i}=I,o=[],D=[],w=[];for(let A=0;A<E;A++){const I=A*(B-1)/(E-1);o[A]=Math.floor(I),D[A]=Math.min(o[A]+1,B-1),w[A]=I-o[A]}for(let A=0;A<C;A++){const I=A*(g-1)/(C-1),s=Math.floor(I)*B,a=Math.min(s+B,(g-1)*B),G=I-Math.floor(I),F=1-G,h=A*E;for(let A=0;A<E;A++){const I=Q[s+o[A]],g=Q[s+D[A]],B=Q[a+o[A]],C=Q[a+D[A]],E=1-w[A];i[h+A]=(I*E+g*w[A])*F+(B*E+C*w[A])*G}}return i},replicate:function(A,I){const{rows:g,columns:B,pixelData:Q,samplesPerPixel:C=1}=A,{rows:E,columns:i,pixelData:o}=I,D=[];for(let A=0;A<i;A++){const I=A*(B-1)/(i-1);D[A]=Math.floor(I)*C}for(let A=0;A<E;A++){const I=A*(g-1)/(E-1),w=Math.floor(I)*B*C,s=A*i;for(let A=0;A<i;A++)for(let I=0;I<C;I++)o[s+A+I]=Q[w+D[A]+I]}return o}};function p(A,I,g){const B=function(A,I){let g;return Number.isInteger(A)&&Number.isInteger(I)&&(A>=0?I<=255?g=Uint8Array:I<=65535&&(g=Uint16Array):A>=-128&&I<=127?g=Int8Array:A>=-32768&&I<=32767&&(g=Int16Array)),g||Float32Array}(A,I),Q=new B(g.pixelData.length);return Q.set(g.pixelData,0),Q}function b(A){if(!A)throw new Error(\\\"options.preScale.scalingParameters must be defined if preScale.enabled is true, and scalingParameters cannot be derived from the metadata providers.\\\")}const u=async function(A,I,g,B,Q,C){const E=(new Date).getTime();let i,o=null;switch(I){case\\\"1.2.840.10008.1.2\\\":case\\\"1.2.840.10008.1.2.1\\\":case\\\"1.2.840.10008.1.2.1.99\\\":o=R(A,g);break;case\\\"1.2.840.10008.1.2.2\\\":o=N(A,g);break;case\\\"1.2.840.10008.1.2.5\\\":o=U(A,g);break;case\\\"1.2.840.10008.1.2.4.50\\\":i={...A},o=e(g,i);break;case\\\"1.2.840.10008.1.2.4.51\\\":o=H(A,g);break;case\\\"1.2.840.10008.1.2.4.57\\\":case\\\"1.2.840.10008.1.2.4.70\\\":o=M(A,g);break;case\\\"1.2.840.10008.1.2.4.80\\\":case\\\"1.2.840.10008.1.2.4.81\\\":i={signed:1===A.pixelRepresentation,bytesPerPixel:A.bitsAllocated<=8?1:2,...A},o=y(g,i);break;case\\\"1.2.840.10008.1.2.4.90\\\":case\\\"1.2.840.10008.1.2.4.91\\\":i={...A},o=w(g,i);break;case\\\"3.2.840.10008.1.2.4.96\\\":case\\\"1.2.840.10008.1.2.4.201\\\":case\\\"1.2.840.10008.1.2.4.202\\\":case\\\"1.2.840.10008.1.2.4.203\\\":i={...A},o=f(g,i);break;default:throw new Error(`no decoder for transfer syntax ${I}`)}if(!o)throw new Error(\\\"decodePromise not defined\\\");const D=function(A,I,g,B){const{use16BitDataType:Q}=B||{},C=void 0!==A.pixelRepresentation&&1===A.pixelRepresentation,E=C&&void 0!==A.bitsStored?32-A.bitsStored:void 0;if(C&&void 0!==E)for(let I=0;I<A.pixelData.length;I++)A.pixelData[I]=A.pixelData[I]<<E>>E;let i=A.pixelData;A.pixelDataLength=A.pixelData.length;const{min:o,max:D}=c(A.pixelData),w={Uint8Array,Uint16Array:Q?Uint16Array:void 0,Int16Array:Q?Int16Array:void 0,Float32Array},s=I.targetBuffer?.type,a=void 0===I.allowFloatRendering||I.allowFloatRendering,G=!(t=A.photometricInterpretation,\\\"RGB\\\"!==t&&\\\"PALETTE COLOR\\\"!==t&&\\\"YBR_FULL\\\"!==t&&\\\"YBR_FULL_422\\\"!==t&&\\\"YBR_PARTIAL_422\\\"!==t&&\\\"YBR_PARTIAL_420\\\"!==t&&\\\"YBR_RCT\\\"!==t&&\\\"YBR_ICT\\\"!==t||void 0!==I.targetBuffer?.offset),F=I.preScale?.enabled,h=F&&Object.values(I.preScale.scalingParameters).some((A=>\\\"number\\\"==typeof A&&!Number.isInteger(A))),y=!I.preScale.enabled||!a&&h;var t;i=s&&!G?function(A,I,g,B){const{arrayBuffer:Q,type:C,offset:E=0,length:i,rows:o}=A.targetBuffer,D=g[C];if(!D)throw new Error(`target array ${C} is not supported, you need to set use16BitDataType to true if you want to use Uint16Array or Int16Array.`);o&&o!=I.rows&&function(A,I,g){const B=function(A,I,g){const{samplesPerPixel:B}=A,{rows:Q,columns:C}=I,E=Q*C*B,i=new g(E),o=i.byteLength/E;return{pixelData:i,rows:Q,columns:C,frameInfo:{...A.frameInfo,rows:Q,columns:C},imageInfo:{...A.imageInfo,rows:Q,columns:C,bytesPerPixel:o}}}(A,I,g),{scalingType:Q=\\\"replicate\\\"}=I;q[Q](A,B),Object.assign(A,B)}(I,A.targetBuffer,D);const w=I.pixelDataLength,s=E,a=null!=i?i:w-s,G=I.pixelData;if(a!==G.length)throw new Error(`target array for image does not have the same length (${a}) as the decoded image length (${G.length}).`);const F=Q?new D(Q,s,a):new D(a);return F.set(G,0),B=F,B}(I,A,w,i):I.preScale.enabled&&!y?function(A,I,g,B){const Q=A.preScale.scalingParameters;b(Q);const{rescaleSlope:C,rescaleIntercept:E}=Q;let i=I,o=g;\\\"number\\\"==typeof C&&\\\"number\\\"==typeof E&&(i=C*I+E,o=C*g+E);return p(i,o,B)}(I,o,D,A):p(o,D,A);let R=o,N=D;if(I.preScale.enabled&&!y){const g=I.preScale.scalingParameters;b(g);const{rescaleSlope:B,rescaleIntercept:Q}=g;if(\\\"number\\\"==typeof B&&\\\"number\\\"==typeof Q){!function(A,I){const g=A.length,{rescaleSlope:B,rescaleIntercept:Q,suvbw:C}=I;if(\\\"PT\\\"===I.modality&&\\\"number\\\"==typeof C)for(let I=0;I<g;I++)A[I]=C*(A[I]*B+Q);else for(let I=0;I<g;I++)A[I]=A[I]*B+Q}(i,g),A.preScale={...I.preScale,scaled:!0};const{rescaleIntercept:B,rescaleSlope:Q,suvbw:C}=g;R=Q*o+B,N=Q*D+B,C&&(R*=C,N*=C)}}else y&&(A.preScale={scaled:!1},R=o,N=D);const U=void 0!==I.targetBuffer;U&&I.isSharedArrayBuffer||(A.pixelData=i);A.minAfterScale=R,A.maxAfterScale=N;const S=(new Date).getTime();return A.decodeTimeInMS=S-g,A}(await o,Q,E,B);return C?.(D),D};let W;function Z(A){A.decodeTask.initializeCodecsOnStartup&&(D(A.decodeTask),h(A.decodeTask))}const m={taskType:\\\"decodeTask\\\",handler:async function(A,I){Z(W);const g=W&&W.decodeTask&&W.decodeTask.strict,B=new Uint8Array(A.data.pixelData),Q=await u(A.data.imageFrame,A.data.transferSyntax,B,Object.assign(W.decodeTask,A.data.decodeConfig),A.data.options);if(!Q.pixelData)throw new Error(\\\"decodeTask: imageFrame.pixelData is undefined after decoding\\\");return function(A,I=!0){const g=void 0!==A.minAfterScale||void 0!==A.maxAfterScale?{min:A.minAfterScale,max:A.maxAfterScale}:c(A.pixelData),B=!(t(A.smallestPixelValue)&&t(A.largestPixelValue));!0!==I||B?(A.smallestPixelValue=g.min,A.largestPixelValue=g.max):(A.smallestPixelValue!==g.min&&console.warn(\\\"Image smallestPixelValue tag is incorrect. Rendering performance will suffer considerably.\\\"),A.largestPixelValue!==g.max&&console.warn(\\\"Image largestPixelValue tag is incorrect. Rendering performance will suffer considerably.\\\"))}(Q,g),Q.pixelData=Q.pixelData.buffer,I?.(Q,[Q.pixelData]),{result:Q,transferList:[Q.pixelData]}},initialize:function(A){W=A,Z(A)}};B(m)})()})();\\n//# sourceMappingURL=index.worker.bundle.min.worker.js.map\", \"Worker\", undefined, __webpack_public_path__ + \"index.worker.bundle.min.worker.js\");\n}\n","// Not sure why but webpack isn't splitting this out unless we explicitly use worker-loader!\n// eslint-disable-next-line\n// import cornerstoneDICOMImageLoaderWebWorker from 'worker-loader!../webWorker/index.worker';\nimport cornerstoneDICOMImageLoaderWebWorker from '../webWorker/index.worker';\n\nimport {\n  WebWorkerOptions,\n  WorkerTaskTypes,\n  WorkerTask,\n  WebWorkerDecodeTaskData,\n  WebWorkerResponse,\n  WebWorkerDeferredObject,\n} from '../types';\n\n// This is for the Webpack 5 approch but it's currently broken\n// so we will continue relying on worker-loader for now\n// https://github.com/webpack/webpack/issues/13899\n/* const cornerstoneDICOMImageLoaderWebWorkerPath = new URL(\n  '../webWorker/index',\n  import.meta.url\n);*/\n\nimport { getOptions } from './internal/options';\n\n// the taskId to assign to the next task added via addTask()\nlet nextTaskId = 0;\n\nconst tasks: WorkerTask[] = [];\n\n// array of web workers to dispatch decode tasks to\nconst webWorkers: {\n  worker: Worker;\n  status: 'ready' | 'busy' | 'initializing';\n  task?: WorkerTask;\n}[] = [];\n\n// The options for cornerstoneDICOMImageLoader\nconst options = getOptions();\n\nconst defaultConfig: WebWorkerOptions = {\n  maxWebWorkers: navigator.hardwareConcurrency || 1,\n  startWebWorkersOnDemand: true,\n  webWorkerTaskPaths: [],\n  taskConfiguration: {\n    decodeTask: {\n      initializeCodecsOnStartup: false,\n      strict: options.strict,\n    },\n  },\n};\n\nlet config: WebWorkerOptions;\n\nconst statistics = {\n  maxWebWorkers: 0,\n  numWebWorkers: 0,\n  numTasksQueued: 0,\n  numTasksExecuting: 0,\n  numTasksCompleted: 0,\n  totalTaskTimeInMS: 0,\n  totalTimeDelayedInMS: 0,\n};\n\n/**\n * Function to start a task on a web worker\n */\nfunction startTaskOnWebWorker() {\n  // return immediately if no decode tasks to do\n  if (!tasks.length) {\n    return;\n  }\n\n  // look for a web worker that is ready\n  for (let i = 0; i < webWorkers.length; i++) {\n    if (webWorkers[i].status === 'ready') {\n      // mark it as busy so tasks are not assigned to it\n      webWorkers[i].status = 'busy';\n\n      // get the highest priority task\n      const task = tasks.shift();\n\n      task.start = new Date().getTime();\n\n      // update stats with how long this task was delayed (waiting in queue)\n      const end = new Date().getTime();\n\n      statistics.totalTimeDelayedInMS += end - task.added;\n\n      // assign this task to this web worker and send the web worker\n      // a message to execute it\n      webWorkers[i].task = task;\n      webWorkers[i].worker.postMessage(\n        {\n          taskType: task.taskType,\n          workerIndex: i,\n          data: task.data,\n        },\n        task.transferList\n      );\n      statistics.numTasksExecuting++;\n\n      return;\n    }\n  }\n\n  // if no available web workers and we haven't started max web workers, start a new one\n  if (webWorkers.length < config.maxWebWorkers) {\n    spawnWebWorker();\n  }\n}\n\n/**\n * Function to handle a message from a web worker\n * @param msg\n */\nfunction handleMessageFromWorker(msg: MessageEvent<WebWorkerResponse>) {\n  // console.log('handleMessageFromWorker', msg.data);\n  if (msg.data.taskType === 'initialize') {\n    webWorkers[msg.data.workerIndex].status = 'ready';\n    startTaskOnWebWorker();\n  } else {\n    const start = webWorkers[msg.data.workerIndex].task.start;\n\n    const action = msg.data.status === 'success' ? 'resolve' : 'reject';\n\n    try {\n      webWorkers[msg.data.workerIndex].task.deferred[action](msg.data.result);\n    } catch (e) {\n      // Do a catch here to ensure the web worker is available\n      console.warn('Caught error delivering response', e);\n    }\n\n    webWorkers[msg.data.workerIndex].task = undefined;\n\n    statistics.numTasksExecuting--;\n    webWorkers[msg.data.workerIndex].status = 'ready';\n    statistics.numTasksCompleted++;\n\n    const end = new Date().getTime();\n\n    statistics.totalTaskTimeInMS += end - start;\n\n    startTaskOnWebWorker();\n  }\n}\n\n/**\n * Spawns a new web worker\n */\nfunction spawnWebWorker() {\n  // prevent exceeding maxWebWorkers\n  if (webWorkers.length >= config.maxWebWorkers) {\n    return;\n  }\n\n  // spawn the webworker\n  const worker: Worker = new (cornerstoneDICOMImageLoaderWebWorker as any)();\n\n  // This is for the Webpack 5 approach but it's currently broken\n  /* const worker = new Worker(cornerstoneDICOMImageLoaderWebWorkerPath, {\n    name: `cornerstoneDICOMImageLoaderWebWorkerPath-${webWorkers.length + 1}`,\n    type: 'module',\n  });*/\n\n  // const worker = new Worker(\n  //   './cornerstoneDICOMImageLoaderWebWorker.bundle.min',\n  //   {\n  //     name: `cornerstoneDICOMImageLoaderWebWorkerPath-${webWorkers.length + 1}`,\n  //   }\n  // );\n\n  webWorkers.push({\n    worker,\n    status: 'initializing',\n  });\n  worker.addEventListener('message', handleMessageFromWorker);\n  worker.postMessage({\n    taskType: 'initialize',\n    workerIndex: webWorkers.length - 1,\n    config,\n  });\n}\n\n/**\n * Initialization function for the web worker manager - spawns web workers\n * @param configObject\n */\nfunction initialize(configObject?: WebWorkerOptions): void {\n  configObject = configObject || defaultConfig;\n\n  // prevent being initialized more than once\n  if (config) {\n    // throw new Error('WebWorkerManager already initialized');\n  }\n\n  config = configObject;\n\n  config.maxWebWorkers =\n    config.maxWebWorkers || navigator.hardwareConcurrency || 1;\n\n  // Spawn new web workers\n  if (!config.startWebWorkersOnDemand) {\n    for (let i = 0; i < config.maxWebWorkers; i++) {\n      spawnWebWorker();\n    }\n  }\n}\n\n/**\n * Terminate all running web workers.\n */\nfunction terminate(): void {\n  for (let i = 0; i < webWorkers.length; i++) {\n    webWorkers[i].worker.terminate();\n  }\n  webWorkers.length = 0;\n  config = undefined;\n}\n\n/**\n * dynamically loads a web worker task\n * @param sourcePath\n * @param taskConfig\n */\nfunction loadWebWorkerTask(sourcePath: string, taskConfig): void {\n  // add it to the list of web worker tasks paths so on demand web workers\n  // load this properly\n  config.webWorkerTaskPaths.push(sourcePath);\n\n  // if a task specific configuration is provided, merge it into the config\n  if (taskConfig) {\n    config.taskConfiguration = Object.assign(\n      config.taskConfiguration,\n      taskConfig\n    );\n  }\n\n  // tell each spawned web worker to load this task\n  for (let i = 0; i < webWorkers.length; i++) {\n    webWorkers[i].worker.postMessage({\n      taskType: 'loadWebWorkerTask',\n      workerIndex: webWorkers.length - 1,\n      sourcePath,\n      config,\n    });\n  }\n}\n\n/**\n * Function to add a decode task to be performed\n *\n * @param taskType - the taskType for this task\n * @param data - data specific to the task\n * @param priority - optional priority of the task (defaults to 0), > 0 is higher, < 0 is lower\n * @param transferList - optional array of data to transfer to web worker\n * @returns {*}\n */\nfunction addTask<T = any>(\n  taskType: WorkerTaskTypes,\n  data: WebWorkerDecodeTaskData,\n  priority = 0,\n  transferList: Transferable[]\n): { taskId: number; promise: Promise<T> } {\n  if (!config) {\n    initialize();\n  }\n\n  let deferred: WebWorkerDeferredObject<T> = {\n    resolve: undefined,\n    reject: undefined,\n  };\n  const promise = new Promise<T>((resolve, reject) => {\n    deferred = {\n      resolve,\n      reject,\n    };\n  });\n\n  // find the right spot to insert this decode task (based on priority)\n  let i: number;\n\n  for (i = 0; i < tasks.length; i++) {\n    if (tasks[i].priority < priority) {\n      break;\n    }\n  }\n\n  const taskId = nextTaskId++;\n\n  // insert the decode task at position i\n  tasks.splice(i, 0, {\n    taskId,\n    taskType,\n    status: 'ready',\n    added: new Date().getTime(),\n    data,\n    deferred,\n    priority,\n    transferList,\n  });\n\n  // try to start a task on the web worker since we just added a new task and a web worker may be available\n  startTaskOnWebWorker();\n\n  return {\n    taskId,\n    promise,\n  };\n}\n\n/**\n * Changes the priority of a queued task\n * @param taskId - the taskId to change the priority of\n * @param priority - priority of the task (defaults to 0), > 0 is higher, < 0 is lower\n * @returns boolean - true on success, false if taskId not found\n */\nfunction setTaskPriority(taskId: number, priority = 0): boolean {\n  // search for this taskId\n  for (let i = 0; i < tasks.length; i++) {\n    if (tasks[i].taskId === taskId) {\n      // taskId found, remove it\n      const task = tasks.splice(i, 1)[0];\n\n      // set its priority\n      task.priority = priority;\n\n      // find the right spot to insert this decode task (based on priority)\n      for (i = 0; i < tasks.length; i++) {\n        if (tasks[i].priority < priority) {\n          break;\n        }\n      }\n\n      // insert the decode task at position i\n      tasks.splice(i, 0, task);\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Cancels a queued task and rejects\n * @param taskId - the taskId to cancel\n * @param reason - optional reason the task was rejected\n * @returns boolean - true on success, false if taskId not found\n */\nfunction cancelTask(taskId: number, reason: string): boolean {\n  // search for this taskId\n  for (let i = 0; i < tasks.length; i++) {\n    if (tasks[i].taskId === taskId) {\n      // taskId found, remove it\n      /**\n       * @todo Check if this is a bug. Splice returns an array but task is\n       * treated as a single task object\n       */\n      const task = tasks.splice(i, 1);\n\n      (task as any).deferred.reject(reason);\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Function to return the statistics on running web workers\n * @returns object containing statistics\n */\nfunction getStatistics(): typeof config {\n  statistics.maxWebWorkers = config.maxWebWorkers;\n  statistics.numWebWorkers = webWorkers.length;\n  statistics.numTasksQueued = tasks.length;\n\n  return statistics;\n}\n\nexport default {\n  initialize,\n  loadWebWorkerTask,\n  addTask,\n  getStatistics,\n  setTaskPriority,\n  cancelTask,\n  webWorkers,\n  terminate,\n};\n","import decodeJPEGBaseline8BitColor from './decodeJPEGBaseline8BitColor';\nimport webWorkerManager from './webWorkerManager';\n\n// dicomParser requires pako for browser-side decoding of deflate transfer syntax\n// We only need one function though, so lets import that so we don't make our bundle\n// too large.\nimport { ByteArray } from 'dicom-parser';\nimport { inflateRaw } from 'pako/lib/inflate';\nimport { ImageFrame, LoaderDecodeOptions } from '../types';\n\n(window as any).pako = { inflateRaw };\n\nfunction processDecodeTask(\n  imageFrame: ImageFrame,\n  transferSyntax: string,\n  pixelData: ByteArray,\n  srcOptions,\n  decodeConfig: LoaderDecodeOptions\n): Promise<ImageFrame> {\n  const options = { ...srcOptions };\n  // If a loader is specified, it can't be passed through because it is a function\n  // and can't be safely cloned/copied externally.\n  delete options.loader;\n  // Similarly, the streamData may contain larger data information and\n  // although it can be passed to the decoder, it isn't needed and is slow\n  delete options.streamingData;\n\n  const priority = options.priority || undefined;\n  const transferList = options.transferPixelData\n    ? [pixelData.buffer]\n    : undefined;\n\n  return webWorkerManager.addTask(\n    'decodeTask',\n    {\n      imageFrame,\n      transferSyntax,\n      pixelData,\n      options,\n      decodeConfig,\n    },\n    priority,\n    transferList\n  ).promise;\n}\n\nfunction decodeImageFrame(\n  imageFrame,\n  transferSyntax,\n  pixelData,\n  canvas,\n  options = {},\n  decodeConfig\n) {\n  switch (transferSyntax) {\n    case '1.2.840.10008.1.2':\n      // Implicit VR Little Endian\n      return processDecodeTask(\n        imageFrame,\n        transferSyntax,\n        pixelData,\n        options,\n        decodeConfig\n      );\n    case '1.2.840.10008.1.2.1':\n      // Explicit VR Little Endian\n      return processDecodeTask(\n        imageFrame,\n        transferSyntax,\n        pixelData,\n        options,\n        decodeConfig\n      );\n    case '1.2.840.10008.1.2.2':\n      // Explicit VR Big Endian (retired)\n      return processDecodeTask(\n        imageFrame,\n        transferSyntax,\n        pixelData,\n        options,\n        decodeConfig\n      );\n    case '1.2.840.10008.1.2.1.99':\n      // Deflate transfer syntax (deflated by dicomParser)\n      return processDecodeTask(\n        imageFrame,\n        transferSyntax,\n        pixelData,\n        options,\n        decodeConfig\n      );\n    case '1.2.840.10008.1.2.5':\n      // RLE Lossless\n      return processDecodeTask(\n        imageFrame,\n        transferSyntax,\n        pixelData,\n        options,\n        decodeConfig\n      );\n    case '1.2.840.10008.1.2.4.50':\n      // JPEG Baseline lossy process 1 (8 bit)\n\n      // Handle 8-bit JPEG Baseline color images using the browser's built-in\n      // JPEG decoding\n      if (\n        imageFrame.bitsAllocated === 8 &&\n        (imageFrame.samplesPerPixel === 3 || imageFrame.samplesPerPixel === 4)\n      ) {\n        return decodeJPEGBaseline8BitColor(imageFrame, pixelData, canvas);\n      }\n\n      return processDecodeTask(\n        imageFrame,\n        transferSyntax,\n        pixelData,\n        options,\n        decodeConfig\n      );\n    case '1.2.840.10008.1.2.4.51':\n      // JPEG Baseline lossy process 2 & 4 (12 bit)\n      return processDecodeTask(\n        imageFrame,\n        transferSyntax,\n        pixelData,\n        options,\n        decodeConfig\n      );\n    case '1.2.840.10008.1.2.4.57':\n      // JPEG Lossless, Nonhierarchical (Processes 14)\n      return processDecodeTask(\n        imageFrame,\n        transferSyntax,\n        pixelData,\n        options,\n        decodeConfig\n      );\n    case '1.2.840.10008.1.2.4.70':\n      // JPEG Lossless, Nonhierarchical (Processes 14 [Selection 1])\n      return processDecodeTask(\n        imageFrame,\n        transferSyntax,\n        pixelData,\n        options,\n        decodeConfig\n      );\n    case '1.2.840.10008.1.2.4.80':\n      // JPEG-LS Lossless Image Compression\n      return processDecodeTask(\n        imageFrame,\n        transferSyntax,\n        pixelData,\n        options,\n        decodeConfig\n      );\n    case '1.2.840.10008.1.2.4.81':\n      // JPEG-LS Lossy (Near-Lossless) Image Compression\n      return processDecodeTask(\n        imageFrame,\n        transferSyntax,\n        pixelData,\n        options,\n        decodeConfig\n      );\n    case '1.2.840.10008.1.2.4.90':\n      // JPEG 2000 Lossless\n      return processDecodeTask(\n        imageFrame,\n        transferSyntax,\n        pixelData,\n        options,\n        decodeConfig\n      );\n    case '1.2.840.10008.1.2.4.91':\n      // JPEG 2000 Lossy\n      return processDecodeTask(\n        imageFrame,\n        transferSyntax,\n        pixelData,\n        options,\n        decodeConfig\n      );\n\n    case '3.2.840.10008.1.2.4.96':\n    case '1.2.840.10008.1.2.4.201':\n    case '1.2.840.10008.1.2.4.202':\n    case '1.2.840.10008.1.2.4.203':\n      // HTJ2K\n      return processDecodeTask(\n        imageFrame,\n        transferSyntax,\n        pixelData,\n        options,\n        decodeConfig\n      );\n  }\n\n  /* Don't know if these work...\n   // JPEG 2000 Part 2 Multicomponent Image Compression (Lossless Only)\n   else if(transferSyntax === \"1.2.840.10008.1.2.4.92\")\n   {\n   return cornerstoneDICOMImageLoader.decodeJPEG2000(dataSet, frame);\n   }\n   // JPEG 2000 Part 2 Multicomponent Image Compression\n   else if(transferSyntax === \"1.2.840.10008.1.2.4.93\")\n   {\n   return cornerstoneDICOMImageLoader.decodeJPEG2000(dataSet, frame);\n   }\n   */\n\n  return Promise.reject(\n    new Error(`No decoder for transfer syntax ${transferSyntax}`)\n  );\n}\n\nexport default decodeImageFrame;\n","import external from '../externalModules';\nimport { ImageFrame, MetadataImagePixelModule } from '../types';\n\nfunction getImageFrame(imageId: string): ImageFrame {\n  const { cornerstone } = external;\n  const imagePixelModule: MetadataImagePixelModule = cornerstone.metaData.get(\n    'imagePixelModule',\n    imageId\n  );\n\n  return {\n    samplesPerPixel: imagePixelModule.samplesPerPixel,\n    photometricInterpretation: imagePixelModule.photometricInterpretation,\n    planarConfiguration: imagePixelModule.planarConfiguration,\n    rows: imagePixelModule.rows,\n    columns: imagePixelModule.columns,\n    bitsAllocated: imagePixelModule.bitsAllocated,\n    bitsStored: imagePixelModule.bitsStored,\n    pixelRepresentation: imagePixelModule.pixelRepresentation, // 0 = unsigned,\n    smallestPixelValue: imagePixelModule.smallestPixelValue,\n    largestPixelValue: imagePixelModule.largestPixelValue,\n    redPaletteColorLookupTableDescriptor:\n      imagePixelModule.redPaletteColorLookupTableDescriptor,\n    greenPaletteColorLookupTableDescriptor:\n      imagePixelModule.greenPaletteColorLookupTableDescriptor,\n    bluePaletteColorLookupTableDescriptor:\n      imagePixelModule.bluePaletteColorLookupTableDescriptor,\n    redPaletteColorLookupTableData:\n      imagePixelModule.redPaletteColorLookupTableData,\n    greenPaletteColorLookupTableData:\n      imagePixelModule.greenPaletteColorLookupTableData,\n    bluePaletteColorLookupTableData:\n      imagePixelModule.bluePaletteColorLookupTableData,\n    pixelData: undefined, // populated later after decoding\n    imageId,\n  };\n}\n\nexport default getImageFrame;\n","export default function (photoMetricInterpretation: string): boolean {\n  return (\n    photoMetricInterpretation === 'RGB' ||\n    photoMetricInterpretation === 'PALETTE COLOR' ||\n    photoMetricInterpretation === 'YBR_FULL' ||\n    photoMetricInterpretation === 'YBR_FULL_422' ||\n    photoMetricInterpretation === 'YBR_PARTIAL_422' ||\n    photoMetricInterpretation === 'YBR_PARTIAL_420' ||\n    photoMetricInterpretation === 'YBR_RCT' ||\n    photoMetricInterpretation === 'YBR_ICT'\n  );\n}\n","import { ByteArray } from 'dicom-parser';\nimport external from '../externalModules';\nimport getMinMax from '../shared/getMinMax';\nimport getPixelDataTypeFromMinMax from '../shared/getPixelDataTypeFromMinMax';\nimport {\n  DICOMLoaderImageOptions,\n  MetadataImagePlaneModule,\n  MetadataSopCommonModule,\n  DICOMLoaderIImage,\n  ImageFrame,\n  PixelDataTypedArray,\n} from '../types';\nimport convertColorSpace from './convertColorSpace';\nimport isColorConversionRequired from './isColorConversionRequired';\nimport decodeImageFrame from './decodeImageFrame';\nimport getImageFrame from './getImageFrame';\nimport getScalingParameters from './getScalingParameters';\nimport { getOptions } from './internal/options';\nimport isColorImageFn from '../shared/isColorImage';\n\nlet lastImageIdDrawn = '';\n\nfunction isModalityLUTForDisplay(sopClassUid: string): boolean {\n  // special case for XA and XRF\n  // https://groups.google.com/forum/#!searchin/comp.protocols.dicom/Modality$20LUT$20XA/comp.protocols.dicom/UBxhOZ2anJ0/D0R_QP8V2wIJ\n  return (\n    sopClassUid !== '1.2.840.10008.5.1.4.1.1.12.1' && // XA\n    sopClassUid !== '1.2.840.10008.5.1.4.1.1.12.2.1'\n  ); // XRF\n}\n\n/**\n * Helper function to set pixel d2023-03-17-16-35-04.pngata to the right typed array.\n * This is needed because web workers can transfer array buffers but not typed arrays\n *\n * Here we are setting the pixel data to the right typed array based on the final\n * min and max values\n */\nfunction setPixelDataType(imageFrame) {\n  const minValue = imageFrame.smallestPixelValue;\n  const maxValue = imageFrame.largestPixelValue;\n\n  const TypedArray = getPixelDataTypeFromMinMax(minValue, maxValue);\n\n  if (TypedArray) {\n    const typedArray = new TypedArray(imageFrame.pixelData);\n    imageFrame.pixelData = typedArray;\n  } else {\n    throw new Error('Could not apply a typed array to the pixel data');\n  }\n}\n\n/**\n * Removes the A from RGBA to return RGB buffer, this is used when the\n * decoding happens with browser API which results in RGBA, but if useRGBA flag\n * is set to false, we want to return RGB\n *\n * @param pixelData - decoded image in RGBA\n * @param targetBuffer - target buffer to write to\n */\nfunction removeAFromRGBA(\n  pixelData: PixelDataTypedArray,\n  targetBuffer: Uint8ClampedArray | Uint8Array\n) {\n  const numPixels = pixelData.length / 4;\n\n  let rgbIndex = 0;\n\n  let bufferIndex = 0;\n\n  for (let i = 0; i < numPixels; i++) {\n    targetBuffer[bufferIndex++] = pixelData[rgbIndex++]; // red\n    targetBuffer[bufferIndex++] = pixelData[rgbIndex++]; // green\n    targetBuffer[bufferIndex++] = pixelData[rgbIndex++]; // blue\n    rgbIndex++; // skip alpha\n  }\n\n  return targetBuffer;\n}\n\nfunction createImage(\n  imageId: string,\n  pixelData: ByteArray,\n  transferSyntax: string,\n  options: DICOMLoaderImageOptions = {}\n): Promise<DICOMLoaderIImage | ImageFrame> {\n  // whether to use RGBA for color images, default true as cs-legacy uses RGBA\n  // but we don't need RGBA in cs3d, and it's faster, and memory-efficient\n  // in cs3d\n  const useRGBA = options.useRGBA;\n\n  // always preScale the pixel array unless it is asked not to\n  options.preScale = {\n    enabled:\n      options.preScale && options.preScale.enabled !== undefined\n        ? options.preScale.enabled\n        : false,\n  };\n\n  if (!pixelData?.length) {\n    return Promise.reject(new Error('The pixel data is missing'));\n  }\n\n  const { cornerstone } = external;\n  const { MetadataModules } = cornerstone.Enums;\n  const canvas = document.createElement('canvas');\n  const imageFrame = getImageFrame(imageId);\n  imageFrame.decodeLevel = options.decodeLevel;\n\n  options.allowFloatRendering = cornerstone.canRenderFloatTextures();\n\n  // Get the scaling parameters from the metadata\n  if (options.preScale.enabled) {\n    const scalingParameters = getScalingParameters(\n      cornerstone.metaData,\n      imageId\n    );\n\n    if (scalingParameters) {\n      options.preScale = {\n        ...options.preScale,\n        scalingParameters,\n      };\n    }\n  }\n\n  // we need to identify if the target buffer is a SharedArrayBuffer\n  // since inside the webworker we don't have access to the window\n  // to say if it is a SharedArrayBuffer or not with instanceof\n  options.isSharedArrayBuffer =\n    options.targetBuffer?.arrayBuffer &&\n    options.targetBuffer.arrayBuffer instanceof SharedArrayBuffer;\n\n  const { decodeConfig } = getOptions();\n\n  // check if the options to use the 16 bit data type is set\n  // on the image load options, and prefer that over the global\n  // options of the dicom loader\n  decodeConfig.use16BitDataType =\n    (options && options.targetBuffer?.type === 'Uint16Array') ||\n    options.targetBuffer?.type === 'Int16Array'\n      ? true\n      : options.useNativeDataType || decodeConfig.use16BitDataType;\n\n  // Remove any property of the `imageFrame` that cannot be transferred to the worker,\n  // such as promises and functions.\n  // This is necessary because the `imageFrame` object is passed to the worker.\n  Object.keys(imageFrame).forEach((key) => {\n    if (\n      typeof imageFrame[key] === 'function' ||\n      imageFrame[key] instanceof Promise\n    ) {\n      delete imageFrame[key];\n    }\n  });\n\n  const decodePromise = decodeImageFrame(\n    imageFrame,\n    transferSyntax,\n    pixelData,\n    canvas,\n    options,\n    decodeConfig\n  );\n\n  const { use16BitDataType } = decodeConfig;\n  const isColorImage = isColorImageFn(imageFrame.photometricInterpretation);\n\n  return new Promise<DICOMLoaderIImage | ImageFrame>((resolve, reject) => {\n    // eslint-disable-next-line complexity\n    decodePromise.then(function (imageFrame: ImageFrame) {\n      // if it is desired to skip creating image, return the imageFrame\n      // after the decode. This might be useful for some applications\n      // that only need the decoded pixel data and not the image object\n      if (options.skipCreateImage) {\n        return resolve(imageFrame);\n      }\n      // If we have a target buffer that was written to in the\n      // Decode task, point the image to it here.\n      // We can't have done it within the thread incase it was a SharedArrayBuffer.\n      let alreadyTyped = false;\n      // We can safely render color image in 8 bit, so no need to convert\n      if (options.targetBuffer && options.targetBuffer.type && !isColorImage) {\n        const {\n          arrayBuffer,\n          type,\n          offset: rawOffset = 0,\n          length: rawLength,\n        } = options.targetBuffer;\n\n        const imageFrameLength = imageFrame.pixelDataLength;\n\n        const offset = rawOffset;\n        const length =\n          rawLength !== null && rawLength !== undefined\n            ? rawLength\n            : imageFrameLength - offset;\n\n        const typedArrayConstructors = {\n          Uint8Array,\n          Uint16Array: use16BitDataType ? Uint16Array : undefined,\n          Int16Array: use16BitDataType ? Int16Array : undefined,\n          Float32Array,\n        };\n\n        if (length !== imageFrame.pixelDataLength) {\n          throw new Error(\n            `target array for image does not have the same length (${length}) as the decoded image length (${imageFrame.pixelDataLength}).`\n          );\n        }\n\n        const TypedArrayConstructor = typedArrayConstructors[type];\n\n        // TypedArray.Set is api level and ~50x faster than copying elements even for\n        // Arrays of different types, which aren't simply memcpy ops.\n        const typedArray = arrayBuffer\n          ? new TypedArrayConstructor(arrayBuffer, offset, length)\n          : new TypedArrayConstructor(imageFrame.pixelData);\n\n        if (length !== imageFrame.pixelDataLength) {\n          throw new Error(\n            'target array for image does not have the same length as the decoded image length.'\n          );\n        }\n\n        imageFrame.pixelData = typedArray;\n        alreadyTyped = true;\n      }\n\n      if (!alreadyTyped) {\n        setPixelDataType(imageFrame);\n      }\n\n      const imagePlaneModule: MetadataImagePlaneModule =\n        cornerstone.metaData.get(MetadataModules.IMAGE_PLANE, imageId) || {};\n      const voiLutModule =\n        cornerstone.metaData.get(MetadataModules.VOI_LUT, imageId) || {};\n      const modalityLutModule =\n        cornerstone.metaData.get(MetadataModules.MODALITY_LUT, imageId) || {};\n      const sopCommonModule: MetadataSopCommonModule =\n        cornerstone.metaData.get(MetadataModules.SOP_COMMON, imageId) || {};\n      const calibrationModule =\n        cornerstone.metaData.get(MetadataModules.CALIBRATION, imageId) || {};\n      const { rows, columns } = imageFrame;\n\n      if (isColorImage) {\n        if (isColorConversionRequired(imageFrame)) {\n          canvas.height = imageFrame.rows;\n          canvas.width = imageFrame.columns;\n          const context = canvas.getContext('2d');\n          let imageData = context.createImageData(\n            imageFrame.columns,\n            imageFrame.rows\n          );\n          if (!useRGBA) {\n            imageData = {\n              ...imageData,\n              data: new Uint8ClampedArray(\n                imageFrame.samplesPerPixel *\n                  imageFrame.columns *\n                  imageFrame.rows\n              ),\n            };\n          }\n          convertColorSpace(imageFrame, imageData.data, useRGBA);\n          imageFrame.imageData = imageData;\n          imageFrame.pixelData = imageData.data;\n          imageFrame.pixelDataLength = imageData.data.length;\n        } else if (\n          !useRGBA &&\n          imageFrame.pixelDataLength === 4 * rows * columns\n        ) {\n          // This case is the case where we need RGB (that is !useRGBA), and\n          // we have RGBA (that is 4 values per pixel, not 3).  For this case,\n          // remove the A value.\n          // Note: rendering libraries like vtk expect Uint8Array for RGB images\n          // otherwise they will convert them to Float32Array which might be slow\n          const colorBuffer = new Uint8Array(\n            (imageFrame.pixelData.length / 4) * 3\n          );\n\n          // remove the A from the RGBA of the imageFrame\n          imageFrame.pixelData = removeAFromRGBA(\n            imageFrame.pixelData,\n            colorBuffer\n          );\n\n          imageFrame.pixelDataLength = imageFrame.pixelData.length;\n        }\n        // else {\n        // No need to do any conversion - already RGB\n        // Consider RGB to RGBA conversion?\n\n        /** @todo check as any */\n        // calculate smallest and largest PixelValue of the converted pixelData\n        const minMax = getMinMax(imageFrame.pixelData as any);\n\n        imageFrame.smallestPixelValue = minMax.min;\n        imageFrame.largestPixelValue = minMax.max;\n      }\n\n      const image: DICOMLoaderIImage = {\n        imageId,\n        color: isColorImage,\n        calibration: calibrationModule,\n        columnPixelSpacing: imagePlaneModule.columnPixelSpacing,\n        columns: imageFrame.columns,\n        height: imageFrame.rows,\n        preScale: imageFrame.preScale,\n        intercept: modalityLutModule.rescaleIntercept\n          ? modalityLutModule.rescaleIntercept\n          : 0,\n        slope: modalityLutModule.rescaleSlope\n          ? modalityLutModule.rescaleSlope\n          : 1,\n        invert: imageFrame.photometricInterpretation === 'MONOCHROME1',\n        minPixelValue: imageFrame.smallestPixelValue,\n        maxPixelValue: imageFrame.largestPixelValue,\n        rowPixelSpacing: imagePlaneModule.rowPixelSpacing,\n        rows: imageFrame.rows,\n        sizeInBytes: imageFrame.pixelData.byteLength,\n        width: imageFrame.columns,\n        // use the first value for rendering, if other values\n        // are needed later, it can be grabbed again from the voiLUtModule\n        windowCenter: voiLutModule.windowCenter\n          ? voiLutModule.windowCenter[0]\n          : undefined,\n        windowWidth: voiLutModule.windowWidth\n          ? voiLutModule.windowWidth[0]\n          : undefined,\n        voiLUTFunction: voiLutModule.voiLUTFunction\n          ? voiLutModule.voiLUTFunction\n          : undefined,\n        decodeTimeInMS: imageFrame.decodeTimeInMS,\n        floatPixelData: undefined,\n        imageFrame,\n        rgba: isColorImage && useRGBA,\n        getPixelData: () => imageFrame.pixelData,\n        getCanvas: undefined,\n        numComps: undefined,\n      };\n\n      if (image.color) {\n        image.getCanvas = function () {\n          // the getCanvas function is used in the CPU rendering path\n          // and it is used to use the canvas api to draw the image\n          // instead of looping through the pixel data and drawing each pixel\n          // to use the canvas api, we need to convert the pixel data to a\n          // Uint8ClampedArray (which is what the canvas api expects)\n          // and then we can use the putImageData api to draw the image\n          // However, if the image already was loaded without the alpha channel\n          // we need to add the alpha channel back in\n          if (lastImageIdDrawn === imageId) {\n            return canvas;\n          }\n\n          const width = image.columns;\n          const height = image.rows;\n\n          canvas.height = height;\n          canvas.width = width;\n          const ctx = canvas.getContext('2d');\n          const imageData = ctx.createImageData(width, height);\n\n          const arr = imageFrame.pixelData;\n\n          if (arr.length === width * height * 4) {\n            for (let i = 0; i < arr.length; i++) {\n              imageData.data[i] = arr[i];\n            }\n          }\n          // Set pixel data for RGB array\n          else if (arr.length === width * height * 3) {\n            let j = 0;\n            for (let i = 0; i < arr.length; i += 3) {\n              imageData.data[j++] = arr[i];\n              imageData.data[j++] = arr[i + 1];\n              imageData.data[j++] = arr[i + 2];\n              imageData.data[j++] = 255;\n            }\n          }\n\n          imageFrame.pixelData = imageData.data;\n          imageFrame.pixelDataLength = imageData.data.length;\n\n          imageFrame.imageData = imageData;\n          ctx.putImageData(imageFrame.imageData, 0, 0);\n          lastImageIdDrawn = imageId;\n\n          return canvas;\n        };\n      }\n\n      // Modality LUT\n      if (\n        modalityLutModule.modalityLUTSequence &&\n        modalityLutModule.modalityLUTSequence.length > 0 &&\n        isModalityLUTForDisplay(sopCommonModule.sopClassUID)\n      ) {\n        image.modalityLUT = modalityLutModule.modalityLUTSequence[0];\n      }\n\n      // VOI LUT\n      if (\n        voiLutModule.voiLUTSequence &&\n        voiLutModule.voiLUTSequence.length > 0\n      ) {\n        image.voiLUT = voiLutModule.voiLUTSequence[0];\n      }\n\n      if (image.color) {\n        // Note that by the DICOM definition, the window width and center are\n        // 256/128 for an identity transform.\n        image.windowWidth = 256;\n        image.windowCenter = 128;\n      }\n\n      // set the ww/wc to cover the dynamic range of the image if no values are supplied\n      if (image.windowCenter === undefined || image.windowWidth === undefined) {\n        const minVoi = image.imageFrame.minAfterScale;\n        const maxVoi = image.imageFrame.maxAfterScale;\n\n        image.windowWidth = maxVoi - minVoi;\n        image.windowCenter = (maxVoi + minVoi) / 2;\n      }\n      resolve(image);\n    }, reject);\n  });\n}\n\nexport default createImage;\n","import { PixelDataTypedArray } from '../types';\n\nexport default function getPixelDataTypeFromMinMax(\n  min: number,\n  max: number\n): PixelDataTypedArray {\n  let pixelDataType;\n  if (Number.isInteger(min) && Number.isInteger(max)) {\n    if (min >= 0) {\n      if (max <= 255) {\n        pixelDataType = Uint8Array;\n      } else if (max <= 65535) {\n        pixelDataType = Uint16Array;\n      }\n    } else {\n      if (min >= -128 && max <= 127) {\n        pixelDataType = Int8Array;\n      } else if (min >= -32768 && max <= 32767) {\n        pixelDataType = Int16Array;\n      }\n    }\n  }\n\n  return pixelDataType || Float32Array;\n}\n","import { MetadataGeneralSeriesModule } from '../types';\n\n/**\n * It returns the scaling parameters for the image with the given imageId. This can be\n * used to get passed (as an option) to the imageLoader in order to apply scaling to the image inside\n * the imageLoader.\n * @param imageId - The imageId of the image\n * @returns ScalingParameters\n */\nexport default function getScalingParameters(metaData: any, imageId: string) {\n  const modalityLutModule = metaData.get('modalityLutModule', imageId) || {};\n\n  const generalSeriesModule: MetadataGeneralSeriesModule =\n    metaData.get('generalSeriesModule', imageId) || {};\n\n  const { modality } = generalSeriesModule;\n\n  const scalingParameters = {\n    rescaleSlope: modalityLutModule.rescaleSlope,\n    rescaleIntercept: modalityLutModule.rescaleIntercept,\n    modality,\n  };\n\n  const suvFactor = metaData.get('scalingModule', imageId) || {};\n\n  return {\n    ...scalingParameters,\n    ...(modality === 'PT' && { suvbw: suvFactor.suvbw }),\n  };\n}\n","/**\n * This function checks color space conversion data requirements before\n * applying them. This function was created to solve problems like the one\n * discussed in here https://discourse.orthanc-server.org/t/orthanc-convert-ybr-to-rgb-but-does-not-change-metadata/3533/17\n * In this case, Orthanc server converts the pixel data from YBR to RGB, but maintain\n * the photometricInterpretation dicom tag in YBR\n * @param imageFrame\n * @param RGBA\n * @returns\n */\nexport default function isColorConversionRequired(imageFrame) {\n  if (imageFrame === undefined) {\n    return false;\n  }\n  const { rows, columns, photometricInterpretation, pixelDataLength } =\n    imageFrame;\n\n  // if it is rgba don't convert (typically jpeg, jpeg-xl, jpeg2000 etc)\n  if (pixelDataLength === 4 * columns * rows) {\n    // RGBA - JPEG\n    return false;\n  }\n\n  if (photometricInterpretation.endsWith('420')) {\n    return (\n      pixelDataLength ===\n      (3 * Math.ceil(columns / 2) + Math.floor(columns / 2)) * rows\n    );\n  } else if (photometricInterpretation.endsWith('422')) {\n    return (\n      pixelDataLength ===\n      (3 * Math.ceil(columns / 2) + Math.floor(columns / 2)) *\n        Math.ceil(rows / 2) +\n        Math.floor(rows / 2) * columns\n    );\n  } else {\n    return photometricInterpretation !== 'RGB';\n    // and it is one of the rle and lei cases then we need to convert\n  }\n}\n","import { Enums, utilities, metaData } from '@cornerstonejs/core';\nimport type { Types, RetrieveOptions } from '@cornerstonejs/core';\n\nimport external from '../../externalModules';\nimport createImage from '../createImage';\nimport getPixelData from './getPixelData';\nimport { DICOMLoaderIImage, DICOMLoaderImageOptions } from '../../types';\n\nconst { ProgressiveIterator } = utilities;\nconst { ImageQualityStatus } = Enums;\nconst streamableTransferSyntaxes = new Set<string>([\n  // Private HTJ2K\n  '3.2.840.10008.1.2.4.96',\n  // Released HTJ2K - only the RPCL one is definitely streamable.\n  '1.2.840.10008.1.2.4.202',\n  // HTJ2K lossy might be streamable, so try it.  If it fails it is ok as it will\n  // proceed and eventually work.\n  '1.2.840.10008.1.2.4.203',\n]);\n\n/**\n * Helper method to extract the transfer-syntax from the response of the server.\n * @param {string} contentType The value of the content-type header as returned by the WADO-RS server.\n * @return The transfer-syntax as announced by the server, or Implicit Little Endian by default.\n */\nexport function getTransferSyntaxForContentType(contentType: string): string {\n  const defaultTransferSyntax = '1.2.840.10008.1.2'; // Default is Implicit Little Endian.\n  if (!contentType) {\n    return defaultTransferSyntax;\n  }\n\n  // Browse through the content type parameters\n  const parameters = contentType.split(';');\n  const params: Record<string, string> = {};\n\n  parameters.forEach((parameter) => {\n    // Look for a transfer-syntax=XXXX pair\n    const parameterValues = parameter.split('=');\n\n    if (parameterValues.length !== 2) {\n      return;\n    }\n\n    const value = parameterValues[1].trim().replace(/\"/g, '');\n\n    params[parameterValues[0].trim()] = value;\n  });\n\n  // This is useful if the PACS doesn't respond with a syntax\n  // in the content type.\n  // http://dicom.nema.org/medical/dicom/current/output/chtml/part18/chapter_6.html#table_6.1.1.8-3b\n  const defaultTransferSyntaxByType = {\n    'image/jpeg': '1.2.840.10008.1.2.4.50',\n    'image/x-dicom-rle': '1.2.840.10008.1.2.5',\n    'image/x-jls': '1.2.840.10008.1.2.4.80',\n    'image/jls': '1.2.840.10008.1.2.4.80',\n    'image/jll': '1.2.840.10008.1.2.4.70',\n    'image/jp2': '1.2.840.10008.1.2.4.90',\n    'image/jpx': '1.2.840.10008.1.2.4.92',\n    // Temporary types, until ratified by DICOM committed - TODO\n    'image/jphc': '3.2.840.10008.1.2.4.96',\n    'image/jxl': '1.2.840.10008.1.2.4.140',\n  };\n\n  if (params['transfer-syntax']) {\n    return params['transfer-syntax'];\n  } else if (\n    contentType &&\n    !Object.keys(params).length &&\n    defaultTransferSyntaxByType[contentType]\n  ) {\n    // dcm4che seems to be reporting the content type as just 'image/jp2'?\n    return defaultTransferSyntaxByType[contentType];\n  } else if (params.type && defaultTransferSyntaxByType[params.type]) {\n    return defaultTransferSyntaxByType[params.type];\n  } else if (defaultTransferSyntaxByType[contentType]) {\n    return defaultTransferSyntaxByType[contentType];\n  }\n\n  return defaultTransferSyntax;\n}\n\nfunction getImageRetrievalPool() {\n  return external.cornerstone.imageRetrievalPoolManager;\n}\n\nexport interface StreamingData {\n  url: string;\n  encodedData?: Uint8Array;\n  // Some values used by instances of streaming data for range\n  totalBytes?: number;\n  chunkSize?: number;\n  totalRanges?: number;\n  rangesFetched?: number;\n}\n\nexport interface CornerstoneWadoRsLoaderOptions\n  extends DICOMLoaderImageOptions {\n  requestType?: string;\n  additionalDetails?: {\n    imageId: string;\n  };\n  priority?: number;\n  addToBeginning?: boolean;\n  retrieveType?: string;\n  transferSyntaxUID?: string;\n  // Retrieve options are stored to provide sub-options for nested calls\n  retrieveOptions?: RetrieveOptions;\n  // Streaming data adds information about already streamed results.\n  streamingData?: StreamingData;\n}\n\n// TODO: load bulk data items that we might need\n\n// Uncomment this on to test jpegls codec in OHIF\n// const mediaType = 'multipart/related; type=\"image/x-jls\"';\n// const mediaType = 'multipart/related; type=\"application/octet-stream\"; transfer-syntax=\"image/x-jls\"';\nconst mediaType =\n  'multipart/related; type=application/octet-stream; transfer-syntax=*';\n\nfunction loadImage(\n  imageId: string,\n  options: CornerstoneWadoRsLoaderOptions = {}\n): Types.IImageLoadObject {\n  const imageRetrievalPool = getImageRetrievalPool();\n\n  const start = new Date().getTime();\n\n  const uncompressedIterator = new ProgressiveIterator<DICOMLoaderIImage>(\n    'decompress'\n  );\n  async function sendXHR(imageURI: string, imageId: string, mediaType: string) {\n    uncompressedIterator.generate(async (it) => {\n      // get the pixel data from the server\n      const compressedIt = ProgressiveIterator.as(\n        getPixelData(imageURI, imageId, mediaType, options)\n      );\n      let lastDecodeLevel = 10;\n      for await (const result of compressedIt) {\n        const {\n          pixelData,\n          imageQualityStatus = ImageQualityStatus.FULL_RESOLUTION,\n          percentComplete,\n          done = true,\n          extractDone = true,\n        } = result;\n        const transferSyntax = getTransferSyntaxForContentType(\n          result.contentType\n        );\n        if (!extractDone && !streamableTransferSyntaxes.has(transferSyntax)) {\n          continue;\n        }\n        const decodeLevel =\n          result.decodeLevel ??\n          (imageQualityStatus === ImageQualityStatus.FULL_RESOLUTION\n            ? 0\n            : decodeLevelFromComplete(\n                percentComplete,\n                options.retrieveOptions?.decodeLevel\n              ));\n        if (!done && lastDecodeLevel <= decodeLevel) {\n          // No point trying again yet\n          continue;\n        }\n\n        try {\n          const useOptions = {\n            ...options,\n            decodeLevel,\n          };\n          const image = (await createImage(\n            imageId,\n            pixelData,\n            transferSyntax,\n            useOptions\n          )) as DICOMLoaderIImage;\n\n          // add the loadTimeInMS property\n          const end = new Date().getTime();\n\n          image.loadTimeInMS = end - start;\n          image.transferSyntaxUID = transferSyntax;\n          image.imageQualityStatus = imageQualityStatus;\n          // The iteration is done even if the image itself isn't done yet\n          it.add(image, done);\n          lastDecodeLevel = decodeLevel;\n        } catch (e) {\n          if (extractDone) {\n            console.warn(\"Couldn't decode\", e);\n            throw e;\n          }\n        }\n      }\n    });\n  }\n\n  const requestType = options.requestType || 'interaction';\n  const additionalDetails = options.additionalDetails || { imageId };\n  const priority = options.priority === undefined ? 5 : options.priority;\n  const addToBeginning = options.addToBeginning || false;\n  const uri = imageId.substring(7);\n\n  imageRetrievalPool.addRequest(\n    sendXHR.bind(this, uri, imageId, mediaType),\n    requestType,\n    additionalDetails,\n    priority,\n    addToBeginning\n  );\n\n  return {\n    promise: uncompressedIterator.getDonePromise(),\n    cancelFn: undefined,\n  };\n}\n\n/** The decode level is based on how much of hte data is needed for\n * each level.  It is a square function, so\n * level 4 only needs 1/25 of the data (eg (4+1)^2).  Add 2% to ensure\n * there is enough space\n */\nfunction decodeLevelFromComplete(percent: number, retrieveDecodeLevel = 4) {\n  const testSize = percent / 100 - 0.02;\n  if (testSize > 1 / 4) {\n    return Math.min(retrieveDecodeLevel, 0);\n  }\n  if (testSize > 1 / 16) {\n    return Math.min(retrieveDecodeLevel, 1);\n  }\n  if (testSize > 1 / 64) {\n    return Math.min(retrieveDecodeLevel, 2);\n  }\n  return Math.min(retrieveDecodeLevel, 3);\n}\n\nexport default loadImage;\n","import {\n  getNumberString,\n  getNumberValue,\n  getNumberValues,\n  getValue,\n  metaDataProvider,\n} from './metaData/index';\n\nimport findIndexOfString from './findIndexOfString';\nimport getPixelData from './getPixelData';\nimport metaDataManager from './metaDataManager';\nimport loadImage from './loadImage';\nimport register from './register';\n\nconst metaData = {\n  getNumberString,\n  getNumberValue,\n  getNumberValues,\n  getValue,\n  metaDataProvider,\n};\n\nexport default {\n  metaData,\n  findIndexOfString,\n  getPixelData,\n  loadImage,\n  metaDataManager,\n  register,\n};\n","import loadImage from './loadImage';\nimport { metaDataProvider } from './metaData/index';\n\nexport default function (cornerstone) {\n  // register wadors scheme and metadata provider\n  cornerstone.registerImageLoader('wadors', loadImage);\n  cornerstone.metaData.addProvider(metaDataProvider);\n}\n","import { MetadataImagePixelModule } from '../../../types';\nimport { DataSet } from 'dicom-parser';\n\nfunction getLutDescriptor(dataSet: DataSet, tag: string) {\n  if (!dataSet.elements[tag] || dataSet.elements[tag].length !== 6) {\n    return;\n  }\n\n  return [\n    dataSet.uint16(tag, 0),\n    dataSet.uint16(tag, 1),\n    dataSet.uint16(tag, 2),\n  ];\n}\n\nfunction getLutData(lutDataSet: DataSet, tag: string, lutDescriptor): number[] {\n  const lut = [];\n  const lutData = lutDataSet.elements[tag];\n\n  for (let i = 0; i < lutDescriptor[0]; i++) {\n    // Output range is always unsigned\n    if (lutDescriptor[2] === 16) {\n      lut[i] = lutDataSet.uint16(tag, i);\n    } else {\n      lut[i] = lutDataSet.byteArray[i + lutData.dataOffset];\n    }\n  }\n\n  return lut;\n}\n\nfunction populatePaletteColorLut(\n  dataSet: DataSet,\n  imagePixelModule: MetadataImagePixelModule\n) {\n  imagePixelModule.redPaletteColorLookupTableDescriptor = getLutDescriptor(\n    dataSet,\n    'x00281101'\n  );\n  imagePixelModule.greenPaletteColorLookupTableDescriptor = getLutDescriptor(\n    dataSet,\n    'x00281102'\n  );\n  imagePixelModule.bluePaletteColorLookupTableDescriptor = getLutDescriptor(\n    dataSet,\n    'x00281103'\n  );\n\n  // The first Palette Color Lookup Table Descriptor value is the number of entries in the lookup table.\n  // When the number of table entries is equal to 2ˆ16 then this value shall be 0.\n  // See http://dicom.nema.org/MEDICAL/DICOM/current/output/chtml/part03/sect_C.7.6.3.html#sect_C.7.6.3.1.5\n  if (imagePixelModule.redPaletteColorLookupTableDescriptor[0] === 0) {\n    imagePixelModule.redPaletteColorLookupTableDescriptor[0] = 65536;\n    imagePixelModule.greenPaletteColorLookupTableDescriptor[0] = 65536;\n    imagePixelModule.bluePaletteColorLookupTableDescriptor[0] = 65536;\n  }\n\n  // The third Palette Color Lookup Table Descriptor value specifies the number of bits for each entry in the Lookup Table Data.\n  // It shall take the value of 8 or 16.\n  // The LUT Data shall be stored in a format equivalent to 8 bits allocated when the number of bits for each entry is 8, and 16 bits allocated when the number of bits for each entry is 16, where in both cases the high bit is equal to bits allocated-1.\n  // The third value shall be identical for each of the Red, Green and Blue Palette Color Lookup Table Descriptors.\n  //\n  // Note: Some implementations have encoded 8 bit entries with 16 bits allocated, padding the high bits;\n  // this can be detected by comparing the number of entries specified in the LUT Descriptor with the actual value length of the LUT Data entry.\n  // The value length in bytes should equal the number of entries if bits allocated is 8, and be twice as long if bits allocated is 16.\n  const numLutEntries =\n    imagePixelModule.redPaletteColorLookupTableDescriptor[0];\n  const lutData = dataSet.elements.x00281201;\n  const lutBitsAllocated = lutData.length === numLutEntries ? 8 : 16;\n\n  // If the descriptors do not appear to have the correct values, correct them\n  if (\n    imagePixelModule.redPaletteColorLookupTableDescriptor[2] !==\n    lutBitsAllocated\n  ) {\n    imagePixelModule.redPaletteColorLookupTableDescriptor[2] = lutBitsAllocated;\n    imagePixelModule.greenPaletteColorLookupTableDescriptor[2] =\n      lutBitsAllocated;\n    imagePixelModule.bluePaletteColorLookupTableDescriptor[2] =\n      lutBitsAllocated;\n  }\n\n  imagePixelModule.redPaletteColorLookupTableData = getLutData(\n    dataSet,\n    'x00281201',\n    imagePixelModule.redPaletteColorLookupTableDescriptor\n  );\n  imagePixelModule.greenPaletteColorLookupTableData = getLutData(\n    dataSet,\n    'x00281202',\n    imagePixelModule.greenPaletteColorLookupTableDescriptor\n  );\n  imagePixelModule.bluePaletteColorLookupTableData = getLutData(\n    dataSet,\n    'x00281203',\n    imagePixelModule.bluePaletteColorLookupTableDescriptor\n  );\n}\n\nfunction populateSmallestLargestPixelValues(\n  dataSet: DataSet,\n  imagePixelModule: MetadataImagePixelModule\n) {\n  const pixelRepresentation = dataSet.uint16('x00280103');\n\n  if (pixelRepresentation === 0) {\n    imagePixelModule.smallestPixelValue = dataSet.uint16('x00280106');\n    imagePixelModule.largestPixelValue = dataSet.uint16('x00280107');\n  } else {\n    imagePixelModule.smallestPixelValue = dataSet.int16('x00280106');\n    imagePixelModule.largestPixelValue = dataSet.int16('x00280107');\n  }\n}\n\nfunction getImagePixelModule(dataSet: DataSet): MetadataImagePixelModule {\n  const imagePixelModule = {\n    samplesPerPixel: dataSet.uint16('x00280002'),\n    photometricInterpretation: dataSet.string('x00280004'),\n    rows: dataSet.uint16('x00280010'),\n    columns: dataSet.uint16('x00280011'),\n    bitsAllocated: dataSet.uint16('x00280100'),\n    bitsStored: dataSet.uint16('x00280101'),\n    highBit: dataSet.uint16('x00280102'),\n    pixelRepresentation: dataSet.uint16('x00280103'),\n    planarConfiguration: dataSet.uint16('x00280006'),\n    pixelAspectRatio: dataSet.string('x00280034'),\n  } as MetadataImagePixelModule;\n\n  populateSmallestLargestPixelValues(dataSet, imagePixelModule);\n\n  if (\n    imagePixelModule.photometricInterpretation === 'PALETTE COLOR' &&\n    dataSet.elements.x00281101\n  ) {\n    populatePaletteColorLut(dataSet, imagePixelModule);\n  }\n\n  return imagePixelModule;\n}\n\nexport default getImagePixelModule;\n","import { DataSet, Element } from 'dicom-parser';\nimport { LutType } from '../../../types';\n\nfunction getLUT(pixelRepresentation: number, lutDataSet: DataSet): LutType {\n  let numLUTEntries = lutDataSet.uint16('x00283002', 0);\n\n  if (numLUTEntries === 0) {\n    numLUTEntries = 65535;\n  }\n  let firstValueMapped = 0;\n\n  if (pixelRepresentation === 0) {\n    firstValueMapped = lutDataSet.uint16('x00283002', 1);\n  } else {\n    firstValueMapped = lutDataSet.int16('x00283002', 1);\n  }\n  const numBitsPerEntry = lutDataSet.uint16('x00283002', 2);\n  // console.log('LUT(', numLUTEntries, ',', firstValueMapped, ',', numBitsPerEntry, ')');\n  const lut = {\n    id: '1',\n    firstValueMapped,\n    numBitsPerEntry,\n    lut: [],\n  };\n\n  // console.log(\"minValue=\", minValue, \"; maxValue=\", maxValue);\n  for (let i = 0; i < numLUTEntries; i++) {\n    if (pixelRepresentation === 0) {\n      lut.lut[i] = lutDataSet.uint16('x00283006', i);\n    } else {\n      lut.lut[i] = lutDataSet.int16('x00283006', i);\n    }\n  }\n\n  return lut;\n}\n\nfunction getLUTs(pixelRepresentation: number, lutSequence: Element): LutType[] {\n  if (!lutSequence || !lutSequence.items || !lutSequence.items.length) {\n    return;\n  }\n  const luts: LutType[] = [];\n\n  for (let i = 0; i < lutSequence.items.length; i++) {\n    const lutDataSet = lutSequence.items[i].dataSet;\n    const lut = getLUT(pixelRepresentation, lutDataSet);\n\n    if (lut) {\n      luts.push(lut);\n    }\n  }\n\n  return luts;\n}\n\nexport default getLUTs;\n","/* eslint no-bitwise: 0 */\n\nimport { DataSet } from 'dicom-parser';\n\nfunction getMinStoredPixelValue(dataSet: DataSet) {\n  const pixelRepresentation = dataSet.uint16('x00280103');\n  const bitsStored = dataSet.uint16('x00280101');\n\n  if (pixelRepresentation === 0) {\n    return 0;\n  }\n\n  return -1 << (bitsStored - 1);\n}\n\n// 0 = unsigned / US, 1 = signed / SS\nfunction getModalityLUTOutputPixelRepresentation(dataSet: DataSet) {\n  // CT SOP Classes are always signed\n  const sopClassUID = dataSet.string('x00080016');\n\n  if (\n    sopClassUID === '1.2.840.10008.5.1.4.1.1.2' ||\n    sopClassUID === '1.2.840.10008.5.1.4.1.1.2.1'\n  ) {\n    return 1;\n  }\n\n  // if rescale intercept and rescale slope are present, pass the minimum stored\n  // pixel value through them to see if we get a signed output range\n  const rescaleIntercept = dataSet.floatString('x00281052');\n  const rescaleSlope = dataSet.floatString('x00281053');\n\n  if (rescaleIntercept !== undefined && rescaleSlope !== undefined) {\n    const minStoredPixelValue = getMinStoredPixelValue(dataSet); //\n    const minModalityLutValue =\n      minStoredPixelValue * rescaleSlope + rescaleIntercept;\n\n    if (minModalityLutValue < 0) {\n      return 1;\n    }\n\n    return 0;\n  }\n\n  // Output of non linear modality lut is always unsigned\n  if (dataSet.elements.x00283000 && dataSet.elements.x00283000.length > 0) {\n    return 0;\n  }\n\n  // If no modality lut transform, output is same as pixel representation\n  return dataSet.uint16('x00280103');\n}\n\nexport default getModalityLUTOutputPixelRepresentation;\n","import { DataSet } from 'dicom-parser';\n\nfunction getNumberValues(\n  dataSet: DataSet,\n  tag: string,\n  minimumLength: number\n): number[] {\n  const values = [];\n  const valueAsString = dataSet.string(tag);\n\n  if (!valueAsString) {\n    return;\n  }\n  const split = valueAsString.split('\\\\');\n\n  if (minimumLength && split.length < minimumLength) {\n    return;\n  }\n  for (let i = 0; i < split.length; i++) {\n    values.push(parseFloat(split[i]));\n  }\n\n  return values;\n}\n\nexport default getNumberValues;\n","export interface CornerstoneImageUrl {\n  scheme: string;\n  url: string;\n  frame: number;\n  pixelDataFrame: number;\n}\n\nfunction parseImageId(imageId: string): CornerstoneImageUrl {\n  // build a url by parsing out the url scheme and frame index from the imageId\n  const firstColonIndex = imageId.indexOf(':');\n\n  let url = imageId.substring(firstColonIndex + 1);\n  const frameIndex = url.indexOf('frame=');\n\n  let frame;\n\n  if (frameIndex !== -1) {\n    const frameStr = url.substring(frameIndex + 6);\n\n    frame = parseInt(frameStr, 10);\n    url = url.substring(0, frameIndex - 1);\n  }\n\n  const scheme = imageId.substring(0, firstColonIndex);\n  /**\n   * Why we adjust frameNumber? since in the above we are extracting the\n   * frame number from the imageId (from the metadata), and the frame number\n   * starts from 1, but in the loader which uses the dicomParser\n   * the frame number starts from 0.\n   */\n\n  const adjustedFrame = frame !== undefined ? frame - 1 : undefined;\n\n  return {\n    scheme,\n    url,\n    frame,\n    pixelDataFrame: adjustedFrame,\n  };\n}\n\nexport default parseImageId;\n","import { DataSet } from 'dicom-parser';\nimport external from '../../externalModules';\nimport {\n  LoadRequestFunction,\n  DICOMLoaderDataSetWithFetchMore,\n} from '../../types';\n\nfunction fixFragments(dataSet: DataSet) {\n  // The partially parsed pixelData element has incorrect fragment\n  // lengths because the byte array is truncated, so we manually set\n  // it to the actual length.\n  const fragments = dataSet.elements.x7fe00010.fragments;\n  const totalLength = dataSet.byteArray.length;\n\n  for (const fragment of fragments) {\n    const { position, length } = fragment;\n\n    if (length > totalLength - position) {\n      console.log(\n        `Truncated fragment, changing fragment length from ${\n          fragment.length\n        } to ${totalLength - position}`\n      );\n      fragment.length = totalLength - position;\n    }\n  }\n\n  return dataSet;\n}\n\nfunction parsePartialByteArray(byteArray: Uint8Array) {\n  const { dicomParser } = external;\n  /**\n   * First parse just up to pixelData. This will make sure the\n   * metadata header is correctly parsed (assuming no other error is\n   * thrown during parsing). Then, parse again using the whole partial\n   * arraybuffer. This will error, but still kick out the parsed\n   * partial pixel data in the error object.\n   */\n\n  let dataSet = dicomParser.parseDicom(byteArray, {\n    untilTag: 'x7fe00010',\n  });\n\n  if (!dataSet.elements.x7fe00010) {\n    console.warn('Pixel data not found!');\n    // Re-fetch more of the file\n  }\n\n  let pixelDataSet: DataSet;\n\n  try {\n    // This is expected to fail, since the file is incomplete, but\n    // dicomParser helpfully spits out the parsed partial dataset in\n    // the error object. The problem is, the dataset here is\n    // incomplete, because dicomParser throws *before* combining the\n    // metadata header and regular datasets, so transfer syntax and\n    // other metadata headers aren't included.\n    pixelDataSet = dicomParser.parseDicom(byteArray);\n  } catch (err: any) {\n    // Todo: This is probably invalid handling - it expects the only reason to\n    //  fail is a partial dataset\n    console.error(err);\n    console.log('pixel data dataset:', err.dataSet);\n    pixelDataSet = err.dataSet;\n  }\n\n  // Add the parsed partial pixel data element to the dataset\n  // including the metadata headers.\n  dataSet.elements.x7fe00010 = pixelDataSet.elements.x7fe00010;\n\n  dataSet = fixFragments(dataSet);\n\n  return dataSet;\n}\n\nexport default async function dataSetFromPartialContent(\n  byteArray: Uint8Array,\n  loadRequest: LoadRequestFunction,\n  metadata: {\n    uri: string;\n    imageId: string;\n    fileTotalLength: number | null;\n  }\n): Promise<DICOMLoaderDataSetWithFetchMore> {\n  const dataSet: DICOMLoaderDataSetWithFetchMore =\n    parsePartialByteArray(byteArray);\n  const { uri, imageId, fileTotalLength } = metadata;\n\n  // Allow re-fetching of more of the file\n  dataSet.fetchMore = async function (fetchOptions) {\n    // Default to fetching the rest of the file if no lengthToFetch is set. Also\n    // default to fetching the same URI/imageId\n    const _options = Object.assign(\n      {\n        uri,\n        imageId,\n        fetchedLength: byteArray.length, // Not sure if this would ever need to be configurable tbh\n        lengthToFetch: fileTotalLength - byteArray.length,\n      },\n      fetchOptions\n    );\n    const { fetchedLength, lengthToFetch } = _options;\n\n    // Use passed xhr loader to re-fetch new byte range\n\n    // Todo: the following might be wrong, does it return array buffer or\n    // something else?\n    // @ts-ignore\n    const { arrayBuffer } = await loadRequest(uri, imageId, {\n      byteRange: `${fetchedLength}-${fetchedLength + lengthToFetch}`,\n    });\n\n    // Combine byte ranges\n    const byteArrayToAppend = new Uint8Array(arrayBuffer);\n    const combinedByteArray = new Uint8Array(\n      dataSet.byteArray.length + byteArrayToAppend.length\n    );\n\n    combinedByteArray.set(dataSet.byteArray);\n    combinedByteArray.set(byteArrayToAppend, dataSet.byteArray.length);\n\n    // Re-parse potentially partial byte range and return\n    return dataSetFromPartialContent(combinedByteArray, loadRequest, metadata);\n  };\n\n  return dataSet;\n}\n","function getDirectFrameInformation(dataSet, frame) {\n  if (!dataSet) {\n    return;\n  }\n\n  const {\n    NumberOfFrames,\n    PerFrameFunctionalGroupsSequence,\n    SharedFunctionalGroupsSequence,\n  } = getMultiframeInformation(dataSet);\n\n  if (PerFrameFunctionalGroupsSequence || NumberOfFrames > 1) {\n    const { shared, perFrame } = getFrameInformation(\n      PerFrameFunctionalGroupsSequence,\n      SharedFunctionalGroupsSequence,\n      frame\n    );\n\n    return {\n      NumberOfFrames,\n      PerFrameFunctionalInformation: perFrame,\n      SharedFunctionalInformation: shared,\n    };\n  }\n\n  return {\n    NumberOfFrames,\n  };\n}\n\nfunction getFrameInformation(\n  PerFrameFunctionalGroupsSequence,\n  SharedFunctionalGroupsSequence,\n  frameNumber\n) {\n  const shared = {};\n\n  (SharedFunctionalGroupsSequence\n    ? Object.values(SharedFunctionalGroupsSequence.items[0].dataSet.elements)\n    : []\n  ).map((it: any) => (shared[it.tag] = it));\n\n  const perFrame = {};\n\n  (PerFrameFunctionalGroupsSequence\n    ? Object.values(\n        PerFrameFunctionalGroupsSequence.items[frameNumber - 1].dataSet.elements\n      )\n    : []\n  ).map((it: any) => (perFrame[it.tag] = it));\n\n  return {\n    shared,\n    perFrame,\n  };\n}\n\nfunction getMultiframeInformation(dataSet) {\n  if (!dataSet) {\n    return;\n  }\n  const { elements, ...otherAttributtes } = dataSet;\n  const {\n    x52009230: PerFrameFunctionalGroupsSequence,\n    x52009229: SharedFunctionalGroupsSequence,\n    ...otherElements\n  } = elements;\n\n  const NumberOfFrames = dataSet.intString('x00280008');\n\n  return {\n    NumberOfFrames,\n    PerFrameFunctionalGroupsSequence,\n    SharedFunctionalGroupsSequence,\n    otherElements,\n    otherAttributtes,\n  };\n}\n\n// function that retrieves specific frame metadata information from multiframe\n// metadata\nfunction combineFrameInstanceDataset(frameNumber, dataSet) {\n  if (!dataSet) {\n    return;\n  }\n\n  const {\n    NumberOfFrames,\n    PerFrameFunctionalGroupsSequence,\n    SharedFunctionalGroupsSequence,\n    otherElements,\n  } = getMultiframeInformation(dataSet);\n\n  if (PerFrameFunctionalGroupsSequence || NumberOfFrames > 1) {\n    const { shared, perFrame } = getFrameInformation(\n      PerFrameFunctionalGroupsSequence,\n      SharedFunctionalGroupsSequence,\n      frameNumber\n    );\n\n    // creating a new copy of the dataset to remove the two multiframe dicom tags\n    const newElements = {\n      elements: {\n        ...otherElements,\n        ...shared,\n        ...perFrame,\n      },\n    };\n\n    const clonedDataset = Object.create(dataSet);\n    const newDataset = Object.assign(clonedDataset, newElements);\n\n    return newDataset;\n  }\n\n  return dataSet;\n}\n\nexport {\n  combineFrameInstanceDataset,\n  getMultiframeInformation,\n  getFrameInformation,\n  getDirectFrameInformation,\n};\n","import { loadedDataSets } from './dataSetCacheManager';\n\nfunction _get(uri) {\n  if (!loadedDataSets[uri]) {\n    return;\n  }\n\n  return loadedDataSets[uri];\n}\n\nfunction isMultiframeDataset(uri) {\n  const dataSet = _get(uri);\n\n  return _isMultiframeDataset(dataSet);\n}\n\nfunction _isMultiframeDataset(dataSet) {\n  // Checks if dicomTag NumberOf Frames exists and it is greater than one\n  if (!dataSet) {\n    return false;\n  }\n\n  const numberOfFrames = dataSet.intString('x00280008');\n\n  return numberOfFrames && numberOfFrames > 1;\n}\n\nfunction retrieveFrameParameterIndex(uri) {\n  return uri.indexOf('&frame=');\n}\n\nfunction retrieveMultiframeDataset(uri) {\n  const frameParameterIndex = retrieveFrameParameterIndex(uri);\n  const multiframeURI =\n    frameParameterIndex === -1 ? uri : uri.slice(0, frameParameterIndex);\n  const frame = parseInt(uri.slice(frameParameterIndex + 7), 10) || 1;\n\n  let dataSet;\n\n  if (loadedDataSets[multiframeURI]) {\n    dataSet = loadedDataSets[multiframeURI].dataSet;\n  } else {\n    dataSet = undefined;\n  }\n\n  return {\n    dataSet,\n    frame,\n  };\n}\n\nfunction generateMultiframeWADOURIs(uri) {\n  const listWADOURIs = [];\n\n  const dataSet = _get(uri);\n\n  if (_isMultiframeDataset(dataSet)) {\n    const numberOfFrames = (dataSet as any).intString('x00280008');\n\n    for (let i = 1; i <= numberOfFrames; i++) {\n      listWADOURIs.push(`${uri}&frame=${i}`);\n    }\n  } else {\n    listWADOURIs.push(uri);\n  }\n\n  return listWADOURIs;\n}\n\nexport default {\n  _get,\n  generateMultiframeWADOURIs,\n  retrieveMultiframeDataset,\n  isMultiframeDataset,\n};\n","import { DataSet } from 'dicom-parser';\nimport external from '../../externalModules';\nimport { xhrRequest } from '../internal/index';\nimport dataSetFromPartialContent from './dataset-from-partial-content';\nimport {\n  LoadRequestFunction,\n  DICOMLoaderDataSetWithFetchMore,\n} from '../../types';\nimport { combineFrameInstanceDataset } from './combineFrameInstanceDataset';\nimport multiframeDataset from './retrieveMultiframeDataset';\n\nexport interface CornerstoneWadoLoaderCacheManagerInfoResponse {\n  cacheSizeInBytes: number;\n  numberOfDataSetsCached: number;\n}\n\nexport interface CornerstoneWadoLoaderCachedPromise\n  extends Promise<DataSet | DICOMLoaderDataSetWithFetchMore> {\n  cacheCount?: number;\n}\n\n/**\n * This object supports loading of DICOM P10 dataset from a uri and caching it so it can be accessed\n * by the caller.  This allows a caller to access the datasets without having to go through cornerstone's\n * image loader mechanism.  One reason a caller may need to do this is to determine the number of frames\n * in a multiframe sop instance so it can create the imageId's correctly.\n */\nlet cacheSizeInBytes = 0;\n\nlet loadedDataSets: Record<string, { dataSet: DataSet; cacheCount: number }> =\n  {};\n\nlet promises: Record<string, CornerstoneWadoLoaderCachedPromise> = {};\n\n// returns true if the wadouri for the specified index has been loaded\nfunction isLoaded(uri: string): boolean {\n  return loadedDataSets[uri] !== undefined;\n}\n\nfunction get(uri: string): DataSet {\n  let dataSet;\n\n  if (uri.includes('&frame=')) {\n    const { frame, dataSet: multiframeDataSet } =\n      multiframeDataset.retrieveMultiframeDataset(uri);\n\n    dataSet = combineFrameInstanceDataset(frame, multiframeDataSet);\n  } else if (loadedDataSets[uri]) {\n    dataSet = loadedDataSets[uri].dataSet;\n  }\n\n  return dataSet;\n}\n\nfunction update(uri: string, dataSet: DataSet) {\n  const loadedDataSet = loadedDataSets[uri];\n\n  if (!loadedDataSet) {\n    console.error(`No loaded dataSet for uri ${uri}`);\n\n    return;\n  }\n  // Update dataset\n  cacheSizeInBytes -= loadedDataSet.dataSet.byteArray.length;\n  loadedDataSet.dataSet = dataSet;\n  cacheSizeInBytes += dataSet.byteArray.length;\n\n  external.cornerstone.triggerEvent(\n    (external.cornerstone as any).events,\n    'datasetscachechanged',\n    {\n      uri,\n      action: 'updated',\n      cacheInfo: getInfo(),\n    }\n  );\n}\n\n// loads the dicom dataset from the wadouri sp\nfunction load(\n  uri: string,\n  loadRequest: LoadRequestFunction = xhrRequest,\n  imageId: string\n): CornerstoneWadoLoaderCachedPromise {\n  const { cornerstone, dicomParser } = external;\n\n  // if already loaded return it right away\n  if (loadedDataSets[uri]) {\n    // console.log('using loaded dataset ' + uri);\n    return new Promise((resolve) => {\n      loadedDataSets[uri].cacheCount++;\n      resolve(loadedDataSets[uri].dataSet);\n    });\n  }\n\n  // if we are currently loading this uri, increment the cacheCount and return its promise\n  if (promises[uri]) {\n    // console.log('returning existing load promise for ' + uri);\n    promises[uri].cacheCount++;\n\n    return promises[uri];\n  }\n\n  // This uri is not loaded or being loaded, load it via an xhrRequest\n  const loadDICOMPromise = loadRequest(uri, imageId);\n\n  // handle success and failure of the XHR request load\n  const promise: CornerstoneWadoLoaderCachedPromise = new Promise(\n    (resolve, reject) => {\n      loadDICOMPromise\n        .then(async function (dicomPart10AsArrayBuffer: any /* , xhr*/) {\n          const partialContent = {\n            isPartialContent: false,\n            fileTotalLength: null,\n          };\n\n          // Allow passing extra data with the loader promise so as not to change\n          // the API\n          if (!(dicomPart10AsArrayBuffer instanceof ArrayBuffer)) {\n            if (!dicomPart10AsArrayBuffer.arrayBuffer) {\n              return reject(\n                new Error(\n                  'If not returning ArrayBuffer, must return object with `arrayBuffer` parameter'\n                )\n              );\n            }\n            partialContent.isPartialContent =\n              dicomPart10AsArrayBuffer.flags.isPartialContent;\n            partialContent.fileTotalLength =\n              dicomPart10AsArrayBuffer.flags.fileTotalLength;\n            dicomPart10AsArrayBuffer = dicomPart10AsArrayBuffer.arrayBuffer;\n          }\n\n          const byteArray = new Uint8Array(dicomPart10AsArrayBuffer);\n\n          // Reject the promise if parsing the dicom file fails\n          let dataSet: DataSet | DICOMLoaderDataSetWithFetchMore;\n\n          try {\n            if (partialContent.isPartialContent) {\n              // This dataSet object will include a fetchMore function,\n              dataSet = await dataSetFromPartialContent(\n                byteArray,\n                loadRequest,\n                {\n                  uri,\n                  imageId,\n                  fileTotalLength: partialContent.fileTotalLength,\n                }\n              );\n            } else {\n              dataSet = dicomParser.parseDicom(byteArray);\n            }\n          } catch (error) {\n            return reject(error);\n          }\n\n          loadedDataSets[uri] = {\n            dataSet,\n            cacheCount: promise.cacheCount,\n          };\n          cacheSizeInBytes += dataSet.byteArray.length;\n          resolve(dataSet);\n\n          cornerstone.triggerEvent(\n            (cornerstone as any).events,\n            'datasetscachechanged',\n            {\n              uri,\n              action: 'loaded',\n              cacheInfo: getInfo(),\n            }\n          );\n        }, reject)\n        .then(\n          () => {\n            // Remove the promise if success\n            delete promises[uri];\n          },\n          () => {\n            // Remove the promise if failure\n            delete promises[uri];\n          }\n        );\n    }\n  );\n\n  promise.cacheCount = 1;\n\n  promises[uri] = promise;\n\n  return promise;\n}\n\n// remove the cached/loaded dicom dataset for the specified wadouri to free up memory\nfunction unload(uri: string): void {\n  const { cornerstone } = external;\n\n  // console.log('unload for ' + uri);\n  if (loadedDataSets[uri]) {\n    loadedDataSets[uri].cacheCount--;\n    if (loadedDataSets[uri].cacheCount === 0) {\n      // console.log('removing loaded dataset for ' + uri);\n      cacheSizeInBytes -= loadedDataSets[uri].dataSet.byteArray.length;\n      delete loadedDataSets[uri];\n\n      cornerstone.triggerEvent(\n        (cornerstone as any).events,\n        'datasetscachechanged',\n        {\n          uri,\n          action: 'unloaded',\n          cacheInfo: getInfo(),\n        }\n      );\n    }\n  }\n}\n\nexport function getInfo(): CornerstoneWadoLoaderCacheManagerInfoResponse {\n  return {\n    cacheSizeInBytes,\n    numberOfDataSetsCached: Object.keys(loadedDataSets).length,\n  };\n}\n\n// removes all cached datasets from memory\nfunction purge(): void {\n  loadedDataSets = {};\n  promises = {};\n  cacheSizeInBytes = 0;\n}\n\nexport default {\n  isLoaded,\n  load,\n  unload,\n  getInfo,\n  purge,\n  get,\n  update,\n};\n\nexport { loadedDataSets };\n","import getNumberValues from './getNumberValues';\nimport isNMReconstructable from '../../isNMReconstructable';\n\n/**\n * Get a subpart of Image Type dicom tag defined by index\n * @param {*} dataSet\n * @param {*} index 0 based index of the subtype\n */\nfunction getImageTypeSubItemFromDataset(dataSet, index) {\n  const imageType = dataSet.string('x00080008');\n\n  if (imageType) {\n    const subTypes = imageType.split('\\\\');\n\n    if (subTypes.length > index) {\n      return subTypes[index];\n    }\n  }\n\n  return undefined;\n}\n/**\n * Extracts the orientation from NM multiframe dataset, if image type\n * equal to RECON TOMO or RECON GATED TOMO\n * @param {*} dataSet\n * @returns\n */\nfunction extractOrientationFromNMMultiframeDataset(dataSet) {\n  let imageOrientationPatient;\n  const modality = dataSet.string('x00080060');\n\n  if (modality?.includes('NM')) {\n    const imageSubType = getImageTypeSubItemFromDataset(dataSet, 2);\n\n    if (imageSubType && isNMReconstructable(imageSubType)) {\n      if (dataSet.elements.x00540022) {\n        imageOrientationPatient = getNumberValues(\n          dataSet.elements.x00540022.items[0].dataSet,\n          'x00200037',\n          6\n        );\n      }\n    }\n  }\n\n  return imageOrientationPatient;\n}\n\n/**\n * Extracts the position from NM multiframe dataset, if image type\n * equal to RECON TOMO or RECON GATED TOMO\n * @param {*} dataSet\n * @returns\n */\nfunction extractPositionFromNMMultiframeDataset(dataSet) {\n  let imagePositionPatient;\n  const modality = dataSet.string('x00080060');\n\n  if (modality?.includes('NM')) {\n    const imageSubType = getImageTypeSubItemFromDataset(dataSet, 2);\n\n    if (imageSubType && isNMReconstructable(imageSubType)) {\n      if (dataSet.elements.x00540022) {\n        imagePositionPatient = getNumberValues(\n          dataSet.elements.x00540022.items[0].dataSet,\n          'x00200032',\n          3\n        );\n      }\n    }\n  }\n\n  return imagePositionPatient;\n}\n\n/**\n * Extract orientation information from a dataset. It tries to get the orientation\n * from the Detector Information Sequence (for NM images) if image type equal\n * to RECON TOMO or RECON GATED TOMO\n * @param {*} dataSet\n * @returns\n */\nfunction extractOrientationFromDataset(dataSet) {\n  let imageOrientationPatient = getNumberValues(dataSet, 'x00200037', 6);\n\n  // Trying to get the orientation from the Plane Orientation Sequence\n  if (!imageOrientationPatient && dataSet.elements.x00209116) {\n    imageOrientationPatient = getNumberValues(\n      dataSet.elements.x00209116.items[0].dataSet,\n      'x00200037',\n      6\n    );\n  }\n\n  // If orientation not valid to this point, trying to get the orientation\n  // from the Detector Information Sequence (for NM images) with image type\n  // equal to RECON TOMO or RECON GATED TOMO\n\n  if (!imageOrientationPatient) {\n    imageOrientationPatient =\n      extractOrientationFromNMMultiframeDataset(dataSet);\n  }\n\n  return imageOrientationPatient;\n}\n\n/**\n * Extract position information from a dataset. It tries to get the position\n * from the Detector Information Sequence (for NM images) if image type equal\n * to RECON TOMO or RECON GATED TOMO\n * @param {*} dataSet\n * @returns\n */\nfunction extractPositionFromDataset(dataSet) {\n  let imagePositionPatient = getNumberValues(dataSet, 'x00200032', 3);\n\n  // Trying to get the position from the Plane Position Sequence\n  if (!imagePositionPatient && dataSet.elements.x00209113) {\n    imagePositionPatient = getNumberValues(\n      dataSet.elements.x00209113.items[0].dataSet,\n      'x00200032',\n      3\n    );\n  }\n\n  // If position not valid to this point, trying to get the position\n  // from the Detector Information Sequence (for NM images)\n  if (!imagePositionPatient) {\n    imagePositionPatient = extractPositionFromNMMultiframeDataset(dataSet);\n  }\n\n  return imagePositionPatient;\n}\n\n/**\n * Extract the pixelSpacing information. If exists, extracts this information\n * from Pixel Measures Sequence\n * @param {*} dataSet\n * @returns\n */\nfunction extractSpacingFromDataset(dataSet) {\n  let pixelSpacing = getNumberValues(dataSet, 'x00280030', 2);\n\n  // If pixelSpacing not valid to this point, trying to get the spacing\n  // from the Pixel Measures Sequence\n  if (!pixelSpacing && dataSet.elements.x00289110) {\n    pixelSpacing = getNumberValues(\n      dataSet.elements.x00289110.items[0].dataSet,\n      'x00280030',\n      2\n    );\n  }\n\n  return pixelSpacing;\n}\n\n/**\n * Extract the sliceThickness information. If exists, extracts this information\n * from Pixel Measures Sequence\n * @param {*} dataSet\n * @returns\n */\nfunction extractSliceThicknessFromDataset(dataSet) {\n  let sliceThickness;\n\n  if (dataSet.elements.x00180050) {\n    sliceThickness = dataSet.floatString('x00180050');\n  } else if (\n    dataSet.elements.x00289110 &&\n    dataSet.elements.x00289110.items.length &&\n    dataSet.elements.x00289110.items[0].dataSet.elements.x00180050\n  ) {\n    sliceThickness =\n      dataSet.elements.x00289110.items[0].dataSet.floatString('x00180050');\n  }\n\n  return sliceThickness;\n}\n\nexport {\n  getImageTypeSubItemFromDataset,\n  extractOrientationFromDataset,\n  extractPositionFromDataset,\n  extractSpacingFromDataset,\n  extractSliceThicknessFromDataset,\n};\n","/**\n * This function retrieves the ultrasound regions from the provided metadata.\n * @param metadata - The metadata from which to retrieve the ultrasound regions.\n * @returns An array of ultrasound regions, or null if no regions are found.\n */\n\nfunction getUSEnhancedRegions(metadata) {\n  const sequence = metadata.elements['x00186011'];\n  if (!sequence || !sequence.items) {\n    return [];\n  }\n\n  const regions = sequence.items.map((item) => {\n    const physicalDeltaX = item.dataSet.double('x0018602c');\n    const physicalDeltaY = item.dataSet.double('x0018602e');\n    const physicalUnitsXDirection = item.dataSet.uint16('x00186024');\n    const physicalUnitsYDirection = item.dataSet.uint16('x00186026');\n\n    const regionLocationMinY0 = item.dataSet.uint16('x0018601a');\n    const regionLocationMaxY1 = item.dataSet.uint16('x0018601e');\n    const regionLocationMinX0 = item.dataSet.uint16('x00186018');\n    const regionLocationMaxX1 = item.dataSet.uint16('x0018601c');\n    const referencePixelX0 = item.dataSet.int32('x00186020') || null;\n    const referencePixelY0 = item.dataSet.int32('x00186022') || null;\n\n    const referencePhysicalPixelValueY = item.dataSet.uint16('x0018602a');\n    const referencePhysicalPixelValueX = item.dataSet.uint16('x00186028');\n    const regionSpatialFormat = item.dataSet.uint16('x00186012');\n\n    const regionDataType = item.dataSet.uint16('x00186014');\n    const regionFlags = item.dataSet.uint16('x00186016');\n    const transducerFrequency = item.dataSet.uint16('x00186030');\n    return {\n      regionLocationMinY0,\n      regionLocationMaxY1,\n      regionLocationMinX0,\n      regionLocationMaxX1,\n      referencePixelX0,\n      referencePixelY0,\n      physicalDeltaX,\n      physicalDeltaY,\n      physicalUnitsXDirection,\n      physicalUnitsYDirection,\n      referencePhysicalPixelValueY,\n      referencePhysicalPixelValueX,\n      regionSpatialFormat,\n      regionDataType,\n      regionFlags,\n      transducerFrequency,\n    };\n  });\n\n  return regions;\n}\n\nexport { getUSEnhancedRegions };\n","import external from '../../../externalModules';\nimport getNumberValues from './getNumberValues';\nimport parseImageId from '../parseImageId';\nimport dataSetCacheManager from '../dataSetCacheManager';\nimport getImagePixelModule from './getImagePixelModule';\nimport getOverlayPlaneModule from './getOverlayPlaneModule';\nimport getLUTs from './getLUTs';\nimport getModalityLUTOutputPixelRepresentation from './getModalityLUTOutputPixelRepresentation';\nimport { getDirectFrameInformation } from '../combineFrameInstanceDataset';\nimport multiframeDataset from '../retrieveMultiframeDataset';\nimport {\n  getImageTypeSubItemFromDataset,\n  extractOrientationFromDataset,\n  extractPositionFromDataset,\n  extractSpacingFromDataset,\n  extractSliceThicknessFromDataset,\n} from './extractPositioningFromDataset';\nimport isNMReconstructable from '../../isNMReconstructable';\nimport {\n  getInstanceModule,\n  instanceModuleNames,\n} from '../../getInstanceModule';\nimport { getUSEnhancedRegions } from './USHelpers';\n\nfunction metaDataProvider(type, imageId) {\n  const { MetadataModules } = external.cornerstone.Enums;\n  const { dicomParser } = external;\n\n  // Several providers use array queries\n  if (Array.isArray(imageId)) {\n    return;\n  }\n\n  const parsedImageId = parseImageId(imageId);\n\n  if (type === MetadataModules.MULTIFRAME) {\n    const multiframeData = multiframeDataset.retrieveMultiframeDataset(\n      parsedImageId.url\n    );\n\n    if (!multiframeData.dataSet) {\n      return;\n    }\n\n    const multiframeInfo = getDirectFrameInformation(\n      multiframeData.dataSet,\n      multiframeData.frame\n    );\n\n    return multiframeInfo;\n  }\n\n  let url = parsedImageId.url;\n\n  if (parsedImageId.frame) {\n    url = `${url}&frame=${parsedImageId.frame}`;\n  }\n\n  const dataSet = dataSetCacheManager.get(url);\n\n  if (!dataSet) {\n    return;\n  }\n\n  if (type === MetadataModules.GENERAL_STUDY) {\n    return {\n      studyDescription: dataSet.string('x00081030'),\n      studyDate: dicomParser.parseDA(dataSet.string('x00080020')),\n      studyTime: dicomParser.parseTM(dataSet.string('x00080030') || ''),\n      accessionNumber: dataSet.string('x00080050'),\n    };\n  }\n\n  if (type === MetadataModules.GENERAL_SERIES) {\n    return {\n      modality: dataSet.string('x00080060'),\n      seriesInstanceUID: dataSet.string('x0020000e'),\n      seriesNumber: dataSet.intString('x00200011'),\n      studyInstanceUID: dataSet.string('x0020000d'),\n      seriesDate: dicomParser.parseDA(dataSet.string('x00080021')),\n      seriesTime: dicomParser.parseTM(dataSet.string('x00080031') || ''),\n      acquisitionDate: dicomParser.parseDA(dataSet.string('x00080022')),\n      acquisitionTime: dicomParser.parseTM(dataSet.string('x00080032') || ''),\n    };\n  }\n\n  if (type === MetadataModules.GENERAL_IMAGE) {\n    return {\n      sopInstanceUID: dataSet.string('x00080018'),\n      instanceNumber: dataSet.intString('x00200013'),\n      lossyImageCompression: dataSet.string('x00282110'),\n      lossyImageCompressionRatio: dataSet.floatString('x00282112'),\n      lossyImageCompressionMethod: dataSet.string('x00282114'),\n    };\n  }\n\n  if (type === MetadataModules.PATIENT) {\n    return {\n      patientID: dataSet.string('x00100020'),\n      patientName: dataSet.string('x00100010'),\n    };\n  }\n\n  if (type === MetadataModules.PATIENT_STUDY) {\n    return {\n      patientAge: dataSet.intString('x00101010'),\n      patientSize: dataSet.floatString('x00101020'),\n      patientSex: dataSet.string('x00100040'),\n      patientWeight: dataSet.floatString('x00101030'),\n    };\n  }\n\n  if (type === MetadataModules.NM_MULTIFRAME_GEOMETRY) {\n    const modality = dataSet.string('x00080060');\n    const imageSubType = getImageTypeSubItemFromDataset(dataSet, 2);\n\n    return {\n      modality,\n      imageType: dataSet.string('x00080008'),\n      imageSubType,\n      imageOrientationPatient: extractOrientationFromDataset(dataSet),\n      imagePositionPatient: extractPositionFromDataset(dataSet),\n      sliceThickness: extractSliceThicknessFromDataset(dataSet),\n      pixelSpacing: extractSpacingFromDataset(dataSet),\n      numberOfFrames: dataSet.uint16('x00280008'),\n      isNMReconstructable:\n        isNMReconstructable(imageSubType) && modality.includes('NM'),\n    };\n  }\n\n  if (type === MetadataModules.IMAGE_PLANE) {\n    const imageOrientationPatient = extractOrientationFromDataset(dataSet);\n    const imagePositionPatient = extractPositionFromDataset(dataSet);\n    const pixelSpacing = extractSpacingFromDataset(dataSet);\n    const sliceThickness = extractSliceThicknessFromDataset(dataSet);\n\n    let columnPixelSpacing = null;\n\n    let rowPixelSpacing = null;\n\n    if (pixelSpacing) {\n      rowPixelSpacing = pixelSpacing[0];\n      columnPixelSpacing = pixelSpacing[1];\n    }\n\n    let rowCosines = null;\n\n    let columnCosines = null;\n\n    if (imageOrientationPatient) {\n      rowCosines = [\n        // @ts-expect-error\n        parseFloat(imageOrientationPatient[0]),\n        // @ts-expect-error\n        parseFloat(imageOrientationPatient[1]),\n        // @ts-expect-error\n        parseFloat(imageOrientationPatient[2]),\n      ];\n      columnCosines = [\n        // @ts-expect-error\n        parseFloat(imageOrientationPatient[3]),\n        // @ts-expect-error\n        parseFloat(imageOrientationPatient[4]),\n        // @ts-expect-error\n        parseFloat(imageOrientationPatient[5]),\n      ];\n    }\n\n    return {\n      frameOfReferenceUID: dataSet.string('x00200052'),\n      rows: dataSet.uint16('x00280010'),\n      columns: dataSet.uint16('x00280011'),\n      imageOrientationPatient,\n      rowCosines,\n      columnCosines,\n      imagePositionPatient,\n      sliceThickness,\n      sliceLocation: dataSet.floatString('x00201041'),\n      pixelSpacing,\n      rowPixelSpacing,\n      columnPixelSpacing,\n    };\n  }\n\n  if (type === MetadataModules.CINE) {\n    return {\n      frameTime: dataSet.floatString('x00181063'),\n    };\n  }\n\n  if (type === MetadataModules.IMAGE_PIXEL) {\n    return getImagePixelModule(dataSet);\n  }\n\n  if (type === MetadataModules.VOI_LUT) {\n    const modalityLUTOutputPixelRepresentation =\n      getModalityLUTOutputPixelRepresentation(dataSet);\n\n    return {\n      windowCenter: getNumberValues(dataSet, 'x00281050', 1),\n      windowWidth: getNumberValues(dataSet, 'x00281051', 1),\n      voiLUTSequence: getLUTs(\n        modalityLUTOutputPixelRepresentation,\n        dataSet.elements.x00283010\n      ),\n    };\n  }\n\n  if (type === MetadataModules.MODALITY_LUT) {\n    return {\n      rescaleIntercept: dataSet.floatString('x00281052'),\n      rescaleSlope: dataSet.floatString('x00281053'),\n      rescaleType: dataSet.string('x00281054'),\n      modalityLUTSequence: getLUTs(\n        dataSet.uint16('x00280103'),\n        dataSet.elements.x00283000\n      ),\n    };\n  }\n\n  if (type === MetadataModules.SOP_COMMON) {\n    return {\n      sopClassUID: dataSet.string('x00080016'),\n      sopInstanceUID: dataSet.string('x00080018'),\n    };\n  }\n\n  if (type === MetadataModules.PET_ISOTOPE) {\n    const radiopharmaceuticalInfo = dataSet.elements.x00540016;\n\n    if (radiopharmaceuticalInfo === undefined) {\n      return;\n    }\n\n    const firstRadiopharmaceuticalInfoDataSet =\n      radiopharmaceuticalInfo.items[0].dataSet;\n\n    return {\n      radiopharmaceuticalInfo: {\n        radiopharmaceuticalStartTime: dicomParser.parseTM(\n          firstRadiopharmaceuticalInfoDataSet.string('x00181072') || ''\n        ),\n        radionuclideTotalDose:\n          firstRadiopharmaceuticalInfoDataSet.floatString('x00181074'),\n        radionuclideHalfLife:\n          firstRadiopharmaceuticalInfoDataSet.floatString('x00181075'),\n      },\n    };\n  }\n\n  if (type === MetadataModules.OVERLAY_PLANE) {\n    return getOverlayPlaneModule(dataSet);\n  }\n\n  // Note: this is not a DICOM module, but a useful metadata that can be\n  // retrieved from the image\n  if (type === 'transferSyntax') {\n    let transferSyntaxUID;\n\n    try {\n      transferSyntaxUID = dataSet.string('x00020010');\n    } catch (error) {\n      // Do nothing\n    }\n\n    return {\n      transferSyntaxUID,\n    };\n  }\n\n  if (type === MetadataModules.PET_SERIES) {\n    return {\n      correctedImage: dataSet.string('x00280051'),\n      units: dataSet.string('x00541001'),\n      decayCorrection: dataSet.string('x00541102'),\n    };\n  }\n\n  if (type === MetadataModules.PET_IMAGE) {\n    return {\n      frameReferenceTime: dataSet.floatString(\n        dataSet.string('x00541300') || ''\n      ),\n      actualFrameDuration: dataSet.intString(dataSet.string('x00181242')),\n    };\n  }\n\n  if (type === MetadataModules.ULTRASOUND_ENHANCED_REGION) {\n    return getUSEnhancedRegions(dataSet);\n  }\n\n  if (type === MetadataModules.CALIBRATION) {\n    const modality = dataSet.string('x00080060');\n    if (modality === 'US') {\n      const enhancedRegion = getUSEnhancedRegions(dataSet);\n      return {\n        sequenceOfUltrasoundRegions: enhancedRegion,\n      };\n    }\n  }\n\n  // Note: this is not a DICOM module, but rather an aggregation on all others\n  if (type === 'instance') {\n    return getInstanceModule(imageId, metaDataProvider, instanceModuleNames);\n  }\n}\n\nexport default metaDataProvider;\n","import { DataSet } from 'dicom-parser';\n\nexport default function getOverlayPlaneModule(dataSet: DataSet) {\n  const overlays = [];\n\n  for (let overlayGroup = 0x00; overlayGroup <= 0x1e; overlayGroup += 0x02) {\n    let groupStr = `x60${overlayGroup.toString(16)}`;\n\n    if (groupStr.length === 4) {\n      groupStr = `x600${overlayGroup.toString(16)}`;\n    }\n\n    const data = dataSet.elements[`${groupStr}3000`];\n\n    if (!data) {\n      continue;\n    }\n\n    const pixelData = [];\n\n    for (let i = 0; i < data.length; i++) {\n      for (let k = 0; k < 8; k++) {\n        const byte_as_int = dataSet.byteArray[data.dataOffset + i];\n\n        pixelData[i * 8 + k] = (byte_as_int >> k) & 0b1; // eslint-disable-line no-bitwise\n      }\n    }\n\n    overlays.push({\n      rows: dataSet.uint16(`${groupStr}0010`),\n      columns: dataSet.uint16(`${groupStr}0011`),\n      type: dataSet.string(`${groupStr}0040`),\n      x: dataSet.int16(`${groupStr}0050`, 1) - 1,\n      y: dataSet.int16(`${groupStr}0050`, 0) - 1,\n      pixelData,\n      description: dataSet.string(`${groupStr}0022`),\n      label: dataSet.string(`${groupStr}1500`),\n      roiArea: dataSet.string(`${groupStr}1301`),\n      roiMean: dataSet.string(`${groupStr}1302`),\n      roiStandardDeviation: dataSet.string(`${groupStr}1303`),\n    });\n  }\n\n  return {\n    overlays,\n  };\n}\n","let files: Blob[] = [];\n\nfunction add(file: Blob): string {\n  const fileIndex = files.push(file);\n\n  return `dicomfile:${fileIndex - 1}`;\n}\n\nfunction get(index: number): Blob {\n  return files[index];\n}\n\nfunction remove(index: number): void {\n  files[index] = undefined;\n}\n\nfunction purge(): void {\n  files = [];\n}\n\nexport default {\n  add,\n  get,\n  remove,\n  purge,\n};\n","import { ByteArray, DataSet, ByteStream, readSequenceItem } from 'dicom-parser';\nimport external from '../../externalModules';\n\n/**\n * Function to deal with extracting an image frame from an encapsulated data set.\n */\n\nfunction framesAreFragmented(dataSet: DataSet) {\n  const numberOfFrames = dataSet.intString('x00280008');\n  const pixelDataElement = dataSet.elements.x7fe00010;\n\n  return numberOfFrames !== pixelDataElement.fragments.length;\n}\n\nexport default function getEncapsulatedImageFrame(\n  dataSet: DataSet,\n  frameIndex: number\n): ByteArray {\n  const { dicomParser } = external;\n\n  if (\n    dataSet.elements.x7fe00010 &&\n    dataSet.elements.x7fe00010.basicOffsetTable.length\n  ) {\n    // Basic Offset Table is not empty\n    return dicomParser.readEncapsulatedImageFrame(\n      dataSet,\n      dataSet.elements.x7fe00010,\n      frameIndex\n    );\n  }\n\n  // Empty basic offset table\n\n  if (framesAreFragmented(dataSet)) {\n    const basicOffsetTable = dicomParser.createJPEGBasicOffsetTable(\n      dataSet,\n      dataSet.elements.x7fe00010\n    );\n\n    return dicomParser.readEncapsulatedImageFrame(\n      dataSet,\n      dataSet.elements.x7fe00010,\n      frameIndex,\n      basicOffsetTable\n    );\n  }\n\n  // the following code is pretty much a duplicate of the logic here\n  // https://github.com/cornerstonejs/dicomParser/blob/master/src/readEncapsulatedPixelDataFromFragments.js\n  // but it takes care of slicing the array buffer to be sent to the worker. We can't\n  // get a view of the buffer because the buffer since it will still have the\n  // array buffer, which can be in some cases huge to be sent to the worker.\n  // Todo: a better approach would be to transfer the buffer to the worker by having the\n  // transferPixelData option set to true, but for some reason it is giving an error\n  // in the dicomParser library.\n  const fragments = dataSet.elements.x7fe00010.fragments;\n\n  // create byte stream on the data for this pixel data element\n  const byteStream = new ByteStream(\n    dataSet.byteArrayParser,\n    dataSet.byteArray,\n    dataSet.elements.x7fe00010.dataOffset\n  );\n\n  // seek past the basic offset table (no need to parse it again since we already have)\n  const basicOffsetTable = readSequenceItem(byteStream);\n\n  if (basicOffsetTable.tag !== 'xfffee000') {\n    throw 'dicomParser.readEncapsulatedPixelData: missing basic offset table xfffee000';\n  }\n\n  byteStream.seek(basicOffsetTable.length);\n\n  const fragmentZeroPosition = byteStream.position;\n\n  // we should check that the number of frames + 1 is equal to the number of fragments\n  // since there might be a situation where any frame before the one we are looking for\n  // here is split into multiple fragments\n  if (frameIndex + 1 > fragments.length) {\n    throw 'dicomParser.readEncapsulatedPixelData: frame exceeds number of fragments';\n  }\n\n  const fragmentHeaderSize = 8;\n  const byteOffset =\n    fragmentZeroPosition + fragments[frameIndex].offset + fragmentHeaderSize;\n  const length = fragments[frameIndex].length;\n\n  // Grab ONLY the portion of the byteArray containing the frame for decoding since\n  // it will be impossible to decode the entire image everytime (this return will go\n  // to the decodeImageFrame function in cornerstoneWADOImageLoader which runs in a\n  // web worker)\n  return new Uint8Array(\n    byteStream.byteArray.buffer.slice(\n      byteStream.byteArray.byteOffset + byteOffset,\n      byteStream.byteArray.byteOffset + byteOffset + length\n    )\n  );\n}\n","/* eslint no-bitwise: 0 */\n\nimport { ByteArray } from 'dicom-parser';\n\nfunction isBitSet(byte: number, bitPos: number) {\n  return byte & (1 << bitPos);\n}\n\n/**\n * Function to deal with unpacking a binary frame\n */\nfunction unpackBinaryFrame(\n  byteArray: ByteArray,\n  frameOffset: number,\n  pixelsPerFrame: number\n): Uint8Array {\n  // Create a new pixel array given the image size\n  const pixelData = new Uint8Array(pixelsPerFrame);\n\n  for (let i = 0; i < pixelsPerFrame; i++) {\n    // Compute byte position\n    const bytePos = Math.floor(i / 8);\n\n    // Get the current byte\n    const byte = byteArray[bytePos + frameOffset];\n\n    // Bit position (0-7) within byte\n    const bitPos = i % 8;\n\n    // Check whether bit at bitpos is set\n    pixelData[i] = isBitSet(byte, bitPos) ? 1 : 0;\n  }\n\n  return pixelData;\n}\n\nexport default unpackBinaryFrame;\n","import { DataSet } from 'dicom-parser';\nimport unpackBinaryFrame from './unpackBinaryFrame';\n\n/**\n * Function to deal with extracting an image frame from an encapsulated data set.\n */\n\nfunction getUncompressedImageFrame(\n  dataSet: DataSet,\n  frameIndex: number\n): Uint8Array {\n  const pixelDataElement =\n    dataSet.elements.x7fe00010 || dataSet.elements.x7fe00008;\n  const bitsAllocated = dataSet.uint16('x00280100');\n  const rows = dataSet.uint16('x00280010');\n  const columns = dataSet.uint16('x00280011');\n\n  let samplesPerPixel = dataSet.uint16('x00280002');\n\n  /**\n   * From: http://dicom.nema.org/medical/dicom/current/output/chtml/part03/sect_C.7.6.3.html\n   *\n   * Though the chrominance channels are downsampled, there are still nominally\n   * three channels, hence Samples per Pixel (0028,0002) has a value of 3, not\n   * 2. I.e., for pixel data in a Native (uncompressed) format, the Value Length\n   * of Pixel Data (7FE0,0010) is not:\n   *\n   * Rows (0028,0010) * Columns (0028,0011) * Number of Frames (0028,0008) *\n   * Samples per Pixel (0028,0002) * (⌊(Bits Allocated (0028,0100)-1)/8⌋+1)\n   *\n   * padded to an even length, as it would otherwise be, but rather is:\n   *\n   * Rows (0028,0010) * Columns (0028,0011) * Number of Frames (0028,0008) * 2 *\n   * (⌊(Bits Allocated (0028,0100)-1)/8⌋+1)\n   *\n   * padded to an even length.\n   */\n  const photometricInterpretation = dataSet.string('x00280004');\n\n  if (photometricInterpretation === 'YBR_FULL_422') {\n    samplesPerPixel = 2;\n    console.warn(\n      `Using SamplesPerPixel of 2 for YBR_FULL_422 photometric interpretation.\n      See http://dicom.nema.org/medical/dicom/current/output/chtml/part03/sect_C.7.6.3.html for more information.`\n    );\n  }\n\n  const pixelDataOffset = pixelDataElement.dataOffset;\n  const pixelsPerFrame = rows * columns * samplesPerPixel;\n\n  let frameOffset;\n\n  if (bitsAllocated === 8) {\n    frameOffset = pixelDataOffset + frameIndex * pixelsPerFrame;\n    if (frameOffset >= dataSet.byteArray.length) {\n      throw new Error('frame exceeds size of pixelData');\n    }\n\n    return new Uint8Array(\n      dataSet.byteArray.buffer.slice(frameOffset, frameOffset + pixelsPerFrame)\n    );\n  } else if (bitsAllocated === 16) {\n    frameOffset = pixelDataOffset + frameIndex * pixelsPerFrame * 2;\n    if (frameOffset >= dataSet.byteArray.length) {\n      throw new Error('frame exceeds size of pixelData');\n    }\n\n    return new Uint8Array(\n      dataSet.byteArray.buffer.slice(\n        frameOffset,\n        frameOffset + pixelsPerFrame * 2\n      )\n    );\n  } else if (bitsAllocated === 1) {\n    frameOffset = pixelDataOffset + frameIndex * pixelsPerFrame * 0.125;\n    if (frameOffset >= dataSet.byteArray.length) {\n      throw new Error('frame exceeds size of pixelData');\n    }\n\n    return unpackBinaryFrame(dataSet.byteArray, frameOffset, pixelsPerFrame);\n  } else if (bitsAllocated === 32) {\n    frameOffset = pixelDataOffset + frameIndex * pixelsPerFrame * 4;\n    if (frameOffset >= dataSet.byteArray.length) {\n      throw new Error('frame exceeds size of pixelData');\n    }\n\n    return new Uint8Array(\n      dataSet.byteArray.buffer.slice(\n        frameOffset,\n        frameOffset + pixelsPerFrame * 4\n      )\n    );\n  }\n\n  throw new Error('unsupported pixel format');\n}\n\nexport default getUncompressedImageFrame;\n","import parseImageId from './parseImageId';\nimport fileManager from './fileManager';\n\nfunction loadFileRequest(uri: string): Promise<ArrayBuffer> {\n  const parsedImageId = parseImageId(uri);\n  const fileIndex = parseInt(parsedImageId.url, 10);\n  const file = fileManager.get(fileIndex);\n\n  return new Promise<ArrayBuffer>((resolve, reject) => {\n    const fileReader = new FileReader();\n\n    fileReader.onload = (e) => {\n      const dicomPart10AsArrayBuffer = e.target.result as ArrayBuffer;\n\n      resolve(dicomPart10AsArrayBuffer);\n    };\n\n    fileReader.onerror = reject;\n\n    fileReader.readAsArrayBuffer(file);\n  });\n}\n\nexport default loadFileRequest;\n","import { ByteArray, DataSet } from 'dicom-parser';\nimport getEncapsulatedImageFrame from './getEncapsulatedImageFrame';\nimport getUncompressedImageFrame from './getUncompressedImageFrame';\n\nfunction getPixelData(dataSet: DataSet, frameIndex = 0): ByteArray {\n  const pixelDataElement =\n    dataSet.elements.x7fe00010 || dataSet.elements.x7fe00008;\n\n  if (!pixelDataElement) {\n    return null;\n  }\n\n  if (pixelDataElement.encapsulatedPixelData) {\n    return getEncapsulatedImageFrame(dataSet, frameIndex);\n  }\n\n  return getUncompressedImageFrame(dataSet, frameIndex);\n}\n\nexport default getPixelData;\n","import { DataSet } from 'dicom-parser';\nimport { Types } from '@cornerstonejs/core';\nimport createImage from '../createImage';\nimport { xhrRequest } from '../internal/index';\nimport dataSetCacheManager from './dataSetCacheManager';\nimport {\n  LoadRequestFunction,\n  DICOMLoaderIImage,\n  DICOMLoaderImageOptions,\n  ImageFrame,\n} from '../../types';\nimport getPixelData from './getPixelData';\nimport loadFileRequest from './loadFileRequest';\nimport parseImageId from './parseImageId';\n\n// add a decache callback function to clear out our dataSetCacheManager\nfunction addDecache(imageLoadObject: Types.IImageLoadObject, imageId: string) {\n  imageLoadObject.decache = function () {\n    // console.log('decache');\n    const parsedImageId = parseImageId(imageId);\n\n    dataSetCacheManager.unload(parsedImageId.url);\n  };\n}\n\n/**\n * Given the dataSetPromise and imageId this will return a promise to be\n * resolved with an image object containing the loaded image.\n *\n * @param dataSetPromise - A promise that resolves to a DataSet object.\n * @param imageId - The imageId of the image to be loaded.\n * @param frame - The frame number to be loaded in case of multiframe. it should\n * be noted that this is used to extract the pixelData from dicomParser and\n * dicomParser is 0-based index (the first pixelData is frame 0); however,\n * in metadata and imageId frame is 1-based index (the first frame is frame 1).\n * @param sharedCacheKey -  A key to be used to cache the loaded image.\n * @param options - Options to be used when loading the image.\n * @param callbacks - Callbacks to be called when the image is loaded.\n * @returns An object containing a promise to be resolved with the loaded image\n */\nfunction loadImageFromPromise(\n  dataSetPromise: Promise<DataSet>,\n  imageId: string,\n  frame = 0,\n  sharedCacheKey: string,\n  options: DICOMLoaderImageOptions,\n  callbacks?: {\n    imageDoneCallback: (image: DICOMLoaderIImage) => void;\n  }\n): Types.IImageLoadObject {\n  const start = new Date().getTime();\n  const imageLoadObject: Types.IImageLoadObject = {\n    cancelFn: undefined,\n    promise: undefined,\n  };\n\n  imageLoadObject.promise = new Promise((resolve, reject) => {\n    dataSetPromise.then(\n      (dataSet /* , xhr*/) => {\n        const pixelData = getPixelData(dataSet, frame);\n        const transferSyntax = dataSet.string('x00020010');\n        const loadEnd = new Date().getTime();\n        const imagePromise = createImage(\n          imageId,\n          pixelData,\n          transferSyntax,\n          options\n        );\n\n        addDecache(imageLoadObject, imageId);\n\n        imagePromise.then(\n          (image) => {\n            image = image as DICOMLoaderIImage;\n            image.data = dataSet;\n            image.sharedCacheKey = sharedCacheKey;\n            const end = new Date().getTime();\n\n            image.loadTimeInMS = loadEnd - start;\n            image.totalTimeInMS = end - start;\n            if (\n              callbacks !== undefined &&\n              callbacks.imageDoneCallback !== undefined\n            ) {\n              callbacks.imageDoneCallback(image);\n            }\n            resolve(image);\n          },\n          function (error) {\n            // Reject the error, and the dataSet\n            reject({\n              error,\n              dataSet,\n            });\n          }\n        );\n      },\n      function (error) {\n        // Reject the error\n        reject({\n          error,\n        });\n      }\n    );\n  });\n\n  return imageLoadObject;\n}\n\nfunction loadImageFromDataSet(\n  dataSet,\n  imageId: string,\n  frame = 0,\n  sharedCacheKey: string,\n  options\n): Types.IImageLoadObject {\n  const start = new Date().getTime();\n\n  const promise = new Promise<DICOMLoaderIImage | ImageFrame>(\n    (resolve, reject) => {\n      const loadEnd = new Date().getTime();\n\n      let imagePromise: Promise<DICOMLoaderIImage | ImageFrame>;\n\n      try {\n        const pixelData = getPixelData(dataSet, frame);\n        const transferSyntax = dataSet.string('x00020010');\n\n        imagePromise = createImage(imageId, pixelData, transferSyntax, options);\n      } catch (error) {\n        // Reject the error, and the dataSet\n        reject({\n          error,\n          dataSet,\n        });\n\n        return;\n      }\n\n      imagePromise.then((image) => {\n        image = image as DICOMLoaderIImage;\n\n        image.data = dataSet;\n        image.sharedCacheKey = sharedCacheKey;\n        const end = new Date().getTime();\n\n        image.loadTimeInMS = loadEnd - start;\n        image.totalTimeInMS = end - start;\n        resolve(image);\n      }, reject);\n    }\n  );\n\n  return {\n    promise: promise as Promise<any>,\n    cancelFn: undefined,\n  };\n}\n\nfunction getLoaderForScheme(scheme: string): LoadRequestFunction {\n  if (scheme === 'dicomweb' || scheme === 'wadouri') {\n    return xhrRequest;\n  } else if (scheme === 'dicomfile') {\n    return loadFileRequest;\n  }\n}\n\nfunction loadImage(\n  imageId: string,\n  options: DICOMLoaderImageOptions = {}\n): Types.IImageLoadObject {\n  const parsedImageId = parseImageId(imageId);\n\n  options = Object.assign({}, options);\n\n  // IMPORTANT: if you have a custom loader that you want to use for a specific\n  // scheme, you should create your own loader and register it with the scheme\n  // in the image loader, and NOT just pass it in as an option. This is because\n  // the scheme is used to determine the loader to use and is more maintainable\n\n  // The loader isn't transferable, so ensure it is deleted\n  delete options.loader;\n  // The options might have a loader above, but it is a loader into the cache,\n  // so not the scheme loader, which is separate and defined by the scheme here\n  const schemeLoader = getLoaderForScheme(parsedImageId.scheme);\n\n  // if the dataset for this url is already loaded, use it, in case of multiframe\n  // images, we need to extract the frame pixelData from the dataset although the\n  // image is loaded\n  if (dataSetCacheManager.isLoaded(parsedImageId.url)) {\n    /**\n     * @todo The arguments to the dataSetCacheManager below are incorrect.\n     */\n    const dataSet: DataSet = (dataSetCacheManager as any).get(\n      parsedImageId.url,\n      schemeLoader,\n      imageId\n    );\n\n    return loadImageFromDataSet(\n      dataSet,\n      imageId,\n      parsedImageId.pixelDataFrame,\n      parsedImageId.url,\n      options\n    );\n  }\n\n  // load the dataSet via the dataSetCacheManager\n  const dataSetPromise = dataSetCacheManager.load(\n    parsedImageId.url,\n    schemeLoader,\n    imageId\n  );\n\n  return loadImageFromPromise(\n    dataSetPromise,\n    imageId,\n    parsedImageId.frame,\n    parsedImageId.url,\n    options\n  );\n}\n\nexport { loadImageFromPromise, getLoaderForScheme, loadImage };\n","import {\n  getImagePixelModule,\n  getLUTs,\n  getModalityLUTOutputPixelRepresentation,\n  getNumberValues,\n  metaDataProvider,\n} from './metaData/index';\n\nimport dataSetCacheManager from './dataSetCacheManager';\nimport fileManager from './fileManager';\nimport getEncapsulatedImageFrame from './getEncapsulatedImageFrame';\nimport getUncompressedImageFrame from './getUncompressedImageFrame';\nimport loadFileRequest from './loadFileRequest';\nimport {\n  loadImageFromPromise,\n  getLoaderForScheme,\n  loadImage,\n} from './loadImage';\nimport parseImageId from './parseImageId';\nimport unpackBinaryFrame from './unpackBinaryFrame';\nimport register from './register';\n\nconst metaData = {\n  getImagePixelModule,\n  getLUTs,\n  getModalityLUTOutputPixelRepresentation,\n  getNumberValues,\n  metaDataProvider,\n};\n\nexport default {\n  metaData,\n  dataSetCacheManager,\n  fileManager,\n  getEncapsulatedImageFrame,\n  getUncompressedImageFrame,\n  loadFileRequest,\n  loadImageFromPromise,\n  getLoaderForScheme,\n  loadImage,\n  parseImageId,\n  unpackBinaryFrame,\n  register,\n};\n","import * as cornerstoneImport from '@cornerstonejs/core';\nimport { loadImage } from './loadImage';\nimport { metaDataProvider } from './metaData/index';\n\nexport default function (cornerstone: typeof cornerstoneImport): void {\n  // register dicomweb and wadouri image loader prefixes\n  cornerstone.registerImageLoader('dicomweb', loadImage);\n  cornerstone.registerImageLoader('wadouri', loadImage);\n  cornerstone.registerImageLoader('dicomfile', loadImage);\n\n  // add wadouri metadata provider\n  cornerstone.metaData.addProvider(metaDataProvider);\n}\n","import wadors from './wadors/index';\nimport wadouri from './wadouri/index';\n\n/**\n * Register the WADO-URI and WADO-RS image loaders and metaData providers\n * with an instance of Cornerstone Core.\n *\n * @param cornerstone The Cornerstone Core library to register the image loaders with\n */\nfunction registerLoaders(cornerstone: any): void {\n  wadors.register(cornerstone);\n  wadouri.register(cornerstone);\n}\n\nexport default registerLoaders;\n","/* eslint import/extensions:0 */\nimport registerLoaders from './imageLoader/registerLoaders';\n\nlet cornerstone;\nlet dicomParser;\n\nconst external = {\n  set cornerstone(cs) {\n    cornerstone = cs;\n\n    registerLoaders(cornerstone);\n  },\n  get cornerstone() {\n    if (!cornerstone) {\n      cornerstone = window && (window as any).cornerstone;\n\n      if (!cornerstone) {\n        throw new Error(\n          'cornerstoneDICOMImageLoader requires a copy of Cornerstone to work properly. Please add cornerstoneDICOMImageLoader.external.cornerstone = cornerstone; to your application.'\n        );\n      }\n\n      registerLoaders(cornerstone);\n    }\n\n    return cornerstone;\n  },\n  set dicomParser(dp) {\n    dicomParser = dp;\n  },\n  get dicomParser() {\n    if (!dicomParser) {\n      if (window && (window as any).dicomParser) {\n        dicomParser = (window as any).dicomParser;\n      } else {\n        throw new Error(\n          'cornerstoneDICOMImageLoader requires a copy of dicomParser to work properly. Please add cornerstoneDICOMImageLoader.external.dicomParser = dicomParser; to your application.'\n        );\n      }\n    }\n\n    return dicomParser;\n  },\n};\n\nexport default external;\n","import { ByteArray } from 'dicom-parser';\nimport { ImageFrame } from '../../types';\nimport external from '../../externalModules';\n\nfunction convertLUTto8Bit(lut: number[], shift: number) {\n  const numEntries = lut.length;\n  const cleanedLUT = new Uint8ClampedArray(numEntries);\n\n  for (let i = 0; i < numEntries; ++i) {\n    cleanedLUT[i] = lut[i] >> shift;\n  }\n\n  return cleanedLUT;\n}\n\nfunction fetchPaletteData(imageFrame, color, fallback) {\n  const data = imageFrame[`${color}PaletteColorLookupTableData`];\n  if (data) {\n    return Promise.resolve(data);\n  }\n\n  const result = external.cornerstone.metaData.get(\n    'imagePixelModule',\n    imageFrame.imageId\n  );\n\n  if (result && typeof result.then === 'function') {\n    return result.then((module) =>\n      module ? module[`${color}PaletteColorLookupTableData`] : fallback\n    );\n  } else {\n    return Promise.resolve(\n      result ? result[`${color}PaletteColorLookupTableData`] : fallback\n    );\n  }\n}\n\n/**\n * Convert pixel data with PALETTE COLOR Photometric Interpretation to RGBA\n *\n * @param imageFrame - The ImageFrame to convert\n * @param colorBuffer - The buffer to write the converted pixel data to\n * @returns\n */\nexport default function (\n  imageFrame: ImageFrame,\n  colorBuffer: ByteArray,\n  useRGBA: boolean\n): void {\n  const numPixels = imageFrame.columns * imageFrame.rows;\n  const pixelData = imageFrame.pixelData;\n\n  Promise.all([\n    fetchPaletteData(imageFrame, 'red', null),\n    fetchPaletteData(imageFrame, 'green', null),\n    fetchPaletteData(imageFrame, 'blue', null),\n  ]).then(([rData, gData, bData]) => {\n    if (!rData || !gData || !bData) {\n      throw new Error(\n        'The image does not have a complete color palette. R, G, and B palette data are required.'\n      );\n    }\n\n    const len = rData.length;\n    let palIndex = 0;\n    let bufferIndex = 0;\n\n    const start = imageFrame.redPaletteColorLookupTableDescriptor[1];\n    const shift =\n      imageFrame.redPaletteColorLookupTableDescriptor[2] === 8 ? 0 : 8;\n\n    const rDataCleaned = convertLUTto8Bit(rData, shift);\n    const gDataCleaned = convertLUTto8Bit(gData, shift);\n    const bDataCleaned = convertLUTto8Bit(bData, shift);\n\n    if (useRGBA) {\n      for (let i = 0; i < numPixels; ++i) {\n        let value = pixelData[palIndex++];\n\n        if (value < start) {\n          value = 0;\n        } else if (value > start + len - 1) {\n          value = len - 1;\n        } else {\n          value -= start;\n        }\n\n        colorBuffer[bufferIndex++] = rDataCleaned[value];\n        colorBuffer[bufferIndex++] = gDataCleaned[value];\n        colorBuffer[bufferIndex++] = bDataCleaned[value];\n        colorBuffer[bufferIndex++] = 255;\n      }\n\n      return;\n    }\n\n    for (let i = 0; i < numPixels; ++i) {\n      let value = pixelData[palIndex++];\n\n      if (value < start) {\n        value = 0;\n      } else if (value > start + len - 1) {\n        value = len - 1;\n      } else {\n        value -= start;\n      }\n\n      colorBuffer[bufferIndex++] = rDataCleaned[value];\n      colorBuffer[bufferIndex++] = gDataCleaned[value];\n      colorBuffer[bufferIndex++] = bDataCleaned[value];\n    }\n  });\n}\n","import { setOptions } from './internal/index';\nimport { LoaderOptions } from '../types';\n\nfunction configure(options: LoaderOptions): void {\n  setOptions(options);\n}\n\nexport default configure;\n","import { ImageFrame } from '../types';\n\nfunction isJPEGBaseline8BitColor(\n  imageFrame: ImageFrame,\n  transferSyntax: string\n): boolean {\n  /** @todo check as any */\n  transferSyntax = transferSyntax || (imageFrame as any).transferSyntax;\n\n  if (\n    imageFrame.bitsAllocated === 8 &&\n    transferSyntax === '1.2.840.10008.1.2.4.50' &&\n    (imageFrame.samplesPerPixel === 3 || imageFrame.samplesPerPixel === 4)\n  ) {\n    return true;\n  }\n}\n\nexport default isJPEGBaseline8BitColor;\n","import {\n  convertRGBColorByPixel,\n  convertRGBColorByPlane,\n  convertYBRFullByPixel,\n  convertYBRFullByPlane,\n  convertPALETTECOLOR,\n} from './colorSpaceConverters/index';\n\nimport { default as wadouri } from './wadouri/index';\nimport { default as wadors } from './wadors/index';\nimport { default as configure } from './configure';\nimport { default as convertColorSpace } from './convertColorSpace';\nimport { default as createImage } from './createImage';\nimport { default as decodeImageFrame } from './decodeImageFrame';\nimport { default as decodeJPEGBaseline8BitColor } from './decodeJPEGBaseline8BitColor';\nimport { default as getImageFrame } from './getImageFrame';\nimport { default as getMinMax } from '../shared/getMinMax';\nimport { default as isColorImage } from '../shared/isColorImage';\nimport { default as isJPEGBaseline8BitColor } from './isJPEGBaseline8BitColor';\nimport { default as webWorkerManager } from './webWorkerManager';\nimport { default as getPixelData } from './wadors/getPixelData';\nimport { internal } from './internal/index';\nimport { default as external } from '../externalModules';\n\nconst cornerstoneDICOMImageLoader = {\n  convertRGBColorByPixel,\n  convertRGBColorByPlane,\n  convertYBRFullByPixel,\n  convertYBRFullByPlane,\n  convertPALETTECOLOR,\n  wadouri,\n  wadors,\n  configure,\n  convertColorSpace,\n  createImage,\n  decodeImageFrame,\n  decodeJPEGBaseline8BitColor,\n  getImageFrame,\n  getPixelData,\n  getMinMax,\n  isColorImage,\n  isJPEGBaseline8BitColor,\n  webWorkerManager,\n  internal,\n  external,\n};\n\nexport {\n  convertRGBColorByPixel,\n  convertRGBColorByPlane,\n  convertYBRFullByPixel,\n  convertYBRFullByPlane,\n  convertPALETTECOLOR,\n  wadouri,\n  wadors,\n  configure,\n  convertColorSpace,\n  createImage,\n  decodeImageFrame,\n  decodeJPEGBaseline8BitColor,\n  getImageFrame,\n  getPixelData,\n  getMinMax,\n  isColorImage,\n  isJPEGBaseline8BitColor,\n  webWorkerManager,\n  internal,\n  external,\n};\n\nexport default cornerstoneDICOMImageLoader;\n"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__713__","zlib_inflate","utils","strings","msg","ZStream","GZheader","toString","Object","prototype","Z_NO_FLUSH","Z_FINISH","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Inflate","options","assign","chunkSize","windowBits","to","opt","raw","err","ended","chunks","strm","avail_out","status","inflateInit2","Error","header","inflateGetHeader","dictionary","string2buf","call","Uint8Array","inflateSetDictionary","inflate","input","inflator","push","result","data","flush_mode","_flush_mode","last_avail_out","next_in","avail_in","length","output","next_out","state","wrap","inflateReset","onEnd","next_out_utf8","utf8border","tail","utf8str","buf2string","set","subarray","onData","inflateEnd","chunk","join","flattenChunks","_has","obj","key","hasOwnProperty","sources","Array","slice","arguments","source","shift","TypeError","p","len","i","l","pos","STR_APPLY_UIA_OK","String","fromCharCode","apply","__","_utf8len","q","str","TextEncoder","encode","buf","c","c2","m_pos","str_len","buf_len","charCodeAt","max","TextDecoder","decode","out","utf16buf","c_len","buf2binstring","adler","s1","s2","n","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","crcTable","Uint32Array","table","k","makeTable","crc","t","end","text","time","xflags","os","extra","extra_len","name","comment","hcrc","done","BAD","start","_in","last","_out","beg","dmax","wsize","whave","wnext","s_window","hold","bits","lcode","dcode","lmask","dmask","here","op","dist","from","from_source","window","lencode","distcode","lenbits","distbits","top","dolen","mode","sane","adler32","crc32","inflate_fast","inflate_table","HEAD","DICT","TYPE","TYPEDO","COPY_","LEN_","LEN","CHECK","MEM","zswap32","InflateState","havedict","flags","check","total","head","wbits","offset","ncode","nlen","ndist","have","next","lens","Uint16Array","work","lendyn","distdyn","back","was","inflateStateCheck","inflateResetKeep","total_in","total_out","Int32Array","inflateReset2","ret","lenfix","distfix","virgin","fixedtables","sym","updatewindow","src","copy","inflateInit","flush","put","left","here_bits","here_op","here_val","last_bits","last_op","last_val","hbuf","opts","order","inf_leave","data_type","dictLength","dictid","inflateInfo","MAXBITS","lbase","lext","dbase","dext","type","lens_index","codes","table_index","incr","fill","low","mask","match","min","curr","drop","used","huff","base","count","offs","content","workerConstructor","workerOptions","url","globalScope","self","blob","Blob","e","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","URL","webkitURL","objectURL","createObjectURL","worker","revokeObjectURL","concat","encodeURIComponent","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","prop","r","Symbol","toStringTag","value","scriptUrl","importScripts","location","document","currentScript","scripts","getElementsByTagName","replace","imageFrame","colorBuffer","useRGBA","numPixels","rgbIndex","bufferIndex","rIndex","gIndex","bIndex","ybrIndex","y","cb","cr","yIndex","cbIndex","crIndex","element","index","defaultValue","Value","getValue","parseFloat","minimumLength","isArray","values","imageIdToURI","imageId","colonIndex","indexOf","substring","getTagValue","tag","justElement","getFrameInformation","PerFrameFunctionalGroupsSequence","SharedFunctionalGroupsSequence","frameNumber","shared","map","it","filter","perFrame","getMultiframeInformation","metaData","NumberOfFrames","rest","_retrieveMultiframeMetadata","imageURI","lastSlashIdx","imageIdFrameless","frame","parseInt","metadata","metadataByImageURI","retrieveMultiframeMetadata","isMultiframe","numberOfFrames","multiframeMetadataByImageURI","add","multiframeMetadata","cachedMetadata","retrievedMetadata","firstFrameMetadata","combined","instance","newInstance","forEach","item","entries","combineFrameInstance","remove","purge","isNMReconstructable","imageSubType","isNMModality","includes","getImageTypeSubItemFromMetadata","imageType","extractOrientationFromMetadata","imageOrientationPatient","getNumberValues","detectorInformationSequence","extractOrientationFromNMMultiframeMetadata","extractPositionFromMetadata","imagePositionPatient","extractPositionFromNMMultiframeMetadata","getInstanceModule","metaDataProvider","types","capitalizedData","capitalizeTag","error","console","charAt","toUpperCase","instanceModuleNames","getFirstNumberValue","sequence","warn","getUSEnhancedRegions","sequenceOfUltrasoundRegions","getSequenceItems","physicalDeltaX","physicalDeltaY","physicalUnitsXDirection","physicalUnitsYDirection","regionLocationMinY0","regionLocationMaxY1","regionLocationMinX0","regionLocationMaxX1","referencePixelX0","referencePixelY0","referencePhysicalPixelValueY","referencePhysicalPixelValueX","regionSpatialFormat","regionDataType","regionFlags","transducerFrequency","getTransferSyntax","transferSyntaxUID","MetadataModules","external","dicomParser","MULTIFRAME","PerFrameFunctionalInformation","SharedFunctionalInformation","metaDataManager","GENERAL_STUDY","studyDescription","studyDate","parseDA","studyTime","parseTM","accessionNumber","GENERAL_SERIES","modality","seriesInstanceUID","seriesNumber","getNumberValue","studyInstanceUID","seriesDate","seriesTime","acquisitionDate","acquisitionTime","GENERAL_IMAGE","sopInstanceUID","instanceNumber","lossyImageCompression","lossyImageCompressionRatio","lossyImageCompressionMethod","PATIENT","patientID","patientName","PATIENT_STUDY","patientAge","patientSize","patientSex","patientWeight","NM_MULTIFRAME_GEOMETRY","sliceThickness","spacingBetweenSlices","pixelSpacing","IMAGE_PLANE","columnPixelSpacing","rowPixelSpacing","rowCosines","columnCosines","frameOfReferenceUID","rows","columns","sliceLocation","ULTRASOUND_ENHANCED_REGION","CALIBRATION","IMAGE_URL","isVideo","imageUrl","thumbnail","rendered","getImageUrlModule","CINE","cineRate","getCineModule","IMAGE_PIXEL","samplesPerPixel","photometricInterpretation","bitsAllocated","bitsStored","highBit","pixelRepresentation","planarConfiguration","pixelAspectRatio","smallestPixelValue","largestPixelValue","redPaletteColorLookupTableDescriptor","greenPaletteColorLookupTableDescriptor","bluePaletteColorLookupTableDescriptor","redPaletteColorLookupTableData","greenPaletteColorLookupTableData","bluePaletteColorLookupTableData","VOI_LUT","windowCenter","windowWidth","MODALITY_LUT","rescaleIntercept","rescaleSlope","rescaleType","SOP_COMMON","sopClassUID","PET_ISOTOPE","radiopharmaceuticalInfo","radiopharmaceuticalStartTime","radiopharmaceuticalStartDateTime","radionuclideTotalDose","radionuclideHalfLife","OVERLAY_PLANE","overlays","overlayGroup","groupStr","pixelData","byte_as_int","dataOffset","x","description","label","roiArea","roiMean","roiStandardDeviation","getOverlayPlaneModule","PET_SERIES","correctedImage","units","decayCorrection","PET_IMAGE","frameReferenceTime","actualFrameDuration","checkToken","token","endIndex","uint","j","stringToUint8Array","open","xhr","beforeSend","beforeProcessing","Promise","resolve","response","imageCreated","strict","decodeConfig","convertFloatPixelDataToInt","use16BitDataType","setOptions","newOptions","getOptions","defaultHeaders","params","cornerstone","errorInterceptor","request","XMLHttpRequest","promise","reject","beforeSendHeaders","responseType","headers","keys","setRequestHeader","deferred","onloadstart","event","eventData","triggerEvent","events","onloadend","onreadystatechange","readyState","then","catch","onprogress","oProgress","loaded","percentComplete","lengthComputable","Math","round","onerror","onabort","send","internal","xhrRequest","ProgressiveIterator","constructor","as","iterator","v","reason","nextValue","waiting","rejectReason","getRecent","asyncIterator","callback","errorCallback","generate","processFunction","bind","nextPromise","donePromise","getNextPromise","getDonePromise","ImageQualityStatus","Enums","extractMultipart","contentType","imageFrameAsArrayBuffer","isPartial","imageQualityStatus","SUBRESOLUTION","FULL_RESOLUTION","tokenIndex","responseHeaders","boundary","multipartContentType","findIndexOfString","uint8ArrayToString","split","substr","findBoundary","trim","findContentType","extractDone","getImageQualityStatus","retrieveOptions","utilities","streamRequest","globalOptions","streamingData","minChunkSize","loadIterator","async","fetch","signal","responseReader","body","getReader","totalBytes","Number","readDone","encodedData","lastSize","read","appendChunk","byteLength","extracted","detail","existing","newDataArray","rangeRequest","attr","rangesFetched","byteRange","rangeIndex","getByteRange","range","Range","responseArrayBuffer","arrayBuffer","responseTypedArray","newByteArray","contentRange","MAX_SAFE_INTEGER","fetchRangeAndAppend","doneAllBytes","extract","uri","mediaType","Accept","urlArguments","framesPath","streaming","loadPromise","getResponseHeader","storedPixelData","storedPixel","convertRGB","convertRGBColorByPixel","convertRGBColorByPlane","convertColorSpace","convertPALETTECOLOR","y1","y2","convertYBRFull422ByPixel","convertYBRFullByPixel","convertYBRFullByPlane","convertYBRFull","arrayBufferToString","buffer","binary","decodeURIComponent","escape","_error","URIError","binaryToString","canvas","Date","getTime","imgBlob","fileReader","FileReader","readAsBinaryString","readAsArrayBuffer","onload","img","Image","height","width","context","getContext","drawImage","imageData","getImageData","decodeTimeInMS","minMax","getMinMax","pixelDataLength","btoa","Worker_fn","nextTaskId","tasks","webWorkers","defaultConfig","maxWebWorkers","navigator","hardwareConcurrency","startWebWorkersOnDemand","webWorkerTaskPaths","taskConfiguration","decodeTask","initializeCodecsOnStartup","config","statistics","numWebWorkers","numTasksQueued","numTasksExecuting","numTasksCompleted","totalTaskTimeInMS","totalTimeDelayedInMS","startTaskOnWebWorker","task","added","postMessage","taskType","workerIndex","transferList","spawnWebWorker","handleMessageFromWorker","action","cornerstoneDICOMImageLoaderWebWorker","addEventListener","initialize","configObject","loadWebWorkerTask","sourcePath","taskConfig","addTask","priority","taskId","splice","getStatistics","setTaskPriority","cancelTask","terminate","processDecodeTask","transferSyntax","srcOptions","loader","transferPixelData","webWorkerManager","pako","inflateRaw","decodeJPEGBaseline8BitColor","imagePixelModule","photoMetricInterpretation","lastImageIdDrawn","setPixelDataType","TypedArray","pixelDataType","isInteger","Int8Array","Int16Array","Float32Array","getPixelDataTypeFromMinMax","typedArray","preScale","enabled","createElement","getImageFrame","decodeLevel","allowFloatRendering","canRenderFloatTextures","scalingParameters","modalityLutModule","generalSeriesModule","suvFactor","suvbw","getScalingParameters","isSharedArrayBuffer","targetBuffer","SharedArrayBuffer","useNativeDataType","decodePromise","decodeImageFrame","isColorImage","isColorImageFn","skipCreateImage","alreadyTyped","rawOffset","rawLength","imageFrameLength","typedArrayConstructors","TypedArrayConstructor","imagePlaneModule","voiLutModule","sopCommonModule","calibrationModule","endsWith","ceil","floor","isColorConversionRequired","createImageData","Uint8ClampedArray","removeAFromRGBA","image","color","calibration","intercept","slope","invert","minPixelValue","maxPixelValue","sizeInBytes","voiLUTFunction","floatPixelData","rgba","getPixelData","getCanvas","numComps","sopClassUid","ctx","arr","putImageData","modalityLUTSequence","modalityLUT","voiLUTSequence","voiLUT","minVoi","minAfterScale","maxVoi","maxAfterScale","streamableTransferSyntaxes","Set","getTransferSyntaxForContentType","defaultTransferSyntax","parameters","parameter","parameterValues","defaultTransferSyntaxByType","decodeLevelFromComplete","percent","retrieveDecodeLevel","testSize","imageRetrievalPool","uncompressedIterator","requestType","additionalDetails","addToBeginning","addRequest","compressedIt","lastDecodeLevel","has","useOptions","createImage","loadTimeInMS","cancelFn","getNumberString","loadImage","register","registerImageLoader","addProvider","getLutDescriptor","dataSet","elements","uint16","getLutData","lutDataSet","lutDescriptor","lut","lutData","byteArray","string","int16","populateSmallestLargestPixelValues","x00281101","numLutEntries","lutBitsAllocated","x00281201","populatePaletteColorLut","getLUT","numLUTEntries","firstValueMapped","id","numBitsPerEntry","lutSequence","items","luts","floatString","minStoredPixelValue","getMinStoredPixelValue","x00283000","valueAsString","firstColonIndex","frameIndex","frameStr","scheme","pixelDataFrame","parsePartialByteArray","pixelDataSet","parseDicom","untilTag","x7fe00010","log","fragments","totalLength","fragment","position","fixFragments","dataSetFromPartialContent","loadRequest","fileTotalLength","fetchMore","fetchOptions","_options","fetchedLength","lengthToFetch","byteArrayToAppend","combinedByteArray","otherAttributtes","x52009230","x52009229","otherElements","intString","_get","loadedDataSets","_isMultiframeDataset","generateMultiframeWADOURIs","listWADOURIs","retrieveMultiframeDataset","frameParameterIndex","retrieveFrameParameterIndex","multiframeURI","isMultiframeDataset","cacheSizeInBytes","promises","getInfo","numberOfDataSetsCached","isLoaded","load","cacheCount","loadDICOMPromise","dicomPart10AsArrayBuffer","partialContent","isPartialContent","ArrayBuffer","cacheInfo","unload","multiframeDataSet","multiframeDataset","newElements","clonedDataset","create","combineFrameInstanceDataset","update","loadedDataSet","getImageTypeSubItemFromDataset","subTypes","extractOrientationFromDataset","x00209116","x00540022","extractOrientationFromNMMultiframeDataset","extractPositionFromDataset","x00209113","extractPositionFromNMMultiframeDataset","extractSpacingFromDataset","x00289110","extractSliceThicknessFromDataset","x00180050","double","int32","parsedImageId","parseImageId","multiframeData","multiframeInfo","getDirectFrameInformation","dataSetCacheManager","frameTime","getImagePixelModule","modalityLUTOutputPixelRepresentation","getModalityLUTOutputPixelRepresentation","getLUTs","x00283010","x00540016","firstRadiopharmaceuticalInfoDataSet","files","file","getEncapsulatedImageFrame","basicOffsetTable","readEncapsulatedImageFrame","framesAreFragmented","createJPEGBasicOffsetTable","byteStream","ByteStream","byteArrayParser","readSequenceItem","seek","fragmentZeroPosition","byteOffset","isBitSet","byte","bitPos","frameOffset","pixelsPerFrame","pixelDataElement","x7fe00008","pixelDataOffset","unpackBinaryFrame","fileIndex","fileManager","target","encapsulatedPixelData","getUncompressedImageFrame","loadImageFromPromise","dataSetPromise","sharedCacheKey","callbacks","imageLoadObject","loadEnd","imagePromise","decache","addDecache","totalTimeInMS","imageDoneCallback","getLoaderForScheme","loadFileRequest","schemeLoader","loadImageFromDataSet","wadors","wadouri","cs","registerLoaders","dp","convertLUTto8Bit","numEntries","cleanedLUT","fetchPaletteData","fallback","all","rData","gData","bData","palIndex","rDataCleaned","gDataCleaned","bDataCleaned","configure","isJPEGBaseline8BitColor"],"sourceRoot":""}