{"ast":null,"code":"import { PlanarFreehandROITool } from '../../tools';\nimport { ToolGroupManager } from '../../store';\nimport interpolateSegmentPoints from './interpolation/interpolateSegmentPoints';\nfunction shouldPreventInterpolation(enabledElement, annotation, knotsRatioPercentage) {\n  if (!annotation?.data?.polyline || knotsRatioPercentage <= 0) {\n    return true;\n  }\n  if (!enabledElement.viewport) {\n    return true;\n  }\n  const {\n    renderingEngineId,\n    viewportId,\n    FrameOfReferenceUID\n  } = enabledElement;\n  const toolGroup = ToolGroupManager.getToolGroupForViewport(viewportId, renderingEngineId);\n  if (annotation.metadata.FrameOfReferenceUID !== FrameOfReferenceUID) {\n    return true;\n  }\n  if (!toolGroup) {\n    return true;\n  }\n  const toolInstance = toolGroup.getToolInstance(annotation.metadata.toolName);\n  if (!(toolInstance instanceof PlanarFreehandROITool)) {\n    return true;\n  }\n  return toolInstance.isDrawing || toolInstance.isEditingOpen || toolInstance.isEditingClosed;\n}\nexport default function interpolateAnnotation(enabledElement, annotation, knotsRatioPercentage) {\n  if (shouldPreventInterpolation(enabledElement, annotation, knotsRatioPercentage)) {\n    return false;\n  }\n  const {\n    viewport\n  } = enabledElement;\n  const canvasPoints = annotation.data.polyline.map(viewport.worldToCanvas);\n  const interpolatedCanvasPoints = interpolateSegmentPoints(canvasPoints, 0, canvasPoints.length, knotsRatioPercentage);\n  if (interpolatedCanvasPoints === canvasPoints) {\n    return false;\n  }\n  annotation.data.polyline = interpolatedCanvasPoints.map(viewport.canvasToWorld);\n  return true;\n}","map":{"version":3,"names":["PlanarFreehandROITool","ToolGroupManager","interpolateSegmentPoints","shouldPreventInterpolation","enabledElement","annotation","knotsRatioPercentage","data","polyline","viewport","renderingEngineId","viewportId","FrameOfReferenceUID","toolGroup","getToolGroupForViewport","metadata","toolInstance","getToolInstance","toolName","isDrawing","isEditingOpen","isEditingClosed","interpolateAnnotation","canvasPoints","map","worldToCanvas","interpolatedCanvasPoints","length","canvasToWorld"],"sources":["../../../../src/utilities/planarFreehandROITool/interpolateAnnotation.ts"],"sourcesContent":[null],"mappings":"AACA,SAASA,qBAAqB,QAAQ,aAAa;AACnD,SAASC,gBAAgB,QAAQ,aAAa;AAE9C,OAAOC,wBAAwB,MAAM,0CAA0C;AAE/E,SAASC,0BAA0BA,CACjCC,cAAqC,EACrCC,UAAuC,EACvCC,oBAA4B;EAE5B,IAAI,CAACD,UAAU,EAAEE,IAAI,EAAEC,QAAQ,IAAIF,oBAAoB,IAAI,CAAC,EAAE;IAC5D,OAAO,IAAI;;EAGb,IAAI,CAACF,cAAc,CAACK,QAAQ,EAAE;IAC5B,OAAO,IAAI;;EAGb,MAAM;IAAEC,iBAAiB;IAAEC,UAAU;IAAEC;EAAmB,CAAE,GAAGR,cAAc;EAC7E,MAAMS,SAAS,GAAGZ,gBAAgB,CAACa,uBAAuB,CACxDH,UAAU,EACVD,iBAAiB,CAClB;EAED,IAAIL,UAAU,CAACU,QAAQ,CAACH,mBAAmB,KAAKA,mBAAmB,EAAE;IACnE,OAAO,IAAI;;EAGb,IAAI,CAACC,SAAS,EAAE;IACd,OAAO,IAAI;;EAGb,MAAMG,YAAY,GAAGH,SAAS,CAACI,eAAe,CAACZ,UAAU,CAACU,QAAQ,CAACG,QAAQ,CAAC;EAG5E,IAAI,EAAEF,YAAY,YAAYhB,qBAAqB,CAAC,EAAE;IACpD,OAAO,IAAI;;EAGb,OACEgB,YAAY,CAACG,SAAS,IACtBH,YAAY,CAACI,aAAa,IAC1BJ,YAAY,CAACK,eAAe;AAEhC;AAOA,eAAc,SAAUC,qBAAqBA,CAC3ClB,cAAqC,EACrCC,UAAuC,EACvCC,oBAA4B;EAG5B,IACEH,0BAA0B,CAACC,cAAc,EAAEC,UAAU,EAAEC,oBAAoB,CAAC,EAC5E;IACA,OAAO,KAAK;;EAGd,MAAM;IAAEG;EAAQ,CAAE,GAAGL,cAAc;EAGnC,MAAMmB,YAAY,GAAGlB,UAAU,CAACE,IAAI,CAACC,QAAQ,CAACgB,GAAG,CAACf,QAAQ,CAACgB,aAAa,CAAC;EACzE,MAAMC,wBAAwB,GAC5BxB,wBAAwB,CACtBqB,YAAY,EACZ,CAAC,EACDA,YAAY,CAACI,MAAM,EACnBrB,oBAAoB,CAEvB;EAED,IAAIoB,wBAAwB,KAAKH,YAAY,EAAE;IAC7C,OAAO,KAAK;;EAGdlB,UAAU,CAACE,IAAI,CAACC,QAAQ,GAAGkB,wBAAwB,CAACF,GAAG,CACrDf,QAAQ,CAACmB,aAAa,CACvB;EAED,OAAO,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}