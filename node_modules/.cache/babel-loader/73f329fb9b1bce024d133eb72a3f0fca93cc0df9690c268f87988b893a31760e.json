{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nfunction getDeltaPoints(currentPoints, lastPoints) {\n  const curr = getMeanPoints(currentPoints);\n  const last = getMeanPoints(lastPoints);\n  return {\n    page: _subtractPoints2D(curr.page, last.page),\n    client: _subtractPoints2D(curr.client, last.client),\n    canvas: _subtractPoints2D(curr.canvas, last.canvas),\n    world: _subtractPoints3D(curr.world, last.world)\n  };\n}\nfunction getDeltaDistance(currentPoints, lastPoints) {\n  const curr = getMeanPoints(currentPoints);\n  const last = getMeanPoints(lastPoints);\n  return {\n    page: _getDistance2D(curr.page, last.page),\n    client: _getDistance2D(curr.client, last.client),\n    canvas: _getDistance2D(curr.canvas, last.canvas),\n    world: _getDistance3D(curr.world, last.world)\n  };\n}\nfunction getDeltaRotation(currentPoints, lastPoints) {}\nfunction getDeltaDistanceBetweenIPoints(currentPoints, lastPoints) {\n  const currentDistance = _getMeanDistanceBetweenAllIPoints(currentPoints);\n  const lastDistance = _getMeanDistanceBetweenAllIPoints(lastPoints);\n  const deltaDistance = {\n    page: currentDistance.page - lastDistance.page,\n    client: currentDistance.client - lastDistance.client,\n    canvas: currentDistance.canvas - lastDistance.canvas,\n    world: currentDistance.world - lastDistance.world\n  };\n  return deltaDistance;\n}\nfunction copyPointsList(points) {\n  return JSON.parse(JSON.stringify(points));\n}\nfunction copyPoints(points) {\n  return JSON.parse(JSON.stringify(points));\n}\nfunction getMeanPoints(points) {\n  return points.reduce((prev, curr) => {\n    return {\n      page: [prev.page[0] + curr.page[0] / points.length, prev.page[1] + curr.page[1] / points.length],\n      client: [prev.client[0] + curr.client[0] / points.length, prev.client[1] + curr.client[1] / points.length],\n      canvas: [prev.canvas[0] + curr.canvas[0] / points.length, prev.canvas[1] + curr.canvas[1] / points.length],\n      world: [prev.world[0] + curr.world[0] / points.length, prev.world[1] + curr.world[1] / points.length, prev.world[2] + curr.world[2] / points.length]\n    };\n  }, {\n    page: [0, 0],\n    client: [0, 0],\n    canvas: [0, 0],\n    world: [0, 0, 0]\n  });\n}\nfunction getMeanTouchPoints(points) {\n  return points.reduce((prev, curr) => {\n    return {\n      page: [prev.page[0] + curr.page[0] / points.length, prev.page[1] + curr.page[1] / points.length],\n      client: [prev.client[0] + curr.client[0] / points.length, prev.client[1] + curr.client[1] / points.length],\n      canvas: [prev.canvas[0] + curr.canvas[0] / points.length, prev.canvas[1] + curr.canvas[1] / points.length],\n      world: [prev.world[0] + curr.world[0] / points.length, prev.world[1] + curr.world[1] / points.length, prev.world[2] + curr.world[2] / points.length],\n      touch: {\n        identifier: null,\n        radiusX: prev.touch.radiusX + curr.touch.radiusX / points.length,\n        radiusY: prev.touch.radiusY + curr.touch.radiusY / points.length,\n        force: prev.touch.force + curr.touch.force / points.length,\n        rotationAngle: prev.touch.rotationAngle + curr.touch.rotationAngle / points.length\n      }\n    };\n  }, {\n    page: [0, 0],\n    client: [0, 0],\n    canvas: [0, 0],\n    world: [0, 0, 0],\n    touch: {\n      identifier: null,\n      radiusX: 0,\n      radiusY: 0,\n      force: 0,\n      rotationAngle: 0\n    }\n  });\n}\nfunction _subtractPoints2D(point0, point1) {\n  return [point0[0] - point1[0], point0[1] - point1[1]];\n}\nfunction _subtractPoints3D(point0, point1) {\n  return [point0[0] - point1[0], point0[1] - point1[1], point0[2] - point1[2]];\n}\nfunction _getMeanDistanceBetweenAllIPoints(points) {\n  const pairedDistance = [];\n  for (let i = 0; i < points.length; i++) {\n    for (let j = 0; j < points.length; j++) {\n      if (i < j) {\n        pairedDistance.push({\n          page: _getDistance2D(points[i].page, points[j].page),\n          client: _getDistance2D(points[i].client, points[j].client),\n          canvas: _getDistance2D(points[i].canvas, points[j].canvas),\n          world: _getDistance3D(points[i].world, points[j].world)\n        });\n      }\n    }\n  }\n  return pairedDistance.reduce((prev, curr) => {\n    return {\n      page: prev.page + curr.page / pairedDistance.length,\n      client: prev.client + curr.client / pairedDistance.length,\n      canvas: prev.canvas + curr.canvas / pairedDistance.length,\n      world: prev.world + curr.world / pairedDistance.length\n    };\n  }, {\n    page: 0,\n    client: 0,\n    canvas: 0,\n    world: 0\n  });\n}\nfunction _getDistance2D(point0, point1) {\n  return Math.sqrt(Math.pow(point0[0] - point1[0], 2) + Math.pow(point0[1] - point1[1], 2));\n}\nfunction _getDistance3D(point0, point1) {\n  return Math.sqrt(Math.pow(point0[0] - point1[0], 2) + Math.pow(point0[1] - point1[1], 2) + Math.pow(point0[2] - point1[2], 2));\n}\nexport { getMeanPoints, getMeanTouchPoints, copyPoints, copyPointsList, getDeltaDistanceBetweenIPoints, getDeltaPoints, getDeltaDistance, getDeltaRotation };","map":{"version":3,"names":["getDeltaPoints","currentPoints","lastPoints","curr","getMeanPoints","last","page","_subtractPoints2D","client","canvas","world","_subtractPoints3D","getDeltaDistance","_getDistance2D","_getDistance3D","getDeltaRotation","getDeltaDistanceBetweenIPoints","currentDistance","_getMeanDistanceBetweenAllIPoints","lastDistance","deltaDistance","copyPointsList","points","JSON","parse","stringify","copyPoints","reduce","prev","length","getMeanTouchPoints","touch","identifier","radiusX","radiusY","force","rotationAngle","point0","point1","pairedDistance","i","j","push","Math","sqrt","pow"],"sources":["../../../../src/utilities/touch/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}