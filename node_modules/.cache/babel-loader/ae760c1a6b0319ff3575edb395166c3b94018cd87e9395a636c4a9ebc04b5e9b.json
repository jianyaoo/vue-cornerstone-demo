{"ast":null,"code":"import \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nexport default function getScalarDataType(scalingParameters, scalarData) {\n  let type;\n  if (scalarData && scalarData instanceof Uint8Array) {\n    type = 'Uint8Array';\n  } else if (scalarData instanceof Float32Array) {\n    type = 'Float32Array';\n  } else if (scalarData instanceof Int16Array) {\n    type = 'Int16Array';\n  } else if (scalarData instanceof Uint16Array) {\n    type = 'Uint16Array';\n  } else {\n    throw new Error('Unsupported array type');\n  }\n  return type;\n}","map":{"version":3,"names":["getScalarDataType","scalingParameters","scalarData","type","Uint8Array","Float32Array","Int16Array","Uint16Array","Error"],"sources":["../../../src/utilities/getScalarDataType.ts"],"sourcesContent":[null],"mappings":";;;AAWA,eAAc,SAAUA,iBAAiBA,CACvCC,iBAAoC,EACpCC,UAAgB;EAEhB,IAAIC,IAAI;EAER,IAAID,UAAU,IAAIA,UAAU,YAAYE,UAAU,EAAE;IAClDD,IAAI,GAAG,YAAY;GACpB,MAAM,IAAID,UAAU,YAAYG,YAAY,EAAE;IAC7CF,IAAI,GAAG,cAAc;GACtB,MAAM,IAAID,UAAU,YAAYI,UAAU,EAAE;IAC3CH,IAAI,GAAG,YAAY;GACpB,MAAM,IAAID,UAAU,YAAYK,WAAW,EAAE;IAC5CJ,IAAI,GAAG,aAAa;GACrB,MAAM;IACL,MAAM,IAAIK,KAAK,CAAC,wBAAwB,CAAC;;EAG3C,OAAOL,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}