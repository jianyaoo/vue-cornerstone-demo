{"ast":null,"code":"export default function getOrientationStringLPS(vector) {\n  let orientation = '';\n  const orientationX = vector[0] < 0 ? 'R' : 'L';\n  const orientationY = vector[1] < 0 ? 'A' : 'P';\n  const orientationZ = vector[2] < 0 ? 'F' : 'H';\n  const abs = [Math.abs(vector[0]), Math.abs(vector[1]), Math.abs(vector[2])];\n  const MIN = 0.0001;\n  for (let i = 0; i < 3; i++) {\n    if (abs[0] > MIN && abs[0] > abs[1] && abs[0] > abs[2]) {\n      orientation += orientationX;\n      abs[0] = 0;\n    } else if (abs[1] > MIN && abs[1] > abs[0] && abs[1] > abs[2]) {\n      orientation += orientationY;\n      abs[1] = 0;\n    } else if (abs[2] > MIN && abs[2] > abs[0] && abs[2] > abs[1]) {\n      orientation += orientationZ;\n      abs[2] = 0;\n    } else if (abs[0] > MIN && abs[1] > MIN && abs[0] === abs[1]) {\n      orientation += orientationX + orientationY;\n      abs[0] = 0;\n      abs[1] = 0;\n    } else if (abs[0] > MIN && abs[2] > MIN && abs[0] === abs[2]) {\n      orientation += orientationX + orientationZ;\n      abs[0] = 0;\n      abs[2] = 0;\n    } else if (abs[1] > MIN && abs[2] > MIN && abs[1] === abs[2]) {\n      orientation += orientationY + orientationZ;\n      abs[1] = 0;\n      abs[2] = 0;\n    } else {\n      break;\n    }\n  }\n  return orientation;\n}","map":{"version":3,"names":["getOrientationStringLPS","vector","orientation","orientationX","orientationY","orientationZ","abs","Math","MIN","i"],"sources":["../../../../src/utilities/orientation/getOrientationStringLPS.ts"],"sourcesContent":[null],"mappings":"AASA,eAAc,SAAUA,uBAAuBA,CAACC,MAAoB;EAIlE,IAAIC,WAAW,GAAG,EAAE;EACpB,MAAMC,YAAY,GAAGF,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG;EAC9C,MAAMG,YAAY,GAAGH,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG;EAC9C,MAAMI,YAAY,GAAGJ,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG;EAG9C,MAAMK,GAAG,GAAG,CAACC,IAAI,CAACD,GAAG,CAACL,MAAM,CAAC,CAAC,CAAC,CAAC,EAAEM,IAAI,CAACD,GAAG,CAACL,MAAM,CAAC,CAAC,CAAC,CAAC,EAAEM,IAAI,CAACD,GAAG,CAACL,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EAE3E,MAAMO,GAAG,GAAG,MAAM;EAElB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1B,IAAIH,GAAG,CAAC,CAAC,CAAC,GAAGE,GAAG,IAAIF,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,IAAIA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,EAAE;MACtDJ,WAAW,IAAIC,YAAY;MAC3BG,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;KACX,MAAM,IAAIA,GAAG,CAAC,CAAC,CAAC,GAAGE,GAAG,IAAIF,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,IAAIA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,EAAE;MAC7DJ,WAAW,IAAIE,YAAY;MAC3BE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;KACX,MAAM,IAAIA,GAAG,CAAC,CAAC,CAAC,GAAGE,GAAG,IAAIF,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,IAAIA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,EAAE;MAC7DJ,WAAW,IAAIG,YAAY;MAC3BC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;KACX,MAAM,IAAIA,GAAG,CAAC,CAAC,CAAC,GAAGE,GAAG,IAAIF,GAAG,CAAC,CAAC,CAAC,GAAGE,GAAG,IAAIF,GAAG,CAAC,CAAC,CAAC,KAAKA,GAAG,CAAC,CAAC,CAAC,EAAE;MAC5DJ,WAAW,IAAIC,YAAY,GAAGC,YAAY;MAC1CE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;MACVA,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;KACX,MAAM,IAAIA,GAAG,CAAC,CAAC,CAAC,GAAGE,GAAG,IAAIF,GAAG,CAAC,CAAC,CAAC,GAAGE,GAAG,IAAIF,GAAG,CAAC,CAAC,CAAC,KAAKA,GAAG,CAAC,CAAC,CAAC,EAAE;MAC5DJ,WAAW,IAAIC,YAAY,GAAGE,YAAY;MAC1CC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;MACVA,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;KACX,MAAM,IAAIA,GAAG,CAAC,CAAC,CAAC,GAAGE,GAAG,IAAIF,GAAG,CAAC,CAAC,CAAC,GAAGE,GAAG,IAAIF,GAAG,CAAC,CAAC,CAAC,KAAKA,GAAG,CAAC,CAAC,CAAC,EAAE;MAC5DJ,WAAW,IAAIE,YAAY,GAAGC,YAAY;MAC1CC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;MACVA,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC;KACX,MAAM;MACL;;;EAIJ,OAAOJ,WAAW;AACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}