{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { m as macro } from '../../macros2.js';\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUBindGroup methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUBindGroup(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUBindGroup');\n  publicAPI.setBindables = bindables => {\n    // is there a difference between the old and new list?\n    if (model.bindables.length === bindables.length) {\n      let allMatch = true;\n      for (let i = 0; i < model.bindables.length; i++) {\n        if (model.bindables[i] !== bindables[i]) {\n          allMatch = false;\n        }\n      }\n      if (allMatch) {\n        return;\n      }\n    }\n\n    // there is a difference\n    model.bindables = bindables;\n    publicAPI.modified();\n  };\n  publicAPI.getBindGroupLayout = device => {\n    const entries = [];\n    for (let i = 0; i < model.bindables.length; i++) {\n      const entry = model.bindables[i].getBindGroupLayoutEntry();\n      entry.binding = i;\n      entries.push(entry);\n    }\n    return device.getBindGroupLayout({\n      entries\n    });\n  };\n  publicAPI.getBindGroup = device => {\n    // check mtime\n    let mtime = publicAPI.getMTime();\n    for (let i = 0; i < model.bindables.length; i++) {\n      const tm = model.bindables[i].getBindGroupTime().getMTime();\n      mtime = tm > mtime ? tm : mtime;\n    }\n    if (mtime < model.bindGroupTime.getMTime()) {\n      return model.bindGroup;\n    }\n    const entries = [];\n    for (let i = 0; i < model.bindables.length; i++) {\n      const entry = model.bindables[i].getBindGroupEntry();\n      entry.binding = i;\n      entries.push(entry);\n    }\n    model.bindGroup = device.getHandle().createBindGroup({\n      layout: publicAPI.getBindGroupLayout(device),\n      entries,\n      label: model.label\n    });\n    model.bindGroupTime.modified();\n    return model.bindGroup;\n  };\n  publicAPI.getShaderCode = pipeline => {\n    const lines = [];\n    const bgroup = pipeline.getBindGroupLayoutCount(model.label);\n    for (let i = 0; i < model.bindables.length; i++) {\n      lines.push(model.bindables[i].getShaderCode(i, bgroup));\n    }\n    return lines.join('\\n');\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  device: null,\n  handle: null,\n  label: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  model.bindables = [];\n  model.bindGroupTime = {};\n  macro.obj(model.bindGroupTime, {\n    mtime: 0\n  });\n  macro.get(publicAPI, model, ['bindGroupTime', 'handle', 'sizeInBytes', 'usage']);\n  macro.setGet(publicAPI, model, ['label', 'device', 'arrayInformation']);\n  vtkWebGPUBindGroup(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nvar vtkWebGPUBindGroup$1 = {\n  newInstance,\n  extend\n};\nexport { vtkWebGPUBindGroup$1 as default, extend, newInstance };","map":{"version":3,"names":["m","macro","vtkWebGPUBindGroup","publicAPI","model","classHierarchy","push","setBindables","bindables","length","allMatch","i","modified","getBindGroupLayout","device","entries","entry","getBindGroupLayoutEntry","binding","getBindGroup","mtime","getMTime","tm","getBindGroupTime","bindGroupTime","bindGroup","getBindGroupEntry","getHandle","createBindGroup","layout","label","getShaderCode","pipeline","lines","bgroup","getBindGroupLayoutCount","join","DEFAULT_VALUES","handle","extend","initialValues","arguments","undefined","Object","assign","obj","get","setGet","newInstance","vtkWebGPUBindGroup$1","default"],"sources":["/Users/yzy/Documents/Playground/vue-cornerstone-demo/node_modules/@kitware/vtk.js/Rendering/WebGPU/BindGroup.js"],"sourcesContent":["import { m as macro } from '../../macros2.js';\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUBindGroup methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUBindGroup(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUBindGroup');\n  publicAPI.setBindables = bindables => {\n    // is there a difference between the old and new list?\n    if (model.bindables.length === bindables.length) {\n      let allMatch = true;\n      for (let i = 0; i < model.bindables.length; i++) {\n        if (model.bindables[i] !== bindables[i]) {\n          allMatch = false;\n        }\n      }\n      if (allMatch) {\n        return;\n      }\n    }\n\n    // there is a difference\n    model.bindables = bindables;\n    publicAPI.modified();\n  };\n  publicAPI.getBindGroupLayout = device => {\n    const entries = [];\n    for (let i = 0; i < model.bindables.length; i++) {\n      const entry = model.bindables[i].getBindGroupLayoutEntry();\n      entry.binding = i;\n      entries.push(entry);\n    }\n    return device.getBindGroupLayout({\n      entries\n    });\n  };\n  publicAPI.getBindGroup = device => {\n    // check mtime\n    let mtime = publicAPI.getMTime();\n    for (let i = 0; i < model.bindables.length; i++) {\n      const tm = model.bindables[i].getBindGroupTime().getMTime();\n      mtime = tm > mtime ? tm : mtime;\n    }\n    if (mtime < model.bindGroupTime.getMTime()) {\n      return model.bindGroup;\n    }\n    const entries = [];\n    for (let i = 0; i < model.bindables.length; i++) {\n      const entry = model.bindables[i].getBindGroupEntry();\n      entry.binding = i;\n      entries.push(entry);\n    }\n    model.bindGroup = device.getHandle().createBindGroup({\n      layout: publicAPI.getBindGroupLayout(device),\n      entries,\n      label: model.label\n    });\n    model.bindGroupTime.modified();\n    return model.bindGroup;\n  };\n  publicAPI.getShaderCode = pipeline => {\n    const lines = [];\n    const bgroup = pipeline.getBindGroupLayoutCount(model.label);\n    for (let i = 0; i < model.bindables.length; i++) {\n      lines.push(model.bindables[i].getShaderCode(i, bgroup));\n    }\n    return lines.join('\\n');\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  device: null,\n  handle: null,\n  label: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  model.bindables = [];\n  model.bindGroupTime = {};\n  macro.obj(model.bindGroupTime, {\n    mtime: 0\n  });\n  macro.get(publicAPI, model, ['bindGroupTime', 'handle', 'sizeInBytes', 'usage']);\n  macro.setGet(publicAPI, model, ['label', 'device', 'arrayInformation']);\n  vtkWebGPUBindGroup(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nvar vtkWebGPUBindGroup$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkWebGPUBindGroup$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}