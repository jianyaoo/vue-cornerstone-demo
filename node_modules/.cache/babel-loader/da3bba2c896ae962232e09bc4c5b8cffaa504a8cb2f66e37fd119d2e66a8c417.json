{"ast":null,"code":"import { vec3 } from 'gl-matrix';\nexport default function snapFocalPointToSlice(focalPoint, position, sliceRange, viewPlaneNormal, spacingInNormalDirection, deltaFrames) {\n  const {\n    min,\n    max,\n    current\n  } = sliceRange;\n  const posDiffFromFocalPoint = vec3.create();\n  vec3.sub(posDiffFromFocalPoint, position, focalPoint);\n  const steps = Math.round((max - min) / spacingInNormalDirection);\n  const fraction = (current - min) / (max - min);\n  const floatingStepNumber = fraction * steps;\n  let frameIndex = Math.round(floatingStepNumber);\n  let newFocalPoint = [focalPoint[0] - viewPlaneNormal[0] * floatingStepNumber * spacingInNormalDirection, focalPoint[1] - viewPlaneNormal[1] * floatingStepNumber * spacingInNormalDirection, focalPoint[2] - viewPlaneNormal[2] * floatingStepNumber * spacingInNormalDirection];\n  frameIndex += deltaFrames;\n  if (frameIndex > steps) {\n    frameIndex = steps;\n  } else if (frameIndex < 0) {\n    frameIndex = 0;\n  }\n  const newSlicePosFromMin = frameIndex * spacingInNormalDirection;\n  newFocalPoint = [newFocalPoint[0] + viewPlaneNormal[0] * newSlicePosFromMin, newFocalPoint[1] + viewPlaneNormal[1] * newSlicePosFromMin, newFocalPoint[2] + viewPlaneNormal[2] * newSlicePosFromMin];\n  const newPosition = [newFocalPoint[0] + posDiffFromFocalPoint[0], newFocalPoint[1] + posDiffFromFocalPoint[1], newFocalPoint[2] + posDiffFromFocalPoint[2]];\n  return {\n    newFocalPoint,\n    newPosition\n  };\n}","map":{"version":3,"names":["vec3","snapFocalPointToSlice","focalPoint","position","sliceRange","viewPlaneNormal","spacingInNormalDirection","deltaFrames","min","max","current","posDiffFromFocalPoint","create","sub","steps","Math","round","fraction","floatingStepNumber","frameIndex","newFocalPoint","newSlicePosFromMin","newPosition"],"sources":["../../../src/utilities/snapFocalPointToSlice.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,IAAI,QAAQ,WAAW;AAkBhC,eAAc,SAAUC,qBAAqBA,CAC3CC,UAAkB,EAClBC,QAAgB,EAChBC,UAA2B,EAC3BC,eAAuB,EACvBC,wBAAgC,EAChCC,WAAmB;EAEnB,MAAM;IAAEC,GAAG;IAAEC,GAAG;IAAEC;EAAO,CAAE,GAAGN,UAAU;EAGxC,MAAMO,qBAAqB,GAAGX,IAAI,CAACY,MAAM,EAAE;EAE3CZ,IAAI,CAACa,GAAG,CAACF,qBAAqB,EAAQR,QAAQ,EAAQD,UAAU,CAAC;EAGjE,MAAMY,KAAK,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACP,GAAG,GAAGD,GAAG,IAAIF,wBAAwB,CAAC;EAGhE,MAAMW,QAAQ,GAAG,CAACP,OAAO,GAAGF,GAAG,KAAKC,GAAG,GAAGD,GAAG,CAAC;EAC9C,MAAMU,kBAAkB,GAAGD,QAAQ,GAAGH,KAAK;EAC3C,IAAIK,UAAU,GAAGJ,IAAI,CAACC,KAAK,CAACE,kBAAkB,CAAC;EAG/C,IAAIE,aAAa,GAAW,CAC1BlB,UAAU,CAAC,CAAC,CAAC,GACXG,eAAe,CAAC,CAAC,CAAC,GAAGa,kBAAkB,GAAGZ,wBAAwB,EACpEJ,UAAU,CAAC,CAAC,CAAC,GACXG,eAAe,CAAC,CAAC,CAAC,GAAGa,kBAAkB,GAAGZ,wBAAwB,EACpEJ,UAAU,CAAC,CAAC,CAAC,GACXG,eAAe,CAAC,CAAC,CAAC,GAAGa,kBAAkB,GAAGZ,wBAAwB,CACrE;EAGDa,UAAU,IAAIZ,WAAW;EAGzB,IAAIY,UAAU,GAAGL,KAAK,EAAE;IACtBK,UAAU,GAAGL,KAAK;GACnB,MAAM,IAAIK,UAAU,GAAG,CAAC,EAAE;IACzBA,UAAU,GAAG,CAAC;;EAIhB,MAAME,kBAAkB,GAAGF,UAAU,GAAGb,wBAAwB;EAEhEc,aAAa,GAAW,CACtBA,aAAa,CAAC,CAAC,CAAC,GAAGf,eAAe,CAAC,CAAC,CAAC,GAAGgB,kBAAkB,EAC1DD,aAAa,CAAC,CAAC,CAAC,GAAGf,eAAe,CAAC,CAAC,CAAC,GAAGgB,kBAAkB,EAC1DD,aAAa,CAAC,CAAC,CAAC,GAAGf,eAAe,CAAC,CAAC,CAAC,GAAGgB,kBAAkB,CAC3D;EAED,MAAMC,WAAW,GAAW,CAC1BF,aAAa,CAAC,CAAC,CAAC,GAAGT,qBAAqB,CAAC,CAAC,CAAC,EAC3CS,aAAa,CAAC,CAAC,CAAC,GAAGT,qBAAqB,CAAC,CAAC,CAAC,EAC3CS,aAAa,CAAC,CAAC,CAAC,GAAGT,qBAAqB,CAAC,CAAC,CAAC,CAC5C;EAED,OAAO;IAAES,aAAa;IAAEE;EAAW,CAAE;AACvC"},"metadata":{},"sourceType":"module","externalDependencies":[]}