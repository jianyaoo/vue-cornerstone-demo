{"ast":null,"code":"import { getToolGroup } from '../../store/ToolGroupManager';\nimport triggerAnnotationRenderForViewportIds from '../triggerAnnotationRenderForViewportIds';\nimport { getRenderingEngine } from '@cornerstonejs/core';\nimport getBrushToolInstances from './utilities';\nexport function setBrushSizeForToolGroup(toolGroupId, brushSize, toolName) {\n  const toolGroup = getToolGroup(toolGroupId);\n  if (toolGroup === undefined) {\n    return;\n  }\n  const brushBasedToolInstances = getBrushToolInstances(toolGroupId, toolName);\n  brushBasedToolInstances.forEach(tool => {\n    tool.configuration.brushSize = brushSize;\n    tool.invalidateBrushCursor();\n  });\n  const viewportsInfo = toolGroup.getViewportsInfo();\n  const viewportsInfoArray = Object.keys(viewportsInfo).map(key => viewportsInfo[key]);\n  if (!viewportsInfoArray.length) {\n    return;\n  }\n  const {\n    renderingEngineId\n  } = viewportsInfoArray[0];\n  const viewportIds = toolGroup.getViewportIds();\n  const renderingEngine = getRenderingEngine(renderingEngineId);\n  triggerAnnotationRenderForViewportIds(renderingEngine, viewportIds);\n}\nexport function getBrushSizeForToolGroup(toolGroupId, toolName) {\n  const toolGroup = getToolGroup(toolGroupId);\n  if (toolGroup === undefined) {\n    return;\n  }\n  const toolInstances = toolGroup._toolInstances;\n  if (!Object.keys(toolInstances).length) {\n    return;\n  }\n  const brushBasedToolInstances = getBrushToolInstances(toolGroupId, toolName);\n  const brushToolInstance = brushBasedToolInstances[0];\n  if (!brushToolInstance) {\n    return;\n  }\n  return brushToolInstance.configuration.brushSize;\n}","map":{"version":3,"names":["getToolGroup","triggerAnnotationRenderForViewportIds","getRenderingEngine","getBrushToolInstances","setBrushSizeForToolGroup","toolGroupId","brushSize","toolName","toolGroup","undefined","brushBasedToolInstances","forEach","tool","configuration","invalidateBrushCursor","viewportsInfo","getViewportsInfo","viewportsInfoArray","Object","keys","map","key","length","renderingEngineId","viewportIds","getViewportIds","renderingEngine","getBrushSizeForToolGroup","toolInstances","_toolInstances","brushToolInstance"],"sources":["../../../../src/utilities/segmentation/brushSizeForToolGroup.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,YAAY,QAAQ,8BAA8B;AAE3D,OAAOC,qCAAqC,MAAM,0CAA0C;AAC5F,SAASC,kBAAkB,QAAQ,qBAAqB;AACxD,OAAOC,qBAAqB,MAAM,aAAa;AAS/C,OAAM,SAAUC,wBAAwBA,CACtCC,WAAmB,EACnBC,SAAiB,EACjBC,QAAiB;EAEjB,MAAMC,SAAS,GAAGR,YAAY,CAACK,WAAW,CAAC;EAE3C,IAAIG,SAAS,KAAKC,SAAS,EAAE;IAC3B;;EAGF,MAAMC,uBAAuB,GAAGP,qBAAqB,CAACE,WAAW,EAAEE,QAAQ,CAAC;EAE5EG,uBAAuB,CAACC,OAAO,CAAEC,IAAe,IAAI;IAClDA,IAAI,CAACC,aAAa,CAACP,SAAS,GAAGA,SAAS;IAGxCM,IAAI,CAACE,qBAAqB,EAAE;EAC9B,CAAC,CAAC;EAGF,MAAMC,aAAa,GAAGP,SAAS,CAACQ,gBAAgB,EAAE;EAElD,MAAMC,kBAAkB,GAAGC,MAAM,CAACC,IAAI,CAACJ,aAAa,CAAC,CAACK,GAAG,CACtDC,GAAG,IAAKN,aAAa,CAACM,GAAG,CAAC,CAC5B;EAED,IAAI,CAACJ,kBAAkB,CAACK,MAAM,EAAE;IAC9B;;EAGF,MAAM;IAAEC;EAAiB,CAAE,GAAGN,kBAAkB,CAAC,CAAC,CAAC;EAInD,MAAMO,WAAW,GAAGhB,SAAS,CAACiB,cAAc,EAAE;EAE9C,MAAMC,eAAe,GAAGxB,kBAAkB,CAACqB,iBAAiB,CAAC;EAE7DtB,qCAAqC,CAACyB,eAAe,EAAEF,WAAW,CAAC;AACrE;AASA,OAAM,SAAUG,wBAAwBA,CACtCtB,WAAmB,EACnBE,QAAiB;EAEjB,MAAMC,SAAS,GAAGR,YAAY,CAACK,WAAW,CAAC;EAE3C,IAAIG,SAAS,KAAKC,SAAS,EAAE;IAC3B;;EAGF,MAAMmB,aAAa,GAAGpB,SAAS,CAACqB,cAAc;EAE9C,IAAI,CAACX,MAAM,CAACC,IAAI,CAACS,aAAa,CAAC,CAACN,MAAM,EAAE;IACtC;;EAGF,MAAMZ,uBAAuB,GAAGP,qBAAqB,CAACE,WAAW,EAAEE,QAAQ,CAAC;EAG5E,MAAMuB,iBAAiB,GAAGpB,uBAAuB,CAAC,CAAC,CAAC;EAEpD,IAAI,CAACoB,iBAAiB,EAAE;IACtB;;EAIF,OAAOA,iBAAiB,CAACjB,aAAa,CAACP,SAAS;AAClD"},"metadata":{},"sourceType":"module","externalDependencies":[]}