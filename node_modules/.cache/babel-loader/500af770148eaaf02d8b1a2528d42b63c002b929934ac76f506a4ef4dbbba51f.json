{"ast":null,"code":"import { vec3 } from 'gl-matrix';\nimport vtkMath from '@kitware/vtk.js/Common/Core/Math';\nimport { getEnabledElement } from '@cornerstonejs/core';\nimport { BaseTool } from './base';\nclass ZoomTool extends BaseTool {\n  constructor(toolProps = {}, defaultToolProps = {\n    supportedInteractionTypes: ['Mouse', 'Touch'],\n    configuration: {\n      zoomToCenter: false,\n      minZoomScale: 0.1,\n      maxZoomScale: 30,\n      pinchToZoom: true,\n      pan: true,\n      invert: false\n    }\n  }) {\n    super(toolProps, defaultToolProps);\n    this.preMouseDownCallback = evt => {\n      const eventData = evt.detail;\n      const {\n        element,\n        currentPoints\n      } = eventData;\n      const worldPos = currentPoints.world;\n      const enabledElement = getEnabledElement(element);\n      const camera = enabledElement.viewport.getCamera();\n      const {\n        focalPoint\n      } = camera;\n      this.initialMousePosWorld = worldPos;\n      let dirVec = vec3.fromValues(focalPoint[0] - worldPos[0], focalPoint[1] - worldPos[1], focalPoint[2] - worldPos[2]);\n      dirVec = vec3.normalize(vec3.create(), dirVec);\n      this.dirVec = dirVec;\n      return false;\n    };\n    this.preTouchStartCallback = evt => {\n      if (!this.configuration.pinchToZoom) {\n        return this.preMouseDownCallback(evt);\n      }\n    };\n    this._dragParallelProjection = (evt, viewport, camera, pinch = false) => {\n      const {\n        element,\n        deltaPoints\n      } = evt.detail;\n      const deltaY = pinch ? evt.detail.deltaDistance.canvas : deltaPoints.canvas[1];\n      const size = [element.clientWidth, element.clientHeight];\n      const {\n        parallelScale,\n        focalPoint,\n        position\n      } = camera;\n      const zoomScale = 5 / size[1];\n      const k = deltaY * zoomScale * (this.configuration.invert ? -1 : 1);\n      const parallelScaleToSet = (1.0 - k) * parallelScale;\n      let focalPointToSet = focalPoint;\n      let positionToSet = position;\n      if (!this.configuration.zoomToCenter) {\n        const distanceToCanvasCenter = vec3.distance(focalPoint, this.initialMousePosWorld);\n        positionToSet = vec3.scaleAndAdd(vec3.create(), position, this.dirVec, -distanceToCanvasCenter * k);\n        focalPointToSet = vec3.scaleAndAdd(vec3.create(), focalPoint, this.dirVec, -distanceToCanvasCenter * k);\n      }\n      const imageData = viewport.getImageData();\n      let spacing = [1, 1, 1];\n      if (imageData) {\n        spacing = imageData.spacing;\n      }\n      const {\n        minZoomScale,\n        maxZoomScale\n      } = this.configuration;\n      const t = element.clientHeight * spacing[1] * 0.5;\n      const scale = t / parallelScaleToSet;\n      let cappedParallelScale = parallelScaleToSet;\n      let thresholdExceeded = false;\n      if (imageData) {\n        if (scale < minZoomScale) {\n          cappedParallelScale = t / minZoomScale;\n          thresholdExceeded = true;\n        } else if (scale >= maxZoomScale) {\n          cappedParallelScale = t / maxZoomScale;\n          thresholdExceeded = true;\n        }\n      }\n      viewport.setCamera({\n        parallelScale: cappedParallelScale,\n        focalPoint: thresholdExceeded ? focalPoint : focalPointToSet,\n        position: thresholdExceeded ? position : positionToSet\n      });\n    };\n    this._dragPerspectiveProjection = (evt, viewport, camera, pinch = false) => {\n      const {\n        element,\n        deltaPoints\n      } = evt.detail;\n      const deltaY = pinch ? evt.detail.deltaDistance.canvas : deltaPoints.canvas[1];\n      const size = [element.clientWidth, element.clientHeight];\n      const {\n        position,\n        focalPoint,\n        viewPlaneNormal\n      } = camera;\n      const distance = vtkMath.distance2BetweenPoints(position, focalPoint);\n      const zoomScale = Math.sqrt(distance) / size[1];\n      const directionOfProjection = [-viewPlaneNormal[0], -viewPlaneNormal[1], -viewPlaneNormal[2]];\n      const k = this.configuration.invert ? deltaY / zoomScale : deltaY * zoomScale;\n      let tmp = k * directionOfProjection[0];\n      position[0] += tmp;\n      focalPoint[0] += tmp;\n      tmp = k * directionOfProjection[1];\n      position[1] += tmp;\n      focalPoint[1] += tmp;\n      tmp = k * directionOfProjection[2];\n      position[2] += tmp;\n      focalPoint[2] += tmp;\n      viewport.setCamera({\n        position,\n        focalPoint\n      });\n    };\n    this.initialMousePosWorld = [0, 0, 0];\n    this.dirVec = [0, 0, 0];\n    if (this.configuration.pinchToZoom) {\n      this.touchDragCallback = this._pinchCallback.bind(this);\n    } else {\n      this.touchDragCallback = this._dragCallback.bind(this);\n    }\n    this.mouseDragCallback = this._dragCallback.bind(this);\n  }\n  _pinchCallback(evt) {\n    const pointsList = evt.detail.currentPointsList;\n    if (pointsList.length > 1) {\n      const {\n        element,\n        currentPoints\n      } = evt.detail;\n      const enabledElement = getEnabledElement(element);\n      const {\n        viewport\n      } = enabledElement;\n      const camera = viewport.getCamera();\n      const worldPos = currentPoints.world;\n      const {\n        focalPoint\n      } = camera;\n      this.initialMousePosWorld = worldPos;\n      let dirVec = vec3.fromValues(focalPoint[0] - worldPos[0], focalPoint[1] - worldPos[1], focalPoint[2] - worldPos[2]);\n      dirVec = vec3.normalize(vec3.create(), dirVec);\n      this.dirVec = dirVec;\n      if (camera.parallelProjection) {\n        this._dragParallelProjection(evt, viewport, camera, true);\n      } else {\n        this._dragPerspectiveProjection(evt, viewport, camera, true);\n      }\n      viewport.render();\n    }\n    if (this.configuration.pan) {\n      this._panCallback(evt);\n    }\n  }\n  _dragCallback(evt) {\n    const {\n      element\n    } = evt.detail;\n    const enabledElement = getEnabledElement(element);\n    const {\n      viewport\n    } = enabledElement;\n    const camera = viewport.getCamera();\n    if (camera.parallelProjection) {\n      this._dragParallelProjection(evt, viewport, camera);\n    } else {\n      this._dragPerspectiveProjection(evt, viewport, camera);\n    }\n    viewport.render();\n  }\n  _panCallback(evt) {\n    const {\n      element,\n      deltaPoints\n    } = evt.detail;\n    const enabledElement = getEnabledElement(element);\n    const deltaPointsWorld = deltaPoints.world;\n    const camera = enabledElement.viewport.getCamera();\n    const {\n      focalPoint,\n      position\n    } = camera;\n    const updatedPosition = [position[0] - deltaPointsWorld[0], position[1] - deltaPointsWorld[1], position[2] - deltaPointsWorld[2]];\n    const updatedFocalPoint = [focalPoint[0] - deltaPointsWorld[0], focalPoint[1] - deltaPointsWorld[1], focalPoint[2] - deltaPointsWorld[2]];\n    enabledElement.viewport.setCamera({\n      focalPoint: updatedFocalPoint,\n      position: updatedPosition\n    });\n    enabledElement.viewport.render();\n  }\n}\nZoomTool.toolName = 'Zoom';\nexport default ZoomTool;","map":{"version":3,"names":["vec3","vtkMath","getEnabledElement","BaseTool","ZoomTool","constructor","toolProps","defaultToolProps","supportedInteractionTypes","configuration","zoomToCenter","minZoomScale","maxZoomScale","pinchToZoom","pan","invert","preMouseDownCallback","evt","eventData","detail","element","currentPoints","worldPos","world","enabledElement","camera","viewport","getCamera","focalPoint","initialMousePosWorld","dirVec","fromValues","normalize","create","preTouchStartCallback","_dragParallelProjection","pinch","deltaPoints","deltaY","deltaDistance","canvas","size","clientWidth","clientHeight","parallelScale","position","zoomScale","k","parallelScaleToSet","focalPointToSet","positionToSet","distanceToCanvasCenter","distance","scaleAndAdd","imageData","getImageData","spacing","t","scale","cappedParallelScale","thresholdExceeded","setCamera","_dragPerspectiveProjection","viewPlaneNormal","distance2BetweenPoints","Math","sqrt","directionOfProjection","tmp","touchDragCallback","_pinchCallback","bind","_dragCallback","mouseDragCallback","pointsList","currentPointsList","length","parallelProjection","render","_panCallback","deltaPointsWorld","updatedPosition","updatedFocalPoint","toolName"],"sources":["../../../src/tools/ZoomTool.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}