{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { AnnotationTool } from '../base';\nimport { getEnabledElement, VolumeViewport, eventTarget, triggerEvent, utilities as csUtils } from '@cornerstonejs/core';\nimport { getCalibratedLengthUnits, getCalibratedAreaUnits, getCalibratedScale, getCalibratedAspect } from '../../utilities/getCalibratedUnits';\nimport { roundNumber } from '../../utilities';\nimport throttle from '../../utilities/throttle';\nimport { addAnnotation, getAnnotations, removeAnnotation } from '../../stateManagement/annotation/annotationState';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport { drawCircle as drawCircleSvg, drawHandles as drawHandlesSvg, drawLinkedTextBox as drawLinkedTextBoxSvg } from '../../drawingSvg';\nimport { state } from '../../store';\nimport { Events } from '../../enums';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport { getTextBoxCoordsCanvas } from '../../utilities/drawing';\nimport getWorldWidthAndHeightFromTwoPoints from '../../utilities/planar/getWorldWidthAndHeightFromTwoPoints';\nimport { resetElementCursor, hideElementCursor } from '../../cursors/elementCursor';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport { pointInShapeCallback } from '../../utilities';\nimport { getModalityUnit } from '../../utilities/getModalityUnit';\nimport { isViewportPreScaled } from '../../utilities/viewport/isViewportPreScaled';\nimport { getCanvasCircleCorners, getCanvasCircleRadius } from '../../utilities/math/circle';\nimport { pointInEllipse } from '../../utilities/math/ellipse';\nimport { BasicStatsCalculator } from '../../utilities/math/basic';\nconst {\n  transformWorldToIndex\n} = csUtils;\nclass CircleROITool extends AnnotationTool {\n  constructor(toolProps = {}, defaultToolProps = {\n    supportedInteractionTypes: ['Mouse', 'Touch'],\n    configuration: {\n      shadow: true,\n      preventHandleOutsideImage: false,\n      centerPointRadius: 0,\n      getTextLines: defaultGetTextLines,\n      statsCalculator: BasicStatsCalculator\n    }\n  }) {\n    super(toolProps, defaultToolProps);\n    this.isHandleOutsideImage = false;\n    this.addNewAnnotation = evt => {\n      const eventDetail = evt.detail;\n      const {\n        currentPoints,\n        element\n      } = eventDetail;\n      const worldPos = currentPoints.world;\n      const canvasPos = currentPoints.canvas;\n      const enabledElement = getEnabledElement(element);\n      const {\n        viewport,\n        renderingEngine\n      } = enabledElement;\n      this.isDrawing = true;\n      const camera = viewport.getCamera();\n      const {\n        viewPlaneNormal,\n        viewUp\n      } = camera;\n      const referencedImageId = this.getReferencedImageId(viewport, worldPos, viewPlaneNormal, viewUp);\n      const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n      const annotation = {\n        highlighted: true,\n        invalidated: true,\n        metadata: {\n          toolName: this.getToolName(),\n          viewPlaneNormal: [...viewPlaneNormal],\n          viewUp: [...viewUp],\n          FrameOfReferenceUID,\n          referencedImageId\n        },\n        data: {\n          label: '',\n          handles: {\n            textBox: {\n              hasMoved: false,\n              worldPosition: [0, 0, 0],\n              worldBoundingBox: {\n                topLeft: [0, 0, 0],\n                topRight: [0, 0, 0],\n                bottomLeft: [0, 0, 0],\n                bottomRight: [0, 0, 0]\n              }\n            },\n            points: [[...worldPos], [...worldPos]],\n            activeHandleIndex: null\n          },\n          cachedStats: {}\n        }\n      };\n      addAnnotation(annotation, element);\n      const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n      this.editData = {\n        annotation,\n        viewportIdsToRender,\n        newAnnotation: true,\n        hasMoved: false\n      };\n      this._activateDraw(element);\n      hideElementCursor(element);\n      evt.preventDefault();\n      triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n      return annotation;\n    };\n    this.isPointNearTool = (element, annotation, canvasCoords, proximity) => {\n      const enabledElement = getEnabledElement(element);\n      const {\n        viewport\n      } = enabledElement;\n      const {\n        data\n      } = annotation;\n      const {\n        points\n      } = data.handles;\n      const canvasCoordinates = points.map(p => viewport.worldToCanvas(p));\n      const radius = getCanvasCircleRadius(canvasCoordinates);\n      const radiusPoint = getCanvasCircleRadius([canvasCoordinates[0], canvasCoords]);\n      if (Math.abs(radiusPoint - radius) < proximity / 2) {\n        return true;\n      }\n      return false;\n    };\n    this.toolSelectedCallback = (evt, annotation) => {\n      const eventDetail = evt.detail;\n      const {\n        element\n      } = eventDetail;\n      annotation.highlighted = true;\n      const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n      this.editData = {\n        annotation,\n        viewportIdsToRender,\n        movingTextBox: false\n      };\n      hideElementCursor(element);\n      this._activateModify(element);\n      const enabledElement = getEnabledElement(element);\n      const {\n        renderingEngine\n      } = enabledElement;\n      triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n      evt.preventDefault();\n    };\n    this.handleSelectedCallback = (evt, annotation, handle) => {\n      const eventDetail = evt.detail;\n      const {\n        element\n      } = eventDetail;\n      const {\n        data\n      } = annotation;\n      annotation.highlighted = true;\n      let movingTextBox = false;\n      let handleIndex;\n      if (handle.worldPosition) {\n        movingTextBox = true;\n      } else {\n        const {\n          points\n        } = data.handles;\n        handleIndex = points.findIndex(p => p === handle);\n      }\n      const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n      this.editData = {\n        annotation,\n        viewportIdsToRender,\n        handleIndex,\n        movingTextBox\n      };\n      this._activateModify(element);\n      hideElementCursor(element);\n      const enabledElement = getEnabledElement(element);\n      const {\n        renderingEngine\n      } = enabledElement;\n      triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n      evt.preventDefault();\n    };\n    this._endCallback = evt => {\n      const eventDetail = evt.detail;\n      const {\n        element\n      } = eventDetail;\n      const {\n        annotation,\n        viewportIdsToRender,\n        newAnnotation,\n        hasMoved\n      } = this.editData;\n      const {\n        data\n      } = annotation;\n      if (newAnnotation && !hasMoved) {\n        return;\n      }\n      annotation.highlighted = false;\n      data.handles.activeHandleIndex = null;\n      this._deactivateModify(element);\n      this._deactivateDraw(element);\n      resetElementCursor(element);\n      const enabledElement = getEnabledElement(element);\n      const {\n        renderingEngine\n      } = enabledElement;\n      this.editData = null;\n      this.isDrawing = false;\n      if (this.isHandleOutsideImage && this.configuration.preventHandleOutsideImage) {\n        removeAnnotation(annotation.annotationUID);\n      }\n      triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n      if (newAnnotation) {\n        const eventType = Events.ANNOTATION_COMPLETED;\n        const eventDetail = {\n          annotation\n        };\n        triggerEvent(eventTarget, eventType, eventDetail);\n      }\n    };\n    this._dragDrawCallback = evt => {\n      this.isDrawing = true;\n      const eventDetail = evt.detail;\n      const {\n        element\n      } = eventDetail;\n      const {\n        currentPoints\n      } = eventDetail;\n      const currentCanvasPoints = currentPoints.canvas;\n      const enabledElement = getEnabledElement(element);\n      const {\n        renderingEngine,\n        viewport\n      } = enabledElement;\n      const {\n        canvasToWorld\n      } = viewport;\n      const {\n        annotation,\n        viewportIdsToRender\n      } = this.editData;\n      const {\n        data\n      } = annotation;\n      data.handles.points = [data.handles.points[0], canvasToWorld(currentCanvasPoints)];\n      annotation.invalidated = true;\n      this.editData.hasMoved = true;\n      triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n    };\n    this._dragModifyCallback = evt => {\n      this.isDrawing = true;\n      const eventDetail = evt.detail;\n      const {\n        element\n      } = eventDetail;\n      const {\n        annotation,\n        viewportIdsToRender,\n        handleIndex,\n        movingTextBox\n      } = this.editData;\n      const {\n        data\n      } = annotation;\n      if (movingTextBox) {\n        const {\n          deltaPoints\n        } = eventDetail;\n        const worldPosDelta = deltaPoints.world;\n        const {\n          textBox\n        } = data.handles;\n        const {\n          worldPosition\n        } = textBox;\n        worldPosition[0] += worldPosDelta[0];\n        worldPosition[1] += worldPosDelta[1];\n        worldPosition[2] += worldPosDelta[2];\n        textBox.hasMoved = true;\n      } else if (handleIndex === undefined) {\n        const {\n          deltaPoints\n        } = eventDetail;\n        const worldPosDelta = deltaPoints.world;\n        const points = data.handles.points;\n        points.forEach(point => {\n          point[0] += worldPosDelta[0];\n          point[1] += worldPosDelta[1];\n          point[2] += worldPosDelta[2];\n        });\n        annotation.invalidated = true;\n      } else {\n        this._dragHandle(evt);\n        annotation.invalidated = true;\n      }\n      const enabledElement = getEnabledElement(element);\n      const {\n        renderingEngine\n      } = enabledElement;\n      triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n    };\n    this._dragHandle = evt => {\n      const eventDetail = evt.detail;\n      const {\n        element\n      } = eventDetail;\n      const enabledElement = getEnabledElement(element);\n      const {\n        canvasToWorld,\n        worldToCanvas\n      } = enabledElement.viewport;\n      const {\n        annotation,\n        handleIndex\n      } = this.editData;\n      const {\n        data\n      } = annotation;\n      const {\n        points\n      } = data.handles;\n      const canvasCoordinates = points.map(p => worldToCanvas(p));\n      const {\n        currentPoints\n      } = eventDetail;\n      const currentCanvasPoints = currentPoints.canvas;\n      if (handleIndex === 0) {\n        const dXCanvas = currentCanvasPoints[0] - canvasCoordinates[0][0];\n        const dYCanvas = currentCanvasPoints[1] - canvasCoordinates[0][1];\n        const canvasCenter = currentCanvasPoints;\n        const canvasEnd = [canvasCoordinates[1][0] + dXCanvas, canvasCoordinates[1][1] + dYCanvas];\n        points[0] = canvasToWorld(canvasCenter);\n        points[1] = canvasToWorld(canvasEnd);\n      } else {\n        points[1] = canvasToWorld(currentCanvasPoints);\n      }\n    };\n    this.cancel = element => {\n      if (this.isDrawing) {\n        this.isDrawing = false;\n        this._deactivateDraw(element);\n        this._deactivateModify(element);\n        resetElementCursor(element);\n        const {\n          annotation,\n          viewportIdsToRender,\n          newAnnotation\n        } = this.editData;\n        const {\n          data\n        } = annotation;\n        annotation.highlighted = false;\n        data.handles.activeHandleIndex = null;\n        const enabledElement = getEnabledElement(element);\n        const {\n          renderingEngine\n        } = enabledElement;\n        triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n        if (newAnnotation) {\n          const eventType = Events.ANNOTATION_COMPLETED;\n          const eventDetail = {\n            annotation\n          };\n          triggerEvent(eventTarget, eventType, eventDetail);\n        }\n        this.editData = null;\n        return annotation.annotationUID;\n      }\n    };\n    this._activateModify = element => {\n      state.isInteractingWithTool = true;\n      element.addEventListener(Events.MOUSE_UP, this._endCallback);\n      element.addEventListener(Events.MOUSE_DRAG, this._dragModifyCallback);\n      element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n      element.addEventListener(Events.TOUCH_END, this._endCallback);\n      element.addEventListener(Events.TOUCH_DRAG, this._dragModifyCallback);\n      element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n    };\n    this._deactivateModify = element => {\n      state.isInteractingWithTool = false;\n      element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n      element.removeEventListener(Events.MOUSE_DRAG, this._dragModifyCallback);\n      element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n      element.removeEventListener(Events.TOUCH_END, this._endCallback);\n      element.removeEventListener(Events.TOUCH_DRAG, this._dragModifyCallback);\n      element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n    };\n    this._activateDraw = element => {\n      state.isInteractingWithTool = true;\n      element.addEventListener(Events.MOUSE_UP, this._endCallback);\n      element.addEventListener(Events.MOUSE_DRAG, this._dragDrawCallback);\n      element.addEventListener(Events.MOUSE_MOVE, this._dragDrawCallback);\n      element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n      element.addEventListener(Events.TOUCH_END, this._endCallback);\n      element.addEventListener(Events.TOUCH_DRAG, this._dragDrawCallback);\n      element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n    };\n    this._deactivateDraw = element => {\n      state.isInteractingWithTool = false;\n      element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n      element.removeEventListener(Events.MOUSE_DRAG, this._dragDrawCallback);\n      element.removeEventListener(Events.MOUSE_MOVE, this._dragDrawCallback);\n      element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n      element.removeEventListener(Events.TOUCH_END, this._endCallback);\n      element.removeEventListener(Events.TOUCH_DRAG, this._dragDrawCallback);\n      element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n    };\n    this.renderAnnotation = (enabledElement, svgDrawingHelper) => {\n      let renderStatus = false;\n      const {\n        viewport\n      } = enabledElement;\n      const {\n        element\n      } = viewport;\n      let annotations = getAnnotations(this.getToolName(), element);\n      if (!annotations?.length) {\n        return renderStatus;\n      }\n      annotations = this.filterInteractableAnnotationsForElement(element, annotations);\n      if (!annotations?.length) {\n        return renderStatus;\n      }\n      const targetId = this.getTargetId(viewport);\n      const renderingEngine = viewport.getRenderingEngine();\n      const styleSpecifier = {\n        toolGroupId: this.toolGroupId,\n        toolName: this.getToolName(),\n        viewportId: enabledElement.viewport.id\n      };\n      for (let i = 0; i < annotations.length; i++) {\n        const annotation = annotations[i];\n        const {\n          annotationUID,\n          data\n        } = annotation;\n        const {\n          handles\n        } = data;\n        const {\n          points,\n          activeHandleIndex\n        } = handles;\n        styleSpecifier.annotationUID = annotationUID;\n        const {\n          color,\n          lineWidth,\n          lineDash\n        } = this.getAnnotationStyle({\n          annotation,\n          styleSpecifier\n        });\n        const canvasCoordinates = points.map(p => viewport.worldToCanvas(p));\n        const center = canvasCoordinates[0];\n        const radius = getCanvasCircleRadius(canvasCoordinates);\n        const canvasCorners = getCanvasCircleCorners(canvasCoordinates);\n        const {\n          centerPointRadius\n        } = this.configuration;\n        if (!data.cachedStats[targetId] || data.cachedStats[targetId].areaUnit == null) {\n          data.cachedStats[targetId] = {\n            Modality: null,\n            area: null,\n            max: null,\n            mean: null,\n            stdDev: null,\n            areaUnit: null,\n            radius: null,\n            radiusUnit: null,\n            perimeter: null\n          };\n          this._calculateCachedStats(annotation, viewport, renderingEngine, enabledElement);\n        } else if (annotation.invalidated) {\n          this._throttledCalculateCachedStats(annotation, viewport, renderingEngine, enabledElement);\n          if (viewport instanceof VolumeViewport) {\n            const {\n              referencedImageId\n            } = annotation.metadata;\n            for (const targetId in data.cachedStats) {\n              if (targetId.startsWith('imageId')) {\n                const viewports = renderingEngine.getStackViewports();\n                const invalidatedStack = viewports.find(vp => {\n                  const referencedImageURI = csUtils.imageIdToURI(referencedImageId);\n                  const hasImageURI = vp.hasImageURI(referencedImageURI);\n                  const currentImageURI = csUtils.imageIdToURI(vp.getCurrentImageId());\n                  return hasImageURI && currentImageURI !== referencedImageURI;\n                });\n                if (invalidatedStack) {\n                  delete data.cachedStats[targetId];\n                }\n              }\n            }\n          }\n        }\n        if (!viewport.getRenderingEngine()) {\n          console.warn('Rendering Engine has been destroyed');\n          return renderStatus;\n        }\n        let activeHandleCanvasCoords;\n        if (!isAnnotationVisible(annotationUID)) {\n          continue;\n        }\n        if (!isAnnotationLocked(annotation) && !this.editData && activeHandleIndex !== null) {\n          activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n        }\n        if (activeHandleCanvasCoords) {\n          const handleGroupUID = '0';\n          drawHandlesSvg(svgDrawingHelper, annotationUID, handleGroupUID, activeHandleCanvasCoords, {\n            color\n          });\n        }\n        const dataId = `${annotationUID}-circle`;\n        const circleUID = '0';\n        drawCircleSvg(svgDrawingHelper, annotationUID, circleUID, center, radius, {\n          color,\n          lineDash,\n          lineWidth\n        }, dataId);\n        if (centerPointRadius > 0) {\n          if (radius > 3 * centerPointRadius) {\n            drawCircleSvg(svgDrawingHelper, annotationUID, `${circleUID}-center`, center, centerPointRadius, {\n              color,\n              lineDash,\n              lineWidth\n            });\n          }\n        }\n        renderStatus = true;\n        const options = this.getLinkedTextBoxStyle(styleSpecifier, annotation);\n        if (!options.visibility) {\n          data.handles.textBox = {\n            hasMoved: false,\n            worldPosition: [0, 0, 0],\n            worldBoundingBox: {\n              topLeft: [0, 0, 0],\n              topRight: [0, 0, 0],\n              bottomLeft: [0, 0, 0],\n              bottomRight: [0, 0, 0]\n            }\n          };\n          continue;\n        }\n        const textLines = this.configuration.getTextLines(data, targetId);\n        if (!textLines || textLines.length === 0) {\n          continue;\n        }\n        let canvasTextBoxCoords;\n        if (!data.handles.textBox.hasMoved) {\n          canvasTextBoxCoords = getTextBoxCoordsCanvas(canvasCorners);\n          data.handles.textBox.worldPosition = viewport.canvasToWorld(canvasTextBoxCoords);\n        }\n        const textBoxPosition = viewport.worldToCanvas(data.handles.textBox.worldPosition);\n        const textBoxUID = '1';\n        const boundingBox = drawLinkedTextBoxSvg(svgDrawingHelper, annotationUID, textBoxUID, textLines, textBoxPosition, canvasCoordinates, {}, options);\n        const {\n          x: left,\n          y: top,\n          width,\n          height\n        } = boundingBox;\n        data.handles.textBox.worldBoundingBox = {\n          topLeft: viewport.canvasToWorld([left, top]),\n          topRight: viewport.canvasToWorld([left + width, top]),\n          bottomLeft: viewport.canvasToWorld([left, top + height]),\n          bottomRight: viewport.canvasToWorld([left + width, top + height])\n        };\n      }\n      return renderStatus;\n    };\n    this._calculateCachedStats = (annotation, viewport, renderingEngine, enabledElement) => {\n      const data = annotation.data;\n      const {\n        viewportId,\n        renderingEngineId\n      } = enabledElement;\n      const {\n        points\n      } = data.handles;\n      const canvasCoordinates = points.map(p => viewport.worldToCanvas(p));\n      const {\n        viewPlaneNormal,\n        viewUp\n      } = viewport.getCamera();\n      const [topLeftCanvas, bottomRightCanvas] = getCanvasCircleCorners(canvasCoordinates);\n      const topLeftWorld = viewport.canvasToWorld(topLeftCanvas);\n      const bottomRightWorld = viewport.canvasToWorld(bottomRightCanvas);\n      const {\n        cachedStats\n      } = data;\n      const targetIds = Object.keys(cachedStats);\n      const worldPos1 = topLeftWorld;\n      const worldPos2 = bottomRightWorld;\n      for (let i = 0; i < targetIds.length; i++) {\n        const targetId = targetIds[i];\n        const image = this.getTargetIdImage(targetId, renderingEngine);\n        if (!image) {\n          continue;\n        }\n        const {\n          dimensions,\n          imageData,\n          metadata,\n          hasPixelSpacing\n        } = image;\n        const worldPos1Index = transformWorldToIndex(imageData, worldPos1);\n        worldPos1Index[0] = Math.floor(worldPos1Index[0]);\n        worldPos1Index[1] = Math.floor(worldPos1Index[1]);\n        worldPos1Index[2] = Math.floor(worldPos1Index[2]);\n        const worldPos2Index = transformWorldToIndex(imageData, worldPos2);\n        worldPos2Index[0] = Math.floor(worldPos2Index[0]);\n        worldPos2Index[1] = Math.floor(worldPos2Index[1]);\n        worldPos2Index[2] = Math.floor(worldPos2Index[2]);\n        if (this._isInsideVolume(worldPos1Index, worldPos2Index, dimensions)) {\n          const iMin = Math.min(worldPos1Index[0], worldPos2Index[0]);\n          const iMax = Math.max(worldPos1Index[0], worldPos2Index[0]);\n          const jMin = Math.min(worldPos1Index[1], worldPos2Index[1]);\n          const jMax = Math.max(worldPos1Index[1], worldPos2Index[1]);\n          const kMin = Math.min(worldPos1Index[2], worldPos2Index[2]);\n          const kMax = Math.max(worldPos1Index[2], worldPos2Index[2]);\n          const boundsIJK = [[iMin, iMax], [jMin, jMax], [kMin, kMax]];\n          const center = [(topLeftWorld[0] + bottomRightWorld[0]) / 2, (topLeftWorld[1] + bottomRightWorld[1]) / 2, (topLeftWorld[2] + bottomRightWorld[2]) / 2];\n          const ellipseObj = {\n            center,\n            xRadius: Math.abs(topLeftWorld[0] - bottomRightWorld[0]) / 2,\n            yRadius: Math.abs(topLeftWorld[1] - bottomRightWorld[1]) / 2,\n            zRadius: Math.abs(topLeftWorld[2] - bottomRightWorld[2]) / 2\n          };\n          const {\n            worldWidth,\n            worldHeight\n          } = getWorldWidthAndHeightFromTwoPoints(viewPlaneNormal, viewUp, worldPos1, worldPos2);\n          const isEmptyArea = worldWidth === 0 && worldHeight === 0;\n          const scale = getCalibratedScale(image);\n          const aspect = getCalibratedAspect(image);\n          const area = Math.abs(Math.PI * (worldWidth / scale / 2) * (worldHeight / aspect / scale / 2));\n          const modalityUnitOptions = {\n            isPreScaled: isViewportPreScaled(viewport, targetId),\n            isSuvScaled: this.isSuvScaled(viewport, targetId, annotation.metadata.referencedImageId)\n          };\n          const modalityUnit = getModalityUnit(metadata.Modality, annotation.metadata.referencedImageId, modalityUnitOptions);\n          const pointsInShape = pointInShapeCallback(imageData, pointLPS => pointInEllipse(ellipseObj, pointLPS, {\n            fast: true\n          }), this.configuration.statsCalculator.statsCallback, boundsIJK);\n          const stats = this.configuration.statsCalculator.getStatistics();\n          cachedStats[targetId] = {\n            Modality: metadata.Modality,\n            area,\n            mean: stats[1]?.value,\n            max: stats[0]?.value,\n            stdDev: stats[2]?.value,\n            statsArray: stats,\n            pointsInShape: pointsInShape,\n            isEmptyArea,\n            areaUnit: getCalibratedAreaUnits(null, image),\n            radius: worldWidth / 2 / scale,\n            radiusUnit: getCalibratedLengthUnits(null, image),\n            perimeter: 2 * Math.PI * (worldWidth / 2) / scale,\n            modalityUnit\n          };\n        } else {\n          this.isHandleOutsideImage = true;\n          cachedStats[targetId] = {\n            Modality: metadata.Modality\n          };\n        }\n      }\n      annotation.invalidated = false;\n      const eventType = Events.ANNOTATION_MODIFIED;\n      const eventDetail = {\n        annotation,\n        viewportId,\n        renderingEngineId\n      };\n      triggerEvent(eventTarget, eventType, eventDetail);\n      return cachedStats;\n    };\n    this._isInsideVolume = (index1, index2, dimensions) => {\n      return csUtils.indexWithinDimensions(index1, dimensions) && csUtils.indexWithinDimensions(index2, dimensions);\n    };\n    this._throttledCalculateCachedStats = throttle(this._calculateCachedStats, 100, {\n      trailing: true\n    });\n  }\n}\nfunction defaultGetTextLines(data, targetId) {\n  const cachedVolumeStats = data.cachedStats[targetId];\n  const {\n    radius,\n    radiusUnit,\n    area,\n    mean,\n    stdDev,\n    max,\n    isEmptyArea,\n    Modality,\n    areaUnit,\n    modalityUnit\n  } = cachedVolumeStats;\n  const textLines = [];\n  if (radius) {\n    const radiusLine = isEmptyArea ? `Radius: Oblique not supported` : `Radius: ${roundNumber(radius)} ${radiusUnit}`;\n    textLines.push(radiusLine);\n  }\n  if (area) {\n    const areaLine = isEmptyArea ? `Area: Oblique not supported` : `Area: ${roundNumber(area)} ${areaUnit}`;\n    textLines.push(areaLine);\n  }\n  if (mean) {\n    textLines.push(`Mean: ${roundNumber(mean)} ${modalityUnit}`);\n  }\n  if (max) {\n    textLines.push(`Max: ${roundNumber(max)} ${modalityUnit}`);\n  }\n  if (stdDev) {\n    textLines.push(`Std Dev: ${roundNumber(stdDev)} ${modalityUnit}`);\n  }\n  return textLines;\n}\nCircleROITool.toolName = 'CircleROI';\nexport default CircleROITool;","map":{"version":3,"names":["AnnotationTool","getEnabledElement","VolumeViewport","eventTarget","triggerEvent","utilities","csUtils","getCalibratedLengthUnits","getCalibratedAreaUnits","getCalibratedScale","getCalibratedAspect","roundNumber","throttle","addAnnotation","getAnnotations","removeAnnotation","isAnnotationLocked","isAnnotationVisible","drawCircle","drawCircleSvg","drawHandles","drawHandlesSvg","drawLinkedTextBox","drawLinkedTextBoxSvg","state","Events","getViewportIdsWithToolToRender","getTextBoxCoordsCanvas","getWorldWidthAndHeightFromTwoPoints","resetElementCursor","hideElementCursor","triggerAnnotationRenderForViewportIds","pointInShapeCallback","getModalityUnit","isViewportPreScaled","getCanvasCircleCorners","getCanvasCircleRadius","pointInEllipse","BasicStatsCalculator","transformWorldToIndex","CircleROITool","constructor","toolProps","defaultToolProps","supportedInteractionTypes","configuration","shadow","preventHandleOutsideImage","centerPointRadius","getTextLines","defaultGetTextLines","statsCalculator","isHandleOutsideImage","addNewAnnotation","evt","eventDetail","detail","currentPoints","element","worldPos","world","canvasPos","canvas","enabledElement","viewport","renderingEngine","isDrawing","camera","getCamera","viewPlaneNormal","viewUp","referencedImageId","getReferencedImageId","FrameOfReferenceUID","getFrameOfReferenceUID","annotation","highlighted","invalidated","metadata","toolName","getToolName","data","label","handles","textBox","hasMoved","worldPosition","worldBoundingBox","topLeft","topRight","bottomLeft","bottomRight","points","activeHandleIndex","cachedStats","viewportIdsToRender","editData","newAnnotation","_activateDraw","preventDefault","isPointNearTool","canvasCoords","proximity","canvasCoordinates","map","p","worldToCanvas","radius","radiusPoint","Math","abs","toolSelectedCallback","movingTextBox","_activateModify","handleSelectedCallback","handle","handleIndex","findIndex","_endCallback","_deactivateModify","_deactivateDraw","annotationUID","eventType","ANNOTATION_COMPLETED","_dragDrawCallback","currentCanvasPoints","canvasToWorld","_dragModifyCallback","deltaPoints","worldPosDelta","undefined","forEach","point","_dragHandle","dXCanvas","dYCanvas","canvasCenter","canvasEnd","cancel","isInteractingWithTool","addEventListener","MOUSE_UP","MOUSE_DRAG","MOUSE_CLICK","TOUCH_END","TOUCH_DRAG","TOUCH_TAP","removeEventListener","MOUSE_MOVE","renderAnnotation","svgDrawingHelper","renderStatus","annotations","length","filterInteractableAnnotationsForElement","targetId","getTargetId","getRenderingEngine","styleSpecifier","toolGroupId","viewportId","id","i","color","lineWidth","lineDash","getAnnotationStyle","center","canvasCorners","areaUnit","Modality","area","max","mean","stdDev","radiusUnit","perimeter","_calculateCachedStats","_throttledCalculateCachedStats","startsWith","viewports","getStackViewports","invalidatedStack","find","vp","referencedImageURI","imageIdToURI","hasImageURI","currentImageURI","getCurrentImageId","console","warn","activeHandleCanvasCoords","handleGroupUID","dataId","circleUID","options","getLinkedTextBoxStyle","visibility","textLines","canvasTextBoxCoords","textBoxPosition","textBoxUID","boundingBox","x","left","y","top","width","height","renderingEngineId","topLeftCanvas","bottomRightCanvas","topLeftWorld","bottomRightWorld","targetIds","Object","keys","worldPos1","worldPos2","image","getTargetIdImage","dimensions","imageData","hasPixelSpacing","worldPos1Index","floor","worldPos2Index","_isInsideVolume","iMin","min","iMax","jMin","jMax","kMin","kMax","boundsIJK","ellipseObj","xRadius","yRadius","zRadius","worldWidth","worldHeight","isEmptyArea","scale","aspect","PI","modalityUnitOptions","isPreScaled","isSuvScaled","modalityUnit","pointsInShape","pointLPS","fast","statsCallback","stats","getStatistics","value","statsArray","ANNOTATION_MODIFIED","index1","index2","indexWithinDimensions","trailing","cachedVolumeStats","radiusLine","push","areaLine"],"sources":["../../../../src/tools/annotation/CircleROITool.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}