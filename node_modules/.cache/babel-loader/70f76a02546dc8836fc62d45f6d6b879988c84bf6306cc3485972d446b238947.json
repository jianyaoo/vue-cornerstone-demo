{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { AnnotationTool } from '../base';\nimport { getEnabledElement, VolumeViewport, eventTarget, triggerEvent, utilities as csUtils } from '@cornerstonejs/core';\nimport { getCalibratedAreaUnits, getCalibratedScale } from '../../utilities/getCalibratedUnits';\nimport { roundNumber } from '../../utilities';\nimport throttle from '../../utilities/throttle';\nimport { addAnnotation, getAnnotations, removeAnnotation } from '../../stateManagement/annotation/annotationState';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport { drawCircle as drawCircleSvg, drawEllipseByCoordinates as drawEllipseSvg, drawHandles as drawHandlesSvg, drawLinkedTextBox as drawLinkedTextBoxSvg } from '../../drawingSvg';\nimport { state } from '../../store';\nimport { Events } from '../../enums';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport { getTextBoxCoordsCanvas } from '../../utilities/drawing';\nimport getWorldWidthAndHeightFromTwoPoints from '../../utilities/planar/getWorldWidthAndHeightFromTwoPoints';\nimport { pointInEllipse, getCanvasEllipseCorners } from '../../utilities/math/ellipse';\nimport { resetElementCursor, hideElementCursor } from '../../cursors/elementCursor';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport { pointInShapeCallback } from '../../utilities/';\nimport { getModalityUnit } from '../../utilities/getModalityUnit';\nimport { isViewportPreScaled } from '../../utilities/viewport/isViewportPreScaled';\nimport { BasicStatsCalculator } from '../../utilities/math/basic';\nconst {\n  transformWorldToIndex\n} = csUtils;\nclass EllipticalROITool extends AnnotationTool {\n  constructor(toolProps = {}, defaultToolProps = {\n    supportedInteractionTypes: ['Mouse', 'Touch'],\n    configuration: {\n      shadow: true,\n      preventHandleOutsideImage: false,\n      centerPointRadius: 0,\n      getTextLines: defaultGetTextLines,\n      statsCalculator: BasicStatsCalculator\n    }\n  }) {\n    super(toolProps, defaultToolProps);\n    this.isHandleOutsideImage = false;\n    this.addNewAnnotation = evt => {\n      const eventDetail = evt.detail;\n      const {\n        currentPoints,\n        element\n      } = eventDetail;\n      const worldPos = currentPoints.world;\n      const canvasPos = currentPoints.canvas;\n      const enabledElement = getEnabledElement(element);\n      const {\n        viewport,\n        renderingEngine\n      } = enabledElement;\n      this.isDrawing = true;\n      const camera = viewport.getCamera();\n      const {\n        viewPlaneNormal,\n        viewUp\n      } = camera;\n      const referencedImageId = this.getReferencedImageId(viewport, worldPos, viewPlaneNormal, viewUp);\n      const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n      const annotation = {\n        highlighted: true,\n        invalidated: true,\n        metadata: {\n          toolName: this.getToolName(),\n          viewPlaneNormal: [...viewPlaneNormal],\n          viewUp: [...viewUp],\n          FrameOfReferenceUID,\n          referencedImageId\n        },\n        data: {\n          label: '',\n          handles: {\n            textBox: {\n              hasMoved: false,\n              worldPosition: [0, 0, 0],\n              worldBoundingBox: {\n                topLeft: [0, 0, 0],\n                topRight: [0, 0, 0],\n                bottomLeft: [0, 0, 0],\n                bottomRight: [0, 0, 0]\n              }\n            },\n            points: [[...worldPos], [...worldPos], [...worldPos], [...worldPos]],\n            activeHandleIndex: null\n          },\n          cachedStats: {},\n          initialRotation: viewport.getRotation()\n        }\n      };\n      addAnnotation(annotation, element);\n      const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n      this.editData = {\n        annotation,\n        viewportIdsToRender,\n        centerWorld: worldPos,\n        newAnnotation: true,\n        hasMoved: false\n      };\n      this._activateDraw(element);\n      hideElementCursor(element);\n      evt.preventDefault();\n      triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n      return annotation;\n    };\n    this.isPointNearTool = (element, annotation, canvasCoords, proximity) => {\n      const enabledElement = getEnabledElement(element);\n      const {\n        viewport\n      } = enabledElement;\n      const {\n        data\n      } = annotation;\n      const {\n        points\n      } = data.handles;\n      const canvasCoordinates = points.map(p => viewport.worldToCanvas(p));\n      const canvasCorners = getCanvasEllipseCorners(canvasCoordinates);\n      const [canvasPoint1, canvasPoint2] = canvasCorners;\n      const minorEllipse = {\n        left: Math.min(canvasPoint1[0], canvasPoint2[0]) + proximity / 2,\n        top: Math.min(canvasPoint1[1], canvasPoint2[1]) + proximity / 2,\n        width: Math.abs(canvasPoint1[0] - canvasPoint2[0]) - proximity,\n        height: Math.abs(canvasPoint1[1] - canvasPoint2[1]) - proximity\n      };\n      const majorEllipse = {\n        left: Math.min(canvasPoint1[0], canvasPoint2[0]) - proximity / 2,\n        top: Math.min(canvasPoint1[1], canvasPoint2[1]) - proximity / 2,\n        width: Math.abs(canvasPoint1[0] - canvasPoint2[0]) + proximity,\n        height: Math.abs(canvasPoint1[1] - canvasPoint2[1]) + proximity\n      };\n      const pointInMinorEllipse = this._pointInEllipseCanvas(minorEllipse, canvasCoords);\n      const pointInMajorEllipse = this._pointInEllipseCanvas(majorEllipse, canvasCoords);\n      if (pointInMajorEllipse && !pointInMinorEllipse) {\n        return true;\n      }\n      return false;\n    };\n    this.toolSelectedCallback = (evt, annotation) => {\n      const eventDetail = evt.detail;\n      const {\n        element\n      } = eventDetail;\n      annotation.highlighted = true;\n      const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n      this.editData = {\n        annotation,\n        viewportIdsToRender,\n        movingTextBox: false\n      };\n      hideElementCursor(element);\n      this._activateModify(element);\n      const enabledElement = getEnabledElement(element);\n      const {\n        renderingEngine\n      } = enabledElement;\n      triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n      evt.preventDefault();\n    };\n    this.handleSelectedCallback = (evt, annotation, handle) => {\n      const eventDetail = evt.detail;\n      const {\n        element\n      } = eventDetail;\n      const {\n        data\n      } = annotation;\n      annotation.highlighted = true;\n      let movingTextBox = false;\n      let handleIndex;\n      let centerCanvas;\n      let centerWorld;\n      let canvasWidth;\n      let canvasHeight;\n      let originalHandleCanvas;\n      if (handle.worldPosition) {\n        movingTextBox = true;\n      } else {\n        const {\n          points\n        } = data.handles;\n        const {\n          viewport\n        } = getEnabledElement(element);\n        const {\n          worldToCanvas,\n          canvasToWorld\n        } = viewport;\n        handleIndex = points.findIndex(p => p === handle);\n        const pointsCanvas = points.map(worldToCanvas);\n        originalHandleCanvas = pointsCanvas[handleIndex];\n        canvasWidth = Math.abs(pointsCanvas[2][0] - pointsCanvas[3][0]);\n        canvasHeight = Math.abs(pointsCanvas[0][1] - pointsCanvas[1][1]);\n        centerCanvas = [(pointsCanvas[2][0] + pointsCanvas[3][0]) / 2, (pointsCanvas[0][1] + pointsCanvas[1][1]) / 2];\n        centerWorld = canvasToWorld(centerCanvas);\n      }\n      const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n      this.editData = {\n        annotation,\n        viewportIdsToRender,\n        handleIndex,\n        canvasWidth,\n        canvasHeight,\n        centerWorld,\n        originalHandleCanvas,\n        movingTextBox\n      };\n      this._activateModify(element);\n      hideElementCursor(element);\n      const enabledElement = getEnabledElement(element);\n      const {\n        renderingEngine\n      } = enabledElement;\n      triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n      evt.preventDefault();\n    };\n    this._endCallback = evt => {\n      const eventDetail = evt.detail;\n      const {\n        element\n      } = eventDetail;\n      const {\n        annotation,\n        viewportIdsToRender,\n        newAnnotation,\n        hasMoved\n      } = this.editData;\n      const {\n        data\n      } = annotation;\n      if (newAnnotation && !hasMoved) {\n        return;\n      }\n      annotation.highlighted = false;\n      data.handles.activeHandleIndex = null;\n      this._deactivateModify(element);\n      this._deactivateDraw(element);\n      resetElementCursor(element);\n      const enabledElement = getEnabledElement(element);\n      const {\n        renderingEngine\n      } = enabledElement;\n      this.editData = null;\n      this.isDrawing = false;\n      if (this.isHandleOutsideImage && this.configuration.preventHandleOutsideImage) {\n        removeAnnotation(annotation.annotationUID);\n      }\n      triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n      if (newAnnotation) {\n        const eventType = Events.ANNOTATION_COMPLETED;\n        const eventDetail = {\n          annotation\n        };\n        triggerEvent(eventTarget, eventType, eventDetail);\n      }\n    };\n    this._dragDrawCallback = evt => {\n      this.isDrawing = true;\n      const eventDetail = evt.detail;\n      const {\n        element\n      } = eventDetail;\n      const {\n        currentPoints\n      } = eventDetail;\n      const currentCanvasPoints = currentPoints.canvas;\n      const enabledElement = getEnabledElement(element);\n      const {\n        renderingEngine,\n        viewport\n      } = enabledElement;\n      const {\n        canvasToWorld\n      } = viewport;\n      const {\n        annotation,\n        viewportIdsToRender,\n        centerWorld\n      } = this.editData;\n      const centerCanvas = viewport.worldToCanvas(centerWorld);\n      const {\n        data\n      } = annotation;\n      const dX = Math.abs(currentCanvasPoints[0] - centerCanvas[0]);\n      const dY = Math.abs(currentCanvasPoints[1] - centerCanvas[1]);\n      const bottomCanvas = [centerCanvas[0], centerCanvas[1] - dY];\n      const topCanvas = [centerCanvas[0], centerCanvas[1] + dY];\n      const leftCanvas = [centerCanvas[0] - dX, centerCanvas[1]];\n      const rightCanvas = [centerCanvas[0] + dX, centerCanvas[1]];\n      data.handles.points = [canvasToWorld(bottomCanvas), canvasToWorld(topCanvas), canvasToWorld(leftCanvas), canvasToWorld(rightCanvas)];\n      annotation.invalidated = true;\n      this.editData.hasMoved = true;\n      triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n    };\n    this._dragModifyCallback = evt => {\n      this.isDrawing = true;\n      const eventDetail = evt.detail;\n      const {\n        element\n      } = eventDetail;\n      const {\n        annotation,\n        viewportIdsToRender,\n        handleIndex,\n        movingTextBox\n      } = this.editData;\n      const {\n        data\n      } = annotation;\n      if (movingTextBox) {\n        const {\n          deltaPoints\n        } = eventDetail;\n        const worldPosDelta = deltaPoints.world;\n        const {\n          textBox\n        } = data.handles;\n        const {\n          worldPosition\n        } = textBox;\n        worldPosition[0] += worldPosDelta[0];\n        worldPosition[1] += worldPosDelta[1];\n        worldPosition[2] += worldPosDelta[2];\n        textBox.hasMoved = true;\n      } else if (handleIndex === undefined) {\n        const {\n          deltaPoints\n        } = eventDetail;\n        const worldPosDelta = deltaPoints.world;\n        const points = data.handles.points;\n        points.forEach(point => {\n          point[0] += worldPosDelta[0];\n          point[1] += worldPosDelta[1];\n          point[2] += worldPosDelta[2];\n        });\n        annotation.invalidated = true;\n      } else {\n        this._dragHandle(evt);\n        annotation.invalidated = true;\n      }\n      const enabledElement = getEnabledElement(element);\n      const {\n        renderingEngine\n      } = enabledElement;\n      triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n    };\n    this._dragHandle = evt => {\n      const eventDetail = evt.detail;\n      const {\n        element\n      } = eventDetail;\n      const {\n        viewport\n      } = getEnabledElement(element);\n      const {\n        canvasToWorld,\n        worldToCanvas\n      } = viewport;\n      const {\n        annotation,\n        canvasWidth,\n        canvasHeight,\n        handleIndex,\n        centerWorld,\n        originalHandleCanvas\n      } = this.editData;\n      const centerCanvas = viewport.worldToCanvas(centerWorld);\n      const {\n        data\n      } = annotation;\n      const {\n        points\n      } = data.handles;\n      const {\n        currentPoints\n      } = eventDetail;\n      const currentCanvasPoints = currentPoints.canvas;\n      if (handleIndex === 0 || handleIndex === 1) {\n        const dYCanvas = Math.abs(currentCanvasPoints[1] - centerCanvas[1]);\n        const canvasBottom = [centerCanvas[0], centerCanvas[1] - dYCanvas];\n        const canvasTop = [centerCanvas[0], centerCanvas[1] + dYCanvas];\n        points[0] = canvasToWorld(canvasBottom);\n        points[1] = canvasToWorld(canvasTop);\n        const dXCanvas = currentCanvasPoints[0] - originalHandleCanvas[0];\n        const newHalfCanvasWidth = canvasWidth / 2 + dXCanvas;\n        const canvasLeft = [centerCanvas[0] - newHalfCanvasWidth, centerCanvas[1]];\n        const canvasRight = [centerCanvas[0] + newHalfCanvasWidth, centerCanvas[1]];\n        points[2] = canvasToWorld(canvasLeft);\n        points[3] = canvasToWorld(canvasRight);\n      } else {\n        const dXCanvas = Math.abs(currentCanvasPoints[0] - centerCanvas[0]);\n        const canvasLeft = [centerCanvas[0] - dXCanvas, centerCanvas[1]];\n        const canvasRight = [centerCanvas[0] + dXCanvas, centerCanvas[1]];\n        points[2] = canvasToWorld(canvasLeft);\n        points[3] = canvasToWorld(canvasRight);\n        const dYCanvas = currentCanvasPoints[1] - originalHandleCanvas[1];\n        const newHalfCanvasHeight = canvasHeight / 2 + dYCanvas;\n        const canvasBottom = [centerCanvas[0], centerCanvas[1] - newHalfCanvasHeight];\n        const canvasTop = [centerCanvas[0], centerCanvas[1] + newHalfCanvasHeight];\n        points[0] = canvasToWorld(canvasBottom);\n        points[1] = canvasToWorld(canvasTop);\n      }\n    };\n    this.cancel = element => {\n      if (this.isDrawing) {\n        this.isDrawing = false;\n        this._deactivateDraw(element);\n        this._deactivateModify(element);\n        resetElementCursor(element);\n        const {\n          annotation,\n          viewportIdsToRender,\n          newAnnotation\n        } = this.editData;\n        const {\n          data\n        } = annotation;\n        annotation.highlighted = false;\n        data.handles.activeHandleIndex = null;\n        const enabledElement = getEnabledElement(element);\n        const {\n          renderingEngine\n        } = enabledElement;\n        triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n        if (newAnnotation) {\n          const eventType = Events.ANNOTATION_COMPLETED;\n          const eventDetail = {\n            annotation\n          };\n          triggerEvent(eventTarget, eventType, eventDetail);\n        }\n        this.editData = null;\n        return annotation.annotationUID;\n      }\n    };\n    this._activateModify = element => {\n      state.isInteractingWithTool = true;\n      element.addEventListener(Events.MOUSE_UP, this._endCallback);\n      element.addEventListener(Events.MOUSE_DRAG, this._dragModifyCallback);\n      element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n      element.addEventListener(Events.TOUCH_END, this._endCallback);\n      element.addEventListener(Events.TOUCH_DRAG, this._dragModifyCallback);\n      element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n    };\n    this._deactivateModify = element => {\n      state.isInteractingWithTool = false;\n      element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n      element.removeEventListener(Events.MOUSE_DRAG, this._dragModifyCallback);\n      element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n      element.removeEventListener(Events.TOUCH_END, this._endCallback);\n      element.removeEventListener(Events.TOUCH_DRAG, this._dragModifyCallback);\n      element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n    };\n    this._activateDraw = element => {\n      state.isInteractingWithTool = true;\n      element.addEventListener(Events.MOUSE_UP, this._endCallback);\n      element.addEventListener(Events.MOUSE_DRAG, this._dragDrawCallback);\n      element.addEventListener(Events.MOUSE_MOVE, this._dragDrawCallback);\n      element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n      element.addEventListener(Events.TOUCH_END, this._endCallback);\n      element.addEventListener(Events.TOUCH_DRAG, this._dragDrawCallback);\n      element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n    };\n    this._deactivateDraw = element => {\n      state.isInteractingWithTool = false;\n      element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n      element.removeEventListener(Events.MOUSE_DRAG, this._dragDrawCallback);\n      element.removeEventListener(Events.MOUSE_MOVE, this._dragDrawCallback);\n      element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n      element.removeEventListener(Events.TOUCH_END, this._endCallback);\n      element.removeEventListener(Events.TOUCH_DRAG, this._dragDrawCallback);\n      element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n    };\n    this.renderAnnotation = (enabledElement, svgDrawingHelper) => {\n      let renderStatus = false;\n      const {\n        viewport\n      } = enabledElement;\n      const {\n        element\n      } = viewport;\n      let annotations = getAnnotations(this.getToolName(), element);\n      if (!annotations?.length) {\n        return renderStatus;\n      }\n      annotations = this.filterInteractableAnnotationsForElement(element, annotations);\n      if (!annotations?.length) {\n        return renderStatus;\n      }\n      const targetId = this.getTargetId(viewport);\n      const renderingEngine = viewport.getRenderingEngine();\n      const styleSpecifier = {\n        toolGroupId: this.toolGroupId,\n        toolName: this.getToolName(),\n        viewportId: enabledElement.viewport.id\n      };\n      for (let i = 0; i < annotations.length; i++) {\n        const annotation = annotations[i];\n        const {\n          annotationUID,\n          data\n        } = annotation;\n        const {\n          handles\n        } = data;\n        const {\n          points,\n          activeHandleIndex\n        } = handles;\n        styleSpecifier.annotationUID = annotationUID;\n        const {\n          color,\n          lineWidth,\n          lineDash\n        } = this.getAnnotationStyle({\n          annotation,\n          styleSpecifier\n        });\n        const canvasCoordinates = points.map(p => viewport.worldToCanvas(p));\n        const rotation = Math.abs(viewport.getRotation() - (data.initialRotation || 0));\n        const canvasCorners = getCanvasEllipseCorners(canvasCoordinates);\n        const {\n          centerPointRadius\n        } = this.configuration;\n        if (!data.cachedStats[targetId] || data.cachedStats[targetId].areaUnit == null) {\n          data.cachedStats[targetId] = {\n            Modality: null,\n            area: null,\n            max: null,\n            mean: null,\n            stdDev: null,\n            areaUnit: null\n          };\n          this._calculateCachedStats(annotation, viewport, renderingEngine, enabledElement);\n        } else if (annotation.invalidated) {\n          this._throttledCalculateCachedStats(annotation, viewport, renderingEngine, enabledElement);\n          if (viewport instanceof VolumeViewport) {\n            const {\n              referencedImageId\n            } = annotation.metadata;\n            for (const targetId in data.cachedStats) {\n              if (targetId.startsWith('imageId')) {\n                const viewports = renderingEngine.getStackViewports();\n                const invalidatedStack = viewports.find(vp => {\n                  const referencedImageURI = csUtils.imageIdToURI(referencedImageId);\n                  const hasImageURI = vp.hasImageURI(referencedImageURI);\n                  const currentImageURI = csUtils.imageIdToURI(vp.getCurrentImageId());\n                  return hasImageURI && currentImageURI !== referencedImageURI;\n                });\n                if (invalidatedStack) {\n                  delete data.cachedStats[targetId];\n                }\n              }\n            }\n          }\n        }\n        if (!viewport.getRenderingEngine()) {\n          console.warn('Rendering Engine has been destroyed');\n          return renderStatus;\n        }\n        let activeHandleCanvasCoords;\n        if (!isAnnotationVisible(annotationUID)) {\n          continue;\n        }\n        if (!isAnnotationLocked(annotation) && !this.editData && activeHandleIndex !== null) {\n          activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n        }\n        if (activeHandleCanvasCoords) {\n          const handleGroupUID = '0';\n          drawHandlesSvg(svgDrawingHelper, annotationUID, handleGroupUID, activeHandleCanvasCoords, {\n            color\n          });\n        }\n        const dataId = `${annotationUID}-ellipse`;\n        const ellipseUID = '0';\n        drawEllipseSvg(svgDrawingHelper, annotationUID, ellipseUID, canvasCoordinates, {\n          color,\n          lineDash,\n          lineWidth\n        }, dataId);\n        if (centerPointRadius > 0) {\n          const minRadius = Math.min(Math.abs(canvasCorners[0][0] - canvasCorners[1][0]) / 2, Math.abs(canvasCorners[0][1] - canvasCorners[1][1]) / 2);\n          if (minRadius > 3 * centerPointRadius) {\n            const centerPoint = this._getCanvasEllipseCenter(canvasCoordinates);\n            drawCircleSvg(svgDrawingHelper, annotationUID, `${ellipseUID}-center`, centerPoint, centerPointRadius, {\n              color,\n              lineDash,\n              lineWidth\n            });\n          }\n        }\n        renderStatus = true;\n        const options = this.getLinkedTextBoxStyle(styleSpecifier, annotation);\n        if (!options.visibility) {\n          data.handles.textBox = {\n            hasMoved: false,\n            worldPosition: [0, 0, 0],\n            worldBoundingBox: {\n              topLeft: [0, 0, 0],\n              topRight: [0, 0, 0],\n              bottomLeft: [0, 0, 0],\n              bottomRight: [0, 0, 0]\n            }\n          };\n          continue;\n        }\n        const textLines = this.configuration.getTextLines(data, targetId);\n        if (!textLines || textLines.length === 0) {\n          continue;\n        }\n        let canvasTextBoxCoords;\n        if (!data.handles.textBox.hasMoved) {\n          canvasTextBoxCoords = getTextBoxCoordsCanvas(canvasCorners);\n          data.handles.textBox.worldPosition = viewport.canvasToWorld(canvasTextBoxCoords);\n        }\n        const textBoxPosition = viewport.worldToCanvas(data.handles.textBox.worldPosition);\n        const textBoxUID = '1';\n        const boundingBox = drawLinkedTextBoxSvg(svgDrawingHelper, annotationUID, textBoxUID, textLines, textBoxPosition, canvasCoordinates, {}, options);\n        const {\n          x: left,\n          y: top,\n          width,\n          height\n        } = boundingBox;\n        data.handles.textBox.worldBoundingBox = {\n          topLeft: viewport.canvasToWorld([left, top]),\n          topRight: viewport.canvasToWorld([left + width, top]),\n          bottomLeft: viewport.canvasToWorld([left, top + height]),\n          bottomRight: viewport.canvasToWorld([left + width, top + height])\n        };\n      }\n      return renderStatus;\n    };\n    this._calculateCachedStats = (annotation, viewport, renderingEngine, enabledElement) => {\n      const data = annotation.data;\n      const {\n        viewportId,\n        renderingEngineId\n      } = enabledElement;\n      const {\n        points\n      } = data.handles;\n      const canvasCoordinates = points.map(p => viewport.worldToCanvas(p));\n      const {\n        viewPlaneNormal,\n        viewUp\n      } = viewport.getCamera();\n      const [topLeftCanvas, bottomRightCanvas] = getCanvasEllipseCorners(canvasCoordinates);\n      const topLeftWorld = viewport.canvasToWorld(topLeftCanvas);\n      const bottomRightWorld = viewport.canvasToWorld(bottomRightCanvas);\n      const {\n        cachedStats\n      } = data;\n      const targetIds = Object.keys(cachedStats);\n      const worldPos1 = topLeftWorld;\n      const worldPos2 = bottomRightWorld;\n      for (let i = 0; i < targetIds.length; i++) {\n        const targetId = targetIds[i];\n        const image = this.getTargetIdImage(targetId, renderingEngine);\n        if (!image) {\n          continue;\n        }\n        const {\n          dimensions,\n          imageData,\n          metadata,\n          hasPixelSpacing\n        } = image;\n        const worldPos1Index = transformWorldToIndex(imageData, worldPos1);\n        worldPos1Index[0] = Math.floor(worldPos1Index[0]);\n        worldPos1Index[1] = Math.floor(worldPos1Index[1]);\n        worldPos1Index[2] = Math.floor(worldPos1Index[2]);\n        const worldPos2Index = transformWorldToIndex(imageData, worldPos2);\n        worldPos2Index[0] = Math.floor(worldPos2Index[0]);\n        worldPos2Index[1] = Math.floor(worldPos2Index[1]);\n        worldPos2Index[2] = Math.floor(worldPos2Index[2]);\n        if (this._isInsideVolume(worldPos1Index, worldPos2Index, dimensions)) {\n          const iMin = Math.min(worldPos1Index[0], worldPos2Index[0]);\n          const iMax = Math.max(worldPos1Index[0], worldPos2Index[0]);\n          const jMin = Math.min(worldPos1Index[1], worldPos2Index[1]);\n          const jMax = Math.max(worldPos1Index[1], worldPos2Index[1]);\n          const kMin = Math.min(worldPos1Index[2], worldPos2Index[2]);\n          const kMax = Math.max(worldPos1Index[2], worldPos2Index[2]);\n          const boundsIJK = [[iMin, iMax], [jMin, jMax], [kMin, kMax]];\n          const center = [(topLeftWorld[0] + bottomRightWorld[0]) / 2, (topLeftWorld[1] + bottomRightWorld[1]) / 2, (topLeftWorld[2] + bottomRightWorld[2]) / 2];\n          const ellipseObj = {\n            center,\n            xRadius: Math.abs(topLeftWorld[0] - bottomRightWorld[0]) / 2,\n            yRadius: Math.abs(topLeftWorld[1] - bottomRightWorld[1]) / 2,\n            zRadius: Math.abs(topLeftWorld[2] - bottomRightWorld[2]) / 2\n          };\n          const {\n            worldWidth,\n            worldHeight\n          } = getWorldWidthAndHeightFromTwoPoints(viewPlaneNormal, viewUp, worldPos1, worldPos2);\n          const isEmptyArea = worldWidth === 0 && worldHeight === 0;\n          const scale = getCalibratedScale(image);\n          const area = Math.abs(Math.PI * (worldWidth / 2) * (worldHeight / 2)) / scale / scale;\n          const modalityUnitOptions = {\n            isPreScaled: isViewportPreScaled(viewport, targetId),\n            isSuvScaled: this.isSuvScaled(viewport, targetId, annotation.metadata.referencedImageId)\n          };\n          const modalityUnit = getModalityUnit(metadata.Modality, annotation.metadata.referencedImageId, modalityUnitOptions);\n          const pointsInShape = pointInShapeCallback(imageData, pointLPS => pointInEllipse(ellipseObj, pointLPS, {\n            fast: true\n          }), this.configuration.statsCalculator.statsCallback, boundsIJK);\n          const stats = this.configuration.statsCalculator.getStatistics();\n          cachedStats[targetId] = {\n            Modality: metadata.Modality,\n            area,\n            mean: stats[1]?.value,\n            max: stats[0]?.value,\n            stdDev: stats[2]?.value,\n            statsArray: stats,\n            pointsInShape: pointsInShape,\n            isEmptyArea,\n            areaUnit: getCalibratedAreaUnits(null, image),\n            modalityUnit\n          };\n        } else {\n          this.isHandleOutsideImage = true;\n          cachedStats[targetId] = {\n            Modality: metadata.Modality\n          };\n        }\n      }\n      annotation.invalidated = false;\n      const eventType = Events.ANNOTATION_MODIFIED;\n      const eventDetail = {\n        annotation,\n        viewportId,\n        renderingEngineId\n      };\n      triggerEvent(eventTarget, eventType, eventDetail);\n      return cachedStats;\n    };\n    this._isInsideVolume = (index1, index2, dimensions) => {\n      return csUtils.indexWithinDimensions(index1, dimensions) && csUtils.indexWithinDimensions(index2, dimensions);\n    };\n    this._throttledCalculateCachedStats = throttle(this._calculateCachedStats, 100, {\n      trailing: true\n    });\n  }\n  _pointInEllipseCanvas(ellipse, location) {\n    const xRadius = ellipse.width / 2;\n    const yRadius = ellipse.height / 2;\n    if (xRadius <= 0.0 || yRadius <= 0.0) {\n      return false;\n    }\n    const center = [ellipse.left + xRadius, ellipse.top + yRadius];\n    const normalized = [location[0] - center[0], location[1] - center[1]];\n    const inEllipse = normalized[0] * normalized[0] / (xRadius * xRadius) + normalized[1] * normalized[1] / (yRadius * yRadius) <= 1.0;\n    return inEllipse;\n  }\n  _getCanvasEllipseCenter(ellipseCanvasPoints) {\n    const [bottom, top, left, right] = ellipseCanvasPoints;\n    const topLeft = [left[0], top[1]];\n    const bottomRight = [right[0], bottom[1]];\n    return [(topLeft[0] + bottomRight[0]) / 2, (topLeft[1] + bottomRight[1]) / 2];\n  }\n}\nfunction defaultGetTextLines(data, targetId) {\n  const cachedVolumeStats = data.cachedStats[targetId];\n  const {\n    area,\n    mean,\n    stdDev,\n    max,\n    isEmptyArea,\n    areaUnit,\n    modalityUnit\n  } = cachedVolumeStats;\n  const textLines = [];\n  if (area) {\n    const areaLine = isEmptyArea ? `Area: Oblique not supported` : `Area: ${roundNumber(area)} ${areaUnit}`;\n    textLines.push(areaLine);\n  }\n  if (mean) {\n    textLines.push(`Mean: ${roundNumber(mean)} ${modalityUnit}`);\n  }\n  if (max) {\n    textLines.push(`Max: ${roundNumber(max)} ${modalityUnit}`);\n  }\n  if (stdDev) {\n    textLines.push(`Std Dev: ${roundNumber(stdDev)} ${modalityUnit}`);\n  }\n  return textLines;\n}\nEllipticalROITool.toolName = 'EllipticalROI';\nexport default EllipticalROITool;","map":{"version":3,"names":["AnnotationTool","getEnabledElement","VolumeViewport","eventTarget","triggerEvent","utilities","csUtils","getCalibratedAreaUnits","getCalibratedScale","roundNumber","throttle","addAnnotation","getAnnotations","removeAnnotation","isAnnotationLocked","isAnnotationVisible","drawCircle","drawCircleSvg","drawEllipseByCoordinates","drawEllipseSvg","drawHandles","drawHandlesSvg","drawLinkedTextBox","drawLinkedTextBoxSvg","state","Events","getViewportIdsWithToolToRender","getTextBoxCoordsCanvas","getWorldWidthAndHeightFromTwoPoints","pointInEllipse","getCanvasEllipseCorners","resetElementCursor","hideElementCursor","triggerAnnotationRenderForViewportIds","pointInShapeCallback","getModalityUnit","isViewportPreScaled","BasicStatsCalculator","transformWorldToIndex","EllipticalROITool","constructor","toolProps","defaultToolProps","supportedInteractionTypes","configuration","shadow","preventHandleOutsideImage","centerPointRadius","getTextLines","defaultGetTextLines","statsCalculator","isHandleOutsideImage","addNewAnnotation","evt","eventDetail","detail","currentPoints","element","worldPos","world","canvasPos","canvas","enabledElement","viewport","renderingEngine","isDrawing","camera","getCamera","viewPlaneNormal","viewUp","referencedImageId","getReferencedImageId","FrameOfReferenceUID","getFrameOfReferenceUID","annotation","highlighted","invalidated","metadata","toolName","getToolName","data","label","handles","textBox","hasMoved","worldPosition","worldBoundingBox","topLeft","topRight","bottomLeft","bottomRight","points","activeHandleIndex","cachedStats","initialRotation","getRotation","viewportIdsToRender","editData","centerWorld","newAnnotation","_activateDraw","preventDefault","isPointNearTool","canvasCoords","proximity","canvasCoordinates","map","p","worldToCanvas","canvasCorners","canvasPoint1","canvasPoint2","minorEllipse","left","Math","min","top","width","abs","height","majorEllipse","pointInMinorEllipse","_pointInEllipseCanvas","pointInMajorEllipse","toolSelectedCallback","movingTextBox","_activateModify","handleSelectedCallback","handle","handleIndex","centerCanvas","canvasWidth","canvasHeight","originalHandleCanvas","canvasToWorld","findIndex","pointsCanvas","_endCallback","_deactivateModify","_deactivateDraw","annotationUID","eventType","ANNOTATION_COMPLETED","_dragDrawCallback","currentCanvasPoints","dX","dY","bottomCanvas","topCanvas","leftCanvas","rightCanvas","_dragModifyCallback","deltaPoints","worldPosDelta","undefined","forEach","point","_dragHandle","dYCanvas","canvasBottom","canvasTop","dXCanvas","newHalfCanvasWidth","canvasLeft","canvasRight","newHalfCanvasHeight","cancel","isInteractingWithTool","addEventListener","MOUSE_UP","MOUSE_DRAG","MOUSE_CLICK","TOUCH_END","TOUCH_DRAG","TOUCH_TAP","removeEventListener","MOUSE_MOVE","renderAnnotation","svgDrawingHelper","renderStatus","annotations","length","filterInteractableAnnotationsForElement","targetId","getTargetId","getRenderingEngine","styleSpecifier","toolGroupId","viewportId","id","i","color","lineWidth","lineDash","getAnnotationStyle","rotation","areaUnit","Modality","area","max","mean","stdDev","_calculateCachedStats","_throttledCalculateCachedStats","startsWith","viewports","getStackViewports","invalidatedStack","find","vp","referencedImageURI","imageIdToURI","hasImageURI","currentImageURI","getCurrentImageId","console","warn","activeHandleCanvasCoords","handleGroupUID","dataId","ellipseUID","minRadius","centerPoint","_getCanvasEllipseCenter","options","getLinkedTextBoxStyle","visibility","textLines","canvasTextBoxCoords","textBoxPosition","textBoxUID","boundingBox","x","y","renderingEngineId","topLeftCanvas","bottomRightCanvas","topLeftWorld","bottomRightWorld","targetIds","Object","keys","worldPos1","worldPos2","image","getTargetIdImage","dimensions","imageData","hasPixelSpacing","worldPos1Index","floor","worldPos2Index","_isInsideVolume","iMin","iMax","jMin","jMax","kMin","kMax","boundsIJK","center","ellipseObj","xRadius","yRadius","zRadius","worldWidth","worldHeight","isEmptyArea","scale","PI","modalityUnitOptions","isPreScaled","isSuvScaled","modalityUnit","pointsInShape","pointLPS","fast","statsCallback","stats","getStatistics","value","statsArray","ANNOTATION_MODIFIED","index1","index2","indexWithinDimensions","trailing","ellipse","location","normalized","inEllipse","ellipseCanvasPoints","bottom","right","cachedVolumeStats","areaLine","push"],"sources":["../../../../src/tools/annotation/EllipticalROITool.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}