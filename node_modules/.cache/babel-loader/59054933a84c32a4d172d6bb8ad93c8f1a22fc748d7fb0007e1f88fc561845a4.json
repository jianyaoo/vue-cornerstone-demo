{"ast":null,"code":"import { getEnabledElement } from '@cornerstonejs/core';\nimport * as segmentation from '../../stateManagement/segmentation';\nimport { state as annotationState, config as annotationConfig } from '../../stateManagement/annotation';\nimport { jumpToSlice } from '../viewport';\nimport contourAndFindLargestBidirectional from './contourAndFindLargestBidirectional';\nimport createBidirectionalToolData from './createBidirectionalToolData';\nimport BidirectionalTool from '../../tools/annotation/BidirectionalTool';\nexport default function segmentContourAction(element, configuration) {\n  const {\n    data: configurationData\n  } = configuration;\n  const enabledElement = getEnabledElement(element);\n  const segment = (configurationData.getSegment || defaultGetSegment)(enabledElement, configurationData);\n  if (!segment) {\n    return;\n  }\n  const FrameOfReferenceUID = enabledElement.viewport.getFrameOfReferenceUID();\n  const segmentationsList = segmentation.state.getSegmentations();\n  const {\n    segmentIndex,\n    segmentationId\n  } = segment;\n  const bidirectionals = annotationState.getAnnotations(this.toolName || BidirectionalTool.toolName, FrameOfReferenceUID);\n  let hasExistingActiveSegment = false;\n  const existingLargestBidirectionals = bidirectionals.filter(existingBidirectionalItem => {\n    const {\n      segment\n    } = existingBidirectionalItem.data;\n    if (!segment) {\n      return;\n    }\n    if (segment.segmentationId === segmentationId && segment.segmentIndex === segmentIndex) {\n      hasExistingActiveSegment = true;\n      existingBidirectionalItem.data.segment = segment;\n    }\n    return !!segment;\n  });\n  if (!hasExistingActiveSegment) {\n    existingLargestBidirectionals.push({\n      data: {\n        segment\n      }\n    });\n  }\n  let newBidirectional;\n  existingLargestBidirectionals.forEach(existingLargestBidirectional => {\n    const segments = [];\n    const {\n      segment: updateSegment\n    } = existingLargestBidirectional.data;\n    const {\n      segmentIndex,\n      segmentationId\n    } = updateSegment;\n    segments[segmentIndex] = updateSegment;\n    annotationState.removeAnnotation(existingLargestBidirectional.annotationUID);\n    const bidirectionalData = contourAndFindLargestBidirectional({\n      ...segmentationsList.find(segmentation => segmentation.segmentationId === segmentationId),\n      segments\n    });\n    if (!bidirectionalData) {\n      return;\n    }\n    const bidirectionalToolData = createBidirectionalToolData(bidirectionalData, enabledElement.viewport);\n    bidirectionalToolData.annotationUID = existingLargestBidirectional.annotationUID;\n    bidirectionalToolData.data.segment = updateSegment;\n    const annotationUID = annotationState.addAnnotation(bidirectionalToolData, FrameOfReferenceUID);\n    if (updateSegment.segmentIndex === segment.segmentIndex && updateSegment.segmentationId === segment.segmentationId) {\n      newBidirectional = bidirectionalData;\n      const {\n        style\n      } = segment;\n      if (style) {\n        annotationConfig.style.setAnnotationStyles(annotationUID, style);\n      }\n    }\n  });\n  if (newBidirectional) {\n    const {\n      referencedImageId\n    } = newBidirectional;\n    const imageIds = enabledElement.viewport.getImageIds();\n    const imageIndex = imageIds.findIndex(imageId => imageId === referencedImageId);\n    jumpToSlice(element, {\n      imageIndex: imageIds.length - 1 - imageIndex\n    });\n    enabledElement.viewport.render();\n  } else {\n    console.warn('No bidirectional found');\n  }\n  return newBidirectional;\n}\nexport function defaultGetSegment(enabledElement, configuration) {\n  const segmentationsList = segmentation.state.getSegmentations();\n  if (!segmentationsList.length) {\n    return;\n  }\n  const segmentationId = configuration.segmentationId || segmentationsList[0].segmentationId;\n  const segmentIndex = configuration.segmentIndex ?? segmentation.segmentIndex.getActiveSegmentIndex(segmentationId);\n  if (!segmentIndex) {\n    return;\n  }\n  const segmentData = configuration.segmentData?.get(segmentIndex);\n  return {\n    label: `Segment ${segmentIndex}`,\n    segmentIndex,\n    segmentationId,\n    ...segmentData\n  };\n}","map":{"version":3,"names":["getEnabledElement","segmentation","state","annotationState","config","annotationConfig","jumpToSlice","contourAndFindLargestBidirectional","createBidirectionalToolData","BidirectionalTool","segmentContourAction","element","configuration","data","configurationData","enabledElement","segment","getSegment","defaultGetSegment","FrameOfReferenceUID","viewport","getFrameOfReferenceUID","segmentationsList","getSegmentations","segmentIndex","segmentationId","bidirectionals","getAnnotations","toolName","hasExistingActiveSegment","existingLargestBidirectionals","filter","existingBidirectionalItem","push","newBidirectional","forEach","existingLargestBidirectional","segments","updateSegment","removeAnnotation","annotationUID","bidirectionalData","find","bidirectionalToolData","addAnnotation","style","setAnnotationStyles","referencedImageId","imageIds","getImageIds","imageIndex","findIndex","imageId","length","render","console","warn","getActiveSegmentIndex","segmentData","get","label"],"sources":["../../../../src/utilities/segmentation/segmentContourAction.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}