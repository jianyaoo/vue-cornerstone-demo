{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { n as newInstance$1 } from '../../macros2.js';\nimport vtkWebGPUBufferManager from './BufferManager.js';\nimport vtkWebGPUCellArrayMapper from './CellArrayMapper.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\nconst {\n  PrimitiveTypes\n} = vtkWebGPUBufferManager;\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUPolyDataMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUPolyDataMapper2D(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUPolyDataMapper2D');\n  publicAPI.createCellArrayMapper = () => vtkWebGPUCellArrayMapper.newInstance();\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      model.WebGPUActor = publicAPI.getFirstAncestorOfType('vtkWebGPUActor2D');\n      if (!model.renderable.getStatic()) {\n        model.renderable.update();\n      }\n      const poly = model.renderable.getInputData();\n      model.renderable.mapScalars(poly, 1.0);\n      publicAPI.updateCellArrayMappers(poly);\n    }\n  };\n  publicAPI.updateCellArrayMappers = poly => {\n    const prims = [poly.getVerts(), poly.getLines(), poly.getPolys(), poly.getStrips()];\n\n    // we instantiate a cell array mapper for each cellArray that has cells\n    // and they handle the rendering of that cell array\n    const cellMappers = [];\n    let cellOffset = 0;\n    for (let i = PrimitiveTypes.Points; i <= PrimitiveTypes.Triangles; i++) {\n      if (prims[i].getNumberOfValues() > 0) {\n        if (!model.primitives[i]) {\n          model.primitives[i] = publicAPI.createCellArrayMapper();\n        }\n        const cellMapper = model.primitives[i];\n        cellMapper.setCellArray(prims[i]);\n        cellMapper.setCurrentInput(poly);\n        cellMapper.setCellOffset(cellOffset);\n        cellMapper.setPrimitiveType(i);\n        cellMapper.setRenderable(model.renderable);\n        cellMapper.setIs2D(true);\n        cellOffset += prims[i].getNumberOfCells();\n        cellMappers.push(cellMapper);\n      } else {\n        model.primitives[i] = null;\n      }\n    }\n    publicAPI.prepareNodes();\n    publicAPI.addMissingChildren(cellMappers);\n    publicAPI.removeUnusedNodes();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nfunction defaultValues(initialValues) {\n  return {\n    primitives: [],\n    ...initialValues\n  };\n}\n\n// ----------------------------------------------------------------------------\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, defaultValues(initialValues));\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.primitives = [];\n\n  // Object methods\n  vtkWebGPUPolyDataMapper2D(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend, 'vtkWebGPUPolyDataMapper2D');\n\n// ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance,\n  extend\n};\n\n// Register ourself to WebGPU backend if imported\nregisterOverride('vtkMapper2D', newInstance);\nexport { index as default, extend, newInstance };","map":{"version":3,"names":["n","newInstance$1","vtkWebGPUBufferManager","vtkWebGPUCellArrayMapper","vtkViewNode","registerOverride","PrimitiveTypes","vtkWebGPUPolyDataMapper2D","publicAPI","model","classHierarchy","push","createCellArrayMapper","newInstance","buildPass","prepass","WebGPUActor","getFirstAncestorOfType","renderable","getStatic","update","poly","getInputData","mapScalars","updateCellArrayMappers","prims","getVerts","getLines","getPolys","getStrips","cellMappers","cellOffset","i","Points","Triangles","getNumberOfValues","primitives","cellMapper","setCellArray","setCurrentInput","setCellOffset","setPrimitiveType","setRenderable","setIs2D","getNumberOfCells","prepareNodes","addMissingChildren","removeUnusedNodes","defaultValues","initialValues","extend","arguments","length","undefined","Object","assign","index","default"],"sources":["/Users/yzy/Documents/Playground/vue-cornerstone-demo/node_modules/@kitware/vtk.js/Rendering/WebGPU/PolyDataMapper2D.js"],"sourcesContent":["import { n as newInstance$1 } from '../../macros2.js';\nimport vtkWebGPUBufferManager from './BufferManager.js';\nimport vtkWebGPUCellArrayMapper from './CellArrayMapper.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\nconst {\n  PrimitiveTypes\n} = vtkWebGPUBufferManager;\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUPolyDataMapper methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUPolyDataMapper2D(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUPolyDataMapper2D');\n  publicAPI.createCellArrayMapper = () => vtkWebGPUCellArrayMapper.newInstance();\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      model.WebGPUActor = publicAPI.getFirstAncestorOfType('vtkWebGPUActor2D');\n      if (!model.renderable.getStatic()) {\n        model.renderable.update();\n      }\n      const poly = model.renderable.getInputData();\n      model.renderable.mapScalars(poly, 1.0);\n      publicAPI.updateCellArrayMappers(poly);\n    }\n  };\n  publicAPI.updateCellArrayMappers = poly => {\n    const prims = [poly.getVerts(), poly.getLines(), poly.getPolys(), poly.getStrips()];\n\n    // we instantiate a cell array mapper for each cellArray that has cells\n    // and they handle the rendering of that cell array\n    const cellMappers = [];\n    let cellOffset = 0;\n    for (let i = PrimitiveTypes.Points; i <= PrimitiveTypes.Triangles; i++) {\n      if (prims[i].getNumberOfValues() > 0) {\n        if (!model.primitives[i]) {\n          model.primitives[i] = publicAPI.createCellArrayMapper();\n        }\n        const cellMapper = model.primitives[i];\n        cellMapper.setCellArray(prims[i]);\n        cellMapper.setCurrentInput(poly);\n        cellMapper.setCellOffset(cellOffset);\n        cellMapper.setPrimitiveType(i);\n        cellMapper.setRenderable(model.renderable);\n        cellMapper.setIs2D(true);\n        cellOffset += prims[i].getNumberOfCells();\n        cellMappers.push(cellMapper);\n      } else {\n        model.primitives[i] = null;\n      }\n    }\n    publicAPI.prepareNodes();\n    publicAPI.addMissingChildren(cellMappers);\n    publicAPI.removeUnusedNodes();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nfunction defaultValues(initialValues) {\n  return {\n    primitives: [],\n    ...initialValues\n  };\n}\n\n// ----------------------------------------------------------------------------\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, defaultValues(initialValues));\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.primitives = [];\n\n  // Object methods\n  vtkWebGPUPolyDataMapper2D(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend, 'vtkWebGPUPolyDataMapper2D');\n\n// ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance,\n  extend\n};\n\n// Register ourself to WebGPU backend if imported\nregisterOverride('vtkMapper2D', newInstance);\n\nexport { index as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}