{"ast":null,"code":"import { MouseBindings, ToolModes } from '../../enums';\nimport cloneDeep from 'lodash.clonedeep';\nimport get from 'lodash.get';\nimport { triggerEvent, eventTarget, getRenderingEngine, getRenderingEngines, getEnabledElementByIds, Settings } from '@cornerstonejs/core';\nimport { Events } from '../../enums';\nimport { ToolGroupManager, state } from '../index';\nimport { MouseCursor, SVGMouseCursor } from '../../cursors';\nimport { initElementCursor } from '../../cursors/elementCursor';\nconst {\n  Active,\n  Passive,\n  Enabled,\n  Disabled\n} = ToolModes;\nexport default class ToolGroup {\n  constructor(id) {\n    this.viewportsInfo = [];\n    this.toolOptions = {};\n    this.restoreToolOptions = {};\n    this._toolInstances = {};\n    this.id = id;\n  }\n  getViewportIds() {\n    return this.viewportsInfo.map(({\n      viewportId\n    }) => viewportId);\n  }\n  getViewportsInfo() {\n    return this.viewportsInfo.slice();\n  }\n  getToolInstance(toolInstanceName) {\n    const toolInstance = this._toolInstances[toolInstanceName];\n    if (!toolInstance) {\n      console.warn(`'${toolInstanceName}' is not registered with this toolGroup (${this.id}).`);\n      return;\n    }\n    return toolInstance;\n  }\n  addTool(toolName, configuration = {}) {\n    const toolDefinition = state.tools[toolName];\n    const hasToolName = typeof toolName !== 'undefined' && toolName !== '';\n    const localToolInstance = this.toolOptions[toolName];\n    if (!hasToolName) {\n      console.warn('Tool with configuration did not produce a toolName: ', configuration);\n      return;\n    }\n    if (!toolDefinition) {\n      console.warn(`'${toolName}' is not registered with the library. You need to use cornerstoneTools.addTool to register it.`);\n      return;\n    }\n    if (localToolInstance) {\n      console.warn(`'${toolName}' is already registered for ToolGroup ${this.id}.`);\n      return;\n    }\n    const {\n      toolClass: ToolClass\n    } = toolDefinition;\n    const toolProps = {\n      name: toolName,\n      toolGroupId: this.id,\n      configuration\n    };\n    const instantiatedTool = new ToolClass(toolProps);\n    this._toolInstances[toolName] = instantiatedTool;\n  }\n  addToolInstance(toolName, parentClassName, configuration = {}) {\n    let ToolClassToUse = state.tools[toolName]?.toolClass;\n    if (!ToolClassToUse) {\n      const ParentClass = state.tools[parentClassName].toolClass;\n      class ToolInstance extends ParentClass {}\n      ToolInstance.toolName = toolName;\n      ToolClassToUse = ToolInstance;\n      state.tools[toolName] = {\n        toolClass: ToolInstance\n      };\n    }\n    this.addTool(ToolClassToUse.toolName, configuration);\n  }\n  addViewport(viewportId, renderingEngineId) {\n    if (typeof viewportId !== 'string') {\n      throw new Error('viewportId must be defined and be a string');\n    }\n    const renderingEngines = getRenderingEngines();\n    if (!renderingEngineId && renderingEngines.length > 1) {\n      throw new Error('You must specify a renderingEngineId when there are multiple rendering engines.');\n    }\n    const renderingEngineUIDToUse = renderingEngineId || renderingEngines[0].id;\n    if (!this.viewportsInfo.some(({\n      viewportId: vpId\n    }) => vpId === viewportId)) {\n      this.viewportsInfo.push({\n        viewportId,\n        renderingEngineId: renderingEngineUIDToUse\n      });\n    }\n    const toolName = this.getActivePrimaryMouseButtonTool();\n    const runtimeSettings = Settings.getRuntimeSettings();\n    if (runtimeSettings.get('useCursors')) {\n      this.setViewportsCursorByToolName(toolName);\n    }\n  }\n  removeViewports(renderingEngineId, viewportId) {\n    const indices = [];\n    this.viewportsInfo.forEach((vpInfo, index) => {\n      let match = false;\n      if (vpInfo.renderingEngineId === renderingEngineId) {\n        match = true;\n        if (viewportId && vpInfo.viewportId !== viewportId) {\n          match = false;\n        }\n      }\n      if (match) {\n        indices.push(index);\n      }\n    });\n    if (indices.length) {\n      for (let i = indices.length - 1; i >= 0; i--) {\n        this.viewportsInfo.splice(indices[i], 1);\n      }\n    }\n  }\n  setActiveStrategy(toolName, strategyName) {\n    const toolInstance = this._toolInstances[toolName];\n    if (toolInstance === undefined) {\n      console.warn(`Tool ${toolName} not added to toolGroup, can't set tool configuration.`);\n      return;\n    }\n    toolInstance.setActiveStrategy(strategyName);\n  }\n  setToolMode(toolName, mode, options = {}) {\n    if (!toolName) {\n      console.warn('setToolMode: toolName must be defined');\n      return;\n    }\n    if (mode === ToolModes.Active) {\n      this.setToolActive(toolName, options || this.restoreToolOptions[toolName]);\n      return;\n    }\n    if (mode === ToolModes.Passive) {\n      this.setToolPassive(toolName);\n      return;\n    }\n    if (mode === ToolModes.Enabled) {\n      this.setToolEnabled(toolName);\n      return;\n    }\n    if (mode === ToolModes.Disabled) {\n      this.setToolDisabled(toolName);\n      return;\n    }\n    console.warn('setToolMode: mode must be defined');\n  }\n  setToolActive(toolName, toolBindingsOptions = {}) {\n    const toolInstance = this._toolInstances[toolName];\n    if (toolInstance === undefined) {\n      console.warn(`Tool ${toolName} not added to toolGroup, can't set tool mode.`);\n      return;\n    }\n    if (!toolInstance) {\n      console.warn(`'${toolName}' instance ${toolInstance} is not registered with this toolGroup, can't set tool mode.`);\n      return;\n    }\n    const prevBindings = this.toolOptions[toolName] ? this.toolOptions[toolName].bindings : [];\n    const newBindings = toolBindingsOptions.bindings ? toolBindingsOptions.bindings : [];\n    const bindingsToUse = [...prevBindings, ...newBindings].reduce((unique, binding) => {\n      const TouchBinding = binding.numTouchPoints !== undefined;\n      const MouseBinding = binding.mouseButton !== undefined;\n      if (!unique.some(obj => hasSameBinding(obj, binding)) && (TouchBinding || MouseBinding)) {\n        unique.push(binding);\n      }\n      return unique;\n    }, []);\n    const toolOptions = {\n      bindings: bindingsToUse,\n      mode: Active\n    };\n    this.toolOptions[toolName] = toolOptions;\n    this._toolInstances[toolName].mode = Active;\n    const runtimeSettings = Settings.getRuntimeSettings();\n    const useCursor = runtimeSettings.get('useCursors');\n    if (this._hasMousePrimaryButtonBinding(toolBindingsOptions) && useCursor) {\n      this.setViewportsCursorByToolName(toolName);\n    } else {\n      const activeToolIdentifier = this.getActivePrimaryMouseButtonTool();\n      if (!activeToolIdentifier && useCursor) {\n        const cursor = MouseCursor.getDefinedCursor('default');\n        this._setCursorForViewports(cursor);\n      }\n    }\n    if (typeof toolInstance.onSetToolActive === 'function') {\n      toolInstance.onSetToolActive();\n    }\n    this._renderViewports();\n    const eventDetail = {\n      toolGroupId: this.id,\n      toolName,\n      toolBindingsOptions\n    };\n    triggerEvent(eventTarget, Events.TOOL_ACTIVATED, eventDetail);\n    this._triggerToolModeChangedEvent(toolName, Active, toolBindingsOptions);\n  }\n  setToolPassive(toolName) {\n    const toolInstance = this._toolInstances[toolName];\n    if (toolInstance === undefined) {\n      console.warn(`Tool ${toolName} not added to toolGroup, can't set tool mode.`);\n      return;\n    }\n    const prevToolOptions = this.getToolOptions(toolName);\n    const toolOptions = Object.assign({\n      bindings: prevToolOptions ? prevToolOptions.bindings : []\n    }, prevToolOptions, {\n      mode: Passive\n    });\n    const defaultMousePrimary = this.getDefaultMousePrimary();\n    toolOptions.bindings = toolOptions.bindings.filter(binding => binding.mouseButton !== defaultMousePrimary || binding.modifierKey);\n    let mode = Passive;\n    if (toolOptions.bindings.length !== 0) {\n      mode = Active;\n      toolOptions.mode = mode;\n    }\n    this.toolOptions[toolName] = toolOptions;\n    toolInstance.mode = mode;\n    if (typeof toolInstance.onSetToolPassive === 'function') {\n      toolInstance.onSetToolPassive();\n    }\n    this._renderViewports();\n    this._triggerToolModeChangedEvent(toolName, Passive);\n  }\n  setToolEnabled(toolName) {\n    const toolInstance = this._toolInstances[toolName];\n    if (toolInstance === undefined) {\n      console.warn(`Tool ${toolName} not added to toolGroup, can't set tool mode.`);\n      return;\n    }\n    const toolOptions = {\n      bindings: [],\n      mode: Enabled\n    };\n    this.toolOptions[toolName] = toolOptions;\n    toolInstance.mode = Enabled;\n    if (typeof toolInstance.onSetToolEnabled === 'function') {\n      toolInstance.onSetToolEnabled();\n    }\n    this._renderViewports();\n    this._triggerToolModeChangedEvent(toolName, Enabled);\n  }\n  setToolDisabled(toolName) {\n    const toolInstance = this._toolInstances[toolName];\n    if (toolInstance === undefined) {\n      console.warn(`Tool ${toolName} not added to toolGroup, can't set tool mode.`);\n      return;\n    }\n    const toolOptions = {\n      bindings: [],\n      mode: Disabled\n    };\n    this.restoreToolOptions[toolName] = this.toolOptions[toolName];\n    this.toolOptions[toolName] = toolOptions;\n    toolInstance.mode = Disabled;\n    if (typeof toolInstance.onSetToolDisabled === 'function') {\n      toolInstance.onSetToolDisabled();\n    }\n    this._renderViewports();\n    this._triggerToolModeChangedEvent(toolName, Disabled);\n  }\n  getToolOptions(toolName) {\n    const toolOptionsForTool = this.toolOptions[toolName];\n    if (toolOptionsForTool === undefined) {\n      return;\n    }\n    return toolOptionsForTool;\n  }\n  getActivePrimaryMouseButtonTool() {\n    return Object.keys(this.toolOptions).find(toolName => {\n      const toolOptions = this.toolOptions[toolName];\n      return toolOptions.mode === Active && this._hasMousePrimaryButtonBinding(toolOptions);\n    });\n  }\n  setViewportsCursorByToolName(toolName, strategyName) {\n    const cursor = this._getCursor(toolName, strategyName);\n    this._setCursorForViewports(cursor);\n  }\n  _getCursor(toolName, strategyName) {\n    let cursorName;\n    let cursor;\n    if (strategyName) {\n      cursorName = `${toolName}.${strategyName}`;\n      cursor = SVGMouseCursor.getDefinedCursor(cursorName, true);\n      if (cursor) {\n        return cursor;\n      }\n    }\n    cursorName = `${toolName}`;\n    cursor = SVGMouseCursor.getDefinedCursor(cursorName, true);\n    if (cursor) {\n      return cursor;\n    }\n    cursorName = toolName;\n    cursor = SVGMouseCursor.getDefinedCursor(cursorName, true);\n    if (cursor) {\n      return cursor;\n    }\n    return MouseCursor.getDefinedCursor('default');\n  }\n  _setCursorForViewports(cursor) {\n    this.viewportsInfo.forEach(({\n      renderingEngineId,\n      viewportId\n    }) => {\n      const enabledElement = getEnabledElementByIds(viewportId, renderingEngineId);\n      if (!enabledElement) {\n        return;\n      }\n      const {\n        viewport\n      } = enabledElement;\n      initElementCursor(viewport.element, cursor);\n    });\n  }\n  setToolConfiguration(toolName, configuration, overwrite) {\n    if (this._toolInstances[toolName] === undefined) {\n      console.warn(`Tool ${toolName} not present, can't set tool configuration.`);\n      return false;\n    }\n    let _configuration;\n    if (overwrite) {\n      _configuration = configuration;\n    } else {\n      _configuration = Object.assign(this._toolInstances[toolName].configuration, configuration);\n    }\n    this._toolInstances[toolName].configuration = _configuration;\n    this._renderViewports();\n    return true;\n  }\n  getDefaultMousePrimary() {\n    return MouseBindings.Primary;\n  }\n  getToolConfiguration(toolName, configurationPath) {\n    if (this._toolInstances[toolName] === undefined) {\n      console.warn(`Tool ${toolName} not present, can't set tool configuration.`);\n      return;\n    }\n    const _configuration = get(this._toolInstances[toolName].configuration, configurationPath) || this._toolInstances[toolName].configuration;\n    return cloneDeep(_configuration);\n  }\n  clone(newToolGroupId, fnToolFilter = null) {\n    let toolGroup = ToolGroupManager.getToolGroup(newToolGroupId);\n    if (toolGroup) {\n      console.warn(`ToolGroup ${newToolGroupId} already exists`);\n      return toolGroup;\n    }\n    toolGroup = ToolGroupManager.createToolGroup(newToolGroupId);\n    fnToolFilter = fnToolFilter ?? (() => true);\n    Object.keys(this._toolInstances).filter(fnToolFilter).forEach(toolName => {\n      const sourceToolInstance = this._toolInstances[toolName];\n      const sourceToolOptions = this.toolOptions[toolName];\n      const sourceToolMode = sourceToolInstance.mode;\n      toolGroup.addTool(toolName);\n      toolGroup.setToolMode(toolName, sourceToolMode, {\n        bindings: sourceToolOptions.bindings ?? []\n      });\n    });\n    return toolGroup;\n  }\n  _hasMousePrimaryButtonBinding(toolOptions) {\n    const defaultMousePrimary = this.getDefaultMousePrimary();\n    return toolOptions?.bindings?.some(binding => binding.mouseButton === defaultMousePrimary && binding.modifierKey === undefined);\n  }\n  _renderViewports() {\n    this.viewportsInfo.forEach(({\n      renderingEngineId,\n      viewportId\n    }) => {\n      getRenderingEngine(renderingEngineId).renderViewport(viewportId);\n    });\n  }\n  _triggerToolModeChangedEvent(toolName, mode, toolBindingsOptions) {\n    const eventDetail = {\n      toolGroupId: this.id,\n      toolName,\n      mode,\n      toolBindingsOptions\n    };\n    triggerEvent(eventTarget, Events.TOOL_MODE_CHANGED, eventDetail);\n  }\n}\nfunction hasSameBinding(binding1, binding2) {\n  if (binding1.mouseButton !== binding2.mouseButton) {\n    return false;\n  }\n  return binding1.modifierKey === binding2.modifierKey;\n}","map":{"version":3,"names":["MouseBindings","ToolModes","cloneDeep","get","triggerEvent","eventTarget","getRenderingEngine","getRenderingEngines","getEnabledElementByIds","Settings","Events","ToolGroupManager","state","MouseCursor","SVGMouseCursor","initElementCursor","Active","Passive","Enabled","Disabled","ToolGroup","constructor","id","viewportsInfo","toolOptions","restoreToolOptions","_toolInstances","getViewportIds","map","viewportId","getViewportsInfo","slice","getToolInstance","toolInstanceName","toolInstance","console","warn","addTool","toolName","configuration","toolDefinition","tools","hasToolName","localToolInstance","toolClass","ToolClass","toolProps","name","toolGroupId","instantiatedTool","addToolInstance","parentClassName","ToolClassToUse","ParentClass","ToolInstance","addViewport","renderingEngineId","Error","renderingEngines","length","renderingEngineUIDToUse","some","vpId","push","getActivePrimaryMouseButtonTool","runtimeSettings","getRuntimeSettings","setViewportsCursorByToolName","removeViewports","indices","forEach","vpInfo","index","match","i","splice","setActiveStrategy","strategyName","undefined","setToolMode","mode","options","setToolActive","setToolPassive","setToolEnabled","setToolDisabled","toolBindingsOptions","prevBindings","bindings","newBindings","bindingsToUse","reduce","unique","binding","TouchBinding","numTouchPoints","MouseBinding","mouseButton","obj","hasSameBinding","useCursor","_hasMousePrimaryButtonBinding","activeToolIdentifier","cursor","getDefinedCursor","_setCursorForViewports","onSetToolActive","_renderViewports","eventDetail","TOOL_ACTIVATED","_triggerToolModeChangedEvent","prevToolOptions","getToolOptions","Object","assign","defaultMousePrimary","getDefaultMousePrimary","filter","modifierKey","onSetToolPassive","onSetToolEnabled","onSetToolDisabled","toolOptionsForTool","keys","find","_getCursor","cursorName","enabledElement","viewport","element","setToolConfiguration","overwrite","_configuration","Primary","getToolConfiguration","configurationPath","clone","newToolGroupId","fnToolFilter","toolGroup","getToolGroup","createToolGroup","sourceToolInstance","sourceToolOptions","sourceToolMode","renderViewport","TOOL_MODE_CHANGED","binding1","binding2"],"sources":["../../../../src/store/ToolGroupManager/ToolGroup.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}