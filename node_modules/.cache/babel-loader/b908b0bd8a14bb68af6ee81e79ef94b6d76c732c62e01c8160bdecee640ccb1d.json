{"ast":null,"code":"import StrategyCallbacks from '../../../../enums/StrategyCallbacks';\nexport default {\n  [StrategyCallbacks.Initialize]: operationData => {\n    const {\n      centerIJK,\n      strategySpecificConfiguration,\n      segmentationVoxelManager: segmentationVoxelManager,\n      imageVoxelManager: imageVoxelManager,\n      segmentIndex\n    } = operationData;\n    const {\n      THRESHOLD\n    } = strategySpecificConfiguration;\n    if (!THRESHOLD?.isDynamic || !centerIJK || !segmentIndex) {\n      return;\n    }\n    const {\n      boundsIJK\n    } = segmentationVoxelManager;\n    const {\n      threshold: oldThreshold,\n      dynamicRadius = 0\n    } = THRESHOLD;\n    const useDelta = oldThreshold ? 0 : dynamicRadius;\n    const nestedBounds = boundsIJK.map((ijk, idx) => {\n      const [min, max] = ijk;\n      return [Math.max(min, centerIJK[idx] - useDelta), Math.min(max, centerIJK[idx] + useDelta)];\n    });\n    const threshold = oldThreshold || [Infinity, -Infinity];\n    const callback = ({\n      value\n    }) => {\n      threshold[0] = Math.min(value, threshold[0]);\n      threshold[1] = Math.max(value, threshold[1]);\n    };\n    imageVoxelManager.forEach(callback, {\n      boundsIJK: nestedBounds\n    });\n    operationData.strategySpecificConfiguration.THRESHOLD.threshold = threshold;\n  },\n  [StrategyCallbacks.OnInteractionStart]: operationData => {\n    const {\n      strategySpecificConfiguration,\n      preview\n    } = operationData;\n    if (!strategySpecificConfiguration?.THRESHOLD?.isDynamic && !preview) {\n      return;\n    }\n    strategySpecificConfiguration.THRESHOLD.threshold = null;\n  }\n};","map":{"version":3,"names":["StrategyCallbacks","Initialize","operationData","centerIJK","strategySpecificConfiguration","segmentationVoxelManager","imageVoxelManager","segmentIndex","THRESHOLD","isDynamic","boundsIJK","threshold","oldThreshold","dynamicRadius","useDelta","nestedBounds","map","ijk","idx","min","max","Math","Infinity","callback","value","forEach","OnInteractionStart","preview"],"sources":["../../../../../../src/tools/segmentation/strategies/compositions/dynamicThreshold.ts"],"sourcesContent":[null],"mappings":"AAEA,OAAOA,iBAAiB,MAAM,qCAAqC;AAUnE,eAAe;EACb,CAACA,iBAAiB,CAACC,UAAU,GAAIC,aAAuC,IAAI;IAC1E,MAAM;MACJC,SAAS;MACTC,6BAA6B;MAC7BC,wBAAwB,EAAEA,wBAAwB;MAClDC,iBAAiB,EAAEA,iBAAiB;MACpCC;IAAY,CACb,GAAGL,aAAa;IACjB,MAAM;MAAEM;IAAS,CAAE,GAAGJ,6BAA6B;IAEnD,IAAI,CAACI,SAAS,EAAEC,SAAS,IAAI,CAACN,SAAS,IAAI,CAACI,YAAY,EAAE;MACxD;;IAGF,MAAM;MAAEG;IAAS,CAAE,GAAGL,wBAAwB;IAC9C,MAAM;MAAEM,SAAS,EAAEC,YAAY;MAAEC,aAAa,GAAG;IAAC,CAAE,GAAGL,SAAS;IAChE,MAAMM,QAAQ,GAAGF,YAAY,GAAG,CAAC,GAAGC,aAAa;IACjD,MAAME,YAAY,GAAGL,SAAS,CAACM,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAI;MAC9C,MAAM,CAACC,GAAG,EAAEC,GAAG,CAAC,GAAGH,GAAG;MACtB,OAAO,CACLI,IAAI,CAACD,GAAG,CAACD,GAAG,EAAEhB,SAAS,CAACe,GAAG,CAAC,GAAGJ,QAAQ,CAAC,EACxCO,IAAI,CAACF,GAAG,CAACC,GAAG,EAAEjB,SAAS,CAACe,GAAG,CAAC,GAAGJ,QAAQ,CAAC,CACzC;IACH,CAAC,CAAc;IAEf,MAAMH,SAAS,GAAGC,YAAY,IAAI,CAACU,QAAQ,EAAE,CAACA,QAAQ,CAAC;IACvD,MAAMC,QAAQ,GAAGA,CAAC;MAAEC;IAAK,CAAE,KAAI;MAC7Bb,SAAS,CAAC,CAAC,CAAC,GAAGU,IAAI,CAACF,GAAG,CAACK,KAAK,EAAEb,SAAS,CAAC,CAAC,CAAC,CAAC;MAC5CA,SAAS,CAAC,CAAC,CAAC,GAAGU,IAAI,CAACD,GAAG,CAACI,KAAK,EAAEb,SAAS,CAAC,CAAC,CAAC,CAAC;IAC9C,CAAC;IACDL,iBAAiB,CAACmB,OAAO,CAACF,QAAQ,EAAE;MAAEb,SAAS,EAAEK;IAAY,CAAE,CAAC;IAEhEb,aAAa,CAACE,6BAA6B,CAACI,SAAS,CAACG,SAAS,GAAGA,SAAS;EAC7E,CAAC;EAED,CAACX,iBAAiB,CAAC0B,kBAAkB,GACnCxB,aAAuC,IACrC;IACF,MAAM;MAAEE,6BAA6B;MAAEuB;IAAO,CAAE,GAAGzB,aAAa;IAChE,IAAI,CAACE,6BAA6B,EAAEI,SAAS,EAAEC,SAAS,IAAI,CAACkB,OAAO,EAAE;MACpE;;IAEFvB,6BAA6B,CAACI,SAAS,CAACG,SAAS,GAAG,IAAI;EAC1D;CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}