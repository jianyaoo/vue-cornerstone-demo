{"ast":null,"code":"var EventListenerPhases;\n(function (EventListenerPhases) {\n  EventListenerPhases[EventListenerPhases[\"None\"] = 0] = \"None\";\n  EventListenerPhases[EventListenerPhases[\"Capture\"] = 1] = \"Capture\";\n  EventListenerPhases[EventListenerPhases[\"Bubble\"] = 2] = \"Bubble\";\n})(EventListenerPhases || (EventListenerPhases = {}));\nclass TargetEventListeners {\n  constructor(target) {\n    this._eventListeners = new Map();\n    this._children = new Map();\n    this._target = target;\n  }\n  get isEmpty() {\n    return this._eventListeners.size === 0 && this._children.size === 0;\n  }\n  addEventListener(type, callback, options) {\n    const dotIndex = type.indexOf('.');\n    const isNamespace = dotIndex !== -1;\n    if (isNamespace) {\n      const namespaceToken = type.substring(0, dotIndex);\n      let childElementEventListener = this._children.get(namespaceToken);\n      if (!childElementEventListener) {\n        childElementEventListener = new TargetEventListeners(this._target);\n        this._children.set(namespaceToken, childElementEventListener);\n      }\n      type = type.substring(dotIndex + 1);\n      childElementEventListener.addEventListener(type, callback, options);\n    } else {\n      this._addEventListener(type, callback, options);\n    }\n  }\n  removeEventListener(type, callback, options) {\n    const dotIndex = type.indexOf('.');\n    const isNamespace = dotIndex !== -1;\n    if (isNamespace) {\n      const namespaceToken = type.substring(0, dotIndex);\n      const childElementEventListener = this._children.get(namespaceToken);\n      if (!childElementEventListener) {\n        return;\n      }\n      type = type.substring(dotIndex + 1);\n      childElementEventListener.removeEventListener(type, callback, options);\n      if (childElementEventListener.isEmpty) {\n        this._children.delete(namespaceToken);\n      }\n    } else {\n      this._removeEventListener(type, callback, options);\n    }\n  }\n  reset() {\n    Array.from(this._children.entries()).forEach(([namespace, child]) => {\n      child.reset();\n      if (child.isEmpty) {\n        this._children.delete(namespace);\n      } else {\n        throw new Error('Child is not empty and cannot be removed');\n      }\n    });\n    this._unregisterAllEvents();\n  }\n  _addEventListener(type, callback, options) {\n    let listenersMap = this._eventListeners.get(type);\n    if (!listenersMap) {\n      listenersMap = new Map();\n      this._eventListeners.set(type, listenersMap);\n    }\n    const useCapture = options?.capture ?? false;\n    const listenerPhase = useCapture ? EventListenerPhases.Capture : EventListenerPhases.Bubble;\n    const registeredPhases = listenersMap.get(callback) ?? EventListenerPhases.None;\n    if (registeredPhases & listenerPhase) {\n      console.warn('A listener is already registered for this phase');\n      return;\n    }\n    listenersMap.set(callback, registeredPhases | listenerPhase);\n    this._target.addEventListener(type, callback, options);\n  }\n  _removeEventListener(type, callback, options) {\n    const useCapture = options?.capture ?? false;\n    const listenerPhase = useCapture ? EventListenerPhases.Capture : EventListenerPhases.Bubble;\n    const listenersMap = this._eventListeners.get(type);\n    if (!listenersMap) {\n      return;\n    }\n    const callbacks = callback ? [callback] : Array.from(listenersMap.keys());\n    callbacks.forEach(callbackItem => {\n      const registeredPhases = listenersMap.get(callbackItem) ?? EventListenerPhases.None;\n      const phaseRegistered = !!(registeredPhases & listenerPhase);\n      if (!phaseRegistered) {\n        return;\n      }\n      this._target.removeEventListener(type, callbackItem, options);\n      const newListenerPhase = registeredPhases ^ listenerPhase;\n      if (newListenerPhase === EventListenerPhases.None) {\n        listenersMap.delete(callbackItem);\n      } else {\n        listenersMap.set(callbackItem, newListenerPhase);\n      }\n    });\n    if (!listenersMap.size) {\n      this._eventListeners.delete(type);\n    }\n  }\n  _unregisterAllListeners(type, listenersMap) {\n    Array.from(listenersMap.entries()).forEach(([listener, eventPhases]) => {\n      const startPhase = EventListenerPhases.Capture;\n      for (let currentPhase = startPhase; eventPhases; currentPhase <<= 1) {\n        if (!(eventPhases & currentPhase)) {\n          continue;\n        }\n        const useCapture = currentPhase === EventListenerPhases.Capture ? true : false;\n        this.removeEventListener(type, listener, {\n          capture: useCapture\n        });\n        eventPhases ^= currentPhase;\n      }\n    });\n  }\n  _unregisterAllEvents() {\n    Array.from(this._eventListeners.entries()).forEach(([type, listenersMap]) => this._unregisterAllListeners(type, listenersMap));\n  }\n}\nexport { TargetEventListeners as default, TargetEventListeners };","map":{"version":3,"names":["EventListenerPhases","TargetEventListeners","constructor","target","_eventListeners","Map","_children","_target","isEmpty","size","addEventListener","type","callback","options","dotIndex","indexOf","isNamespace","namespaceToken","substring","childElementEventListener","get","set","_addEventListener","removeEventListener","delete","_removeEventListener","reset","Array","from","entries","forEach","namespace","child","Error","_unregisterAllEvents","listenersMap","useCapture","capture","listenerPhase","Capture","Bubble","registeredPhases","None","console","warn","callbacks","keys","callbackItem","phaseRegistered","newListenerPhase","_unregisterAllListeners","listener","eventPhases","startPhase","currentPhase","default"],"sources":["../../../../src/utilities/eventListener/TargetEventListeners.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}