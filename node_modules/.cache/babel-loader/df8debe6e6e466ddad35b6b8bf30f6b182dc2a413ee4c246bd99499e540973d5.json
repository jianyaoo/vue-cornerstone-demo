{"ast":null,"code":"var _class;\nimport { vec3 } from 'gl-matrix';\nimport { Events as EVENTS, VideoViewport as VideoViewportEnum, MetadataModules } from '../enums';\nimport * as metaData from '../metaData';\nimport { Transform } from './helpers/cpuFallback/rendering/transform';\nimport { triggerEvent } from '../utilities';\nimport Viewport from './Viewport';\nimport { getOrCreateCanvas } from './helpers';\nclass VideoViewport extends Viewport {\n  constructor(props) {\n    super({\n      ...props,\n      canvas: props.canvas || getOrCreateCanvas(props.element)\n    });\n    this.videoWidth = 0;\n    this.videoHeight = 0;\n    this.loop = true;\n    this.mute = true;\n    this.isPlaying = false;\n    this.scrollSpeed = 1;\n    this.playbackRate = 1;\n    this.frameRange = [0, 0];\n    this.fps = 30;\n    this.numberOfFrames = 0;\n    this.videoCamera = {\n      panWorld: [0, 0],\n      parallelScale: 1\n    };\n    this.voiRange = {\n      lower: 0,\n      upper: 255\n    };\n    this.getProperties = () => {\n      return {\n        loop: this.videoElement.loop,\n        muted: this.videoElement.muted,\n        playbackRate: this.playbackRate,\n        scrollSpeed: this.scrollSpeed,\n        voiRange: {\n          ...this.voiRange\n        }\n      };\n    };\n    this.resetCamera = () => {\n      this.refreshRenderValues();\n      this.canvasContext.fillRect(0, 0, this.canvas.width, this.canvas.height);\n      if (this.isPlaying === false) {\n        this.renderFrame();\n      }\n      return true;\n    };\n    this.getNumberOfSlices = () => {\n      return Math.round(this.videoElement.duration * this.fps / this.scrollSpeed);\n    };\n    this.getFrameOfReferenceUID = () => {\n      return this.videoElement.src;\n    };\n    this.resize = () => {\n      const canvas = this.canvas;\n      const {\n        clientWidth,\n        clientHeight\n      } = canvas;\n      if (canvas.width !== clientWidth || canvas.height !== clientHeight) {\n        canvas.width = clientWidth;\n        canvas.height = clientHeight;\n      }\n      this.refreshRenderValues();\n      if (this.isPlaying === false) {\n        this.renderFrame();\n      }\n    };\n    this.canvasToWorld = canvasPos => {\n      const pan = this.videoCamera.panWorld;\n      const worldToCanvasRatio = this.getWorldToCanvasRatio();\n      const panOffsetCanvas = [pan[0] * worldToCanvasRatio, pan[1] * worldToCanvasRatio];\n      const subCanvasPos = [canvasPos[0] - panOffsetCanvas[0], canvasPos[1] - panOffsetCanvas[1]];\n      const worldPos = [subCanvasPos[0] / worldToCanvasRatio, subCanvasPos[1] / worldToCanvasRatio, 0];\n      return worldPos;\n    };\n    this.worldToCanvas = worldPos => {\n      const pan = this.videoCamera.panWorld;\n      const worldToCanvasRatio = this.getWorldToCanvasRatio();\n      const subCanvasPos = [(worldPos[0] + pan[0]) * worldToCanvasRatio, (worldPos[1] + pan[1]) * worldToCanvasRatio];\n      const canvasPos = [subCanvasPos[0], subCanvasPos[1]];\n      return canvasPos;\n    };\n    this.getRotation = () => 0;\n    this.canvasToIndex = canvasPos => {\n      const transform = this.getTransform();\n      transform.invert();\n      return transform.transformPoint(canvasPos);\n    };\n    this.indexToCanvas = indexPos => {\n      const transform = this.getTransform();\n      return transform.transformPoint(indexPos);\n    };\n    this.customRenderViewportToCanvas = () => {\n      this.renderFrame();\n    };\n    this.renderFrame = () => {\n      const transform = this.getTransform();\n      const transformationMatrix = transform.getMatrix();\n      this.canvasContext.transform(transformationMatrix[0], transformationMatrix[1], transformationMatrix[2], transformationMatrix[3], transformationMatrix[4], transformationMatrix[5]);\n      this.canvasContext.drawImage(this.videoElement, 0, 0, this.videoWidth, this.videoHeight);\n      this.canvasContext.resetTransform();\n      triggerEvent(this.element, EVENTS.IMAGE_RENDERED, {\n        element: this.element,\n        viewportId: this.id,\n        viewport: this,\n        renderingEngineId: this.renderingEngineId,\n        time: this.videoElement.currentTime,\n        duration: this.videoElement.duration\n      });\n      const frame = this.getFrameNumber();\n      if (this.isPlaying) {\n        if (frame < this.frameRange[0]) {\n          this.setFrameNumber(this.frameRange[0]);\n        } else if (frame > this.frameRange[1]) {\n          if (this.loop) {\n            this.setFrameNumber(this.frameRange[0]);\n          } else {\n            this.pause();\n          }\n        }\n      }\n    };\n    this.renderWhilstPlaying = () => {\n      this.renderFrame();\n      if (this.isPlaying) {\n        requestAnimationFrame(this.renderWhilstPlaying);\n      }\n    };\n    this.canvasContext = this.canvas.getContext('2d');\n    this.renderingEngineId = props.renderingEngineId;\n    this.element.setAttribute('data-viewport-uid', this.id);\n    this.element.setAttribute('data-rendering-engine-uid', this.renderingEngineId);\n    this.videoElement = document.createElement('video');\n    this.videoElement.muted = this.mute;\n    this.videoElement.loop = this.loop;\n    this.videoElement.crossOrigin = 'anonymous';\n    this.addEventListeners();\n    this.resize();\n  }\n  static get useCustomRenderingPipeline() {\n    return true;\n  }\n  addEventListeners() {\n    this.canvas.addEventListener(EVENTS.ELEMENT_DISABLED, this.elementDisabledHandler);\n  }\n  removeEventListeners() {\n    this.canvas.removeEventListener(EVENTS.ELEMENT_DISABLED, this.elementDisabledHandler);\n  }\n  elementDisabledHandler() {\n    this.removeEventListeners();\n    this.videoElement.remove();\n  }\n  _getImageDataMetadata() {\n    const imagePlaneModule = metaData.get(MetadataModules.IMAGE_PLANE, this.imageId);\n    let rowCosines = imagePlaneModule.rowCosines;\n    let columnCosines = imagePlaneModule.columnCosines;\n    if (rowCosines == null || columnCosines == null) {\n      rowCosines = [1, 0, 0];\n      columnCosines = [0, 1, 0];\n    }\n    const rowCosineVec = vec3.fromValues(rowCosines[0], rowCosines[1], rowCosines[2]);\n    const colCosineVec = vec3.fromValues(columnCosines[0], columnCosines[1], columnCosines[2]);\n    const scanAxisNormal = vec3.create();\n    vec3.cross(scanAxisNormal, rowCosineVec, colCosineVec);\n    let origin = imagePlaneModule.imagePositionPatient;\n    if (origin == null) {\n      origin = [0, 0, 0];\n    }\n    const xSpacing = imagePlaneModule.columnPixelSpacing || 1;\n    const ySpacing = imagePlaneModule.rowPixelSpacing || 1;\n    const xVoxels = imagePlaneModule.columns;\n    const yVoxels = imagePlaneModule.rows;\n    const zSpacing = 1;\n    const zVoxels = 1;\n    this.hasPixelSpacing = !!imagePlaneModule.columnPixelSpacing;\n    return {\n      bitsAllocated: 8,\n      numComps: 3,\n      origin,\n      direction: [...rowCosineVec, ...colCosineVec, ...scanAxisNormal],\n      dimensions: [xVoxels, yVoxels, zVoxels],\n      spacing: [xSpacing, ySpacing, zSpacing],\n      hasPixelSpacing: this.hasPixelSpacing,\n      numVoxels: xVoxels * yVoxels * zVoxels,\n      imagePlaneModule\n    };\n  }\n  setVideo(imageId, frameNumber) {\n    this.imageId = Array.isArray(imageId) ? imageId[0] : imageId;\n    const {\n      rendered\n    } = metaData.get(MetadataModules.IMAGE_URL, imageId);\n    const generalSeries = metaData.get(MetadataModules.GENERAL_SERIES, imageId);\n    this.modality = generalSeries?.Modality;\n    this.metadata = this._getImageDataMetadata();\n    return this.setVideoURL(rendered).then(() => {\n      let {\n        cineRate,\n        numberOfFrames\n      } = metaData.get(MetadataModules.CINE, imageId);\n      if (!numberOfFrames) {\n        numberOfFrames = Math.round(this.videoElement.duration * (cineRate || 30));\n      }\n      if (!cineRate) {\n        cineRate = Math.round(numberOfFrames / this.videoElement.duration);\n      }\n      this.fps = cineRate;\n      this.numberOfFrames = numberOfFrames;\n      this.setFrameRange([1, numberOfFrames]);\n      if (frameNumber !== undefined) {\n        this.pause();\n        this.setFrameNumber(frameNumber);\n      }\n    });\n  }\n  async setVideoURL(videoURL) {\n    return new Promise(resolve => {\n      this.videoElement.src = videoURL;\n      this.videoElement.preload = 'auto';\n      const loadedMetadataEventHandler = () => {\n        this.videoWidth = this.videoElement.videoWidth;\n        this.videoHeight = this.videoElement.videoHeight;\n        this.videoElement.removeEventListener('loadedmetadata', loadedMetadataEventHandler);\n        this.refreshRenderValues();\n        resolve(true);\n      };\n      this.videoElement.addEventListener('loadedmetadata', loadedMetadataEventHandler);\n    });\n  }\n  togglePlayPause() {\n    if (this.isPlaying) {\n      this.pause();\n      return false;\n    } else {\n      this.play();\n      return true;\n    }\n  }\n  play() {\n    if (!this.isPlaying) {\n      this.videoElement.play();\n      this.isPlaying = true;\n      this.renderWhilstPlaying();\n    }\n  }\n  async pause() {\n    await this.videoElement.pause();\n    this.isPlaying = false;\n  }\n  async scroll(delta = 1) {\n    await this.pause();\n    const videoElement = this.videoElement;\n    const renderFrame = this.renderFrame;\n    const currentTime = videoElement.currentTime;\n    const newTime = currentTime + delta * this.scrollSpeed / this.fps;\n    videoElement.currentTime = newTime;\n    const seekEventListener = evt => {\n      renderFrame();\n      videoElement.removeEventListener('seeked', seekEventListener);\n    };\n    videoElement.addEventListener('seeked', seekEventListener);\n  }\n  async start() {\n    const videoElement = this.videoElement;\n    const renderFrame = this.renderFrame;\n    videoElement.currentTime = 0;\n    if (videoElement.paused) {\n      const seekEventListener = evt => {\n        renderFrame();\n        videoElement.removeEventListener('seeked', seekEventListener);\n      };\n      videoElement.addEventListener('seeked', seekEventListener);\n    }\n  }\n  async end() {\n    const videoElement = this.videoElement;\n    const renderFrame = this.renderFrame;\n    videoElement.currentTime = videoElement.duration;\n    if (videoElement.paused) {\n      const seekEventListener = evt => {\n        renderFrame();\n        videoElement.removeEventListener('seeked', seekEventListener);\n      };\n      videoElement.addEventListener('seeked', seekEventListener);\n    }\n  }\n  async setTime(timeInSeconds) {\n    const videoElement = this.videoElement;\n    const renderFrame = this.renderFrame;\n    videoElement.currentTime = timeInSeconds;\n    if (videoElement.paused) {\n      const seekEventListener = evt => {\n        renderFrame();\n        videoElement.removeEventListener('seeked', seekEventListener);\n      };\n      videoElement.addEventListener('seeked', seekEventListener);\n    }\n  }\n  async setFrameNumber(frame) {\n    this.setTime((frame - 1) / this.fps);\n  }\n  setFrameRange(frameRange) {\n    if (!frameRange) {\n      this.frameRange = [1, this.numberOfFrames];\n      return;\n    }\n    if (frameRange.length !== 2 || frameRange[0] === frameRange[1]) {\n      return;\n    }\n    this.frameRange = [frameRange[0], frameRange[1]];\n  }\n  getFrameRange() {\n    return this.frameRange;\n  }\n  setProperties(props) {\n    if (props.loop !== undefined) {\n      this.videoElement.loop = props.loop;\n    }\n    if (props.muted !== undefined) {\n      this.videoElement.muted = props.muted;\n    }\n    if (props.playbackRate !== undefined) {\n      this.setPlaybackRate(props.playbackRate);\n    }\n    if (props.scrollSpeed !== undefined) {\n      this.setScrollSpeed(props.scrollSpeed);\n    }\n    if (props.voiRange) {\n      this.setVOI(props.voiRange);\n    }\n  }\n  setPlaybackRate(rate = 1) {\n    this.playbackRate = rate;\n    if (rate < 0.0625) {\n      this.pause();\n      return;\n    }\n    if (!this.videoElement) {\n      return;\n    }\n    this.videoElement.playbackRate = rate;\n    this.play();\n  }\n  setScrollSpeed(scrollSpeed = 1, unit = VideoViewportEnum.SpeedUnit.FRAME) {\n    this.scrollSpeed = unit === VideoViewportEnum.SpeedUnit.SECOND ? scrollSpeed * this.fps : scrollSpeed;\n  }\n  resetProperties() {\n    this.setProperties({\n      loop: false,\n      muted: true\n    });\n  }\n  getScalarData() {\n    const canvas = document.createElement('canvas');\n    canvas.width = this.videoWidth;\n    canvas.height = this.videoHeight;\n    const context = canvas.getContext('2d');\n    context.drawImage(this.videoElement, 0, 0);\n    const canvasData = context.getImageData(0, 0, this.videoWidth, this.videoHeight);\n    const {\n      data: scalarData\n    } = canvasData;\n    scalarData.getRange = () => [0, 255];\n    return scalarData;\n  }\n  getImageData() {\n    const {\n      metadata\n    } = this;\n    const spacing = metadata.spacing;\n    return {\n      dimensions: metadata.dimensions,\n      spacing,\n      origin: metadata.origin,\n      direction: metadata.direction,\n      metadata: {\n        Modality: this.modality\n      },\n      getScalarData: () => this.getScalarData(),\n      imageData: {\n        getDirection: () => metadata.direction,\n        getDimensions: () => metadata.dimensions,\n        getRange: () => [0, 255],\n        getScalarData: () => this.getScalarData(),\n        getSpacing: () => metadata.spacing,\n        worldToIndex: point => {\n          const canvasPoint = this.worldToCanvas(point);\n          const pixelCoord = this.canvasToIndex(canvasPoint);\n          return [pixelCoord[0], pixelCoord[1], 0];\n        },\n        indexToWorld: point => {\n          const canvasPoint = this.indexToCanvas([point[0], point[1]]);\n          return this.canvasToWorld(canvasPoint);\n        }\n      },\n      hasPixelSpacing: this.hasPixelSpacing,\n      calibration: this.calibration,\n      preScale: {\n        scaled: false\n      }\n    };\n  }\n  hasImageURI(imageURI) {\n    const framesMatch = imageURI.match(VideoViewport.frameRangeExtractor);\n    const testURI = framesMatch ? imageURI.substring(0, framesMatch.index) : imageURI;\n    return this.imageId.indexOf(testURI) !== -1;\n  }\n  setVOI(voiRange) {\n    this.voiRange = voiRange;\n    this.setColorTransform();\n  }\n  setWindowLevel(windowWidth = 256, windowCenter = 128) {\n    const lower = windowCenter - windowWidth / 2;\n    const upper = windowCenter + windowWidth / 2 - 1;\n    this.setVOI({\n      lower,\n      upper\n    });\n    this.setColorTransform();\n  }\n  setAverageWhite(averageWhite) {\n    this.averageWhite = averageWhite;\n    this.setColorTransform();\n  }\n  setColorTransform() {\n    if (!this.voiRange && !this.averageWhite) {\n      this.feFilter = null;\n      return;\n    }\n    const white = this.averageWhite || [255, 255, 255];\n    const maxWhite = Math.max(...white);\n    const scaleWhite = white.map(c => maxWhite / c);\n    const {\n      lower = 0,\n      upper = 255\n    } = this.voiRange || {};\n    const wlScale = (upper - lower + 1) / 255;\n    const wlDelta = lower / 255;\n    this.feFilter = `url('data:image/svg+xml,\\\n      <svg xmlns=\"http://www.w3.org/2000/svg\">\\\n        <filter id=\"colour\" color-interpolation-filters=\"linearRGB\">\\\n        <feColorMatrix type=\"matrix\" \\\n        values=\"\\\n          ${scaleWhite[0] * wlScale} 0 0 0 ${wlDelta} \\\n          0 ${scaleWhite[1] * wlScale} 0 0 ${wlDelta} \\\n          0 0 ${scaleWhite[2] * wlScale} 0 ${wlDelta} \\\n          0 0 0 1 0\" />\\\n        </filter>\\\n      </svg>#colour')`;\n    this.canvas.style.filter = this.feFilter;\n  }\n  setCamera(camera) {\n    const {\n      parallelScale,\n      focalPoint\n    } = camera;\n    if (camera.parallelScale !== undefined) {\n      this.videoCamera.parallelScale = this.element.clientHeight / 2 / parallelScale;\n    }\n    if (focalPoint !== undefined) {\n      const focalPointCanvas = this.worldToCanvas(focalPoint);\n      const canvasCenter = [this.element.clientWidth / 2, this.element.clientHeight / 2];\n      const panWorldDelta = [(focalPointCanvas[0] - canvasCenter[0]) / this.videoCamera.parallelScale, (focalPointCanvas[1] - canvasCenter[1]) / this.videoCamera.parallelScale];\n      this.videoCamera.panWorld = [this.videoCamera.panWorld[0] - panWorldDelta[0], this.videoCamera.panWorld[1] - panWorldDelta[1]];\n    }\n    this.canvasContext.fillRect(0, 0, this.canvas.width, this.canvas.height);\n    if (this.isPlaying === false) {\n      this.renderFrame();\n    }\n  }\n  getCurrentImageId() {\n    const current = this.imageId.replace('/frames/1', this.isPlaying ? `/frames/1-${this.numberOfFrames}` : `/frames/${this.getFrameNumber()}`);\n    return current;\n  }\n  getFrameNumber() {\n    return 1 + Math.round(this.videoElement.currentTime * this.fps);\n  }\n  getCamera() {\n    const {\n      parallelScale\n    } = this.videoCamera;\n    const canvasCenter = [this.element.clientWidth / 2, this.element.clientHeight / 2];\n    const canvasCenterWorld = this.canvasToWorld(canvasCenter);\n    return {\n      parallelProjection: true,\n      focalPoint: canvasCenterWorld,\n      position: [0, 0, 0],\n      viewUp: [0, -1, 0],\n      parallelScale: this.element.clientHeight / 2 / parallelScale,\n      viewPlaneNormal: [0, 0, 1]\n    };\n  }\n  getPan() {\n    const worldPan = this.videoCamera.panWorld;\n    return [worldPan[0], worldPan[1]];\n  }\n  refreshRenderValues() {\n    let worldToCanvasRatio = this.canvas.width / this.videoWidth;\n    if (this.videoHeight * worldToCanvasRatio > this.canvas.height) {\n      const secondWorldToCanvasRatio = this.canvas.height / (this.videoHeight * worldToCanvasRatio);\n      worldToCanvasRatio *= secondWorldToCanvasRatio;\n    }\n    const drawWidth = Math.floor(this.videoWidth * worldToCanvasRatio);\n    const drawHeight = Math.floor(this.videoHeight * worldToCanvasRatio);\n    const xOffsetCanvas = this.canvas.width / 2 - drawWidth / 2;\n    const yOffsetCanvas = this.canvas.height / 2 - drawHeight / 2;\n    const xOffsetWorld = xOffsetCanvas / worldToCanvasRatio;\n    const yOffsetWorld = yOffsetCanvas / worldToCanvasRatio;\n    this.videoCamera.panWorld = [xOffsetWorld, yOffsetWorld];\n    this.videoCamera.parallelScale = worldToCanvasRatio;\n  }\n  getWorldToCanvasRatio() {\n    return this.videoCamera.parallelScale;\n  }\n  getCanvasToWorldRatio() {\n    return 1.0 / this.videoCamera.parallelScale;\n  }\n  getTransform() {\n    const panWorld = this.videoCamera.panWorld;\n    const worldToCanvasRatio = this.getWorldToCanvasRatio();\n    const canvasToWorldRatio = this.getCanvasToWorldRatio();\n    const halfCanvas = [this.canvas.width / 2, this.canvas.height / 2];\n    const halfCanvasWorldCoordinates = [halfCanvas[0] * canvasToWorldRatio, halfCanvas[1] * canvasToWorldRatio];\n    const transform = new Transform();\n    transform.translate(halfCanvas[0], halfCanvas[1]);\n    transform.scale(worldToCanvasRatio, worldToCanvasRatio);\n    transform.translate(panWorld[0], panWorld[1]);\n    transform.translate(-halfCanvasWorldCoordinates[0], -halfCanvasWorldCoordinates[1]);\n    return transform;\n  }\n}\n_class = VideoViewport;\n_class.frameRangeExtractor = /(\\/frames\\/|[&?]frameNumber=)([^/&?]*)/i;\nexport default VideoViewport;","map":{"version":3,"names":["vec3","Events","EVENTS","VideoViewport","VideoViewportEnum","MetadataModules","metaData","Transform","triggerEvent","Viewport","getOrCreateCanvas","constructor","props","canvas","element","videoWidth","videoHeight","loop","mute","isPlaying","scrollSpeed","playbackRate","frameRange","fps","numberOfFrames","videoCamera","panWorld","parallelScale","voiRange","lower","upper","getProperties","videoElement","muted","resetCamera","refreshRenderValues","canvasContext","fillRect","width","height","renderFrame","getNumberOfSlices","Math","round","duration","getFrameOfReferenceUID","src","resize","clientWidth","clientHeight","canvasToWorld","canvasPos","pan","worldToCanvasRatio","getWorldToCanvasRatio","panOffsetCanvas","subCanvasPos","worldPos","worldToCanvas","getRotation","canvasToIndex","transform","getTransform","invert","transformPoint","indexToCanvas","indexPos","customRenderViewportToCanvas","transformationMatrix","getMatrix","drawImage","resetTransform","IMAGE_RENDERED","viewportId","id","viewport","renderingEngineId","time","currentTime","frame","getFrameNumber","setFrameNumber","pause","renderWhilstPlaying","requestAnimationFrame","getContext","setAttribute","document","createElement","crossOrigin","addEventListeners","useCustomRenderingPipeline","addEventListener","ELEMENT_DISABLED","elementDisabledHandler","removeEventListeners","removeEventListener","remove","_getImageDataMetadata","imagePlaneModule","get","IMAGE_PLANE","imageId","rowCosines","columnCosines","rowCosineVec","fromValues","colCosineVec","scanAxisNormal","create","cross","origin","imagePositionPatient","xSpacing","columnPixelSpacing","ySpacing","rowPixelSpacing","xVoxels","columns","yVoxels","rows","zSpacing","zVoxels","hasPixelSpacing","bitsAllocated","numComps","direction","dimensions","spacing","numVoxels","setVideo","frameNumber","Array","isArray","rendered","IMAGE_URL","generalSeries","GENERAL_SERIES","modality","Modality","metadata","setVideoURL","then","cineRate","CINE","setFrameRange","undefined","videoURL","Promise","resolve","preload","loadedMetadataEventHandler","togglePlayPause","play","scroll","delta","newTime","seekEventListener","evt","start","paused","end","setTime","timeInSeconds","length","getFrameRange","setProperties","setPlaybackRate","setScrollSpeed","setVOI","rate","unit","SpeedUnit","FRAME","SECOND","resetProperties","getScalarData","context","canvasData","getImageData","data","scalarData","getRange","imageData","getDirection","getDimensions","getSpacing","worldToIndex","point","canvasPoint","pixelCoord","indexToWorld","calibration","preScale","scaled","hasImageURI","imageURI","framesMatch","match","frameRangeExtractor","testURI","substring","index","indexOf","setColorTransform","setWindowLevel","windowWidth","windowCenter","setAverageWhite","averageWhite","feFilter","white","maxWhite","max","scaleWhite","map","c","wlScale","wlDelta","style","filter","setCamera","camera","focalPoint","focalPointCanvas","canvasCenter","panWorldDelta","getCurrentImageId","current","replace","getCamera","canvasCenterWorld","parallelProjection","position","viewUp","viewPlaneNormal","getPan","worldPan","secondWorldToCanvasRatio","drawWidth","floor","drawHeight","xOffsetCanvas","yOffsetCanvas","xOffsetWorld","yOffsetWorld","getCanvasToWorldRatio","canvasToWorldRatio","halfCanvas","halfCanvasWorldCoordinates","translate","scale","_class"],"sources":["../../../src/RenderingEngine/VideoViewport.ts"],"sourcesContent":[null],"mappings":";AAAA,SAASA,IAAI,QAAQ,WAAW;AAChC,SACEC,MAAM,IAAIC,MAAM,EAChBC,aAAa,IAAIC,iBAAiB,EAClCC,eAAe,QACV,UAAU;AAWjB,OAAO,KAAKC,QAAQ,MAAM,aAAa;AACvC,SAASC,SAAS,QAAQ,2CAA2C;AACrE,SAASC,YAAY,QAAQ,cAAc;AAC3C,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,iBAAiB,QAAQ,WAAW;AAM7C,MAAMP,aAAc,SAAQM,QAAQ;EA6DlCE,YAAYC,KAAyB;IACnC,KAAK,CAAC;MACJ,GAAGA,KAAK;MACRC,MAAM,EAAED,KAAK,CAACC,MAAM,IAAIH,iBAAiB,CAACE,KAAK,CAACE,OAAO;KACxD,CAAC;IAvDI,KAAAC,UAAU,GAAG,CAAC;IACd,KAAAC,WAAW,GAAG,CAAC;IAEf,KAAAC,IAAI,GAAG,IAAI;IACX,KAAAC,IAAI,GAAG,IAAI;IACX,KAAAC,SAAS,GAAG,KAAK;IACjB,KAAAC,WAAW,GAAG,CAAC;IACf,KAAAC,YAAY,GAAG,CAAC;IAIhB,KAAAC,UAAU,GAAqB,CAAC,CAAC,EAAE,CAAC,CAAC;IASrC,KAAAC,GAAG,GAAG,EAAE;IAGR,KAAAC,cAAc,GAAG,CAAC;IAElB,KAAAC,WAAW,GAAwB;MACzCC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAChBC,aAAa,EAAE;KAChB;IAkBO,KAAAC,QAAQ,GAAa;MAC3BC,KAAK,EAAE,CAAC;MACRC,KAAK,EAAE;KACR;IA+UM,KAAAC,aAAa,GAAG,MAA8B;MACnD,OAAO;QACLd,IAAI,EAAE,IAAI,CAACe,YAAY,CAACf,IAAI;QAC5BgB,KAAK,EAAE,IAAI,CAACD,YAAY,CAACC,KAAK;QAC9BZ,YAAY,EAAE,IAAI,CAACA,YAAY;QAC/BD,WAAW,EAAE,IAAI,CAACA,WAAW;QAC7BQ,QAAQ,EAAE;UAAE,GAAG,IAAI,CAACA;QAAQ;OAC7B;IACH,CAAC;IA0NM,KAAAM,WAAW,GAAG,MAAc;MACjC,IAAI,CAACC,mBAAmB,EAAE;MAE1B,IAAI,CAACC,aAAa,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAACxB,MAAM,CAACyB,KAAK,EAAE,IAAI,CAACzB,MAAM,CAAC0B,MAAM,CAAC;MAExE,IAAI,IAAI,CAACpB,SAAS,KAAK,KAAK,EAAE;QAE5B,IAAI,CAACqB,WAAW,EAAE;;MAEpB,OAAO,IAAI;IACb,CAAC;IAEM,KAAAC,iBAAiB,GAAG,MAAa;MACtC,OAAOC,IAAI,CAACC,KAAK,CACd,IAAI,CAACX,YAAY,CAACY,QAAQ,GAAG,IAAI,CAACrB,GAAG,GAAI,IAAI,CAACH,WAAW,CAC3D;IACH,CAAC;IAEM,KAAAyB,sBAAsB,GAAG,MAAa;MAE3C,OAAO,IAAI,CAACb,YAAY,CAACc,GAAG;IAC9B,CAAC;IAEM,KAAAC,MAAM,GAAG,MAAW;MACzB,MAAMlC,MAAM,GAAG,IAAI,CAACA,MAAM;MAC1B,MAAM;QAAEmC,WAAW;QAAEC;MAAY,CAAE,GAAGpC,MAAM;MAG5C,IAAIA,MAAM,CAACyB,KAAK,KAAKU,WAAW,IAAInC,MAAM,CAAC0B,MAAM,KAAKU,YAAY,EAAE;QAClEpC,MAAM,CAACyB,KAAK,GAAGU,WAAW;QAC1BnC,MAAM,CAAC0B,MAAM,GAAGU,YAAY;;MAG9B,IAAI,CAACd,mBAAmB,EAAE;MAE1B,IAAI,IAAI,CAAChB,SAAS,KAAK,KAAK,EAAE;QAE5B,IAAI,CAACqB,WAAW,EAAE;;IAEtB,CAAC;IAQM,KAAAU,aAAa,GAAIC,SAAiB,IAAY;MACnD,MAAMC,GAAG,GAAW,IAAI,CAAC3B,WAAW,CAACC,QAAQ;MAC7C,MAAM2B,kBAAkB,GAAW,IAAI,CAACC,qBAAqB,EAAE;MAE/D,MAAMC,eAAe,GAAW,CAC9BH,GAAG,CAAC,CAAC,CAAC,GAAGC,kBAAkB,EAC3BD,GAAG,CAAC,CAAC,CAAC,GAAGC,kBAAkB,CAC5B;MAED,MAAMG,YAAY,GAAW,CAC3BL,SAAS,CAAC,CAAC,CAAC,GAAGI,eAAe,CAAC,CAAC,CAAC,EACjCJ,SAAS,CAAC,CAAC,CAAC,GAAGI,eAAe,CAAC,CAAC,CAAC,CAClC;MAED,MAAME,QAAQ,GAAW,CACvBD,YAAY,CAAC,CAAC,CAAC,GAAGH,kBAAkB,EACpCG,YAAY,CAAC,CAAC,CAAC,GAAGH,kBAAkB,EACpC,CAAC,CACF;MAED,OAAOI,QAAQ;IACjB,CAAC;IAQM,KAAAC,aAAa,GAAID,QAAgB,IAAY;MAClD,MAAML,GAAG,GAAW,IAAI,CAAC3B,WAAW,CAACC,QAAQ;MAC7C,MAAM2B,kBAAkB,GAAW,IAAI,CAACC,qBAAqB,EAAE;MAE/D,MAAME,YAAY,GAAW,CAC3B,CAACC,QAAQ,CAAC,CAAC,CAAC,GAAGL,GAAG,CAAC,CAAC,CAAC,IAAIC,kBAAkB,EAC3C,CAACI,QAAQ,CAAC,CAAC,CAAC,GAAGL,GAAG,CAAC,CAAC,CAAC,IAAIC,kBAAkB,CAC5C;MAED,MAAMF,SAAS,GAAW,CAACK,YAAY,CAAC,CAAC,CAAC,EAAEA,YAAY,CAAC,CAAC,CAAC,CAAC;MAE5D,OAAOL,SAAS;IAClB,CAAC;IAOM,KAAAQ,WAAW,GAAG,MAAM,CAAC;IAElB,KAAAC,aAAa,GAAIT,SAAiB,IAAY;MACtD,MAAMU,SAAS,GAAG,IAAI,CAACC,YAAY,EAAE;MACrCD,SAAS,CAACE,MAAM,EAAE;MAElB,OAAOF,SAAS,CAACG,cAAc,CAACb,SAAS,CAAC;IAC5C,CAAC;IAES,KAAAc,aAAa,GAAIC,QAAgB,IAAY;MACrD,MAAML,SAAS,GAAG,IAAI,CAACC,YAAY,EAAE;MACrC,OAAOD,SAAS,CAACG,cAAc,CAACE,QAAQ,CAAC;IAC3C,CAAC;IAwCM,KAAAC,4BAA4B,GAAG,MAAK;MACzC,IAAI,CAAC3B,WAAW,EAAE;IACpB,CAAC;IA8BO,KAAAA,WAAW,GAAG,MAAK;MACzB,MAAMqB,SAAS,GAAG,IAAI,CAACC,YAAY,EAAE;MACrC,MAAMM,oBAAoB,GAAaP,SAAS,CAACQ,SAAS,EAAE;MAE5D,IAAI,CAACjC,aAAa,CAACyB,SAAS,CAC1BO,oBAAoB,CAAC,CAAC,CAAC,EACvBA,oBAAoB,CAAC,CAAC,CAAC,EACvBA,oBAAoB,CAAC,CAAC,CAAC,EACvBA,oBAAoB,CAAC,CAAC,CAAC,EACvBA,oBAAoB,CAAC,CAAC,CAAC,EACvBA,oBAAoB,CAAC,CAAC,CAAC,CACxB;MAED,IAAI,CAAChC,aAAa,CAACkC,SAAS,CAC1B,IAAI,CAACtC,YAAY,EACjB,CAAC,EACD,CAAC,EACD,IAAI,CAACjB,UAAU,EACf,IAAI,CAACC,WAAW,CACjB;MAED,IAAI,CAACoB,aAAa,CAACmC,cAAc,EAAE;MAEnC/D,YAAY,CAAC,IAAI,CAACM,OAAO,EAAEZ,MAAM,CAACsE,cAAc,EAAE;QAChD1D,OAAO,EAAE,IAAI,CAACA,OAAO;QACrB2D,UAAU,EAAE,IAAI,CAACC,EAAE;QACnBC,QAAQ,EAAE,IAAI;QACdC,iBAAiB,EAAE,IAAI,CAACA,iBAAiB;QACzCC,IAAI,EAAE,IAAI,CAAC7C,YAAY,CAAC8C,WAAW;QACnClC,QAAQ,EAAE,IAAI,CAACZ,YAAY,CAACY;OAC7B,CAAC;MAEF,MAAMmC,KAAK,GAAG,IAAI,CAACC,cAAc,EAAE;MACnC,IAAI,IAAI,CAAC7D,SAAS,EAAE;QAClB,IAAI4D,KAAK,GAAG,IAAI,CAACzD,UAAU,CAAC,CAAC,CAAC,EAAE;UAC9B,IAAI,CAAC2D,cAAc,CAAC,IAAI,CAAC3D,UAAU,CAAC,CAAC,CAAC,CAAC;SACxC,MAAM,IAAIyD,KAAK,GAAG,IAAI,CAACzD,UAAU,CAAC,CAAC,CAAC,EAAE;UACrC,IAAI,IAAI,CAACL,IAAI,EAAE;YACb,IAAI,CAACgE,cAAc,CAAC,IAAI,CAAC3D,UAAU,CAAC,CAAC,CAAC,CAAC;WACxC,MAAM;YACL,IAAI,CAAC4D,KAAK,EAAE;;;;IAIpB,CAAC;IAEO,KAAAC,mBAAmB,GAAG,MAAK;MACjC,IAAI,CAAC3C,WAAW,EAAE;MAGlB,IAAI,IAAI,CAACrB,SAAS,EAAE;QAClBiE,qBAAqB,CAAC,IAAI,CAACD,mBAAmB,CAAC;;IAEnD,CAAC;IAlxBC,IAAI,CAAC/C,aAAa,GAAG,IAAI,CAACvB,MAAM,CAACwE,UAAU,CAAC,IAAI,CAAC;IACjD,IAAI,CAACT,iBAAiB,GAAGhE,KAAK,CAACgE,iBAAiB;IAEhD,IAAI,CAAC9D,OAAO,CAACwE,YAAY,CAAC,mBAAmB,EAAE,IAAI,CAACZ,EAAE,CAAC;IACvD,IAAI,CAAC5D,OAAO,CAACwE,YAAY,CACvB,2BAA2B,EAC3B,IAAI,CAACV,iBAAiB,CACvB;IAED,IAAI,CAAC5C,YAAY,GAAGuD,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;IACnD,IAAI,CAACxD,YAAY,CAACC,KAAK,GAAG,IAAI,CAACf,IAAI;IACnC,IAAI,CAACc,YAAY,CAACf,IAAI,GAAG,IAAI,CAACA,IAAI;IAClC,IAAI,CAACe,YAAY,CAACyD,WAAW,GAAG,WAAW;IAE3C,IAAI,CAACC,iBAAiB,EAAE;IACxB,IAAI,CAAC3C,MAAM,EAAE;EACf;EAEO,WAAW4C,0BAA0BA,CAAA;IAC1C,OAAO,IAAI;EACb;EAEQD,iBAAiBA,CAAA;IACvB,IAAI,CAAC7E,MAAM,CAAC+E,gBAAgB,CAC1B1F,MAAM,CAAC2F,gBAAgB,EACvB,IAAI,CAACC,sBAAsB,CAC5B;EACH;EAEQC,oBAAoBA,CAAA;IAC1B,IAAI,CAAClF,MAAM,CAACmF,mBAAmB,CAC7B9F,MAAM,CAAC2F,gBAAgB,EACvB,IAAI,CAACC,sBAAsB,CAC5B;EACH;EAEQA,sBAAsBA,CAAA;IAC5B,IAAI,CAACC,oBAAoB,EAAE;IAC3B,IAAI,CAAC/D,YAAY,CAACiE,MAAM,EAAE;EAC5B;EAEQC,qBAAqBA,CAAA;IAC3B,MAAMC,gBAAgB,GAAG7F,QAAQ,CAAC8F,GAAG,CACnC/F,eAAe,CAACgG,WAAW,EAC3B,IAAI,CAACC,OAAO,CACb;IAED,IAAIC,UAAU,GAAWJ,gBAAgB,CAACI,UAAU;IACpD,IAAIC,aAAa,GAAWL,gBAAgB,CAACK,aAAa;IAG1D,IAAID,UAAU,IAAI,IAAI,IAAIC,aAAa,IAAI,IAAI,EAAE;MAC/CD,UAAU,GAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MAC9BC,aAAa,GAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;IAGnC,MAAMC,YAAY,GAAGzG,IAAI,CAAC0G,UAAU,CAClCH,UAAU,CAAC,CAAC,CAAC,EACbA,UAAU,CAAC,CAAC,CAAC,EACbA,UAAU,CAAC,CAAC,CAAC,CACd;IACD,MAAMI,YAAY,GAAG3G,IAAI,CAAC0G,UAAU,CAClCF,aAAa,CAAC,CAAC,CAAC,EAChBA,aAAa,CAAC,CAAC,CAAC,EAChBA,aAAa,CAAC,CAAC,CAAC,CACjB;IACD,MAAMI,cAAc,GAAG5G,IAAI,CAAC6G,MAAM,EAAE;IACpC7G,IAAI,CAAC8G,KAAK,CAACF,cAAc,EAAEH,YAAY,EAAEE,YAAY,CAAC;IAEtD,IAAII,MAAM,GAAGZ,gBAAgB,CAACa,oBAAoB;IAElD,IAAID,MAAM,IAAI,IAAI,EAAE;MAClBA,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;IAGpB,MAAME,QAAQ,GAAGd,gBAAgB,CAACe,kBAAkB,IAAI,CAAC;IACzD,MAAMC,QAAQ,GAAGhB,gBAAgB,CAACiB,eAAe,IAAI,CAAC;IACtD,MAAMC,OAAO,GAAGlB,gBAAgB,CAACmB,OAAO;IACxC,MAAMC,OAAO,GAAGpB,gBAAgB,CAACqB,IAAI;IAErC,MAAMC,QAAQ,GAAG,CAAC;IAClB,MAAMC,OAAO,GAAG,CAAC;IAEjB,IAAI,CAACC,eAAe,GAAG,CAAC,CAACxB,gBAAgB,CAACe,kBAAkB;IAC5D,OAAO;MACLU,aAAa,EAAE,CAAC;MAChBC,QAAQ,EAAE,CAAC;MACXd,MAAM;MACNe,SAAS,EAAE,CAAC,GAAGrB,YAAY,EAAE,GAAGE,YAAY,EAAE,GAAGC,cAAc,CAAC;MAChEmB,UAAU,EAAE,CAACV,OAAO,EAAEE,OAAO,EAAEG,OAAO,CAAC;MACvCM,OAAO,EAAE,CAACf,QAAQ,EAAEE,QAAQ,EAAEM,QAAQ,CAAC;MACvCE,eAAe,EAAE,IAAI,CAACA,eAAe;MACrCM,SAAS,EAAEZ,OAAO,GAAGE,OAAO,GAAGG,OAAO;MACtCvB;KACD;EACH;EAOO+B,QAAQA,CAAC5B,OAAe,EAAE6B,WAAoB;IACnD,IAAI,CAAC7B,OAAO,GAAG8B,KAAK,CAACC,OAAO,CAAC/B,OAAO,CAAC,GAAGA,OAAO,CAAC,CAAC,CAAC,GAAGA,OAAO;IAC5D,MAAM;MAAEgC;IAAQ,CAAE,GAAGhI,QAAQ,CAAC8F,GAAG,CAAC/F,eAAe,CAACkI,SAAS,EAAEjC,OAAO,CAAC;IACrE,MAAMkC,aAAa,GAAGlI,QAAQ,CAAC8F,GAAG,CAAC/F,eAAe,CAACoI,cAAc,EAAEnC,OAAO,CAAC;IAC3E,IAAI,CAACoC,QAAQ,GAAGF,aAAa,EAAEG,QAAQ;IACvC,IAAI,CAACC,QAAQ,GAAG,IAAI,CAAC1C,qBAAqB,EAAE;IAE5C,OAAO,IAAI,CAAC2C,WAAW,CAACP,QAAQ,CAAC,CAACQ,IAAI,CAAC,MAAK;MAC1C,IAAI;QAAEC,QAAQ;QAAEvH;MAAc,CAAE,GAAGlB,QAAQ,CAAC8F,GAAG,CAC7C/F,eAAe,CAAC2I,IAAI,EACpB1C,OAAO,CACR;MACD,IAAI,CAAC9E,cAAc,EAAE;QACnBA,cAAc,GAAGkB,IAAI,CAACC,KAAK,CACzB,IAAI,CAACX,YAAY,CAACY,QAAQ,IAAImG,QAAQ,IAAI,EAAE,CAAC,CAC9C;;MAEH,IAAI,CAACA,QAAQ,EAAE;QACbA,QAAQ,GAAGrG,IAAI,CAACC,KAAK,CAACnB,cAAc,GAAG,IAAI,CAACQ,YAAY,CAACY,QAAQ,CAAC;;MAEpE,IAAI,CAACrB,GAAG,GAAGwH,QAAQ;MACnB,IAAI,CAACvH,cAAc,GAAGA,cAAc;MAEpC,IAAI,CAACyH,aAAa,CAAC,CAAC,CAAC,EAAEzH,cAAc,CAAC,CAAC;MACvC,IAAI2G,WAAW,KAAKe,SAAS,EAAE;QAC7B,IAAI,CAAChE,KAAK,EAAE;QACZ,IAAI,CAACD,cAAc,CAACkD,WAAW,CAAC;;IAEpC,CAAC,CAAC;EACJ;EAEO,MAAMU,WAAWA,CAACM,QAAgB;IACvC,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAI;MAC7B,IAAI,CAACrH,YAAY,CAACc,GAAG,GAAGqG,QAAQ;MAChC,IAAI,CAACnH,YAAY,CAACsH,OAAO,GAAG,MAAM;MAElC,MAAMC,0BAA0B,GAAGA,CAAA,KAAK;QACtC,IAAI,CAACxI,UAAU,GAAG,IAAI,CAACiB,YAAY,CAACjB,UAAU;QAC9C,IAAI,CAACC,WAAW,GAAG,IAAI,CAACgB,YAAY,CAAChB,WAAW;QAChD,IAAI,CAACgB,YAAY,CAACgE,mBAAmB,CACnC,gBAAgB,EAChBuD,0BAA0B,CAC3B;QAED,IAAI,CAACpH,mBAAmB,EAAE;QAE1BkH,OAAO,CAAC,IAAI,CAAC;MACf,CAAC;MAED,IAAI,CAACrH,YAAY,CAAC4D,gBAAgB,CAChC,gBAAgB,EAChB2D,0BAA0B,CAC3B;IACH,CAAC,CAAC;EACJ;EAEOC,eAAeA,CAAA;IACpB,IAAI,IAAI,CAACrI,SAAS,EAAE;MAClB,IAAI,CAAC+D,KAAK,EAAE;MACZ,OAAO,KAAK;KACb,MAAM;MACL,IAAI,CAACuE,IAAI,EAAE;MACX,OAAO,IAAI;;EAEf;EAEOA,IAAIA,CAAA;IACT,IAAI,CAAC,IAAI,CAACtI,SAAS,EAAE;MACnB,IAAI,CAACa,YAAY,CAACyH,IAAI,EAAE;MACxB,IAAI,CAACtI,SAAS,GAAG,IAAI;MACrB,IAAI,CAACgE,mBAAmB,EAAE;;EAE9B;EAEO,MAAMD,KAAKA,CAAA;IAChB,MAAM,IAAI,CAAClD,YAAY,CAACkD,KAAK,EAAE;IAC/B,IAAI,CAAC/D,SAAS,GAAG,KAAK;EACxB;EAEO,MAAMuI,MAAMA,CAACC,KAAK,GAAG,CAAC;IAC3B,MAAM,IAAI,CAACzE,KAAK,EAAE;IAElB,MAAMlD,YAAY,GAAG,IAAI,CAACA,YAAY;IACtC,MAAMQ,WAAW,GAAG,IAAI,CAACA,WAAW;IAEpC,MAAMsC,WAAW,GAAG9C,YAAY,CAAC8C,WAAW;IAC5C,MAAM8E,OAAO,GAAG9E,WAAW,GAAI6E,KAAK,GAAG,IAAI,CAACvI,WAAW,GAAI,IAAI,CAACG,GAAG;IAEnES,YAAY,CAAC8C,WAAW,GAAG8E,OAAO;IAGlC,MAAMC,iBAAiB,GAAIC,GAAG,IAAI;MAChCtH,WAAW,EAAE;MAEbR,YAAY,CAACgE,mBAAmB,CAAC,QAAQ,EAAE6D,iBAAiB,CAAC;IAC/D,CAAC;IAED7H,YAAY,CAAC4D,gBAAgB,CAAC,QAAQ,EAAEiE,iBAAiB,CAAC;EAC5D;EAEO,MAAME,KAAKA,CAAA;IAChB,MAAM/H,YAAY,GAAG,IAAI,CAACA,YAAY;IACtC,MAAMQ,WAAW,GAAG,IAAI,CAACA,WAAW;IAEpCR,YAAY,CAAC8C,WAAW,GAAG,CAAC;IAE5B,IAAI9C,YAAY,CAACgI,MAAM,EAAE;MAEvB,MAAMH,iBAAiB,GAAIC,GAAG,IAAI;QAChCtH,WAAW,EAAE;QAEbR,YAAY,CAACgE,mBAAmB,CAAC,QAAQ,EAAE6D,iBAAiB,CAAC;MAC/D,CAAC;MAED7H,YAAY,CAAC4D,gBAAgB,CAAC,QAAQ,EAAEiE,iBAAiB,CAAC;;EAE9D;EAEO,MAAMI,GAAGA,CAAA;IACd,MAAMjI,YAAY,GAAG,IAAI,CAACA,YAAY;IACtC,MAAMQ,WAAW,GAAG,IAAI,CAACA,WAAW;IAEpCR,YAAY,CAAC8C,WAAW,GAAG9C,YAAY,CAACY,QAAQ;IAEhD,IAAIZ,YAAY,CAACgI,MAAM,EAAE;MAEvB,MAAMH,iBAAiB,GAAIC,GAAG,IAAI;QAChCtH,WAAW,EAAE;QAEbR,YAAY,CAACgE,mBAAmB,CAAC,QAAQ,EAAE6D,iBAAiB,CAAC;MAC/D,CAAC;MAED7H,YAAY,CAAC4D,gBAAgB,CAAC,QAAQ,EAAEiE,iBAAiB,CAAC;;EAE9D;EAEO,MAAMK,OAAOA,CAACC,aAAqB;IACxC,MAAMnI,YAAY,GAAG,IAAI,CAACA,YAAY;IACtC,MAAMQ,WAAW,GAAG,IAAI,CAACA,WAAW;IAEpCR,YAAY,CAAC8C,WAAW,GAAGqF,aAAa;IAExC,IAAInI,YAAY,CAACgI,MAAM,EAAE;MAEvB,MAAMH,iBAAiB,GAAIC,GAAG,IAAI;QAChCtH,WAAW,EAAE;QAEbR,YAAY,CAACgE,mBAAmB,CAAC,QAAQ,EAAE6D,iBAAiB,CAAC;MAC/D,CAAC;MAED7H,YAAY,CAAC4D,gBAAgB,CAAC,QAAQ,EAAEiE,iBAAiB,CAAC;;EAE9D;EAGO,MAAM5E,cAAcA,CAACF,KAAa;IACvC,IAAI,CAACmF,OAAO,CAAC,CAACnF,KAAK,GAAG,CAAC,IAAI,IAAI,CAACxD,GAAG,CAAC;EACtC;EAQO0H,aAAaA,CAAC3H,UAAoB;IACvC,IAAI,CAACA,UAAU,EAAE;MACf,IAAI,CAACA,UAAU,GAAG,CAAC,CAAC,EAAE,IAAI,CAACE,cAAc,CAAC;MAC1C;;IAEF,IAAIF,UAAU,CAAC8I,MAAM,KAAK,CAAC,IAAI9I,UAAU,CAAC,CAAC,CAAC,KAAKA,UAAU,CAAC,CAAC,CAAC,EAAE;MAC9D;;IAEF,IAAI,CAACA,UAAU,GAAG,CAACA,UAAU,CAAC,CAAC,CAAC,EAAEA,UAAU,CAAC,CAAC,CAAC,CAAC;EAClD;EAEO+I,aAAaA,CAAA;IAClB,OAAO,IAAI,CAAC/I,UAAU;EACxB;EAEOgJ,aAAaA,CAAC1J,KAA8B;IACjD,IAAIA,KAAK,CAACK,IAAI,KAAKiI,SAAS,EAAE;MAC5B,IAAI,CAAClH,YAAY,CAACf,IAAI,GAAGL,KAAK,CAACK,IAAI;;IAGrC,IAAIL,KAAK,CAACqB,KAAK,KAAKiH,SAAS,EAAE;MAC7B,IAAI,CAAClH,YAAY,CAACC,KAAK,GAAGrB,KAAK,CAACqB,KAAK;;IAGvC,IAAIrB,KAAK,CAACS,YAAY,KAAK6H,SAAS,EAAE;MACpC,IAAI,CAACqB,eAAe,CAAC3J,KAAK,CAACS,YAAY,CAAC;;IAG1C,IAAIT,KAAK,CAACQ,WAAW,KAAK8H,SAAS,EAAE;MACnC,IAAI,CAACsB,cAAc,CAAC5J,KAAK,CAACQ,WAAW,CAAC;;IAGxC,IAAIR,KAAK,CAACgB,QAAQ,EAAE;MAClB,IAAI,CAAC6I,MAAM,CAAC7J,KAAK,CAACgB,QAAQ,CAAC;;EAE/B;EAEO2I,eAAeA,CAACG,IAAI,GAAG,CAAC;IAC7B,IAAI,CAACrJ,YAAY,GAAGqJ,IAAI;IAExB,IAAIA,IAAI,GAAG,MAAM,EAAE;MACjB,IAAI,CAACxF,KAAK,EAAE;MACZ;;IAEF,IAAI,CAAC,IAAI,CAAClD,YAAY,EAAE;MACtB;;IAEF,IAAI,CAACA,YAAY,CAACX,YAAY,GAAGqJ,IAAI;IACrC,IAAI,CAACjB,IAAI,EAAE;EACb;EAEOe,cAAcA,CACnBpJ,WAAW,GAAG,CAAC,EACfuJ,IAAI,GAAGvK,iBAAiB,CAACwK,SAAS,CAACC,KAAK;IAExC,IAAI,CAACzJ,WAAW,GACduJ,IAAI,KAAKvK,iBAAiB,CAACwK,SAAS,CAACE,MAAM,GACvC1J,WAAW,GAAG,IAAI,CAACG,GAAG,GACtBH,WAAW;EACnB;EAYO2J,eAAeA,CAAA;IACpB,IAAI,CAACT,aAAa,CAAC;MACjBrJ,IAAI,EAAE,KAAK;MACXgB,KAAK,EAAE;KACR,CAAC;EACJ;EAEU+I,aAAaA,CAAA;IACrB,MAAMnK,MAAM,GAAG0E,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/C3E,MAAM,CAACyB,KAAK,GAAG,IAAI,CAACvB,UAAU;IAC9BF,MAAM,CAAC0B,MAAM,GAAG,IAAI,CAACvB,WAAW;IAChC,MAAMiK,OAAO,GAAGpK,MAAM,CAACwE,UAAU,CAAC,IAAI,CAAC;IACvC4F,OAAO,CAAC3G,SAAS,CAAC,IAAI,CAACtC,YAAY,EAAE,CAAC,EAAE,CAAC,CAAC;IAC1C,MAAMkJ,UAAU,GAAGD,OAAO,CAACE,YAAY,CACrC,CAAC,EACD,CAAC,EACD,IAAI,CAACpK,UAAU,EACf,IAAI,CAACC,WAAW,CACjB;IACD,MAAM;MAAEoK,IAAI,EAAEC;IAAU,CAAE,GAAGH,UAAU;IACtCG,UAAkB,CAACC,QAAQ,GAAG,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC;IAC7C,OAAOD,UAAU;EACnB;EAEOF,YAAYA,CAAA;IACjB,MAAM;MAAEvC;IAAQ,CAAE,GAAG,IAAI;IAEzB,MAAMZ,OAAO,GAAGY,QAAQ,CAACZ,OAAO;IAEhC,OAAO;MACLD,UAAU,EAAEa,QAAQ,CAACb,UAAU;MAC/BC,OAAO;MACPjB,MAAM,EAAE6B,QAAQ,CAAC7B,MAAM;MACvBe,SAAS,EAAEc,QAAQ,CAACd,SAAS;MAC7Bc,QAAQ,EAAE;QAAED,QAAQ,EAAE,IAAI,CAACD;MAAQ,CAAE;MACrCsC,aAAa,EAAEA,CAAA,KAAM,IAAI,CAACA,aAAa,EAAE;MACzCO,SAAS,EAAE;QACTC,YAAY,EAAEA,CAAA,KAAM5C,QAAQ,CAACd,SAAS;QACtC2D,aAAa,EAAEA,CAAA,KAAM7C,QAAQ,CAACb,UAAU;QACxCuD,QAAQ,EAAEA,CAAA,KAAM,CAAC,CAAC,EAAE,GAAG,CAAC;QACxBN,aAAa,EAAEA,CAAA,KAAM,IAAI,CAACA,aAAa,EAAE;QACzCU,UAAU,EAAEA,CAAA,KAAM9C,QAAQ,CAACZ,OAAO;QAClC2D,YAAY,EAAGC,KAAa,IAAI;UAC9B,MAAMC,WAAW,GAAG,IAAI,CAACnI,aAAa,CAACkI,KAAK,CAAC;UAC7C,MAAME,UAAU,GAAG,IAAI,CAAClI,aAAa,CAACiI,WAAW,CAAC;UAClD,OAAO,CAACC,UAAU,CAAC,CAAC,CAAC,EAAEA,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAC1C,CAAC;QACDC,YAAY,EAAGH,KAAa,IAAI;UAC9B,MAAMC,WAAW,GAAG,IAAI,CAAC5H,aAAa,CAAC,CAAC2H,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;UAC5D,OAAO,IAAI,CAAC1I,aAAa,CAAC2I,WAAW,CAAC;QACxC;OACD;MACDlE,eAAe,EAAE,IAAI,CAACA,eAAe;MACrCqE,WAAW,EAAE,IAAI,CAACA,WAAW;MAC7BC,QAAQ,EAAE;QACRC,MAAM,EAAE;;KAEX;EACH;EAmBOC,WAAWA,CAACC,QAAgB;IAEjC,MAAMC,WAAW,GAAGD,QAAQ,CAACE,KAAK,CAACnM,aAAa,CAACoM,mBAAmB,CAAC;IACrE,MAAMC,OAAO,GAAGH,WAAW,GACvBD,QAAQ,CAACK,SAAS,CAAC,CAAC,EAAEJ,WAAW,CAACK,KAAK,CAAC,GACxCN,QAAQ;IACZ,OAAO,IAAI,CAAC9F,OAAO,CAACqG,OAAO,CAACH,OAAO,CAAC,KAAK,CAAC,CAAC;EAC7C;EAEO/B,MAAMA,CAAC7I,QAAkB;IAC9B,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACgL,iBAAiB,EAAE;EAC1B;EAEOC,cAAcA,CAACC,WAAW,GAAG,GAAG,EAAEC,YAAY,GAAG,GAAG;IACzD,MAAMlL,KAAK,GAAGkL,YAAY,GAAGD,WAAW,GAAG,CAAC;IAC5C,MAAMhL,KAAK,GAAGiL,YAAY,GAAGD,WAAW,GAAG,CAAC,GAAG,CAAC;IAChD,IAAI,CAACrC,MAAM,CAAC;MAAE5I,KAAK;MAAEC;IAAK,CAAE,CAAC;IAC7B,IAAI,CAAC8K,iBAAiB,EAAE;EAC1B;EAEOI,eAAeA,CAACC,YAAsC;IAC3D,IAAI,CAACA,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACL,iBAAiB,EAAE;EAC1B;EAEUA,iBAAiBA,CAAA;IACzB,IAAI,CAAC,IAAI,CAAChL,QAAQ,IAAI,CAAC,IAAI,CAACqL,YAAY,EAAE;MACxC,IAAI,CAACC,QAAQ,GAAG,IAAI;MACpB;;IAEF,MAAMC,KAAK,GAAG,IAAI,CAACF,YAAY,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IAClD,MAAMG,QAAQ,GAAG1K,IAAI,CAAC2K,GAAG,CAAC,GAAGF,KAAK,CAAC;IACnC,MAAMG,UAAU,GAAGH,KAAK,CAACI,GAAG,CAAEC,CAAC,IAAKJ,QAAQ,GAAGI,CAAC,CAAC;IACjD,MAAM;MAAE3L,KAAK,GAAG,CAAC;MAAEC,KAAK,GAAG;IAAG,CAAE,GAAG,IAAI,CAACF,QAAQ,IAAI,EAAE;IACtD,MAAM6L,OAAO,GAAG,CAAC3L,KAAK,GAAGD,KAAK,GAAG,CAAC,IAAI,GAAG;IACzC,MAAM6L,OAAO,GAAG7L,KAAK,GAAG,GAAG;IAC3B,IAAI,CAACqL,QAAQ,GAAG;;;;;YAKRI,UAAU,CAAC,CAAC,CAAC,GAAGG,OAAO,UAAUC,OAAO;cACtCJ,UAAU,CAAC,CAAC,CAAC,GAAGG,OAAO,QAAQC,OAAO;gBACpCJ,UAAU,CAAC,CAAC,CAAC,GAAGG,OAAO,MAAMC,OAAO;;;sBAG9B;IAElB,IAAI,CAAC7M,MAAM,CAAC8M,KAAK,CAACC,MAAM,GAAG,IAAI,CAACV,QAAQ;EAC1C;EAEOW,SAASA,CAACC,MAAe;IAC9B,MAAM;MAAEnM,aAAa;MAAEoM;IAAU,CAAE,GAAGD,MAAM;IAI5C,IAAIA,MAAM,CAACnM,aAAa,KAAKuH,SAAS,EAAE;MACtC,IAAI,CAACzH,WAAW,CAACE,aAAa,GAC5B,IAAI,CAACb,OAAO,CAACmC,YAAY,GAAG,CAAC,GAAGtB,aAAa;;IAGjD,IAAIoM,UAAU,KAAK7E,SAAS,EAAE;MAC5B,MAAM8E,gBAAgB,GAAG,IAAI,CAACtK,aAAa,CAACqK,UAAU,CAAC;MACvD,MAAME,YAAY,GAAW,CAC3B,IAAI,CAACnN,OAAO,CAACkC,WAAW,GAAG,CAAC,EAC5B,IAAI,CAAClC,OAAO,CAACmC,YAAY,GAAG,CAAC,CAC9B;MAED,MAAMiL,aAAa,GAAW,CAC5B,CAACF,gBAAgB,CAAC,CAAC,CAAC,GAAGC,YAAY,CAAC,CAAC,CAAC,IACpC,IAAI,CAACxM,WAAW,CAACE,aAAa,EAChC,CAACqM,gBAAgB,CAAC,CAAC,CAAC,GAAGC,YAAY,CAAC,CAAC,CAAC,IACpC,IAAI,CAACxM,WAAW,CAACE,aAAa,CACjC;MAED,IAAI,CAACF,WAAW,CAACC,QAAQ,GAAG,CAC1B,IAAI,CAACD,WAAW,CAACC,QAAQ,CAAC,CAAC,CAAC,GAAGwM,aAAa,CAAC,CAAC,CAAC,EAC/C,IAAI,CAACzM,WAAW,CAACC,QAAQ,CAAC,CAAC,CAAC,GAAGwM,aAAa,CAAC,CAAC,CAAC,CAChD;;IAGH,IAAI,CAAC9L,aAAa,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAACxB,MAAM,CAACyB,KAAK,EAAE,IAAI,CAACzB,MAAM,CAAC0B,MAAM,CAAC;IAExE,IAAI,IAAI,CAACpB,SAAS,KAAK,KAAK,EAAE;MAC5B,IAAI,CAACqB,WAAW,EAAE;;EAEtB;EAcO2L,iBAAiBA,CAAA;IACtB,MAAMC,OAAO,GAAG,IAAI,CAAC9H,OAAO,CAAC+H,OAAO,CAClC,WAAW,EACX,IAAI,CAAClN,SAAS,GACV,aAAa,IAAI,CAACK,cAAc,EAAE,GAClC,WAAW,IAAI,CAACwD,cAAc,EAAE,EAAE,CACvC;IACD,OAAOoJ,OAAO;EAChB;EAEOpJ,cAAcA,CAAA;IAEnB,OAAO,CAAC,GAAGtC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACX,YAAY,CAAC8C,WAAW,GAAG,IAAI,CAACvD,GAAG,CAAC;EACjE;EAEO+M,SAASA,CAAA;IACd,MAAM;MAAE3M;IAAa,CAAE,GAAG,IAAI,CAACF,WAAW;IAE1C,MAAMwM,YAAY,GAAW,CAC3B,IAAI,CAACnN,OAAO,CAACkC,WAAW,GAAG,CAAC,EAC5B,IAAI,CAAClC,OAAO,CAACmC,YAAY,GAAG,CAAC,CAC9B;IAKD,MAAMsL,iBAAiB,GAAG,IAAI,CAACrL,aAAa,CAAC+K,YAAY,CAAC;IAE1D,OAAO;MACLO,kBAAkB,EAAE,IAAI;MACxBT,UAAU,EAAEQ,iBAAiB;MAC7BE,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACnBC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MAClB/M,aAAa,EAAE,IAAI,CAACb,OAAO,CAACmC,YAAY,GAAG,CAAC,GAAGtB,aAAa;MAC5DgN,eAAe,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;KAC1B;EACH;EA4FOC,MAAMA,CAAA;IACX,MAAMC,QAAQ,GAAG,IAAI,CAACpN,WAAW,CAACC,QAAQ;IAC1C,OAAO,CAACmN,QAAQ,CAAC,CAAC,CAAC,EAAEA,QAAQ,CAAC,CAAC,CAAC,CAAC;EACnC;EAgBQ1M,mBAAmBA,CAAA;IAGzB,IAAIkB,kBAAkB,GAAG,IAAI,CAACxC,MAAM,CAACyB,KAAK,GAAG,IAAI,CAACvB,UAAU;IAE5D,IAAI,IAAI,CAACC,WAAW,GAAGqC,kBAAkB,GAAG,IAAI,CAACxC,MAAM,CAAC0B,MAAM,EAAE;MAG9D,MAAMuM,wBAAwB,GAC5B,IAAI,CAACjO,MAAM,CAAC0B,MAAM,IAAI,IAAI,CAACvB,WAAW,GAAGqC,kBAAkB,CAAC;MAE9DA,kBAAkB,IAAIyL,wBAAwB;;IAKhD,MAAMC,SAAS,GAAGrM,IAAI,CAACsM,KAAK,CAAC,IAAI,CAACjO,UAAU,GAAGsC,kBAAkB,CAAC;IAClE,MAAM4L,UAAU,GAAGvM,IAAI,CAACsM,KAAK,CAAC,IAAI,CAAChO,WAAW,GAAGqC,kBAAkB,CAAC;IAGpE,MAAM6L,aAAa,GAAG,IAAI,CAACrO,MAAM,CAACyB,KAAK,GAAG,CAAC,GAAGyM,SAAS,GAAG,CAAC;IAC3D,MAAMI,aAAa,GAAG,IAAI,CAACtO,MAAM,CAAC0B,MAAM,GAAG,CAAC,GAAG0M,UAAU,GAAG,CAAC;IAE7D,MAAMG,YAAY,GAAGF,aAAa,GAAG7L,kBAAkB;IACvD,MAAMgM,YAAY,GAAGF,aAAa,GAAG9L,kBAAkB;IAEvD,IAAI,CAAC5B,WAAW,CAACC,QAAQ,GAAG,CAAC0N,YAAY,EAAEC,YAAY,CAAC;IACxD,IAAI,CAAC5N,WAAW,CAACE,aAAa,GAAG0B,kBAAkB;EACrD;EAEQC,qBAAqBA,CAAA;IAC3B,OAAO,IAAI,CAAC7B,WAAW,CAACE,aAAa;EACvC;EAEQ2N,qBAAqBA,CAAA;IAC3B,OAAO,GAAG,GAAG,IAAI,CAAC7N,WAAW,CAACE,aAAa;EAC7C;EAMUmC,YAAYA,CAAA;IACpB,MAAMpC,QAAQ,GAAW,IAAI,CAACD,WAAW,CAACC,QAAQ;IAClD,MAAM2B,kBAAkB,GAAW,IAAI,CAACC,qBAAqB,EAAE;IAC/D,MAAMiM,kBAAkB,GAAW,IAAI,CAACD,qBAAqB,EAAE;IAC/D,MAAME,UAAU,GAAG,CAAC,IAAI,CAAC3O,MAAM,CAACyB,KAAK,GAAG,CAAC,EAAE,IAAI,CAACzB,MAAM,CAAC0B,MAAM,GAAG,CAAC,CAAC;IAClE,MAAMkN,0BAA0B,GAAG,CACjCD,UAAU,CAAC,CAAC,CAAC,GAAGD,kBAAkB,EAClCC,UAAU,CAAC,CAAC,CAAC,GAAGD,kBAAkB,CACnC;IACD,MAAM1L,SAAS,GAAG,IAAItD,SAAS,EAAE;IAIjCsD,SAAS,CAAC6L,SAAS,CAACF,UAAU,CAAC,CAAC,CAAC,EAAEA,UAAU,CAAC,CAAC,CAAC,CAAC;IAGjD3L,SAAS,CAAC8L,KAAK,CAACtM,kBAAkB,EAAEA,kBAAkB,CAAC;IAGvDQ,SAAS,CAAC6L,SAAS,CAAChO,QAAQ,CAAC,CAAC,CAAC,EAAEA,QAAQ,CAAC,CAAC,CAAC,CAAC;IAG7CmC,SAAS,CAAC6L,SAAS,CACjB,CAACD,0BAA0B,CAAC,CAAC,CAAC,EAC9B,CAACA,0BAA0B,CAAC,CAAC,CAAC,CAC/B;IACD,OAAO5L,SAAS;EAClB;;SA9xBI1D,aAAc;AACJyP,MAAA,CAAArD,mBAAmB,GAAG,yCAAyC;AAs1B/E,eAAepM,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}