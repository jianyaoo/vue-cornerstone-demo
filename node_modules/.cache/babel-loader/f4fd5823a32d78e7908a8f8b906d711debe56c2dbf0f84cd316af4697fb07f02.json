{"ast":null,"code":"import vtkMatrixBuilder from '@kitware/vtk.js/Common/Core/MatrixBuilder';\nimport vtkMath from '@kitware/vtk.js/Common/Core/Math';\nimport vtkPlane from '@kitware/vtk.js/Common/DataModel/Plane';\nimport { vec2, vec3 } from 'gl-matrix';\nimport _cloneDeep from 'lodash.clonedeep';\nimport Events from '../enums/Events';\nimport ViewportStatus from '../enums/ViewportStatus';\nimport renderingEngineCache from './renderingEngineCache';\nimport { triggerEvent, planar, isImageActor, actorIsA, isEqual } from '../utilities';\nimport hasNaNValues from '../utilities/hasNaNValues';\nimport { RENDERING_DEFAULTS } from '../constants';\nimport { getConfiguration } from '../init';\nclass Viewport {\n  constructor(props) {\n    this.insetImageMultiplier = 1.1;\n    this.flipHorizontal = false;\n    this.flipVertical = false;\n    this.viewportStatus = ViewportStatus.NO_DATA;\n    this.newActorAdded = false;\n    this._suppressCameraModifiedEvents = false;\n    this.hasPixelSpacing = true;\n    this.id = props.id;\n    this.renderingEngineId = props.renderingEngineId;\n    this.type = props.type;\n    this.element = props.element;\n    this.canvas = props.canvas;\n    this.sx = props.sx;\n    this.sy = props.sy;\n    this.sWidth = props.sWidth;\n    this.sHeight = props.sHeight;\n    this._actors = new Map();\n    this.element.setAttribute('data-viewport-uid', this.id);\n    this.element.setAttribute('data-rendering-engine-uid', this.renderingEngineId);\n    this.defaultOptions = _cloneDeep(props.defaultOptions);\n    this.suppressEvents = props.defaultOptions.suppressEvents ? props.defaultOptions.suppressEvents : false;\n    this.options = _cloneDeep(props.defaultOptions);\n    this.isDisabled = false;\n  }\n  static get useCustomRenderingPipeline() {\n    return false;\n  }\n  setRendered() {\n    if (this.viewportStatus === ViewportStatus.NO_DATA || this.viewportStatus === ViewportStatus.LOADING) {\n      return;\n    }\n    this.viewportStatus = ViewportStatus.RENDERED;\n  }\n  getRenderingEngine() {\n    return renderingEngineCache.get(this.renderingEngineId);\n  }\n  getRenderer() {\n    const renderingEngine = this.getRenderingEngine();\n    if (!renderingEngine || renderingEngine.hasBeenDestroyed) {\n      throw new Error('Rendering engine has been destroyed');\n    }\n    return renderingEngine.offscreenMultiRenderWindow.getRenderer(this.id);\n  }\n  render() {\n    const renderingEngine = this.getRenderingEngine();\n    renderingEngine.renderViewport(this.id);\n  }\n  setOptions(options, immediate = false) {\n    this.options = _cloneDeep(options);\n    if (this.options?.displayArea) {\n      this.setDisplayArea(this.options?.displayArea);\n    }\n    if (immediate) {\n      this.render();\n    }\n  }\n  reset(immediate = false) {\n    this.options = _cloneDeep(this.defaultOptions);\n    if (immediate) {\n      this.render();\n    }\n  }\n  flip({\n    flipHorizontal,\n    flipVertical\n  }) {\n    const imageData = this.getDefaultImageData();\n    if (!imageData) {\n      return;\n    }\n    const camera = this.getCamera();\n    const {\n      viewPlaneNormal,\n      viewUp,\n      focalPoint,\n      position\n    } = camera;\n    const viewRight = vec3.cross(vec3.create(), viewPlaneNormal, viewUp);\n    let viewUpToSet = vec3.copy(vec3.create(), viewUp);\n    const viewPlaneNormalToSet = vec3.negate(vec3.create(), viewPlaneNormal);\n    const distance = vec3.distance(position, focalPoint);\n    const dimensions = imageData.getDimensions();\n    const middleIJK = dimensions.map(d => Math.floor(d / 2));\n    const idx = [middleIJK[0], middleIJK[1], middleIJK[2]];\n    const centeredFocalPoint = imageData.indexToWorld(idx, vec3.create());\n    const resetFocalPoint = this._getFocalPointForResetCamera(centeredFocalPoint, camera, {\n      resetPan: true,\n      resetToCenter: false\n    });\n    const panDir = vec3.subtract(vec3.create(), focalPoint, resetFocalPoint);\n    const panValue = vec3.length(panDir);\n    const getPanDir = mirrorVec => {\n      const panDirMirror = vec3.scale(vec3.create(), mirrorVec, 2 * vec3.dot(panDir, mirrorVec));\n      vec3.subtract(panDirMirror, panDirMirror, panDir);\n      vec3.normalize(panDirMirror, panDirMirror);\n      return panDirMirror;\n    };\n    if (flipHorizontal) {\n      const panDirMirror = getPanDir(viewUpToSet);\n      const newFocalPoint = vec3.scaleAndAdd(vec3.create(), resetFocalPoint, panDirMirror, panValue);\n      const newPosition = vec3.scaleAndAdd(vec3.create(), newFocalPoint, viewPlaneNormalToSet, distance);\n      this.setCamera({\n        viewPlaneNormal: viewPlaneNormalToSet,\n        position: newPosition,\n        focalPoint: newFocalPoint\n      });\n      this.flipHorizontal = !this.flipHorizontal;\n    }\n    if (flipVertical) {\n      viewUpToSet = vec3.negate(viewUpToSet, viewUp);\n      const panDirMirror = getPanDir(viewRight);\n      const newFocalPoint = vec3.scaleAndAdd(vec3.create(), resetFocalPoint, panDirMirror, panValue);\n      const newPosition = vec3.scaleAndAdd(vec3.create(), newFocalPoint, viewPlaneNormalToSet, distance);\n      this.setCamera({\n        focalPoint: newFocalPoint,\n        viewPlaneNormal: viewPlaneNormalToSet,\n        viewUp: viewUpToSet,\n        position: newPosition\n      });\n      this.flipVertical = !this.flipVertical;\n    }\n    this.render();\n  }\n  getDefaultImageData() {\n    const actorEntry = this.getDefaultActor();\n    if (actorEntry && isImageActor(actorEntry)) {\n      return actorEntry.actor.getMapper().getInputData();\n    }\n  }\n  getDefaultActor() {\n    return this.getActors()[0];\n  }\n  getActors() {\n    return Array.from(this._actors.values());\n  }\n  getActorUIDs() {\n    return Array.from(this._actors.keys());\n  }\n  getActor(actorUID) {\n    return this._actors.get(actorUID);\n  }\n  getActorUIDByIndex(index) {\n    const actor = this.getActors()[index];\n    if (actor) {\n      return actor.uid;\n    }\n  }\n  getActorByIndex(index) {\n    return this.getActors()[index];\n  }\n  setActors(actors) {\n    this.removeAllActors();\n    const resetCameraPanAndZoom = true;\n    this.addActors(actors, resetCameraPanAndZoom);\n  }\n  _removeActor(actorUID) {\n    const actorEntry = this.getActor(actorUID);\n    if (!actorEntry) {\n      console.warn(`Actor ${actorUID} does not exist for this viewport`);\n      return;\n    }\n    const renderer = this.getRenderer();\n    renderer.removeViewProp(actorEntry.actor);\n    this._actors.delete(actorUID);\n  }\n  removeActors(actorUIDs) {\n    actorUIDs.forEach(actorUID => {\n      this._removeActor(actorUID);\n    });\n  }\n  addActors(actors, resetCameraPanAndZoom = false) {\n    const renderingEngine = this.getRenderingEngine();\n    if (!renderingEngine || renderingEngine.hasBeenDestroyed) {\n      console.warn('Viewport::addActors::Rendering engine has not been initialized or has been destroyed');\n      return;\n    }\n    actors.forEach(actor => this.addActor(actor));\n    this.resetCamera(resetCameraPanAndZoom, resetCameraPanAndZoom);\n  }\n  addActor(actorEntry) {\n    const {\n      uid: actorUID,\n      actor\n    } = actorEntry;\n    const renderingEngine = this.getRenderingEngine();\n    if (!renderingEngine || renderingEngine.hasBeenDestroyed) {\n      console.warn(`Cannot add actor UID of ${actorUID} Rendering Engine has been destroyed`);\n      return;\n    }\n    if (!actorUID || !actor) {\n      throw new Error('Actors should have uid and vtk Actor properties');\n    }\n    if (this.getActor(actorUID)) {\n      console.warn(`Actor ${actorUID} already exists for this viewport`);\n      return;\n    }\n    const renderer = this.getRenderer();\n    renderer.addActor(actor);\n    this._actors.set(actorUID, Object.assign({}, actorEntry));\n    this.newActorAdded = true;\n  }\n  removeAllActors() {\n    this.getRenderer().removeAllViewProps();\n    this._actors = new Map();\n    return;\n  }\n  resetCameraNoEvent() {\n    this._suppressCameraModifiedEvents = true;\n    this.resetCamera();\n    this._suppressCameraModifiedEvents = false;\n  }\n  setCameraNoEvent(camera) {\n    this._suppressCameraModifiedEvents = true;\n    this.setCamera(camera);\n    this._suppressCameraModifiedEvents = false;\n  }\n  _getViewImageDataIntersections(imageData, focalPoint, normal) {\n    const A = normal[0];\n    const B = normal[1];\n    const C = normal[2];\n    const D = A * focalPoint[0] + B * focalPoint[1] + C * focalPoint[2];\n    const bounds = imageData.getBounds();\n    const edges = this._getEdges(bounds);\n    const intersections = [];\n    for (const edge of edges) {\n      const [[x0, y0, z0], [x1, y1, z1]] = edge;\n      if (A * (x1 - x0) + B * (y1 - y0) + C * (z1 - z0) === 0) {\n        continue;\n      }\n      const intersectionPoint = planar.linePlaneIntersection([x0, y0, z0], [x1, y1, z1], [A, B, C, D]);\n      if (this._isInBounds(intersectionPoint, bounds)) {\n        intersections.push(intersectionPoint);\n      }\n    }\n    return intersections;\n  }\n  setDisplayArea(displayArea, suppressEvents = false) {\n    const {\n      storeAsInitialCamera\n    } = displayArea;\n    this.setCamera(this.fitToCanvasCamera, storeAsInitialCamera);\n    const {\n      imageArea,\n      imageCanvasPoint\n    } = displayArea;\n    let zoom = 1;\n    if (imageArea) {\n      const [areaX, areaY] = imageArea;\n      zoom = Math.min(this.getZoom() / areaX, this.getZoom() / areaY);\n      this.setZoom(this.insetImageMultiplier * zoom, storeAsInitialCamera);\n    }\n    const imageData = this.getDefaultImageData();\n    if (imageCanvasPoint && imageData) {\n      const {\n        imagePoint,\n        canvasPoint\n      } = imageCanvasPoint;\n      const [canvasX, canvasY] = canvasPoint;\n      const devicePixelRatio = window?.devicePixelRatio || 1;\n      const validateCanvasPanX = this.sWidth / devicePixelRatio;\n      const validateCanvasPanY = this.sHeight / devicePixelRatio;\n      const canvasPanX = validateCanvasPanX * (canvasX - 0.5);\n      const canvasPanY = validateCanvasPanY * (canvasY - 0.5);\n      const dimensions = imageData.getDimensions();\n      const canvasZero = this.worldToCanvas([0, 0, 0]);\n      const canvasEdge = this.worldToCanvas([dimensions[0] - 1, dimensions[1] - 1, dimensions[2]]);\n      const canvasImage = [canvasEdge[0] - canvasZero[0], canvasEdge[1] - canvasZero[1]];\n      const [imgWidth, imgHeight] = canvasImage;\n      const [imageX, imageY] = imagePoint;\n      const imagePanX = zoom * imgWidth * (0.5 - imageX) * validateCanvasPanY / imgHeight;\n      const imagePanY = zoom * validateCanvasPanY * (0.5 - imageY);\n      const newPositionX = imagePanX + canvasPanX;\n      const newPositionY = imagePanY + canvasPanY;\n      const deltaPoint2 = [newPositionX, newPositionY];\n      this.setPan(deltaPoint2, storeAsInitialCamera);\n    }\n    if (storeAsInitialCamera) {\n      this.options.displayArea = displayArea;\n    }\n    if (!suppressEvents) {\n      const eventDetail = {\n        viewportId: this.id,\n        displayArea: displayArea,\n        storeAsInitialCamera: storeAsInitialCamera\n      };\n      triggerEvent(this.element, Events.DISPLAY_AREA_MODIFIED, eventDetail);\n    }\n  }\n  getDisplayArea() {\n    return this.options?.displayArea;\n  }\n  resetCamera(resetPan = true, resetZoom = true, resetToCenter = true, storeAsInitialCamera = true) {\n    const renderer = this.getRenderer();\n    this.setCamera({\n      flipHorizontal: false,\n      flipVertical: false\n    });\n    const previousCamera = _cloneDeep(this.getCamera());\n    const bounds = renderer.computeVisiblePropBounds();\n    const focalPoint = [0, 0, 0];\n    const imageData = this.getDefaultImageData();\n    if (imageData) {\n      const spc = imageData.getSpacing();\n      bounds[0] = bounds[0] + spc[0] / 2;\n      bounds[1] = bounds[1] - spc[0] / 2;\n      bounds[2] = bounds[2] + spc[1] / 2;\n      bounds[3] = bounds[3] - spc[1] / 2;\n      bounds[4] = bounds[4] + spc[2] / 2;\n      bounds[5] = bounds[5] - spc[2] / 2;\n    }\n    const activeCamera = this.getVtkActiveCamera();\n    const viewPlaneNormal = activeCamera.getViewPlaneNormal();\n    const viewUp = activeCamera.getViewUp();\n    focalPoint[0] = (bounds[0] + bounds[1]) / 2.0;\n    focalPoint[1] = (bounds[2] + bounds[3]) / 2.0;\n    focalPoint[2] = (bounds[4] + bounds[5]) / 2.0;\n    if (imageData) {\n      const dimensions = imageData.getDimensions();\n      const middleIJK = dimensions.map(d => Math.floor(d / 2));\n      const idx = [middleIJK[0], middleIJK[1], middleIJK[2]];\n      imageData.indexToWorld(idx, focalPoint);\n    }\n    const {\n      widthWorld,\n      heightWorld\n    } = this._getWorldDistanceViewUpAndViewRight(bounds, viewUp, viewPlaneNormal);\n    const canvasSize = [this.sWidth, this.sHeight];\n    const boundsAspectRatio = widthWorld / heightWorld;\n    const canvasAspectRatio = canvasSize[0] / canvasSize[1];\n    let radius;\n    if (boundsAspectRatio < canvasAspectRatio) {\n      radius = heightWorld / 2;\n    } else {\n      const scaleFactor = boundsAspectRatio / canvasAspectRatio;\n      radius = heightWorld * scaleFactor / 2;\n    }\n    const parallelScale = this.insetImageMultiplier * radius;\n    let w1 = bounds[1] - bounds[0];\n    let w2 = bounds[3] - bounds[2];\n    let w3 = bounds[5] - bounds[4];\n    w1 *= w1;\n    w2 *= w2;\n    w3 *= w3;\n    radius = w1 + w2 + w3;\n    radius = radius === 0 ? 1.0 : radius;\n    radius = Math.sqrt(radius) * 0.5;\n    const distance = this.insetImageMultiplier * radius;\n    const viewUpToSet = Math.abs(vtkMath.dot(viewUp, viewPlaneNormal)) > 0.999 ? [-viewUp[2], viewUp[0], viewUp[1]] : viewUp;\n    const focalPointToSet = this._getFocalPointForResetCamera(focalPoint, previousCamera, {\n      resetPan,\n      resetToCenter\n    });\n    const positionToSet = [focalPointToSet[0] + distance * viewPlaneNormal[0], focalPointToSet[1] + distance * viewPlaneNormal[1], focalPointToSet[2] + distance * viewPlaneNormal[2]];\n    renderer.resetCameraClippingRange(bounds);\n    const clippingRangeToUse = [-RENDERING_DEFAULTS.MAXIMUM_RAY_DISTANCE, RENDERING_DEFAULTS.MAXIMUM_RAY_DISTANCE];\n    activeCamera.setPhysicalScale(radius);\n    activeCamera.setPhysicalTranslation(-focalPointToSet[0], -focalPointToSet[1], -focalPointToSet[2]);\n    this.setCamera({\n      parallelScale: resetZoom ? parallelScale : previousCamera.parallelScale,\n      focalPoint: focalPointToSet,\n      position: positionToSet,\n      viewAngle: 90,\n      viewUp: viewUpToSet,\n      clippingRange: clippingRangeToUse\n    });\n    const modifiedCamera = _cloneDeep(this.getCamera());\n    this.setFitToCanvasCamera(_cloneDeep(this.getCamera()));\n    if (storeAsInitialCamera) {\n      this.setInitialCamera(modifiedCamera);\n    }\n    if (resetZoom) {\n      this.setZoom(1, storeAsInitialCamera);\n    }\n    const RESET_CAMERA_EVENT = {\n      type: 'ResetCameraEvent',\n      renderer\n    };\n    renderer.invokeEvent(RESET_CAMERA_EVENT);\n    this.triggerCameraModifiedEventIfNecessary(previousCamera, modifiedCamera);\n    if (imageData && this.options?.displayArea && resetZoom && resetPan && resetToCenter) {\n      this.setDisplayArea(this.options?.displayArea);\n    }\n    return true;\n  }\n  setInitialCamera(camera) {\n    this.initialCamera = camera;\n  }\n  setFitToCanvasCamera(camera) {\n    this.fitToCanvasCamera = camera;\n  }\n  getPan() {\n    const activeCamera = this.getVtkActiveCamera();\n    const focalPoint = activeCamera.getFocalPoint();\n    const zero3 = this.canvasToWorld([0, 0]);\n    const initialCanvasFocal = this.worldToCanvas(vec3.subtract(vec3.create(), this.initialCamera.focalPoint, zero3));\n    const currentCanvasFocal = this.worldToCanvas(vec3.subtract(vec3.create(), focalPoint, zero3));\n    const result = vec2.subtract(vec2.create(), initialCanvasFocal, currentCanvasFocal);\n    return result;\n  }\n  setPan(pan, storeAsInitialCamera = false) {\n    const previousCamera = this.getCamera();\n    const {\n      focalPoint,\n      position\n    } = previousCamera;\n    const zero3 = this.canvasToWorld([0, 0]);\n    const delta2 = vec2.subtract(vec2.create(), pan, this.getPan());\n    if (Math.abs(delta2[0]) < 1 && Math.abs(delta2[1]) < 1 && !storeAsInitialCamera) {\n      return;\n    }\n    const delta = vec3.subtract(vec3.create(), this.canvasToWorld(delta2), zero3);\n    const newFocal = vec3.subtract(vec3.create(), focalPoint, delta);\n    const newPosition = vec3.subtract(vec3.create(), position, delta);\n    this.setCamera({\n      ...previousCamera,\n      focalPoint: newFocal,\n      position: newPosition\n    }, storeAsInitialCamera);\n  }\n  getZoom() {\n    const activeCamera = this.getVtkActiveCamera();\n    const {\n      parallelScale: initialParallelScale\n    } = this.initialCamera;\n    return initialParallelScale / activeCamera.getParallelScale();\n  }\n  setZoom(value, storeAsInitialCamera = false) {\n    const camera = this.getCamera();\n    const {\n      parallelScale: initialParallelScale\n    } = this.initialCamera;\n    const parallelScale = initialParallelScale / value;\n    if (camera.parallelScale === parallelScale && !storeAsInitialCamera) {\n      return;\n    }\n    this.setCamera({\n      ...camera,\n      parallelScale\n    }, storeAsInitialCamera);\n  }\n  _getFocalPointForViewPlaneReset(imageData) {\n    const {\n      focalPoint,\n      viewPlaneNormal: normal\n    } = this.getCamera();\n    const intersections = this._getViewImageDataIntersections(imageData, focalPoint, normal);\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    intersections.forEach(([point_x, point_y, point_z]) => {\n      x += point_x;\n      y += point_y;\n      z += point_z;\n    });\n    const newFocalPoint = [x / intersections.length, y / intersections.length, z / intersections.length];\n    return newFocalPoint;\n  }\n  getCanvas() {\n    return this.canvas;\n  }\n  getVtkActiveCamera() {\n    const renderer = this.getRenderer();\n    return renderer.getActiveCamera();\n  }\n  getCamera() {\n    const vtkCamera = this.getVtkActiveCamera();\n    return {\n      viewUp: vtkCamera.getViewUp(),\n      viewPlaneNormal: vtkCamera.getViewPlaneNormal(),\n      position: vtkCamera.getPosition(),\n      focalPoint: vtkCamera.getFocalPoint(),\n      parallelProjection: vtkCamera.getParallelProjection(),\n      parallelScale: vtkCamera.getParallelScale(),\n      viewAngle: vtkCamera.getViewAngle(),\n      flipHorizontal: this.flipHorizontal,\n      flipVertical: this.flipVertical\n    };\n  }\n  setCamera(cameraInterface, storeAsInitialCamera = false) {\n    const vtkCamera = this.getVtkActiveCamera();\n    const previousCamera = _cloneDeep(this.getCamera());\n    const updatedCamera = Object.assign({}, previousCamera, cameraInterface);\n    const {\n      viewUp,\n      viewPlaneNormal,\n      position,\n      focalPoint,\n      parallelScale,\n      viewAngle,\n      flipHorizontal,\n      flipVertical,\n      clippingRange\n    } = cameraInterface;\n    if (flipHorizontal !== undefined) {\n      const flipH = flipHorizontal && !this.flipHorizontal || !flipHorizontal && this.flipHorizontal;\n      if (flipH) {\n        this.flip({\n          flipHorizontal: flipH\n        });\n      }\n    }\n    if (flipVertical !== undefined) {\n      const flipV = flipVertical && !this.flipVertical || !flipVertical && this.flipVertical;\n      if (flipV) {\n        this.flip({\n          flipVertical: flipV\n        });\n      }\n    }\n    if (viewUp !== undefined) {\n      vtkCamera.setViewUp(viewUp);\n    }\n    if (viewPlaneNormal !== undefined) {\n      vtkCamera.setDirectionOfProjection(-viewPlaneNormal[0], -viewPlaneNormal[1], -viewPlaneNormal[2]);\n    }\n    if (position !== undefined) {\n      vtkCamera.setPosition(...position);\n    }\n    if (focalPoint !== undefined) {\n      vtkCamera.setFocalPoint(...focalPoint);\n    }\n    if (parallelScale !== undefined) {\n      vtkCamera.setParallelScale(parallelScale);\n    }\n    if (viewAngle !== undefined) {\n      vtkCamera.setViewAngle(viewAngle);\n    }\n    if (clippingRange !== undefined) {\n      vtkCamera.setClippingRange(clippingRange);\n    }\n    const prevFocalPoint = previousCamera.focalPoint;\n    const prevViewUp = previousCamera.viewUp;\n    if (prevFocalPoint && focalPoint || prevViewUp && viewUp) {\n      const currentViewPlaneNormal = vtkCamera.getViewPlaneNormal();\n      const currentViewUp = vtkCamera.getViewUp();\n      let cameraModifiedOutOfPlane = false;\n      let viewUpHasChanged = false;\n      if (focalPoint) {\n        const deltaCamera = [focalPoint[0] - prevFocalPoint[0], focalPoint[1] - prevFocalPoint[1], focalPoint[2] - prevFocalPoint[2]];\n        cameraModifiedOutOfPlane = Math.abs(vtkMath.dot(deltaCamera, currentViewPlaneNormal)) > 0;\n      }\n      if (viewUp) {\n        viewUpHasChanged = !isEqual(currentViewUp, prevViewUp);\n      }\n      if (cameraModifiedOutOfPlane || viewUpHasChanged || this.newActorAdded) {\n        const actorEntry = this.getDefaultActor();\n        if (!actorEntry?.actor) {\n          return;\n        }\n        if (!actorIsA(actorEntry, 'vtkActor')) {\n          this.updateClippingPlanesForActors(updatedCamera);\n        }\n        if (actorIsA(actorEntry, 'vtkImageSlice')) {\n          const renderer = this.getRenderer();\n          renderer.resetCameraClippingRange();\n        }\n      }\n    }\n    if (storeAsInitialCamera) {\n      this.setInitialCamera(updatedCamera);\n    }\n    this.triggerCameraModifiedEventIfNecessary(previousCamera, this.getCamera());\n  }\n  triggerCameraModifiedEventIfNecessary(previousCamera, updatedCamera) {\n    if (!this._suppressCameraModifiedEvents && !this.suppressEvents) {\n      const eventDetail = {\n        previousCamera,\n        camera: updatedCamera,\n        element: this.element,\n        viewportId: this.id,\n        renderingEngineId: this.renderingEngineId,\n        rotation: this.getRotation()\n      };\n      triggerEvent(this.element, Events.CAMERA_MODIFIED, eventDetail);\n    }\n  }\n  async updateClippingPlanesForActors(updatedCamera) {\n    const actorEntries = this.getActors();\n    actorEntries.map(actorEntry => {\n      if (!actorEntry.actor) {\n        return;\n      }\n      const mapper = actorEntry.actor.getMapper();\n      let vtkPlanes = actorEntry?.clippingFilter ? actorEntry.clippingFilter.getClippingPlanes() : mapper.getClippingPlanes();\n      if (vtkPlanes.length === 0 && actorEntry?.clippingFilter) {\n        vtkPlanes = [vtkPlane.newInstance(), vtkPlane.newInstance()];\n      }\n      let slabThickness = RENDERING_DEFAULTS.MINIMUM_SLAB_THICKNESS;\n      if (actorEntry.slabThickness) {\n        slabThickness = actorEntry.slabThickness;\n      }\n      const {\n        viewPlaneNormal,\n        focalPoint\n      } = updatedCamera;\n      this.setOrientationOfClippingPlanes(vtkPlanes, slabThickness, viewPlaneNormal, focalPoint);\n      triggerEvent(this.element, Events.CLIPPING_PLANES_UPDATED, {\n        actorEntry,\n        focalPoint,\n        vtkPlanes,\n        viewport: this\n      });\n    });\n    this.posProcessNewActors();\n  }\n  posProcessNewActors() {\n    this.newActorAdded = false;\n  }\n  setOrientationOfClippingPlanes(vtkPlanes, slabThickness, viewPlaneNormal, focalPoint) {\n    if (vtkPlanes.length < 2) {\n      return;\n    }\n    const scaledDistance = [viewPlaneNormal[0], viewPlaneNormal[1], viewPlaneNormal[2]];\n    vtkMath.multiplyScalar(scaledDistance, slabThickness);\n    vtkPlanes[0].setNormal(viewPlaneNormal);\n    const newOrigin1 = [0, 0, 0];\n    vtkMath.subtract(focalPoint, scaledDistance, newOrigin1);\n    vtkPlanes[0].setOrigin(newOrigin1);\n    vtkPlanes[1].setNormal(-viewPlaneNormal[0], -viewPlaneNormal[1], -viewPlaneNormal[2]);\n    const newOrigin2 = [0, 0, 0];\n    vtkMath.add(focalPoint, scaledDistance, newOrigin2);\n    vtkPlanes[1].setOrigin(newOrigin2);\n  }\n  _getWorldDistanceViewUpAndViewRight(bounds, viewUp, viewPlaneNormal) {\n    const viewUpCorners = this._getCorners(bounds);\n    const viewRightCorners = this._getCorners(bounds);\n    const viewRight = vec3.cross(vec3.create(), viewUp, viewPlaneNormal);\n    let transform = vtkMatrixBuilder.buildFromDegree().identity().rotateFromDirections(viewUp, [1, 0, 0]);\n    viewUpCorners.forEach(pt => transform.apply(pt));\n    let minY = Infinity;\n    let maxY = -Infinity;\n    for (let i = 0; i < 8; i++) {\n      const y = viewUpCorners[i][0];\n      if (y > maxY) {\n        maxY = y;\n      }\n      if (y < minY) {\n        minY = y;\n      }\n    }\n    transform = vtkMatrixBuilder.buildFromDegree().identity().rotateFromDirections([viewRight[0], viewRight[1], viewRight[2]], [1, 0, 0]);\n    viewRightCorners.forEach(pt => transform.apply(pt));\n    let minX = Infinity;\n    let maxX = -Infinity;\n    for (let i = 0; i < 8; i++) {\n      const x = viewRightCorners[i][0];\n      if (x > maxX) {\n        maxX = x;\n      }\n      if (x < minX) {\n        minX = x;\n      }\n    }\n    return {\n      widthWorld: maxX - minX,\n      heightWorld: maxY - minY\n    };\n  }\n  _shouldUseNativeDataType() {\n    const {\n      useNorm16Texture,\n      preferSizeOverAccuracy\n    } = getConfiguration().rendering;\n    return useNorm16Texture || preferSizeOverAccuracy;\n  }\n  _getCorners(bounds) {\n    return [[bounds[0], bounds[2], bounds[4]], [bounds[0], bounds[2], bounds[5]], [bounds[0], bounds[3], bounds[4]], [bounds[0], bounds[3], bounds[5]], [bounds[1], bounds[2], bounds[4]], [bounds[1], bounds[2], bounds[5]], [bounds[1], bounds[3], bounds[4]], [bounds[1], bounds[3], bounds[5]]];\n  }\n  _getFocalPointForResetCamera(centeredFocalPoint, previousCamera, {\n    resetPan = true,\n    resetToCenter = true\n  }) {\n    if (resetToCenter && resetPan) {\n      return centeredFocalPoint;\n    }\n    if (resetToCenter && !resetPan) {\n      return hasNaNValues(previousCamera.focalPoint) ? centeredFocalPoint : previousCamera.focalPoint;\n    }\n    if (!resetToCenter && resetPan) {\n      const oldCamera = previousCamera;\n      const oldFocalPoint = oldCamera.focalPoint;\n      const oldViewPlaneNormal = oldCamera.viewPlaneNormal;\n      const vectorFromOldFocalPointToCenteredFocalPoint = vec3.subtract(vec3.create(), centeredFocalPoint, oldFocalPoint);\n      const distanceFromOldFocalPointToCenteredFocalPoint = vec3.dot(vectorFromOldFocalPointToCenteredFocalPoint, oldViewPlaneNormal);\n      const newFocalPoint = vec3.scaleAndAdd(vec3.create(), centeredFocalPoint, oldViewPlaneNormal, -1 * distanceFromOldFocalPointToCenteredFocalPoint);\n      return [newFocalPoint[0], newFocalPoint[1], newFocalPoint[2]];\n    }\n    if (!resetPan && !resetToCenter) {\n      return hasNaNValues(previousCamera.focalPoint) ? centeredFocalPoint : previousCamera.focalPoint;\n    }\n  }\n  _isInBounds(point, bounds) {\n    const [xMin, xMax, yMin, yMax, zMin, zMax] = bounds;\n    const [x, y, z] = point;\n    if (x < xMin || x > xMax || y < yMin || y > yMax || z < zMin || z > zMax) {\n      return false;\n    }\n    return true;\n  }\n  _getEdges(bounds) {\n    const [p1, p2, p3, p4, p5, p6, p7, p8] = this._getCorners(bounds);\n    return [[p1, p2], [p1, p5], [p1, p3], [p2, p4], [p2, p6], [p3, p4], [p3, p7], [p4, p8], [p5, p7], [p5, p6], [p6, p8], [p7, p8]];\n  }\n}\nexport default Viewport;","map":{"version":3,"names":["vtkMatrixBuilder","vtkMath","vtkPlane","vec2","vec3","_cloneDeep","Events","ViewportStatus","renderingEngineCache","triggerEvent","planar","isImageActor","actorIsA","isEqual","hasNaNValues","RENDERING_DEFAULTS","getConfiguration","Viewport","constructor","props","insetImageMultiplier","flipHorizontal","flipVertical","viewportStatus","NO_DATA","newActorAdded","_suppressCameraModifiedEvents","hasPixelSpacing","id","renderingEngineId","type","element","canvas","sx","sy","sWidth","sHeight","_actors","Map","setAttribute","defaultOptions","suppressEvents","options","isDisabled","useCustomRenderingPipeline","setRendered","LOADING","RENDERED","getRenderingEngine","get","getRenderer","renderingEngine","hasBeenDestroyed","Error","offscreenMultiRenderWindow","render","renderViewport","setOptions","immediate","displayArea","setDisplayArea","reset","flip","imageData","getDefaultImageData","camera","getCamera","viewPlaneNormal","viewUp","focalPoint","position","viewRight","cross","create","viewUpToSet","copy","viewPlaneNormalToSet","negate","distance","dimensions","getDimensions","middleIJK","map","d","Math","floor","idx","centeredFocalPoint","indexToWorld","resetFocalPoint","_getFocalPointForResetCamera","resetPan","resetToCenter","panDir","subtract","panValue","length","getPanDir","mirrorVec","panDirMirror","scale","dot","normalize","newFocalPoint","scaleAndAdd","newPosition","setCamera","actorEntry","getDefaultActor","actor","getMapper","getInputData","getActors","Array","from","values","getActorUIDs","keys","getActor","actorUID","getActorUIDByIndex","index","uid","getActorByIndex","setActors","actors","removeAllActors","resetCameraPanAndZoom","addActors","_removeActor","console","warn","renderer","removeViewProp","delete","removeActors","actorUIDs","forEach","addActor","resetCamera","set","Object","assign","removeAllViewProps","resetCameraNoEvent","setCameraNoEvent","_getViewImageDataIntersections","normal","A","B","C","D","bounds","getBounds","edges","_getEdges","intersections","edge","x0","y0","z0","x1","y1","z1","intersectionPoint","linePlaneIntersection","_isInBounds","push","storeAsInitialCamera","fitToCanvasCamera","imageArea","imageCanvasPoint","zoom","areaX","areaY","min","getZoom","setZoom","imagePoint","canvasPoint","canvasX","canvasY","devicePixelRatio","window","validateCanvasPanX","validateCanvasPanY","canvasPanX","canvasPanY","canvasZero","worldToCanvas","canvasEdge","canvasImage","imgWidth","imgHeight","imageX","imageY","imagePanX","imagePanY","newPositionX","newPositionY","deltaPoint2","setPan","eventDetail","viewportId","DISPLAY_AREA_MODIFIED","getDisplayArea","resetZoom","previousCamera","computeVisiblePropBounds","spc","getSpacing","activeCamera","getVtkActiveCamera","getViewPlaneNormal","getViewUp","widthWorld","heightWorld","_getWorldDistanceViewUpAndViewRight","canvasSize","boundsAspectRatio","canvasAspectRatio","radius","scaleFactor","parallelScale","w1","w2","w3","sqrt","abs","focalPointToSet","positionToSet","resetCameraClippingRange","clippingRangeToUse","MAXIMUM_RAY_DISTANCE","setPhysicalScale","setPhysicalTranslation","viewAngle","clippingRange","modifiedCamera","setFitToCanvasCamera","setInitialCamera","RESET_CAMERA_EVENT","invokeEvent","triggerCameraModifiedEventIfNecessary","initialCamera","getPan","getFocalPoint","zero3","canvasToWorld","initialCanvasFocal","currentCanvasFocal","result","pan","delta2","delta","newFocal","initialParallelScale","getParallelScale","value","_getFocalPointForViewPlaneReset","x","y","z","point_x","point_y","point_z","getCanvas","getActiveCamera","vtkCamera","getPosition","parallelProjection","getParallelProjection","getViewAngle","cameraInterface","updatedCamera","undefined","flipH","flipV","setViewUp","setDirectionOfProjection","setPosition","setFocalPoint","setParallelScale","setViewAngle","setClippingRange","prevFocalPoint","prevViewUp","currentViewPlaneNormal","currentViewUp","cameraModifiedOutOfPlane","viewUpHasChanged","deltaCamera","updateClippingPlanesForActors","rotation","getRotation","CAMERA_MODIFIED","actorEntries","mapper","vtkPlanes","clippingFilter","getClippingPlanes","newInstance","slabThickness","MINIMUM_SLAB_THICKNESS","setOrientationOfClippingPlanes","CLIPPING_PLANES_UPDATED","viewport","posProcessNewActors","scaledDistance","multiplyScalar","setNormal","newOrigin1","setOrigin","newOrigin2","add","viewUpCorners","_getCorners","viewRightCorners","transform","buildFromDegree","identity","rotateFromDirections","pt","apply","minY","Infinity","maxY","i","minX","maxX","_shouldUseNativeDataType","useNorm16Texture","preferSizeOverAccuracy","rendering","oldCamera","oldFocalPoint","oldViewPlaneNormal","vectorFromOldFocalPointToCenteredFocalPoint","distanceFromOldFocalPointToCenteredFocalPoint","point","xMin","xMax","yMin","yMax","zMin","zMax","p1","p2","p3","p4","p5","p6","p7","p8"],"sources":["../../../src/RenderingEngine/Viewport.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}