{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { m as macro } from '../../macros2.js';\nimport vtkAppendPolyData from '../General/AppendPolyData.js';\nimport vtkConeSource from './ConeSource.js';\nimport vtkCylinderSource from './CylinderSource.js';\nimport vtkMatrixBuilder from '../../Common/Core/MatrixBuilder.js';\n\n// ----------------------------------------------------------------------------\n// vtkArrowSource methods\n// ----------------------------------------------------------------------------\n\nfunction vtkArrowSource(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkArrowSource');\n  function requestData(inData, outData) {\n    if (model.deleted) {\n      return;\n    }\n    const cylinder = vtkCylinderSource.newInstance({\n      capping: true\n    });\n    cylinder.setResolution(model.shaftResolution);\n    cylinder.setRadius(model.shaftRadius);\n    cylinder.setHeight(1.0 - model.tipLength);\n    cylinder.setCenter(0, (1.0 - model.tipLength) * 0.5, 0.0);\n    const cylinderPD = cylinder.getOutputData();\n    const cylinderPts = cylinderPD.getPoints().getData();\n    const cylinderNormals = cylinderPD.getPointData().getNormals().getData();\n\n    // Apply transformation to the cylinder\n    vtkMatrixBuilder.buildFromDegree().rotateZ(-90).apply(cylinderPts).apply(cylinderNormals);\n    const cone = vtkConeSource.newInstance();\n    cone.setResolution(model.tipResolution);\n    cone.setHeight(model.tipLength);\n    cone.setRadius(model.tipRadius);\n    const conePD = cone.getOutputData();\n    const conePts = conePD.getPoints().getData();\n\n    // Apply transformation to the cone\n    vtkMatrixBuilder.buildFromRadian().translate(1.0 - model.tipLength * 0.5, 0.0, 0.0).apply(conePts);\n    const append = vtkAppendPolyData.newInstance();\n    append.setInputData(cylinderPD);\n    append.addInputData(conePD);\n    const appendPD = append.getOutputData();\n    const appendPts = appendPD.getPoints().getData();\n    // Center the arrow about [0, 0, 0]\n    vtkMatrixBuilder.buildFromRadian().translate(-0.5 + model.tipLength * 0.5, 0.0, 0.0).apply(appendPts);\n    if (model.invert) {\n      // Apply transformation to the arrow\n      vtkMatrixBuilder.buildFromRadian().rotateFromDirections([1, 0, 0], model.direction).scale(-1, -1, -1).apply(appendPts);\n\n      // Update output\n      outData[0] = appendPD;\n    } else {\n      // Apply transformation to the arrow\n      vtkMatrixBuilder.buildFromRadian().rotateFromDirections([1, 0, 0], model.direction).scale(1, 1, 1).apply(appendPts);\n\n      // Update output\n      outData[0] = append.getOutputData();\n    }\n  }\n\n  // Expose methods\n  publicAPI.requestData = requestData;\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  tipResolution: 6,\n  tipRadius: 0.1,\n  tipLength: 0.35,\n  shaftResolution: 6,\n  shaftRadius: 0.03,\n  invert: false,\n  direction: [1.0, 0.0, 0.0],\n  pointType: 'Float64Array'\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['tipResolution', 'tipRadius', 'tipLength', 'shaftResolution', 'shaftRadius', 'invert']);\n  macro.setGetArray(publicAPI, model, ['direction'], 3);\n  macro.algo(publicAPI, model, 0, 1);\n  vtkArrowSource(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkArrowSource');\n\n// ----------------------------------------------------------------------------\n\nvar vtkArrowSource$1 = {\n  newInstance,\n  extend\n};\nexport { vtkArrowSource$1 as default, extend, newInstance };","map":{"version":3,"names":["m","macro","vtkAppendPolyData","vtkConeSource","vtkCylinderSource","vtkMatrixBuilder","vtkArrowSource","publicAPI","model","classHierarchy","push","requestData","inData","outData","deleted","cylinder","newInstance","capping","setResolution","shaftResolution","setRadius","shaftRadius","setHeight","tipLength","setCenter","cylinderPD","getOutputData","cylinderPts","getPoints","getData","cylinderNormals","getPointData","getNormals","buildFromDegree","rotateZ","apply","cone","tipResolution","tipRadius","conePD","conePts","buildFromRadian","translate","append","setInputData","addInputData","appendPD","appendPts","invert","rotateFromDirections","direction","scale","DEFAULT_VALUES","pointType","extend","initialValues","arguments","length","undefined","Object","assign","obj","setGet","setGetArray","algo","vtkArrowSource$1","default"],"sources":["/Users/yzy/Documents/Playground/vue-cornerstone-demo/node_modules/@kitware/vtk.js/Filters/Sources/ArrowSource.js"],"sourcesContent":["import { m as macro } from '../../macros2.js';\nimport vtkAppendPolyData from '../General/AppendPolyData.js';\nimport vtkConeSource from './ConeSource.js';\nimport vtkCylinderSource from './CylinderSource.js';\nimport vtkMatrixBuilder from '../../Common/Core/MatrixBuilder.js';\n\n// ----------------------------------------------------------------------------\n// vtkArrowSource methods\n// ----------------------------------------------------------------------------\n\nfunction vtkArrowSource(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkArrowSource');\n  function requestData(inData, outData) {\n    if (model.deleted) {\n      return;\n    }\n    const cylinder = vtkCylinderSource.newInstance({\n      capping: true\n    });\n    cylinder.setResolution(model.shaftResolution);\n    cylinder.setRadius(model.shaftRadius);\n    cylinder.setHeight(1.0 - model.tipLength);\n    cylinder.setCenter(0, (1.0 - model.tipLength) * 0.5, 0.0);\n    const cylinderPD = cylinder.getOutputData();\n    const cylinderPts = cylinderPD.getPoints().getData();\n    const cylinderNormals = cylinderPD.getPointData().getNormals().getData();\n\n    // Apply transformation to the cylinder\n    vtkMatrixBuilder.buildFromDegree().rotateZ(-90).apply(cylinderPts).apply(cylinderNormals);\n    const cone = vtkConeSource.newInstance();\n    cone.setResolution(model.tipResolution);\n    cone.setHeight(model.tipLength);\n    cone.setRadius(model.tipRadius);\n    const conePD = cone.getOutputData();\n    const conePts = conePD.getPoints().getData();\n\n    // Apply transformation to the cone\n    vtkMatrixBuilder.buildFromRadian().translate(1.0 - model.tipLength * 0.5, 0.0, 0.0).apply(conePts);\n    const append = vtkAppendPolyData.newInstance();\n    append.setInputData(cylinderPD);\n    append.addInputData(conePD);\n    const appendPD = append.getOutputData();\n    const appendPts = appendPD.getPoints().getData();\n    // Center the arrow about [0, 0, 0]\n    vtkMatrixBuilder.buildFromRadian().translate(-0.5 + model.tipLength * 0.5, 0.0, 0.0).apply(appendPts);\n    if (model.invert) {\n      // Apply transformation to the arrow\n      vtkMatrixBuilder.buildFromRadian().rotateFromDirections([1, 0, 0], model.direction).scale(-1, -1, -1).apply(appendPts);\n\n      // Update output\n      outData[0] = appendPD;\n    } else {\n      // Apply transformation to the arrow\n      vtkMatrixBuilder.buildFromRadian().rotateFromDirections([1, 0, 0], model.direction).scale(1, 1, 1).apply(appendPts);\n\n      // Update output\n      outData[0] = append.getOutputData();\n    }\n  }\n\n  // Expose methods\n  publicAPI.requestData = requestData;\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  tipResolution: 6,\n  tipRadius: 0.1,\n  tipLength: 0.35,\n  shaftResolution: 6,\n  shaftRadius: 0.03,\n  invert: false,\n  direction: [1.0, 0.0, 0.0],\n  pointType: 'Float64Array'\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['tipResolution', 'tipRadius', 'tipLength', 'shaftResolution', 'shaftRadius', 'invert']);\n  macro.setGetArray(publicAPI, model, ['direction'], 3);\n  macro.algo(publicAPI, model, 0, 1);\n  vtkArrowSource(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkArrowSource');\n\n// ----------------------------------------------------------------------------\n\nvar vtkArrowSource$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkArrowSource$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}