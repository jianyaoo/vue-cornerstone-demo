{"ast":null,"code":"import { vec3 } from 'gl-matrix';\nimport { cache, utilities, Enums } from '@cornerstonejs/core';\nconst {\n  createUint8SharedArray,\n  createFloat32SharedArray\n} = utilities;\nfunction getVolumeInfo(imageIds) {\n  const volumeMetadata = utilities.makeVolumeMetadata(imageIds);\n  const {\n    BitsAllocated,\n    PixelRepresentation,\n    PhotometricInterpretation,\n    ImageOrientationPatient,\n    PixelSpacing,\n    Columns,\n    Rows\n  } = volumeMetadata;\n  const rowCosineVec = vec3.fromValues(ImageOrientationPatient[0], ImageOrientationPatient[1], ImageOrientationPatient[2]);\n  const colCosineVec = vec3.fromValues(ImageOrientationPatient[3], ImageOrientationPatient[4], ImageOrientationPatient[5]);\n  const scanAxisNormal = vec3.create();\n  vec3.cross(scanAxisNormal, rowCosineVec, colCosineVec);\n  const {\n    zSpacing,\n    origin,\n    sortedImageIds\n  } = utilities.sortImageIdsAndGetSpacing(imageIds, scanAxisNormal);\n  const numFrames = imageIds.length;\n  const spacing = [PixelSpacing[1], PixelSpacing[0], zSpacing];\n  const dimensions = [Columns, Rows, numFrames];\n  const direction = [...rowCosineVec, ...colCosineVec, ...scanAxisNormal];\n  const signed = PixelRepresentation === 1;\n  const bytesPerVoxel = BitsAllocated === 16 ? 4 : 1;\n  const sizeInBytesPerComponent = bytesPerVoxel * dimensions[0] * dimensions[1] * dimensions[2];\n  let numComponents = 1;\n  if (PhotometricInterpretation === 'RGB') {\n    numComponents = 3;\n  }\n  const sizeInBytes = sizeInBytesPerComponent * numComponents;\n  const isCacheable = cache.isCacheable(sizeInBytes);\n  if (!isCacheable) {\n    throw new Error(Enums.Events.CACHE_SIZE_EXCEEDED);\n  }\n  cache.decacheIfNecessaryUntilBytesAvailable(sizeInBytes);\n  let scalarData;\n  switch (BitsAllocated) {\n    case 8:\n      if (signed) {\n        throw new Error('8 Bit signed images are not yet supported by this plugin.');\n      } else {\n        scalarData = createUint8SharedArray(dimensions[0] * dimensions[1] * dimensions[2]);\n      }\n      break;\n    case 16:\n      scalarData = createFloat32SharedArray(dimensions[0] * dimensions[1] * dimensions[2]);\n      break;\n    case 24:\n      scalarData = createUint8SharedArray(dimensions[0] * dimensions[1] * dimensions[2] * numComponents);\n      break;\n  }\n  return {\n    metadata: volumeMetadata,\n    sortedImageIds,\n    dimensions,\n    spacing,\n    origin,\n    direction,\n    scalarData,\n    sizeInBytes\n  };\n}\nexport { getVolumeInfo, getVolumeInfo as default };","map":{"version":3,"names":["vec3","cache","utilities","Enums","createUint8SharedArray","createFloat32SharedArray","getVolumeInfo","imageIds","volumeMetadata","makeVolumeMetadata","BitsAllocated","PixelRepresentation","PhotometricInterpretation","ImageOrientationPatient","PixelSpacing","Columns","Rows","rowCosineVec","fromValues","colCosineVec","scanAxisNormal","create","cross","zSpacing","origin","sortedImageIds","sortImageIdsAndGetSpacing","numFrames","length","spacing","dimensions","direction","signed","bytesPerVoxel","sizeInBytesPerComponent","numComponents","sizeInBytes","isCacheable","Error","Events","CACHE_SIZE_EXCEEDED","decacheIfNecessaryUntilBytesAvailable","scalarData","metadata","default"],"sources":["../../../src/helpers/getVolumeInfo.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}