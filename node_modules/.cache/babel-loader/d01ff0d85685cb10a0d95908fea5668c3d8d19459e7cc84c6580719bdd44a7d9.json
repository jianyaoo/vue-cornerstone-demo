{"ast":null,"code":"import fitToWindow from './fitToWindow';\nimport getImageSize from './getImageSize';\nfunction setCanvasSize(enabledElement) {\n  const {\n    canvas\n  } = enabledElement;\n  const {\n    clientWidth,\n    clientHeight\n  } = canvas;\n  if (canvas.width !== clientWidth || canvas.height !== clientHeight) {\n    canvas.width = clientWidth;\n    canvas.height = clientHeight;\n  }\n}\nfunction wasFitToWindow(enabledElement, oldCanvasWidth, oldCanvasHeight) {\n  const scale = enabledElement.viewport.scale;\n  const imageSize = getImageSize(enabledElement.image, enabledElement.viewport.rotation);\n  const imageWidth = Math.round(imageSize.width * scale);\n  const imageHeight = Math.round(imageSize.height * scale);\n  const x = enabledElement.viewport.translation.x;\n  const y = enabledElement.viewport.translation.y;\n  return imageWidth === oldCanvasWidth && imageHeight <= oldCanvasHeight || imageWidth <= oldCanvasWidth && imageHeight === oldCanvasHeight && x === 0 && y === 0;\n}\nfunction relativeRescale(enabledElement, oldCanvasWidth, oldCanvasHeight) {\n  const scale = enabledElement.viewport.scale;\n  const canvasWidth = enabledElement.canvas.width;\n  const canvasHeight = enabledElement.canvas.height;\n  const relWidthChange = canvasWidth / oldCanvasWidth;\n  const relHeightChange = canvasHeight / oldCanvasHeight;\n  const relChange = Math.sqrt(relWidthChange * relHeightChange);\n  enabledElement.viewport.scale = relChange * scale;\n}\nexport default function (enabledElement, forceFitToWindow = false) {\n  const oldCanvasWidth = enabledElement.canvas.width;\n  const oldCanvasHeight = enabledElement.canvas.height;\n  setCanvasSize(enabledElement);\n  if (enabledElement.image === undefined) {\n    return;\n  }\n  if (forceFitToWindow || wasFitToWindow(enabledElement, oldCanvasWidth, oldCanvasHeight)) {\n    fitToWindow(enabledElement);\n  } else {\n    relativeRescale(enabledElement, oldCanvasWidth, oldCanvasHeight);\n  }\n}","map":{"version":3,"names":["fitToWindow","getImageSize","setCanvasSize","enabledElement","canvas","clientWidth","clientHeight","width","height","wasFitToWindow","oldCanvasWidth","oldCanvasHeight","scale","viewport","imageSize","image","rotation","imageWidth","Math","round","imageHeight","x","translation","y","relativeRescale","canvasWidth","canvasHeight","relWidthChange","relHeightChange","relChange","sqrt","forceFitToWindow","undefined"],"sources":["../../../../../../src/RenderingEngine/helpers/cpuFallback/rendering/resize.ts"],"sourcesContent":[null],"mappings":"AAAA,OAAOA,WAAW,MAAM,eAAe;AACvC,OAAOC,YAAY,MAAM,gBAAgB;AAUzC,SAASC,aAAaA,CAACC,cAAyC;EAC9D,MAAM;IAAEC;EAAM,CAAE,GAAGD,cAAc;EACjC,MAAM;IAAEE,WAAW;IAAEC;EAAY,CAAE,GAAGF,MAAM;EAG5C,IAAIA,MAAM,CAACG,KAAK,KAAKF,WAAW,IAAID,MAAM,CAACI,MAAM,KAAKF,YAAY,EAAE;IAClEF,MAAM,CAACG,KAAK,GAAGF,WAAW;IAC1BD,MAAM,CAACI,MAAM,GAAGF,YAAY;;AAEhC;AAWA,SAASG,cAAcA,CACrBN,cAAyC,EACzCO,cAAsB,EACtBC,eAAuB;EAEvB,MAAMC,KAAK,GAAGT,cAAc,CAACU,QAAQ,CAACD,KAAK;EAC3C,MAAME,SAAS,GAAGb,YAAY,CAC5BE,cAAc,CAACY,KAAK,EACpBZ,cAAc,CAACU,QAAQ,CAACG,QAAQ,CACjC;EACD,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACL,SAAS,CAACP,KAAK,GAAGK,KAAK,CAAC;EACtD,MAAMQ,WAAW,GAAGF,IAAI,CAACC,KAAK,CAACL,SAAS,CAACN,MAAM,GAAGI,KAAK,CAAC;EACxD,MAAMS,CAAC,GAAGlB,cAAc,CAACU,QAAQ,CAACS,WAAW,CAACD,CAAC;EAC/C,MAAME,CAAC,GAAGpB,cAAc,CAACU,QAAQ,CAACS,WAAW,CAACC,CAAC;EAE/C,OACGN,UAAU,KAAKP,cAAc,IAAIU,WAAW,IAAIT,eAAe,IAC/DM,UAAU,IAAIP,cAAc,IAC3BU,WAAW,KAAKT,eAAe,IAC/BU,CAAC,KAAK,CAAC,IACPE,CAAC,KAAK,CAAE;AAEd;AAUA,SAASC,eAAeA,CACtBrB,cAAyC,EACzCO,cAAsB,EACtBC,eAAuB;EAEvB,MAAMC,KAAK,GAAGT,cAAc,CAACU,QAAQ,CAACD,KAAK;EAC3C,MAAMa,WAAW,GAAGtB,cAAc,CAACC,MAAM,CAACG,KAAK;EAC/C,MAAMmB,YAAY,GAAGvB,cAAc,CAACC,MAAM,CAACI,MAAM;EACjD,MAAMmB,cAAc,GAAGF,WAAW,GAAGf,cAAc;EACnD,MAAMkB,eAAe,GAAGF,YAAY,GAAGf,eAAe;EACtD,MAAMkB,SAAS,GAAGX,IAAI,CAACY,IAAI,CAACH,cAAc,GAAGC,eAAe,CAAC;EAE7DzB,cAAc,CAACU,QAAQ,CAACD,KAAK,GAAGiB,SAAS,GAAGjB,KAAK;AACnD;AASA,eAAc,UACZT,cAAyC,EACzC4B,gBAAgB,GAAG,KAAK;EAExB,MAAMrB,cAAc,GAAGP,cAAc,CAACC,MAAM,CAACG,KAAK;EAClD,MAAMI,eAAe,GAAGR,cAAc,CAACC,MAAM,CAACI,MAAM;EAEpDN,aAAa,CAACC,cAAc,CAAC;EAE7B,IAAIA,cAAc,CAACY,KAAK,KAAKiB,SAAS,EAAE;IACtC;;EAGF,IACED,gBAAgB,IAChBtB,cAAc,CAACN,cAAc,EAAEO,cAAc,EAAEC,eAAe,CAAC,EAC/D;IAEAX,WAAW,CAACG,cAAc,CAAC;GAC5B,MAAM;IAELqB,eAAe,CAACrB,cAAc,EAAEO,cAAc,EAAEC,eAAe,CAAC;;AAEpE"},"metadata":{},"sourceType":"module","externalDependencies":[]}