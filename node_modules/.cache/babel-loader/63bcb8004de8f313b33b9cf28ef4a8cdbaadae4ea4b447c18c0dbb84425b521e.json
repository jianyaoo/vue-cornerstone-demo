{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { m as macro } from '../../macros2.js';\nimport { i as isNan, h as hsv2rgb } from './Math/index.js';\nimport vtkScalarsToColors from './ScalarsToColors.js';\nimport { ScalarMappingTarget } from './ScalarsToColors/Constants.js';\nimport { VtkDataTypes } from './DataArray/Constants.js';\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n// Add module-level functions or api that you want to expose statically via\n// the next section...\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nconst BELOW_RANGE_COLOR_INDEX = 0;\nconst ABOVE_RANGE_COLOR_INDEX = 1;\nconst NAN_COLOR_INDEX = 2;\n\n// ----------------------------------------------------------------------------\n// vtkMyClass methods\n// ----------------------------------------------------------------------------\n\nfunction vtkLookupTable(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkLookupTable');\n\n  //----------------------------------------------------------------------------\n  // Description:\n  // Return true if all of the values defining the mapping have an opacity\n  // equal to 1. Default implementation return true.\n  publicAPI.isOpaque = () => {\n    if (model.opaqueFlagBuildTime.getMTime() < publicAPI.getMTime()) {\n      let opaque = true;\n      if (model.nanColor[3] < 1.0) {\n        opaque = 0;\n      }\n      if (model.useBelowRangeColor && model.belowRangeColor[3] < 1.0) {\n        opaque = 0;\n      }\n      if (model.useAboveRangeColor && model.aboveRangeColor[3] < 1.0) {\n        opaque = 0;\n      }\n      for (let i = 3; i < model.table.length && opaque; i += 4) {\n        if (model.table[i] < 255) {\n          opaque = false;\n        }\n      }\n      model.opaqueFlag = opaque;\n      model.opaqueFlagBuildTime.modified();\n    }\n    return model.opaqueFlag;\n  };\n  publicAPI.usingLogScale = () => false;\n\n  //----------------------------------------------------------------------------\n  publicAPI.getNumberOfAvailableColors = () => model.table.length / 4;\n\n  //----------------------------------------------------------------------------\n  // Apply shift/scale to the scalar value v and return the index.\n  publicAPI.linearIndexLookup = (v, p) => {\n    let dIndex = 0;\n    const nv = Number(v);\n    if (nv < p.range[0]) {\n      dIndex = p.maxIndex + BELOW_RANGE_COLOR_INDEX + 1.5;\n    } else if (nv > p.range[1]) {\n      dIndex = p.maxIndex + ABOVE_RANGE_COLOR_INDEX + 1.5;\n    } else {\n      dIndex = (nv + p.shift) * p.scale;\n\n      // This conditional is needed because when v is very close to\n      // p.Range[1], it may map above p.MaxIndex in the linear mapping\n      // above.\n      dIndex = dIndex < p.maxIndex ? dIndex : p.maxIndex;\n    }\n    return Math.floor(dIndex);\n  };\n  publicAPI.linearLookup = (v, table, p) => {\n    let index = 0;\n    if (isNan(v)) {\n      index = Math.floor(p.maxIndex + 1.5 + NAN_COLOR_INDEX);\n    } else {\n      index = publicAPI.linearIndexLookup(v, p);\n    }\n    const offset = 4 * index;\n    return table.slice(offset, offset + 4);\n  };\n  publicAPI.indexedLookupFunction = (v, table, p) => {\n    let index = publicAPI.getAnnotatedValueIndexInternal(v);\n    if (index === -1) {\n      index = model.numberOfColors + NAN_COLOR_INDEX;\n    }\n    const offset = 4 * index;\n    return [table[offset], table[offset + 1], table[offset + 2], table[offset + 3]];\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.lookupShiftAndScale = (range, p) => {\n    p.shift = -range[0];\n    p.scale = Number.MAX_VALUE;\n    if (range[1] > range[0]) {\n      p.scale = (p.maxIndex + 1) / (range[1] - range[0]);\n    }\n  };\n\n  // Public API methods\n  publicAPI.mapScalarsThroughTable = (input, output, outFormat, inputOffset) => {\n    let lookupFunc = publicAPI.linearLookup;\n    if (model.indexedLookup) {\n      lookupFunc = publicAPI.indexedLookupFunction;\n    }\n    const trange = publicAPI.getMappingRange();\n    const p = {\n      maxIndex: publicAPI.getNumberOfColors() - 1,\n      range: trange,\n      shift: 0.0,\n      scale: 0.0\n    };\n    publicAPI.lookupShiftAndScale(trange, p);\n    const alpha = publicAPI.getAlpha();\n    const length = input.getNumberOfTuples();\n    const inIncr = input.getNumberOfComponents();\n    const outputV = output.getData();\n    const inputV = input.getData();\n    if (alpha >= 1.0) {\n      if (outFormat === ScalarMappingTarget.RGBA) {\n        for (let i = 0; i < length; i++) {\n          const cptr = lookupFunc(inputV[i * inIncr + inputOffset], model.table, p);\n          outputV[i * 4] = cptr[0];\n          outputV[i * 4 + 1] = cptr[1];\n          outputV[i * 4 + 2] = cptr[2];\n          outputV[i * 4 + 3] = cptr[3];\n        }\n      }\n    } else {\n      /* eslint-disable no-lonely-if */\n      if (outFormat === ScalarMappingTarget.RGBA) {\n        for (let i = 0; i < length; i++) {\n          const cptr = lookupFunc(inputV[i * inIncr + inputOffset], model.table, p);\n          outputV[i * 4] = cptr[0];\n          outputV[i * 4 + 1] = cptr[1];\n          outputV[i * 4 + 2] = cptr[2];\n          outputV[i * 4 + 3] = Math.floor(cptr[3] * alpha + 0.5);\n        }\n      }\n    } // alpha blending\n  };\n  publicAPI.forceBuild = () => {\n    let hinc = 0.0;\n    let sinc = 0.0;\n    let vinc = 0.0;\n    let ainc = 0.0;\n    const maxIndex = model.numberOfColors - 1;\n    if (maxIndex) {\n      hinc = (model.hueRange[1] - model.hueRange[0]) / maxIndex;\n      sinc = (model.saturationRange[1] - model.saturationRange[0]) / maxIndex;\n      vinc = (model.valueRange[1] - model.valueRange[0]) / maxIndex;\n      ainc = (model.alphaRange[1] - model.alphaRange[0]) / maxIndex;\n    }\n    model.table.length = 4 * maxIndex + 16;\n    const hsv = [];\n    const rgba = [];\n    for (let i = 0; i <= maxIndex; i++) {\n      hsv[0] = model.hueRange[0] + i * hinc;\n      hsv[1] = model.saturationRange[0] + i * sinc;\n      hsv[2] = model.valueRange[0] + i * vinc;\n      hsv2rgb(hsv, rgba);\n      rgba[3] = model.alphaRange[0] + i * ainc;\n\n      //  case VTK_RAMP_LINEAR:\n      model.table[i * 4] = rgba[0] * 255.0 + 0.5;\n      model.table[i * 4 + 1] = rgba[1] * 255.0 + 0.5;\n      model.table[i * 4 + 2] = rgba[2] * 255.0 + 0.5;\n      model.table[i * 4 + 3] = rgba[3] * 255.0 + 0.5;\n    }\n    publicAPI.buildSpecialColors();\n    model.buildTime.modified();\n  };\n  publicAPI.setTable = table => {\n    // Handle JS array (assume 2D array)\n    if (Array.isArray(table)) {\n      const nbComponents = table[0].length;\n      model.numberOfColors = table.length;\n      const colorOffset = 4 - nbComponents;\n      let offset = 0;\n      // fill table\n      for (let i = 0; i < model.numberOfColors; i++) {\n        model.table[i * 4] = 255;\n        model.table[i * 4 + 1] = 255;\n        model.table[i * 4 + 2] = 255;\n        model.table[i * 4 + 3] = 255;\n      }\n      // extract colors\n      for (let i = 0; i < table.length; i++) {\n        const color = table[i];\n        for (let j = 0; j < nbComponents; j++) {\n          model.table[offset++] = color[j];\n        }\n        offset += colorOffset;\n      }\n      publicAPI.buildSpecialColors();\n      model.insertTime.modified();\n      publicAPI.modified();\n      return true;\n    }\n    if (table.getNumberOfComponents() !== 4) {\n      vtkErrorMacro('Expected 4 components for RGBA colors');\n      return false;\n    }\n    if (table.getDataType() !== VtkDataTypes.UNSIGNED_CHAR) {\n      vtkErrorMacro('Expected unsigned char values for RGBA colors');\n      return false;\n    }\n    model.numberOfColors = table.getNumberOfTuples();\n    const data = table.getData();\n    model.table.length = data.length;\n    for (let i = 0; i < data.length; i++) {\n      model.table[i] = data[i];\n    }\n    publicAPI.buildSpecialColors();\n    model.insertTime.modified();\n    publicAPI.modified();\n    return true;\n  };\n  publicAPI.buildSpecialColors = () => {\n    // Add \"special\" colors (NaN, below range, above range) to table here.\n    const {\n      numberOfColors\n    } = model;\n    const tptr = model.table;\n    let base = (numberOfColors + BELOW_RANGE_COLOR_INDEX) * 4;\n\n    // Below range color\n    if (model.useBelowRangeColor || numberOfColors === 0) {\n      tptr[base] = model.belowRangeColor[0] * 255.0 + 0.5;\n      tptr[base + 1] = model.belowRangeColor[1] * 255.0 + 0.5;\n      tptr[base + 2] = model.belowRangeColor[2] * 255.0 + 0.5;\n      tptr[base + 3] = model.belowRangeColor[3] * 255.0 + 0.5;\n    } else {\n      // Duplicate the first color in the table.\n      tptr[base] = tptr[0];\n      tptr[base + 1] = tptr[1];\n      tptr[base + 2] = tptr[2];\n      tptr[base + 3] = tptr[3];\n    }\n\n    // Above range color\n    base = (numberOfColors + ABOVE_RANGE_COLOR_INDEX) * 4;\n    if (model.useAboveRangeColor || numberOfColors === 0) {\n      tptr[base] = model.aboveRangeColor[0] * 255.0 + 0.5;\n      tptr[base + 1] = model.aboveRangeColor[1] * 255.0 + 0.5;\n      tptr[base + 2] = model.aboveRangeColor[2] * 255.0 + 0.5;\n      tptr[base + 3] = model.aboveRangeColor[3] * 255.0 + 0.5;\n    } else {\n      // Duplicate the last color in the table.\n      tptr[base] = tptr[4 * (numberOfColors - 1) + 0];\n      tptr[base + 1] = tptr[4 * (numberOfColors - 1) + 1];\n      tptr[base + 2] = tptr[4 * (numberOfColors - 1) + 2];\n      tptr[base + 3] = tptr[4 * (numberOfColors - 1) + 3];\n    }\n\n    // Always use NanColor\n    base = (numberOfColors + NAN_COLOR_INDEX) * 4;\n    tptr[base] = model.nanColor[0] * 255.0 + 0.5;\n    tptr[base + 1] = model.nanColor[1] * 255.0 + 0.5;\n    tptr[base + 2] = model.nanColor[2] * 255.0 + 0.5;\n    tptr[base + 3] = model.nanColor[3] * 255.0 + 0.5;\n  };\n  publicAPI.build = () => {\n    if (model.table.length < 1 || publicAPI.getMTime() > model.buildTime.getMTime() && model.insertTime.getMTime() <= model.buildTime.getMTime()) {\n      publicAPI.forceBuild();\n    }\n  };\n  if (model.table.length > 0) {\n    // Ensure that special colors are properly included in the table\n    publicAPI.buildSpecialColors();\n\n    // ensure insertTime is more recently modified than buildTime if\n    // a table is provided via the constructor\n    model.insertTime.modified();\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  numberOfColors: 256,\n  // table: null,\n\n  hueRange: [0.0, 0.66667],\n  saturationRange: [1.0, 1.0],\n  valueRange: [1.0, 1.0],\n  alphaRange: [1.0, 1.0],\n  nanColor: [0.5, 0.0, 0.0, 1.0],\n  belowRangeColor: [0.0, 0.0, 0.0, 1.0],\n  aboveRangeColor: [1.0, 1.0, 1.0, 1.0],\n  useAboveRangeColor: false,\n  useBelowRangeColor: false,\n  alpha: 1.0\n  // buildTime: null,\n  // opaqueFlagBuildTime: null,\n  // insertTime: null,\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkScalarsToColors.extend(publicAPI, model, initialValues);\n\n  // Internal objects initialization\n  if (!model.table) {\n    model.table = [];\n  }\n  model.buildTime = {};\n  macro.obj(model.buildTime);\n  model.opaqueFlagBuildTime = {};\n  macro.obj(model.opaqueFlagBuildTime, {\n    mtime: 0\n  });\n  model.insertTime = {};\n  macro.obj(model.insertTime, {\n    mtime: 0\n  });\n\n  // Create get-only macros\n  macro.get(publicAPI, model, ['buildTime']);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['numberOfColors', 'useAboveRangeColor', 'useBelowRangeColor']);\n\n  // Create set macros for array (needs to know size)\n  macro.setArray(publicAPI, model, ['alphaRange', 'hueRange', 'saturationRange', 'valueRange'], 2);\n  macro.setArray(publicAPI, model, ['nanColor', 'belowRangeColor', 'aboveRangeColor'], 4);\n\n  // Create get macros for array\n  macro.getArray(publicAPI, model, ['hueRange', 'saturationRange', 'valueRange', 'alphaRange', 'nanColor', 'belowRangeColor', 'aboveRangeColor']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n\n  // Object specific methods\n  vtkLookupTable(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkLookupTable');\n\n// ----------------------------------------------------------------------------\n\nvar vtkLookupTable$1 = {\n  newInstance,\n  extend\n};\nexport { vtkLookupTable$1 as default, extend, newInstance };","map":{"version":3,"names":["m","macro","i","isNan","h","hsv2rgb","vtkScalarsToColors","ScalarMappingTarget","VtkDataTypes","vtkErrorMacro","BELOW_RANGE_COLOR_INDEX","ABOVE_RANGE_COLOR_INDEX","NAN_COLOR_INDEX","vtkLookupTable","publicAPI","model","classHierarchy","push","isOpaque","opaqueFlagBuildTime","getMTime","opaque","nanColor","useBelowRangeColor","belowRangeColor","useAboveRangeColor","aboveRangeColor","table","length","opaqueFlag","modified","usingLogScale","getNumberOfAvailableColors","linearIndexLookup","v","p","dIndex","nv","Number","range","maxIndex","shift","scale","Math","floor","linearLookup","index","offset","slice","indexedLookupFunction","getAnnotatedValueIndexInternal","numberOfColors","lookupShiftAndScale","MAX_VALUE","mapScalarsThroughTable","input","output","outFormat","inputOffset","lookupFunc","indexedLookup","trange","getMappingRange","getNumberOfColors","alpha","getAlpha","getNumberOfTuples","inIncr","getNumberOfComponents","outputV","getData","inputV","RGBA","cptr","forceBuild","hinc","sinc","vinc","ainc","hueRange","saturationRange","valueRange","alphaRange","hsv","rgba","buildSpecialColors","buildTime","setTable","Array","isArray","nbComponents","colorOffset","color","j","insertTime","getDataType","UNSIGNED_CHAR","data","tptr","base","build","DEFAULT_VALUES","extend","initialValues","arguments","undefined","Object","assign","obj","mtime","get","setGet","setArray","getArray","newInstance","vtkLookupTable$1","default"],"sources":["/Users/yzy/Documents/Playground/vue-cornerstone-demo/node_modules/@kitware/vtk.js/Common/Core/LookupTable.js"],"sourcesContent":["import { m as macro } from '../../macros2.js';\nimport { i as isNan, h as hsv2rgb } from './Math/index.js';\nimport vtkScalarsToColors from './ScalarsToColors.js';\nimport { ScalarMappingTarget } from './ScalarsToColors/Constants.js';\nimport { VtkDataTypes } from './DataArray/Constants.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n// Add module-level functions or api that you want to expose statically via\n// the next section...\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nconst BELOW_RANGE_COLOR_INDEX = 0;\nconst ABOVE_RANGE_COLOR_INDEX = 1;\nconst NAN_COLOR_INDEX = 2;\n\n// ----------------------------------------------------------------------------\n// vtkMyClass methods\n// ----------------------------------------------------------------------------\n\nfunction vtkLookupTable(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkLookupTable');\n\n  //----------------------------------------------------------------------------\n  // Description:\n  // Return true if all of the values defining the mapping have an opacity\n  // equal to 1. Default implementation return true.\n  publicAPI.isOpaque = () => {\n    if (model.opaqueFlagBuildTime.getMTime() < publicAPI.getMTime()) {\n      let opaque = true;\n      if (model.nanColor[3] < 1.0) {\n        opaque = 0;\n      }\n      if (model.useBelowRangeColor && model.belowRangeColor[3] < 1.0) {\n        opaque = 0;\n      }\n      if (model.useAboveRangeColor && model.aboveRangeColor[3] < 1.0) {\n        opaque = 0;\n      }\n      for (let i = 3; i < model.table.length && opaque; i += 4) {\n        if (model.table[i] < 255) {\n          opaque = false;\n        }\n      }\n      model.opaqueFlag = opaque;\n      model.opaqueFlagBuildTime.modified();\n    }\n    return model.opaqueFlag;\n  };\n  publicAPI.usingLogScale = () => false;\n\n  //----------------------------------------------------------------------------\n  publicAPI.getNumberOfAvailableColors = () => model.table.length / 4;\n\n  //----------------------------------------------------------------------------\n  // Apply shift/scale to the scalar value v and return the index.\n  publicAPI.linearIndexLookup = (v, p) => {\n    let dIndex = 0;\n    const nv = Number(v);\n    if (nv < p.range[0]) {\n      dIndex = p.maxIndex + BELOW_RANGE_COLOR_INDEX + 1.5;\n    } else if (nv > p.range[1]) {\n      dIndex = p.maxIndex + ABOVE_RANGE_COLOR_INDEX + 1.5;\n    } else {\n      dIndex = (nv + p.shift) * p.scale;\n\n      // This conditional is needed because when v is very close to\n      // p.Range[1], it may map above p.MaxIndex in the linear mapping\n      // above.\n      dIndex = dIndex < p.maxIndex ? dIndex : p.maxIndex;\n    }\n    return Math.floor(dIndex);\n  };\n  publicAPI.linearLookup = (v, table, p) => {\n    let index = 0;\n    if (isNan(v)) {\n      index = Math.floor(p.maxIndex + 1.5 + NAN_COLOR_INDEX);\n    } else {\n      index = publicAPI.linearIndexLookup(v, p);\n    }\n    const offset = 4 * index;\n    return table.slice(offset, offset + 4);\n  };\n  publicAPI.indexedLookupFunction = (v, table, p) => {\n    let index = publicAPI.getAnnotatedValueIndexInternal(v);\n    if (index === -1) {\n      index = model.numberOfColors + NAN_COLOR_INDEX;\n    }\n    const offset = 4 * index;\n    return [table[offset], table[offset + 1], table[offset + 2], table[offset + 3]];\n  };\n\n  //----------------------------------------------------------------------------\n  publicAPI.lookupShiftAndScale = (range, p) => {\n    p.shift = -range[0];\n    p.scale = Number.MAX_VALUE;\n    if (range[1] > range[0]) {\n      p.scale = (p.maxIndex + 1) / (range[1] - range[0]);\n    }\n  };\n\n  // Public API methods\n  publicAPI.mapScalarsThroughTable = (input, output, outFormat, inputOffset) => {\n    let lookupFunc = publicAPI.linearLookup;\n    if (model.indexedLookup) {\n      lookupFunc = publicAPI.indexedLookupFunction;\n    }\n    const trange = publicAPI.getMappingRange();\n    const p = {\n      maxIndex: publicAPI.getNumberOfColors() - 1,\n      range: trange,\n      shift: 0.0,\n      scale: 0.0\n    };\n    publicAPI.lookupShiftAndScale(trange, p);\n    const alpha = publicAPI.getAlpha();\n    const length = input.getNumberOfTuples();\n    const inIncr = input.getNumberOfComponents();\n    const outputV = output.getData();\n    const inputV = input.getData();\n    if (alpha >= 1.0) {\n      if (outFormat === ScalarMappingTarget.RGBA) {\n        for (let i = 0; i < length; i++) {\n          const cptr = lookupFunc(inputV[i * inIncr + inputOffset], model.table, p);\n          outputV[i * 4] = cptr[0];\n          outputV[i * 4 + 1] = cptr[1];\n          outputV[i * 4 + 2] = cptr[2];\n          outputV[i * 4 + 3] = cptr[3];\n        }\n      }\n    } else {\n      /* eslint-disable no-lonely-if */\n      if (outFormat === ScalarMappingTarget.RGBA) {\n        for (let i = 0; i < length; i++) {\n          const cptr = lookupFunc(inputV[i * inIncr + inputOffset], model.table, p);\n          outputV[i * 4] = cptr[0];\n          outputV[i * 4 + 1] = cptr[1];\n          outputV[i * 4 + 2] = cptr[2];\n          outputV[i * 4 + 3] = Math.floor(cptr[3] * alpha + 0.5);\n        }\n      }\n    } // alpha blending\n  };\n\n  publicAPI.forceBuild = () => {\n    let hinc = 0.0;\n    let sinc = 0.0;\n    let vinc = 0.0;\n    let ainc = 0.0;\n    const maxIndex = model.numberOfColors - 1;\n    if (maxIndex) {\n      hinc = (model.hueRange[1] - model.hueRange[0]) / maxIndex;\n      sinc = (model.saturationRange[1] - model.saturationRange[0]) / maxIndex;\n      vinc = (model.valueRange[1] - model.valueRange[0]) / maxIndex;\n      ainc = (model.alphaRange[1] - model.alphaRange[0]) / maxIndex;\n    }\n    model.table.length = 4 * maxIndex + 16;\n    const hsv = [];\n    const rgba = [];\n    for (let i = 0; i <= maxIndex; i++) {\n      hsv[0] = model.hueRange[0] + i * hinc;\n      hsv[1] = model.saturationRange[0] + i * sinc;\n      hsv[2] = model.valueRange[0] + i * vinc;\n      hsv2rgb(hsv, rgba);\n      rgba[3] = model.alphaRange[0] + i * ainc;\n\n      //  case VTK_RAMP_LINEAR:\n      model.table[i * 4] = rgba[0] * 255.0 + 0.5;\n      model.table[i * 4 + 1] = rgba[1] * 255.0 + 0.5;\n      model.table[i * 4 + 2] = rgba[2] * 255.0 + 0.5;\n      model.table[i * 4 + 3] = rgba[3] * 255.0 + 0.5;\n    }\n    publicAPI.buildSpecialColors();\n    model.buildTime.modified();\n  };\n  publicAPI.setTable = table => {\n    // Handle JS array (assume 2D array)\n    if (Array.isArray(table)) {\n      const nbComponents = table[0].length;\n      model.numberOfColors = table.length;\n      const colorOffset = 4 - nbComponents;\n      let offset = 0;\n      // fill table\n      for (let i = 0; i < model.numberOfColors; i++) {\n        model.table[i * 4] = 255;\n        model.table[i * 4 + 1] = 255;\n        model.table[i * 4 + 2] = 255;\n        model.table[i * 4 + 3] = 255;\n      }\n      // extract colors\n      for (let i = 0; i < table.length; i++) {\n        const color = table[i];\n        for (let j = 0; j < nbComponents; j++) {\n          model.table[offset++] = color[j];\n        }\n        offset += colorOffset;\n      }\n      publicAPI.buildSpecialColors();\n      model.insertTime.modified();\n      publicAPI.modified();\n      return true;\n    }\n    if (table.getNumberOfComponents() !== 4) {\n      vtkErrorMacro('Expected 4 components for RGBA colors');\n      return false;\n    }\n    if (table.getDataType() !== VtkDataTypes.UNSIGNED_CHAR) {\n      vtkErrorMacro('Expected unsigned char values for RGBA colors');\n      return false;\n    }\n    model.numberOfColors = table.getNumberOfTuples();\n    const data = table.getData();\n    model.table.length = data.length;\n    for (let i = 0; i < data.length; i++) {\n      model.table[i] = data[i];\n    }\n    publicAPI.buildSpecialColors();\n    model.insertTime.modified();\n    publicAPI.modified();\n    return true;\n  };\n  publicAPI.buildSpecialColors = () => {\n    // Add \"special\" colors (NaN, below range, above range) to table here.\n    const {\n      numberOfColors\n    } = model;\n    const tptr = model.table;\n    let base = (numberOfColors + BELOW_RANGE_COLOR_INDEX) * 4;\n\n    // Below range color\n    if (model.useBelowRangeColor || numberOfColors === 0) {\n      tptr[base] = model.belowRangeColor[0] * 255.0 + 0.5;\n      tptr[base + 1] = model.belowRangeColor[1] * 255.0 + 0.5;\n      tptr[base + 2] = model.belowRangeColor[2] * 255.0 + 0.5;\n      tptr[base + 3] = model.belowRangeColor[3] * 255.0 + 0.5;\n    } else {\n      // Duplicate the first color in the table.\n      tptr[base] = tptr[0];\n      tptr[base + 1] = tptr[1];\n      tptr[base + 2] = tptr[2];\n      tptr[base + 3] = tptr[3];\n    }\n\n    // Above range color\n    base = (numberOfColors + ABOVE_RANGE_COLOR_INDEX) * 4;\n    if (model.useAboveRangeColor || numberOfColors === 0) {\n      tptr[base] = model.aboveRangeColor[0] * 255.0 + 0.5;\n      tptr[base + 1] = model.aboveRangeColor[1] * 255.0 + 0.5;\n      tptr[base + 2] = model.aboveRangeColor[2] * 255.0 + 0.5;\n      tptr[base + 3] = model.aboveRangeColor[3] * 255.0 + 0.5;\n    } else {\n      // Duplicate the last color in the table.\n      tptr[base] = tptr[4 * (numberOfColors - 1) + 0];\n      tptr[base + 1] = tptr[4 * (numberOfColors - 1) + 1];\n      tptr[base + 2] = tptr[4 * (numberOfColors - 1) + 2];\n      tptr[base + 3] = tptr[4 * (numberOfColors - 1) + 3];\n    }\n\n    // Always use NanColor\n    base = (numberOfColors + NAN_COLOR_INDEX) * 4;\n    tptr[base] = model.nanColor[0] * 255.0 + 0.5;\n    tptr[base + 1] = model.nanColor[1] * 255.0 + 0.5;\n    tptr[base + 2] = model.nanColor[2] * 255.0 + 0.5;\n    tptr[base + 3] = model.nanColor[3] * 255.0 + 0.5;\n  };\n  publicAPI.build = () => {\n    if (model.table.length < 1 || publicAPI.getMTime() > model.buildTime.getMTime() && model.insertTime.getMTime() <= model.buildTime.getMTime()) {\n      publicAPI.forceBuild();\n    }\n  };\n  if (model.table.length > 0) {\n    // Ensure that special colors are properly included in the table\n    publicAPI.buildSpecialColors();\n\n    // ensure insertTime is more recently modified than buildTime if\n    // a table is provided via the constructor\n    model.insertTime.modified();\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  numberOfColors: 256,\n  // table: null,\n\n  hueRange: [0.0, 0.66667],\n  saturationRange: [1.0, 1.0],\n  valueRange: [1.0, 1.0],\n  alphaRange: [1.0, 1.0],\n  nanColor: [0.5, 0.0, 0.0, 1.0],\n  belowRangeColor: [0.0, 0.0, 0.0, 1.0],\n  aboveRangeColor: [1.0, 1.0, 1.0, 1.0],\n  useAboveRangeColor: false,\n  useBelowRangeColor: false,\n  alpha: 1.0\n  // buildTime: null,\n  // opaqueFlagBuildTime: null,\n  // insertTime: null,\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkScalarsToColors.extend(publicAPI, model, initialValues);\n\n  // Internal objects initialization\n  if (!model.table) {\n    model.table = [];\n  }\n  model.buildTime = {};\n  macro.obj(model.buildTime);\n  model.opaqueFlagBuildTime = {};\n  macro.obj(model.opaqueFlagBuildTime, {\n    mtime: 0\n  });\n  model.insertTime = {};\n  macro.obj(model.insertTime, {\n    mtime: 0\n  });\n\n  // Create get-only macros\n  macro.get(publicAPI, model, ['buildTime']);\n\n  // Create get-set macros\n  macro.setGet(publicAPI, model, ['numberOfColors', 'useAboveRangeColor', 'useBelowRangeColor']);\n\n  // Create set macros for array (needs to know size)\n  macro.setArray(publicAPI, model, ['alphaRange', 'hueRange', 'saturationRange', 'valueRange'], 2);\n  macro.setArray(publicAPI, model, ['nanColor', 'belowRangeColor', 'aboveRangeColor'], 4);\n\n  // Create get macros for array\n  macro.getArray(publicAPI, model, ['hueRange', 'saturationRange', 'valueRange', 'alphaRange', 'nanColor', 'belowRangeColor', 'aboveRangeColor']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n\n  // Object specific methods\n  vtkLookupTable(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkLookupTable');\n\n// ----------------------------------------------------------------------------\n\nvar vtkLookupTable$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkLookupTable$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}