{"ast":null,"code":"import { getEnabledElement } from '@cornerstonejs/core';\nimport { mouseEventListeners, wheelEventListener, touchEventListeners, keyEventListener } from '../eventListeners';\nimport { imageRenderedEventDispatcher, cameraModifiedEventDispatcher, mouseToolEventDispatcher, keyboardToolEventDispatcher, imageSpacingCalibratedEventDispatcher, touchToolEventDispatcher } from '../eventDispatchers';\nimport filterToolsWithAnnotationsForElement from './filterToolsWithAnnotationsForElement';\nimport { state } from './state';\nimport getToolsWithModesForElement from '../utilities/getToolsWithModesForElement';\nimport { ToolModes } from '../enums';\nimport { removeAnnotation } from '../stateManagement';\nimport getSynchronizersForViewport from './SynchronizerManager/getSynchronizersForViewport';\nimport getToolGroupForViewport from './ToolGroupManager/getToolGroupForViewport';\nimport { annotationRenderingEngine } from '../utilities/triggerAnnotationRender';\nimport imageChangeEventListener from '../eventListeners/segmentation/imageChangeEventListener';\nconst VIEWPORT_ELEMENT = 'viewport-element';\nfunction removeEnabledElement(elementDisabledEvt) {\n  const {\n    element,\n    viewportId\n  } = elementDisabledEvt.detail;\n  _resetSvgNodeCache(element);\n  _removeSvgNode(element);\n  annotationRenderingEngine.removeViewportElement(viewportId, element);\n  mouseEventListeners.disable(element);\n  wheelEventListener.disable(element);\n  touchEventListeners.disable(element);\n  keyEventListener.disable(element);\n  imageChangeEventListener.disable(element);\n  imageRenderedEventDispatcher.disable(element);\n  cameraModifiedEventDispatcher.disable(element);\n  imageSpacingCalibratedEventDispatcher.disable(element);\n  mouseToolEventDispatcher.disable(element);\n  keyboardToolEventDispatcher.disable(element);\n  touchToolEventDispatcher.disable(element);\n  _removeViewportFromSynchronizers(element);\n  _removeViewportFromToolGroup(element);\n  _removeEnabledElement(element);\n}\nconst _removeViewportFromSynchronizers = element => {\n  const enabledElement = getEnabledElement(element);\n  const synchronizers = getSynchronizersForViewport(enabledElement.viewportId, enabledElement.renderingEngineId);\n  synchronizers.forEach(sync => {\n    sync.remove(enabledElement);\n  });\n};\nconst _removeViewportFromToolGroup = element => {\n  const {\n    renderingEngineId,\n    viewportId\n  } = getEnabledElement(element);\n  const toolGroup = getToolGroupForViewport(viewportId, renderingEngineId);\n  if (toolGroup) {\n    toolGroup.removeViewports(renderingEngineId, viewportId);\n  }\n};\nconst _removeAllToolsForElement = function (element) {\n  const tools = getToolsWithModesForElement(element, [ToolModes.Active, ToolModes.Passive]);\n  const toolsWithData = filterToolsWithAnnotationsForElement(element, tools);\n  toolsWithData.forEach(({\n    annotations\n  }) => {\n    annotations.forEach(annotation => {\n      removeAnnotation(annotation.annotationUID);\n    });\n  });\n};\nfunction _resetSvgNodeCache(element) {\n  const {\n    viewportUid: viewportId,\n    renderingEngineUid: renderingEngineId\n  } = element.dataset;\n  const elementHash = `${viewportId}:${renderingEngineId}`;\n  delete state.svgNodeCache[elementHash];\n}\nfunction _removeSvgNode(element) {\n  const internalViewportNode = element.querySelector(`div.${VIEWPORT_ELEMENT}`);\n  const svgLayer = internalViewportNode.querySelector('svg');\n  if (svgLayer) {\n    internalViewportNode.removeChild(svgLayer);\n  }\n}\nconst _removeEnabledElement = function (element) {\n  const foundElementIndex = state.enabledElements.findIndex(el => el === element);\n  if (foundElementIndex > -1) {\n    state.enabledElements.splice(foundElementIndex, 1);\n  }\n};\nexport default removeEnabledElement;","map":{"version":3,"names":["getEnabledElement","mouseEventListeners","wheelEventListener","touchEventListeners","keyEventListener","imageRenderedEventDispatcher","cameraModifiedEventDispatcher","mouseToolEventDispatcher","keyboardToolEventDispatcher","imageSpacingCalibratedEventDispatcher","touchToolEventDispatcher","filterToolsWithAnnotationsForElement","state","getToolsWithModesForElement","ToolModes","removeAnnotation","getSynchronizersForViewport","getToolGroupForViewport","annotationRenderingEngine","imageChangeEventListener","VIEWPORT_ELEMENT","removeEnabledElement","elementDisabledEvt","element","viewportId","detail","_resetSvgNodeCache","_removeSvgNode","removeViewportElement","disable","_removeViewportFromSynchronizers","_removeViewportFromToolGroup","_removeEnabledElement","enabledElement","synchronizers","renderingEngineId","forEach","sync","remove","toolGroup","removeViewports","_removeAllToolsForElement","tools","Active","Passive","toolsWithData","annotations","annotation","annotationUID","viewportUid","renderingEngineUid","dataset","elementHash","svgNodeCache","internalViewportNode","querySelector","svgLayer","removeChild","foundElementIndex","enabledElements","findIndex","el","splice"],"sources":["../../../src/store/removeEnabledElement.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}