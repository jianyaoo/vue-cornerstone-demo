{"ast":null,"code":"import Calculator from './Calculator';\nexport default class BasicStatsCalculator extends Calculator {\n  static {\n    this.max = [-Infinity];\n  }\n  static {\n    this.sum = [0];\n  }\n  static {\n    this.sumSquares = [0];\n  }\n  static {\n    this.squaredDiffSum = [0];\n  }\n  static {\n    this.count = 0;\n  }\n  static {\n    this.statsCallback = ({\n      value: newValue\n    }) => {\n      if (Array.isArray(newValue) && newValue.length > 1 && this.max.length === 1) {\n        this.max.push(this.max[0], this.max[0]);\n        this.sum.push(this.sum[0], this.sum[0]);\n        this.sumSquares.push(this.sumSquares[0], this.sumSquares[0]);\n        this.squaredDiffSum.push(this.squaredDiffSum[0], this.squaredDiffSum[0]);\n      }\n      const newArray = Array.isArray(newValue) ? newValue : [newValue];\n      this.count += 1;\n      this.max.forEach((it, idx) => this.max[idx] = Math.max(it, newArray[idx]));\n      this.sum.map((it, idx) => this.sum[idx] += newArray[idx]);\n      this.sumSquares.map((it, idx) => this.sumSquares[idx] += newArray[idx] ** 2);\n      this.squaredDiffSum.map((it, idx) => this.squaredDiffSum[idx] += Math.pow(newArray[idx] - this.sum[idx] / this.count, 2));\n    };\n  }\n  static {\n    this.getStatistics = () => {\n      const mean = this.sum.map(sum => sum / this.count);\n      const stdDev = this.squaredDiffSum.map(squaredDiffSum => Math.sqrt(squaredDiffSum / this.count));\n      const stdDevWithSumSquare = this.sumSquares.map((it, idx) => Math.sqrt(this.sumSquares[idx] / this.count - mean[idx] ** 2));\n      const currentMax = this.max;\n      this.max = [-Infinity];\n      this.sum = [0];\n      this.sumSquares = [0];\n      this.squaredDiffSum = [0];\n      this.count = 0;\n      return [{\n        name: 'max',\n        value: singleArrayAsNumber(currentMax),\n        unit: null\n      }, {\n        name: 'mean',\n        value: singleArrayAsNumber(mean),\n        unit: null\n      }, {\n        name: 'stdDev',\n        value: singleArrayAsNumber(stdDev),\n        unit: null\n      }, {\n        name: 'stdDevWithSumSquare',\n        value: singleArrayAsNumber(stdDevWithSumSquare),\n        unit: null\n      }];\n    };\n  }\n}\nfunction singleArrayAsNumber(val) {\n  return val.length === 1 ? val[0] : val;\n}","map":{"version":3,"names":["Calculator","BasicStatsCalculator","max","Infinity","sum","sumSquares","squaredDiffSum","count","statsCallback","value","newValue","Array","isArray","length","push","newArray","forEach","it","idx","Math","map","pow","getStatistics","mean","stdDev","sqrt","stdDevWithSumSquare","currentMax","name","singleArrayAsNumber","unit","val"],"sources":["../../../../../src/utilities/math/basic/BasicStatsCalculator.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}