{"ast":null,"code":"import { state } from '../../store';\nimport { ToolModes } from '../../enums';\nimport filterToolsWithAnnotationsForElement from '../../store/filterToolsWithAnnotationsForElement';\nimport getToolsWithModesForMouseEvent from '../shared/getToolsWithModesForMouseEvent';\nimport triggerAnnotationRender from '../../utilities/triggerAnnotationRender';\nconst {\n  Active,\n  Passive\n} = ToolModes;\nexport default function mouseMove(evt) {\n  if (state.isInteractingWithTool || state.isMultiPartToolActive) {\n    return;\n  }\n  const activeAndPassiveTools = getToolsWithModesForMouseEvent(evt, [Active, Passive]);\n  const eventDetail = evt.detail;\n  const {\n    element\n  } = eventDetail;\n  const toolsWithAnnotations = filterToolsWithAnnotationsForElement(element, activeAndPassiveTools);\n  const toolsWithoutAnnotations = activeAndPassiveTools.filter(tool => {\n    const doesNotHaveAnnotations = !toolsWithAnnotations.some(toolAndAnnotation => toolAndAnnotation.tool.getToolName() === tool.getToolName());\n    return doesNotHaveAnnotations;\n  });\n  let annotationsNeedToBeRedrawn = false;\n  for (const {\n    tool,\n    annotations\n  } of toolsWithAnnotations) {\n    if (typeof tool.mouseMoveCallback === 'function') {\n      annotationsNeedToBeRedrawn = tool.mouseMoveCallback(evt, annotations) || annotationsNeedToBeRedrawn;\n    }\n  }\n  toolsWithoutAnnotations.forEach(tool => {\n    if (typeof tool.mouseMoveCallback === 'function') {\n      tool.mouseMoveCallback(evt);\n    }\n  });\n  if (annotationsNeedToBeRedrawn === true) {\n    triggerAnnotationRender(element);\n  }\n}","map":{"version":3,"names":["state","ToolModes","filterToolsWithAnnotationsForElement","getToolsWithModesForMouseEvent","triggerAnnotationRender","Active","Passive","mouseMove","evt","isInteractingWithTool","isMultiPartToolActive","activeAndPassiveTools","eventDetail","detail","element","toolsWithAnnotations","toolsWithoutAnnotations","filter","tool","doesNotHaveAnnotations","some","toolAndAnnotation","getToolName","annotationsNeedToBeRedrawn","annotations","mouseMoveCallback","forEach"],"sources":["../../../../src/eventDispatchers/mouseEventHandlers/mouseMove.ts"],"sourcesContent":[null],"mappings":"AACA,SAASA,KAAK,QAAQ,aAAa;AACnC,SAASC,SAAS,QAAQ,aAAa;AAGvC,OAAOC,oCAAoC,MAAM,kDAAkD;AACnG,OAAOC,8BAA8B,MAAM,0CAA0C;AACrF,OAAOC,uBAAuB,MAAM,yCAAyC;AAG7E,MAAM;EAAEC,MAAM;EAAEC;AAAO,CAAE,GAAGL,SAAS;AASrC,eAAc,SAAUM,SAASA,CAACC,GAAuB;EAGvD,IAAIR,KAAK,CAACS,qBAAqB,IAAIT,KAAK,CAACU,qBAAqB,EAAE;IAC9D;;EAGF,MAAMC,qBAAqB,GAAGR,8BAA8B,CAACK,GAAG,EAAE,CAChEH,MAAM,EACNC,OAAO,CACR,CAAC;EAEF,MAAMM,WAAW,GAAGJ,GAAG,CAACK,MAAM;EAC9B,MAAM;IAAEC;EAAO,CAAE,GAAGF,WAAW;EAG/B,MAAMG,oBAAoB,GAAGb,oCAAoC,CAC/DY,OAAO,EACPH,qBAAqB,CACtB;EAED,MAAMK,uBAAuB,GAAGL,qBAAqB,CAACM,MAAM,CAAEC,IAAI,IAAI;IACpE,MAAMC,sBAAsB,GAAG,CAACJ,oBAAoB,CAACK,IAAI,CACtDC,iBAAiB,IAChBA,iBAAiB,CAACH,IAAI,CAACI,WAAW,EAAE,KAAKJ,IAAI,CAACI,WAAW,EAAE,CAC9D;IAED,OAAOH,sBAAsB;EAC/B,CAAC,CAAC;EAEF,IAAII,0BAA0B,GAAG,KAAK;EAEtC,KAAK,MAAM;IAAEL,IAAI;IAAEM;EAAW,CAAE,IAAIT,oBAAoB,EAAE;IACxD,IAAI,OAAOG,IAAI,CAACO,iBAAiB,KAAK,UAAU,EAAE;MAChDF,0BAA0B,GACxBL,IAAI,CAACO,iBAAiB,CAACjB,GAAG,EAAEgB,WAAW,CAAC,IAAID,0BAA0B;;;EAK5EP,uBAAuB,CAACU,OAAO,CAAER,IAAI,IAAI;IACvC,IAAI,OAAOA,IAAI,CAACO,iBAAiB,KAAK,UAAU,EAAE;MAChDP,IAAI,CAACO,iBAAiB,CAACjB,GAAG,CAAC;;EAE/B,CAAC,CAAC;EAGF,IAAIe,0BAA0B,KAAK,IAAI,EAAE;IACvCnB,uBAAuB,CAACU,OAAO,CAAC;;AAEpC"},"metadata":{},"sourceType":"module","externalDependencies":[]}