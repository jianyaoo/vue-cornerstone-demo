{"ast":null,"code":"export default function findClosestPoint(sourcePoints, targetPoint) {\n  let minPoint = [0, 0];\n  let minDistance = Number.MAX_SAFE_INTEGER;\n  sourcePoints.forEach(function (sourcePoint) {\n    const distance = _distanceBetween(targetPoint, sourcePoint);\n    if (distance < minDistance) {\n      minDistance = distance;\n      minPoint = [...sourcePoint];\n    }\n  });\n  return minPoint;\n}\nfunction _distanceBetween(p1, p2) {\n  const [x1, y1] = p1;\n  const [x2, y2] = p2;\n  return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2));\n}","map":{"version":3,"names":["findClosestPoint","sourcePoints","targetPoint","minPoint","minDistance","Number","MAX_SAFE_INTEGER","forEach","sourcePoint","distance","_distanceBetween","p1","p2","x1","y1","x2","y2","Math","sqrt","pow"],"sources":["../../../../../src/utilities/math/vec2/findClosestPoint.ts"],"sourcesContent":[null],"mappings":"AASA,eAAc,SAAUA,gBAAgBA,CACtCC,YAAiC,EACjCC,WAAyB;EAEzB,IAAIC,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EACrB,IAAIC,WAAW,GAAGC,MAAM,CAACC,gBAAgB;EAEzCL,YAAY,CAACM,OAAO,CAAC,UAAUC,WAAW;IACxC,MAAMC,QAAQ,GAAGC,gBAAgB,CAACR,WAAW,EAAEM,WAAW,CAAC;IAE3D,IAAIC,QAAQ,GAAGL,WAAW,EAAE;MAC1BA,WAAW,GAAGK,QAAQ;MACtBN,QAAQ,GAAG,CAAC,GAAGK,WAAW,CAAC;;EAE/B,CAAC,CAAC;EAEF,OAAOL,QAAwB;AACjC;AAQA,SAASO,gBAAgBA,CAACC,EAAgB,EAAEC,EAAgB;EAC1D,MAAM,CAACC,EAAE,EAAEC,EAAE,CAAC,GAAGH,EAAE;EACnB,MAAM,CAACI,EAAE,EAAEC,EAAE,CAAC,GAAGJ,EAAE;EAEnB,OAAOK,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,GAAG,CAACN,EAAE,GAAGE,EAAE,EAAE,CAAC,CAAC,GAAGE,IAAI,CAACE,GAAG,CAACL,EAAE,GAAGE,EAAE,EAAE,CAAC,CAAC,CAAC;AAC/D"},"metadata":{},"sourceType":"module","externalDependencies":[]}