{"ast":null,"code":"import { getEnabledElement } from '@cornerstonejs/core';\nimport { addAnnotation, getAnnotations } from '../../stateManagement/annotation/annotationState';\nimport { drawPolyline as drawPolylineSvg } from '../../drawingSvg';\nimport AnnotationTool from './AnnotationTool';\nclass ContourBaseTool extends AnnotationTool {\n  constructor(toolProps, defaultToolProps) {\n    super(toolProps, defaultToolProps);\n  }\n  renderAnnotation(enabledElement, svgDrawingHelper) {\n    let renderStatus = false;\n    const {\n      viewport\n    } = enabledElement;\n    const {\n      element\n    } = viewport;\n    if (!viewport.getRenderingEngine()) {\n      console.warn('Rendering Engine has been destroyed');\n      return renderStatus;\n    }\n    let annotations = getAnnotations(this.getToolName(), element);\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n    annotations = this.filterInteractableAnnotationsForElement(element, annotations);\n    if (!annotations?.length) {\n      return renderStatus;\n    }\n    const targetId = this.getTargetId(viewport);\n    const styleSpecifier = {\n      toolGroupId: this.toolGroupId,\n      toolName: this.getToolName(),\n      viewportId: enabledElement.viewport.id\n    };\n    for (let i = 0; i < annotations.length; i++) {\n      const annotation = annotations[i];\n      styleSpecifier.annotationUID = annotation.annotationUID;\n      const annotationStyle = this.getAnnotationStyle({\n        annotation,\n        styleSpecifier\n      });\n      if (!annotationStyle.visibility) {\n        continue;\n      }\n      const annotationRendered = this.renderAnnotationInstance({\n        enabledElement,\n        targetId,\n        annotation,\n        annotationStyle,\n        svgDrawingHelper\n      });\n      renderStatus ||= annotationRendered;\n      annotation.invalidated = false;\n    }\n    return renderStatus;\n  }\n  createAnnotation(evt) {\n    const eventDetail = evt.detail;\n    const {\n      currentPoints,\n      element\n    } = eventDetail;\n    const {\n      world: worldPos\n    } = currentPoints;\n    const enabledElement = getEnabledElement(element);\n    const {\n      viewport\n    } = enabledElement;\n    const camera = viewport.getCamera();\n    const {\n      viewPlaneNormal,\n      viewUp\n    } = camera;\n    const referencedImageId = this.getReferencedImageId(viewport, worldPos, viewPlaneNormal, viewUp);\n    const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n    return {\n      highlighted: true,\n      invalidated: true,\n      metadata: {\n        toolName: this.getToolName(),\n        viewPlaneNormal: [...viewPlaneNormal],\n        viewUp: [...viewUp],\n        FrameOfReferenceUID,\n        referencedImageId\n      },\n      data: {\n        handles: {\n          points: [],\n          activeHandleIndex: null,\n          textBox: {\n            hasMoved: false,\n            worldPosition: [0, 0, 0],\n            worldBoundingBox: {\n              topLeft: [0, 0, 0],\n              topRight: [0, 0, 0],\n              bottomLeft: [0, 0, 0],\n              bottomRight: [0, 0, 0]\n            }\n          }\n        },\n        contour: {\n          polyline: [],\n          closed: false\n        }\n      }\n    };\n  }\n  addAnnotation(annotation, element) {\n    return addAnnotation(annotation, element);\n  }\n  cancelAnnotation(annotation) {}\n  getPolylinePoints(annotation) {\n    return annotation.data.contour?.polyline ?? annotation.data.polyline;\n  }\n  renderAnnotationInstance(renderContext) {\n    const {\n      enabledElement,\n      annotationStyle,\n      svgDrawingHelper\n    } = renderContext;\n    const annotation = renderContext.annotation;\n    const {\n      annotationUID\n    } = annotation;\n    const {\n      viewport\n    } = enabledElement;\n    const {\n      worldToCanvas\n    } = viewport;\n    const polylineCanvasPoints = this.getPolylinePoints(annotation).map(point => worldToCanvas(point));\n    const {\n      lineWidth,\n      lineDash,\n      color,\n      fillColor,\n      fillOpacity\n    } = annotationStyle;\n    drawPolylineSvg(svgDrawingHelper, annotationUID, 'contourPolyline', polylineCanvasPoints, {\n      color,\n      lineDash,\n      lineWidth: Math.max(0.1, lineWidth),\n      fillColor: fillColor,\n      fillOpacity\n    });\n    return true;\n  }\n}\nexport { ContourBaseTool as default, ContourBaseTool };","map":{"version":3,"names":["getEnabledElement","addAnnotation","getAnnotations","drawPolyline","drawPolylineSvg","AnnotationTool","ContourBaseTool","constructor","toolProps","defaultToolProps","renderAnnotation","enabledElement","svgDrawingHelper","renderStatus","viewport","element","getRenderingEngine","console","warn","annotations","getToolName","length","filterInteractableAnnotationsForElement","targetId","getTargetId","styleSpecifier","toolGroupId","toolName","viewportId","id","i","annotation","annotationUID","annotationStyle","getAnnotationStyle","visibility","annotationRendered","renderAnnotationInstance","invalidated","createAnnotation","evt","eventDetail","detail","currentPoints","world","worldPos","camera","getCamera","viewPlaneNormal","viewUp","referencedImageId","getReferencedImageId","FrameOfReferenceUID","getFrameOfReferenceUID","highlighted","metadata","data","handles","points","activeHandleIndex","textBox","hasMoved","worldPosition","worldBoundingBox","topLeft","topRight","bottomLeft","bottomRight","contour","polyline","closed","cancelAnnotation","getPolylinePoints","renderContext","worldToCanvas","polylineCanvasPoints","map","point","lineWidth","lineDash","color","fillColor","fillOpacity","Math","max","default"],"sources":["../../../../src/tools/base/ContourBaseTool.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}