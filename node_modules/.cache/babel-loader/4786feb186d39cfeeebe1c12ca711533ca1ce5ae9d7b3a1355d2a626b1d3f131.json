{"ast":null,"code":"import { m as macro } from '../../macros2.js';\nconst DEFAULT_VIEW_API = 'WebGL';\nconst VIEW_CONSTRUCTORS = Object.create(null);\n\n// ----------------------------------------------------------------------------\n// static methods\n// ----------------------------------------------------------------------------\n\nfunction registerViewConstructor(name, constructor) {\n  VIEW_CONSTRUCTORS[name] = constructor;\n}\nfunction listViewAPIs() {\n  return Object.keys(VIEW_CONSTRUCTORS);\n}\nfunction newAPISpecificView(name) {\n  let initialValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return VIEW_CONSTRUCTORS[name] && VIEW_CONSTRUCTORS[name](initialValues);\n}\n\n// ----------------------------------------------------------------------------\n// vtkRenderWindow methods\n// ----------------------------------------------------------------------------\n\nfunction vtkRenderWindow(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderWindow');\n\n  // Add renderer\n  publicAPI.addRenderer = renderer => {\n    if (publicAPI.hasRenderer(renderer)) {\n      return;\n    }\n    renderer.setRenderWindow(publicAPI);\n    model.renderers.push(renderer);\n\n    // for (this->Renderers->InitTraversal(rsit);\n    //      (aren = this->Renderers->GetNextRenderer(rsit)); )\n    //   {\n    //   aren->SetAllocatedRenderTime\n    //     (1.0/(this->DesiredUpdateRate*this->Renderers->GetNumberOfItems()));\n    //   }\n\n    publicAPI.modified();\n  };\n\n  // Remove renderer\n  publicAPI.removeRenderer = renderer => {\n    model.renderers = model.renderers.filter(r => r !== renderer);\n    publicAPI.modified();\n  };\n  publicAPI.hasRenderer = ren => model.renderers.indexOf(ren) !== -1;\n\n  // get an API specific view of this data\n  publicAPI.newAPISpecificView = function (name) {\n    let initialValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return newAPISpecificView(name || model.defaultViewAPI, initialValues);\n  };\n\n  // Add renderer\n  publicAPI.addView = view => {\n    if (publicAPI.hasView(view)) {\n      return;\n    }\n    view.setRenderable(publicAPI);\n    model._views.push(view);\n    publicAPI.modified();\n  };\n\n  // Remove renderer\n  publicAPI.removeView = view => {\n    model._views = model._views.filter(r => r !== view);\n    publicAPI.modified();\n  };\n  publicAPI.hasView = view => model._views.indexOf(view) !== -1;\n\n  // handle any pre render initializations\n  publicAPI.preRender = () => {\n    model.renderers.forEach(ren => {\n      // make sure we have a camera\n      if (!ren.isActiveCameraCreated()) {\n        ren.resetCamera();\n      }\n    });\n  };\n  publicAPI.render = () => {\n    publicAPI.preRender();\n    if (model.interactor) {\n      model.interactor.render();\n    } else {\n      model._views.forEach(view => view.traverseAllPasses());\n    }\n  };\n  publicAPI.getStatistics = () => {\n    const results = {\n      propCount: 0,\n      invisiblePropCount: 0,\n      gpuMemoryMB: 0\n    };\n    model._views.forEach(v => {\n      results.gpuMemoryMB += v.getGraphicsMemoryInfo() / 1e6;\n    });\n    model.renderers.forEach(ren => {\n      const props = ren.getViewProps();\n      const gren = model._views[0].getViewNodeFor(ren);\n      props.forEach(prop => {\n        if (prop.getVisibility()) {\n          results.propCount += 1;\n          const mpr = prop.getMapper && prop.getMapper();\n          if (mpr && mpr.getPrimitiveCount) {\n            const gmpr = gren.getViewNodeFor(mpr);\n            if (gmpr) {\n              results.gpuMemoryMB += gmpr.getAllocatedGPUMemoryInBytes() / 1e6;\n              const pcount = mpr.getPrimitiveCount();\n              Object.keys(pcount).forEach(keyName => {\n                if (!results[keyName]) {\n                  results[keyName] = 0;\n                }\n                results[keyName] += pcount[keyName];\n              });\n            }\n          }\n        } else {\n          results.invisiblePropCount += 1;\n        }\n      });\n    });\n    results.str = Object.keys(results).map(keyName => `${keyName}: ${results[keyName]}`).join('\\n');\n    return results;\n  };\n  publicAPI.captureImages = function () {\n    let format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'image/png';\n    let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    macro.setImmediate(publicAPI.render);\n    return model._views.map(view => view.captureNextImage ? view.captureNextImage(format, opts) : undefined).filter(i => !!i);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  defaultViewAPI: DEFAULT_VIEW_API,\n  renderers: [],\n  views: [],\n  interactor: null,\n  neverRendered: true,\n  numberOfLayers: 1\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['interactor', 'numberOfLayers', '_views', 'defaultViewAPI']);\n  macro.get(publicAPI, model, ['neverRendered']);\n  macro.getArray(publicAPI, model, ['renderers']);\n  macro.moveToProtected(publicAPI, model, ['views']);\n  macro.event(publicAPI, model, 'completion');\n\n  // Object methods\n  vtkRenderWindow(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkRenderWindow');\n\n// ----------------------------------------------------------------------------\n\nvar vtkRenderWindow$1 = {\n  newInstance,\n  extend,\n  registerViewConstructor,\n  listViewAPIs,\n  newAPISpecificView\n};\nexport { vtkRenderWindow$1 as default, extend, listViewAPIs, newAPISpecificView, newInstance, registerViewConstructor };","map":{"version":3,"names":["m","macro","DEFAULT_VIEW_API","VIEW_CONSTRUCTORS","Object","create","registerViewConstructor","name","constructor","listViewAPIs","keys","newAPISpecificView","initialValues","arguments","length","undefined","vtkRenderWindow","publicAPI","model","classHierarchy","push","addRenderer","renderer","hasRenderer","setRenderWindow","renderers","modified","removeRenderer","filter","r","ren","indexOf","defaultViewAPI","addView","view","hasView","setRenderable","_views","removeView","preRender","forEach","isActiveCameraCreated","resetCamera","render","interactor","traverseAllPasses","getStatistics","results","propCount","invisiblePropCount","gpuMemoryMB","v","getGraphicsMemoryInfo","props","getViewProps","gren","getViewNodeFor","prop","getVisibility","mpr","getMapper","getPrimitiveCount","gmpr","getAllocatedGPUMemoryInBytes","pcount","keyName","str","map","join","captureImages","format","opts","setImmediate","captureNextImage","i","DEFAULT_VALUES","views","neverRendered","numberOfLayers","extend","assign","obj","setGet","get","getArray","moveToProtected","event","newInstance","vtkRenderWindow$1","default"],"sources":["/root/vue-cornerstone-demo/node_modules/@kitware/vtk.js/Rendering/Core/RenderWindow.js"],"sourcesContent":["import { m as macro } from '../../macros2.js';\n\nconst DEFAULT_VIEW_API = 'WebGL';\nconst VIEW_CONSTRUCTORS = Object.create(null);\n\n// ----------------------------------------------------------------------------\n// static methods\n// ----------------------------------------------------------------------------\n\nfunction registerViewConstructor(name, constructor) {\n  VIEW_CONSTRUCTORS[name] = constructor;\n}\nfunction listViewAPIs() {\n  return Object.keys(VIEW_CONSTRUCTORS);\n}\nfunction newAPISpecificView(name) {\n  let initialValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return VIEW_CONSTRUCTORS[name] && VIEW_CONSTRUCTORS[name](initialValues);\n}\n\n// ----------------------------------------------------------------------------\n// vtkRenderWindow methods\n// ----------------------------------------------------------------------------\n\nfunction vtkRenderWindow(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderWindow');\n\n  // Add renderer\n  publicAPI.addRenderer = renderer => {\n    if (publicAPI.hasRenderer(renderer)) {\n      return;\n    }\n    renderer.setRenderWindow(publicAPI);\n    model.renderers.push(renderer);\n\n    // for (this->Renderers->InitTraversal(rsit);\n    //      (aren = this->Renderers->GetNextRenderer(rsit)); )\n    //   {\n    //   aren->SetAllocatedRenderTime\n    //     (1.0/(this->DesiredUpdateRate*this->Renderers->GetNumberOfItems()));\n    //   }\n\n    publicAPI.modified();\n  };\n\n  // Remove renderer\n  publicAPI.removeRenderer = renderer => {\n    model.renderers = model.renderers.filter(r => r !== renderer);\n    publicAPI.modified();\n  };\n  publicAPI.hasRenderer = ren => model.renderers.indexOf(ren) !== -1;\n\n  // get an API specific view of this data\n  publicAPI.newAPISpecificView = function (name) {\n    let initialValues = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return newAPISpecificView(name || model.defaultViewAPI, initialValues);\n  };\n\n  // Add renderer\n  publicAPI.addView = view => {\n    if (publicAPI.hasView(view)) {\n      return;\n    }\n    view.setRenderable(publicAPI);\n    model._views.push(view);\n    publicAPI.modified();\n  };\n\n  // Remove renderer\n  publicAPI.removeView = view => {\n    model._views = model._views.filter(r => r !== view);\n    publicAPI.modified();\n  };\n  publicAPI.hasView = view => model._views.indexOf(view) !== -1;\n\n  // handle any pre render initializations\n  publicAPI.preRender = () => {\n    model.renderers.forEach(ren => {\n      // make sure we have a camera\n      if (!ren.isActiveCameraCreated()) {\n        ren.resetCamera();\n      }\n    });\n  };\n  publicAPI.render = () => {\n    publicAPI.preRender();\n    if (model.interactor) {\n      model.interactor.render();\n    } else {\n      model._views.forEach(view => view.traverseAllPasses());\n    }\n  };\n  publicAPI.getStatistics = () => {\n    const results = {\n      propCount: 0,\n      invisiblePropCount: 0,\n      gpuMemoryMB: 0\n    };\n    model._views.forEach(v => {\n      results.gpuMemoryMB += v.getGraphicsMemoryInfo() / 1e6;\n    });\n    model.renderers.forEach(ren => {\n      const props = ren.getViewProps();\n      const gren = model._views[0].getViewNodeFor(ren);\n      props.forEach(prop => {\n        if (prop.getVisibility()) {\n          results.propCount += 1;\n          const mpr = prop.getMapper && prop.getMapper();\n          if (mpr && mpr.getPrimitiveCount) {\n            const gmpr = gren.getViewNodeFor(mpr);\n            if (gmpr) {\n              results.gpuMemoryMB += gmpr.getAllocatedGPUMemoryInBytes() / 1e6;\n              const pcount = mpr.getPrimitiveCount();\n              Object.keys(pcount).forEach(keyName => {\n                if (!results[keyName]) {\n                  results[keyName] = 0;\n                }\n                results[keyName] += pcount[keyName];\n              });\n            }\n          }\n        } else {\n          results.invisiblePropCount += 1;\n        }\n      });\n    });\n    results.str = Object.keys(results).map(keyName => `${keyName}: ${results[keyName]}`).join('\\n');\n    return results;\n  };\n  publicAPI.captureImages = function () {\n    let format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'image/png';\n    let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    macro.setImmediate(publicAPI.render);\n    return model._views.map(view => view.captureNextImage ? view.captureNextImage(format, opts) : undefined).filter(i => !!i);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  defaultViewAPI: DEFAULT_VIEW_API,\n  renderers: [],\n  views: [],\n  interactor: null,\n  neverRendered: true,\n  numberOfLayers: 1\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['interactor', 'numberOfLayers', '_views', 'defaultViewAPI']);\n  macro.get(publicAPI, model, ['neverRendered']);\n  macro.getArray(publicAPI, model, ['renderers']);\n  macro.moveToProtected(publicAPI, model, ['views']);\n  macro.event(publicAPI, model, 'completion');\n\n  // Object methods\n  vtkRenderWindow(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkRenderWindow');\n\n// ----------------------------------------------------------------------------\n\nvar vtkRenderWindow$1 = {\n  newInstance,\n  extend,\n  registerViewConstructor,\n  listViewAPIs,\n  newAPISpecificView\n};\n\nexport { vtkRenderWindow$1 as default, extend, listViewAPIs, newAPISpecificView, newInstance, registerViewConstructor };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}