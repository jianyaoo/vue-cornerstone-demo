{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport macro from '@kitware/vtk.js/macros';\nimport vtkOpenGLVolumeMapper from '@kitware/vtk.js/Rendering/OpenGL/VolumeMapper';\nimport { Filter } from '@kitware/vtk.js/Rendering/OpenGL/Texture/Constants';\nimport { VtkDataTypes } from '@kitware/vtk.js/Common/Core/DataArray/Constants';\nimport vtkDataArray from '@kitware/vtk.js/Common/Core/DataArray';\nimport { Representation } from '@kitware/vtk.js/Rendering/Core/Property/Constants';\nfunction vtkStreamingOpenGLVolumeMapper(publicAPI, model) {\n  model.classHierarchy.push('vtkStreamingOpenGLVolumeMapper');\n  publicAPI.buildBufferObjects = (ren, actor) => {\n    const image = model.currentInput;\n    if (!image) {\n      return;\n    }\n    const scalars = image.getPointData() && image.getPointData().getScalars();\n    if (!scalars) {\n      return;\n    }\n    const vprop = actor.getProperty();\n    if (!model.jitterTexture.getHandle()) {\n      const oTable = new Uint8Array(32 * 32);\n      for (let i = 0; i < 32 * 32; ++i) {\n        oTable[i] = 255.0 * Math.random();\n      }\n      model.jitterTexture.setMinificationFilter(Filter.LINEAR);\n      model.jitterTexture.setMagnificationFilter(Filter.LINEAR);\n      model.jitterTexture.create2DFromRaw(32, 32, 1, VtkDataTypes.UNSIGNED_CHAR, oTable);\n    }\n    const numComp = scalars.getNumberOfComponents();\n    const iComps = vprop.getIndependentComponents();\n    const numIComps = iComps ? numComp : 1;\n    let toString = `${vprop.getMTime()}`;\n    if (model.opacityTextureString !== toString) {\n      const oWidth = 1024;\n      const oSize = oWidth * 2 * numIComps;\n      const ofTable = new Float32Array(oSize);\n      const tmpTable = new Float32Array(oWidth);\n      for (let c = 0; c < numIComps; ++c) {\n        const ofun = vprop.getScalarOpacity(c);\n        const opacityFactor = model.renderable.getSampleDistance() / vprop.getScalarOpacityUnitDistance(c);\n        const oRange = ofun.getRange();\n        ofun.getTable(oRange[0], oRange[1], oWidth, tmpTable, 1);\n        for (let i = 0; i < oWidth; ++i) {\n          ofTable[c * oWidth * 2 + i] = 1.0 - (1.0 - tmpTable[i]) ** opacityFactor;\n          ofTable[c * oWidth * 2 + i + oWidth] = ofTable[c * oWidth * 2 + i];\n        }\n      }\n      model.opacityTexture.releaseGraphicsResources(model._openGLRenderWindow);\n      model.opacityTexture.setMinificationFilter(Filter.LINEAR);\n      model.opacityTexture.setMagnificationFilter(Filter.LINEAR);\n      if (model._openGLRenderWindow.getWebgl2() || model.context.getExtension('OES_texture_float') && model.context.getExtension('OES_texture_float_linear')) {\n        model.opacityTexture.create2DFromRaw(oWidth, 2 * numIComps, 1, VtkDataTypes.FLOAT, ofTable);\n      } else {\n        const oTable = new Uint8Array(oSize);\n        for (let i = 0; i < oSize; ++i) {\n          oTable[i] = 255.0 * ofTable[i];\n        }\n        model.opacityTexture.create2DFromRaw(oWidth, 2 * numIComps, 1, VtkDataTypes.UNSIGNED_CHAR, oTable);\n      }\n      model.opacityTextureString = toString;\n    }\n    toString = `${vprop.getMTime()}`;\n    if (model.colorTextureString !== toString) {\n      const cWidth = 1024;\n      const cSize = cWidth * 2 * numIComps * 3;\n      const cTable = new Uint8Array(cSize);\n      const tmpTable = new Float32Array(cWidth * 3);\n      for (let c = 0; c < numIComps; ++c) {\n        const cfun = vprop.getRGBTransferFunction(c);\n        const cRange = cfun.getRange();\n        cfun.getTable(cRange[0], cRange[1], cWidth, tmpTable, 1);\n        for (let i = 0; i < cWidth * 3; ++i) {\n          cTable[c * cWidth * 6 + i] = 255.0 * tmpTable[i];\n          cTable[c * cWidth * 6 + i + cWidth * 3] = 255.0 * tmpTable[i];\n        }\n      }\n      model.colorTexture.releaseGraphicsResources(model._openGLRenderWindow);\n      model.colorTexture.setMinificationFilter(Filter.LINEAR);\n      model.colorTexture.setMagnificationFilter(Filter.LINEAR);\n      model.colorTexture.create2DFromRaw(cWidth, 2 * numIComps, 3, VtkDataTypes.UNSIGNED_CHAR, cTable);\n      model.colorTextureString = toString;\n    }\n    publicAPI.updateLabelOutlineThicknessTexture(actor);\n    toString = `${image.getMTime()}`;\n    if (model.scalarTextureString !== toString) {\n      const dims = image.getDimensions();\n      const previousTextureParameters = model.scalarTexture.getTextureParameters();\n      const dataType = image.getPointData().getScalars().getDataType();\n      const data = image.getPointData().getScalars().getData();\n      let shouldReset = true;\n      if (previousTextureParameters.dataType && previousTextureParameters.dataType === dataType) {\n        const previousTextureSize = previousTextureParameters.width * previousTextureParameters.height * previousTextureParameters.depth * previousTextureParameters.numComps;\n        if (data.length === previousTextureSize) {\n          shouldReset = false;\n        }\n      }\n      if (shouldReset) {\n        model.scalarTexture.setOglNorm16Ext(model.context.getExtension('EXT_texture_norm16'));\n        model.scalarTexture.releaseGraphicsResources(model._openGLRenderWindow);\n        model.scalarTexture.resetFormatAndType();\n        model.scalarTexture.create3DFilterableFromRaw(dims[0], dims[1], dims[2], numComp, scalars.getDataType(), scalars.getData(), model.renderable.getPreferSizeOverAccuracy());\n      } else {\n        model.scalarTexture.deactivate();\n        model.scalarTexture.update3DFromRaw(data);\n      }\n      model.scalarTextureString = toString;\n    }\n    if (!model.tris.getCABO().getElementCount()) {\n      const ptsArray = new Float32Array(12);\n      for (let i = 0; i < 4; i++) {\n        ptsArray[i * 3] = i % 2 * 2 - 1.0;\n        ptsArray[i * 3 + 1] = i > 1 ? 1.0 : -1.0;\n        ptsArray[i * 3 + 2] = -1.0;\n      }\n      const cellArray = new Uint16Array(8);\n      cellArray[0] = 3;\n      cellArray[1] = 0;\n      cellArray[2] = 1;\n      cellArray[3] = 3;\n      cellArray[4] = 3;\n      cellArray[5] = 0;\n      cellArray[6] = 3;\n      cellArray[7] = 2;\n      const points = vtkDataArray.newInstance({\n        numberOfComponents: 3,\n        values: ptsArray\n      });\n      points.setName('points');\n      const cells = vtkDataArray.newInstance({\n        numberOfComponents: 1,\n        values: cellArray\n      });\n      model.tris.getCABO().createVBO(cells, 'polys', Representation.SURFACE, {\n        points,\n        cellOffset: 0\n      });\n    }\n    model.VBOBuildTime.modified();\n  };\n  publicAPI.getRenderTargetSize = () => {\n    if (model._useSmallViewport) {\n      return [model._smallViewportWidth, model._smallViewportHeight];\n    }\n    const {\n      usize,\n      vsize\n    } = model._openGLRenderer.getTiledSizeAndOrigin();\n    return [usize, vsize];\n  };\n  publicAPI.getRenderTargetOffset = () => {\n    const {\n      lowerLeftU,\n      lowerLeftV\n    } = model._openGLRenderer.getTiledSizeAndOrigin();\n    return [lowerLeftU, lowerLeftV];\n  };\n}\nconst DEFAULT_VALUES = {};\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkOpenGLVolumeMapper.extend(publicAPI, model, initialValues);\n  model.scalarTexture = initialValues.scalarTexture;\n  model.previousState = {};\n  vtkStreamingOpenGLVolumeMapper(publicAPI, model);\n}\nexport const newInstance = macro.newInstance(extend, 'vtkStreamingOpenGLVolumeMapper');\nexport default {\n  newInstance,\n  extend\n};","map":{"version":3,"names":["macro","vtkOpenGLVolumeMapper","Filter","VtkDataTypes","vtkDataArray","Representation","vtkStreamingOpenGLVolumeMapper","publicAPI","model","classHierarchy","push","buildBufferObjects","ren","actor","image","currentInput","scalars","getPointData","getScalars","vprop","getProperty","jitterTexture","getHandle","oTable","Uint8Array","i","Math","random","setMinificationFilter","LINEAR","setMagnificationFilter","create2DFromRaw","UNSIGNED_CHAR","numComp","getNumberOfComponents","iComps","getIndependentComponents","numIComps","toString","getMTime","opacityTextureString","oWidth","oSize","ofTable","Float32Array","tmpTable","c","ofun","getScalarOpacity","opacityFactor","renderable","getSampleDistance","getScalarOpacityUnitDistance","oRange","getRange","getTable","opacityTexture","releaseGraphicsResources","_openGLRenderWindow","getWebgl2","context","getExtension","FLOAT","colorTextureString","cWidth","cSize","cTable","cfun","getRGBTransferFunction","cRange","colorTexture","updateLabelOutlineThicknessTexture","scalarTextureString","dims","getDimensions","previousTextureParameters","scalarTexture","getTextureParameters","dataType","getDataType","data","getData","shouldReset","previousTextureSize","width","height","depth","numComps","length","setOglNorm16Ext","resetFormatAndType","create3DFilterableFromRaw","getPreferSizeOverAccuracy","deactivate","update3DFromRaw","tris","getCABO","getElementCount","ptsArray","cellArray","Uint16Array","points","newInstance","numberOfComponents","values","setName","cells","createVBO","SURFACE","cellOffset","VBOBuildTime","modified","getRenderTargetSize","_useSmallViewport","_smallViewportWidth","_smallViewportHeight","usize","vsize","_openGLRenderer","getTiledSizeAndOrigin","getRenderTargetOffset","lowerLeftU","lowerLeftV","DEFAULT_VALUES","extend","initialValues","Object","assign","previousState"],"sources":["../../../../src/RenderingEngine/vtkClasses/vtkStreamingOpenGLVolumeMapper.js"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}