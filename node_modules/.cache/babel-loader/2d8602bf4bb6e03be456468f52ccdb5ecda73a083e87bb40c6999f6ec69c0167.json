{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport { Enums, eventTarget, metaData, imageLoadPoolManager, triggerEvent, ImageVolume, cache, imageLoader, utilities as csUtils, utilities, ProgressiveRetrieveImages } from '@cornerstonejs/core';\nimport { scaleArray, autoLoad } from './helpers';\nconst requestTypeDefault = Enums.RequestType.Prefetch;\nconst {\n  ProgressiveIterator\n} = csUtils;\nconst {\n  ImageQualityStatus\n} = Enums;\nconst {\n  imageRetrieveMetadataProvider\n} = utilities;\nexport default class BaseStreamingImageVolume extends ImageVolume {\n  constructor(imageVolumeProperties, streamingProperties) {\n    super(imageVolumeProperties);\n    this.framesLoaded = 0;\n    this.framesProcessed = 0;\n    this.framesUpdated = 0;\n    this.autoRenderOnLoad = true;\n    this.cachedFrames = [];\n    this.reRenderTarget = 0;\n    this.reRenderFraction = 2;\n    this.imagesLoader = this;\n    this.cancelLoading = () => {\n      const {\n        loadStatus\n      } = this;\n      if (!loadStatus || !loadStatus.loading) {\n        return;\n      }\n      loadStatus.loading = false;\n      loadStatus.cancelled = true;\n      this.clearLoadCallbacks();\n      const filterFunction = ({\n        additionalDetails\n      }) => {\n        return additionalDetails.volumeId !== this.volumeId;\n      };\n      imageLoadPoolManager.filterRequests(filterFunction);\n    };\n    this.load = callback => {\n      const {\n        imageIds,\n        loadStatus,\n        numFrames\n      } = this;\n      const {\n        transferSyntaxUID\n      } = metaData.get('transferSyntax', imageIds[0]) || {};\n      const imageRetrieveConfiguration = metaData.get(imageRetrieveMetadataProvider.IMAGE_RETRIEVE_CONFIGURATION, this.volumeId, transferSyntaxUID, 'volume');\n      this.imagesLoader = imageRetrieveConfiguration ? (imageRetrieveConfiguration.create || ProgressiveRetrieveImages.createProgressive)(imageRetrieveConfiguration) : this;\n      if (loadStatus.loading === true) {\n        return;\n      }\n      const {\n        loaded\n      } = this.loadStatus;\n      const totalNumFrames = imageIds.length;\n      if (loaded) {\n        if (callback) {\n          callback({\n            success: true,\n            framesLoaded: totalNumFrames,\n            framesProcessed: totalNumFrames,\n            numFrames,\n            totalNumFrames\n          });\n        }\n        return;\n      }\n      if (callback) {\n        this.loadStatus.callbacks.push(callback);\n      }\n      this._prefetchImageIds();\n    };\n    this.loadStatus = streamingProperties.loadStatus;\n  }\n  invalidateVolume(immediate) {\n    const {\n      imageData,\n      vtkOpenGLTexture\n    } = this;\n    const {\n      numFrames\n    } = this;\n    for (let i = 0; i < numFrames; i++) {\n      vtkOpenGLTexture.setUpdatedFrame(i);\n    }\n    imageData.modified();\n    if (immediate) {\n      autoLoad(this.volumeId);\n    }\n  }\n  clearLoadCallbacks() {\n    this.loadStatus.callbacks = [];\n  }\n  callLoadStatusCallback(evt) {\n    const {\n      framesUpdated,\n      framesProcessed,\n      totalNumFrames\n    } = evt;\n    const {\n      volumeId,\n      reRenderFraction,\n      loadStatus,\n      metadata\n    } = this;\n    const {\n      FrameOfReferenceUID\n    } = metadata;\n    if (this.autoRenderOnLoad) {\n      if (framesUpdated > this.reRenderTarget || framesProcessed === totalNumFrames) {\n        this.reRenderTarget += reRenderFraction;\n        autoLoad(volumeId);\n      }\n    }\n    if (framesProcessed === totalNumFrames) {\n      loadStatus.callbacks.forEach(callback => callback(evt));\n      const eventDetail = {\n        FrameOfReferenceUID,\n        volumeId: volumeId\n      };\n      triggerEvent(eventTarget, Enums.Events.IMAGE_VOLUME_LOADING_COMPLETED, eventDetail);\n    }\n  }\n  updateTextureAndTriggerEvents(imageIdIndex, imageId, imageQualityStatus = ImageQualityStatus.FULL_RESOLUTION) {\n    const frameIndex = this.imageIdIndexToFrameIndex(imageIdIndex);\n    const {\n      cachedFrames,\n      numFrames,\n      totalNumFrames\n    } = this;\n    const {\n      FrameOfReferenceUID\n    } = this.metadata;\n    const currentStatus = cachedFrames[frameIndex];\n    if (currentStatus > imageQualityStatus) {\n      return;\n    }\n    if (cachedFrames[frameIndex] === ImageQualityStatus.FULL_RESOLUTION) {\n      return;\n    }\n    const complete = imageQualityStatus === ImageQualityStatus.FULL_RESOLUTION;\n    cachedFrames[imageIdIndex] = imageQualityStatus;\n    this.framesUpdated++;\n    if (complete) {\n      this.framesLoaded++;\n      this.framesProcessed++;\n    }\n    this.vtkOpenGLTexture.setUpdatedFrame(frameIndex);\n    this.imageData.modified();\n    const eventDetail = {\n      FrameOfReferenceUID,\n      imageVolume: this\n    };\n    triggerEvent(eventTarget, Enums.Events.IMAGE_VOLUME_MODIFIED, eventDetail);\n    if (complete && this.framesProcessed === this.totalNumFrames) {\n      this.loadStatus.loaded = true;\n      this.loadStatus.loading = false;\n    }\n    this.callLoadStatusCallback({\n      success: true,\n      imageIdIndex,\n      imageId,\n      framesLoaded: this.framesLoaded,\n      framesProcessed: this.framesProcessed,\n      framesUpdated: this.framesUpdated,\n      numFrames,\n      totalNumFrames,\n      complete,\n      imageQualityStatus\n    });\n    if (this.loadStatus.loaded) {\n      this.loadStatus.callbacks = [];\n    }\n  }\n  successCallback(imageId, image) {\n    const imageIdIndex = this.getImageIdIndex(imageId);\n    const options = this.getLoaderImageOptions(imageId);\n    const scalarData = this.getScalarDataByImageIdIndex(imageIdIndex);\n    handleArrayBufferLoad(scalarData, image, options);\n    const {\n      scalingParameters\n    } = image.preScale || {};\n    const {\n      imageQualityStatus\n    } = image;\n    const frameIndex = this.imageIdIndexToFrameIndex(imageIdIndex);\n    const cachedImage = cache.getCachedImageBasedOnImageURI(imageId);\n    const cachedVolume = cache.getVolumeContainingImageId(imageId);\n    if (this.loadStatus.cancelled) {\n      console.warn('volume load cancelled, returning for imageIdIndex: ', imageIdIndex);\n      return;\n    }\n    if (!cachedImage && !(cachedVolume && cachedVolume.volume !== this)) {\n      return this.updateTextureAndTriggerEvents(imageIdIndex, imageId, imageQualityStatus);\n    }\n    const isFromImageCache = !!cachedImage;\n    if (isFromImageCache && options.targetBuffer) {\n      this.imageCacheOffsetMap.set(imageId, {\n        imageIdIndex,\n        frameIndex,\n        offset: options.targetBuffer?.offset || 0,\n        length: options.targetBuffer?.length\n      });\n    }\n    const cachedImageOrVolume = cachedImage || cachedVolume.volume;\n    this.handleImageComingFromCache(cachedImageOrVolume, isFromImageCache, scalingParameters, scalarData, frameIndex, scalarData.buffer, imageIdIndex, imageId);\n  }\n  errorCallback(imageId, permanent, error) {\n    if (!permanent) {\n      return;\n    }\n    const {\n      totalNumFrames,\n      numFrames\n    } = this;\n    const imageIdIndex = this.getImageIdIndex(imageId);\n    this.framesProcessed++;\n    if (this.framesProcessed === totalNumFrames) {\n      this.loadStatus.loaded = true;\n      this.loadStatus.loading = false;\n    }\n    this.callLoadStatusCallback({\n      success: false,\n      imageId,\n      imageIdIndex,\n      error,\n      framesLoaded: this.framesLoaded,\n      framesProcessed: this.framesProcessed,\n      framesUpdated: this.framesUpdated,\n      numFrames,\n      totalNumFrames\n    });\n    if (this.loadStatus.loaded) {\n      this.loadStatus.callbacks = [];\n    }\n    const eventDetail = {\n      error,\n      imageIdIndex,\n      imageId\n    };\n    triggerEvent(eventTarget, Enums.Events.IMAGE_LOAD_ERROR, eventDetail);\n  }\n  getLoaderImageOptions(imageId) {\n    const {\n      transferSyntaxUID: transferSyntaxUID\n    } = metaData.get('transferSyntax', imageId) || {};\n    const imagePlaneModule = metaData.get('imagePlaneModule', imageId) || {};\n    const {\n      rows,\n      columns\n    } = imagePlaneModule;\n    const imageIdIndex = this.getImageIdIndex(imageId);\n    const scalarData = this.getScalarDataByImageIdIndex(imageIdIndex);\n    if (!scalarData) {\n      return null;\n    }\n    const arrayBuffer = scalarData.buffer;\n    const {\n      type,\n      length,\n      lengthInBytes\n    } = getScalarDataType(scalarData, this.numFrames);\n    const modalityLutModule = metaData.get('modalityLutModule', imageId) || {};\n    const generalSeriesModule = metaData.get('generalSeriesModule', imageId) || {};\n    const scalingParameters = {\n      rescaleSlope: modalityLutModule.rescaleSlope,\n      rescaleIntercept: modalityLutModule.rescaleIntercept,\n      modality: generalSeriesModule.modality\n    };\n    if (scalingParameters.modality === 'PT') {\n      const suvFactor = metaData.get('scalingModule', imageId);\n      if (suvFactor) {\n        this._addScalingToVolume(suvFactor);\n        scalingParameters.suvbw = suvFactor.suvbw;\n      }\n    }\n    const isSlopeAndInterceptNumbers = typeof scalingParameters.rescaleSlope === 'number' && typeof scalingParameters.rescaleIntercept === 'number';\n    this.isPreScaled = isSlopeAndInterceptNumbers;\n    const frameIndex = this.imageIdIndexToFrameIndex(imageIdIndex);\n    return {\n      targetBuffer: {\n        arrayBuffer: arrayBuffer instanceof ArrayBuffer ? undefined : arrayBuffer,\n        offset: frameIndex * lengthInBytes,\n        length,\n        type,\n        rows,\n        columns\n      },\n      skipCreateImage: true,\n      preScale: {\n        enabled: true,\n        scalingParameters\n      },\n      transferPixelData: true,\n      transferSyntaxUID,\n      loader: imageLoader.loadImage,\n      additionalDetails: {\n        imageId,\n        imageIdIndex,\n        volumeId: this.volumeId\n      }\n    };\n  }\n  callLoadImage(imageId, imageIdIndex, options) {\n    const {\n      cachedFrames\n    } = this;\n    if (cachedFrames[imageIdIndex] === ImageQualityStatus.FULL_RESOLUTION) {\n      return;\n    }\n    const uncompressedIterator = ProgressiveIterator.as(imageLoader.loadImage(imageId, options));\n    return uncompressedIterator.forEach(image => {\n      this.successCallback(imageId, image);\n    }, this.errorCallback.bind(this, imageIdIndex, imageId));\n  }\n  getImageIdsRequests(imageIds, priorityDefault) {\n    this.totalNumFrames = this.imageIds.length;\n    const autoRenderPercentage = 2;\n    if (this.autoRenderOnLoad) {\n      this.reRenderFraction = this.totalNumFrames * (autoRenderPercentage / 100);\n      this.reRenderTarget = this.reRenderFraction;\n    }\n    const requests = imageIds.map(imageId => {\n      const imageIdIndex = this.getImageIdIndex(imageId);\n      const requestType = requestTypeDefault;\n      const priority = priorityDefault;\n      const options = this.getLoaderImageOptions(imageId);\n      return {\n        callLoadImage: this.callLoadImage.bind(this),\n        imageId,\n        imageIdIndex,\n        options,\n        priority,\n        requestType,\n        additionalDetails: {\n          volumeId: this.volumeId\n        }\n      };\n    });\n    return requests;\n  }\n  handleImageComingFromCache(cachedImageOrVolume, isFromImageCache, scalingParameters, scalarData, frameIndex, arrayBuffer, imageIdIndex, imageId) {\n    const imageLoadObject = isFromImageCache ? cachedImageOrVolume.imageLoadObject : cachedImageOrVolume.convertToCornerstoneImage(imageId, imageIdIndex);\n    imageLoadObject.promise.then(cachedImage => {\n      const imageScalarData = this._scaleIfNecessary(cachedImage, scalingParameters);\n      const {\n        pixelsPerImage,\n        bytesPerImage\n      } = this.cornerstoneImageMetaData;\n      const TypedArray = scalarData.constructor;\n      let byteOffset = bytesPerImage * frameIndex;\n      const bytePerPixel = bytesPerImage / pixelsPerImage;\n      if (scalarData.BYTES_PER_ELEMENT !== bytePerPixel) {\n        byteOffset *= scalarData.BYTES_PER_ELEMENT / bytePerPixel;\n      }\n      const volumeBufferView = new TypedArray(arrayBuffer, byteOffset, pixelsPerImage);\n      volumeBufferView.set(imageScalarData);\n      this.updateTextureAndTriggerEvents(imageIdIndex, imageId, cachedImage.imageQualityStatus);\n    }).catch(err => {\n      this.errorCallback(imageId, true, err);\n    });\n  }\n  getImageLoadRequests(_priority) {\n    throw new Error('Abstract method');\n  }\n  getImageIdsToLoad() {\n    throw new Error('Abstract method');\n  }\n  loadImages(imageIds, listener) {\n    this.loadStatus.loading = true;\n    const requests = this.getImageLoadRequests(5);\n    requests.reverse().forEach(request => {\n      if (!request) {\n        return;\n      }\n      const {\n        callLoadImage,\n        imageId,\n        imageIdIndex,\n        options,\n        priority,\n        requestType,\n        additionalDetails\n      } = request;\n      imageLoadPoolManager.addRequest(callLoadImage.bind(this, imageId, imageIdIndex, options), requestType, additionalDetails, priority);\n    });\n    return Promise.resolve(true);\n  }\n  _prefetchImageIds() {\n    this.loadStatus.loading = true;\n    const imageIds = [...this.getImageIdsToLoad()];\n    imageIds.reverse();\n    this.totalNumFrames = this.imageIds.length;\n    const autoRenderPercentage = 2;\n    if (this.autoRenderOnLoad) {\n      this.reRenderFraction = this.totalNumFrames * (autoRenderPercentage / 100);\n      this.reRenderTarget = this.reRenderFraction;\n    }\n    return this.imagesLoader.loadImages(imageIds, this).catch(e => {\n      console.debug('progressive loading failed to complete', e);\n    });\n  }\n  _scaleIfNecessary(image, scalingParametersToUse) {\n    const imageIsAlreadyScaled = image.preScale?.scaled;\n    const noScalingParametersToUse = !scalingParametersToUse || !scalingParametersToUse.rescaleIntercept || !scalingParametersToUse.rescaleSlope;\n    if (!imageIsAlreadyScaled && noScalingParametersToUse) {\n      return image.getPixelData().slice(0);\n    }\n    if (!imageIsAlreadyScaled && scalingParametersToUse && scalingParametersToUse.rescaleIntercept !== undefined && scalingParametersToUse.rescaleSlope !== undefined) {\n      const pixelDataCopy = image.getPixelData().slice(0);\n      const scaledArray = scaleArray(pixelDataCopy, scalingParametersToUse);\n      return scaledArray;\n    }\n    const {\n      rescaleSlope: rescaleSlopeToUse,\n      rescaleIntercept: rescaleInterceptToUse,\n      suvbw: suvbwToUse\n    } = scalingParametersToUse;\n    const {\n      rescaleSlope: rescaleSlopeUsed,\n      rescaleIntercept: rescaleInterceptUsed,\n      suvbw: suvbwUsed\n    } = image.preScale.scalingParameters;\n    const rescaleSlopeIsSame = rescaleSlopeToUse === rescaleSlopeUsed;\n    const rescaleInterceptIsSame = rescaleInterceptToUse === rescaleInterceptUsed;\n    const suvbwIsSame = suvbwToUse === suvbwUsed;\n    if (rescaleSlopeIsSame && rescaleInterceptIsSame && suvbwIsSame) {\n      return image.getPixelData();\n    }\n    const pixelDataCopy = image.getPixelData().slice(0);\n    const newSuvbw = suvbwToUse / suvbwUsed;\n    const newRescaleSlope = rescaleSlopeToUse / rescaleSlopeUsed;\n    const newRescaleIntercept = rescaleInterceptToUse - rescaleInterceptUsed * newRescaleSlope;\n    const newScalingParameters = {\n      ...scalingParametersToUse,\n      rescaleSlope: newRescaleSlope,\n      rescaleIntercept: newRescaleIntercept,\n      suvbw: newSuvbw\n    };\n    const scaledArray = scaleArray(pixelDataCopy, newScalingParameters);\n    return scaledArray;\n  }\n  _addScalingToVolume(suvFactor) {\n    if (this.scaling) {\n      return;\n    }\n    const {\n      suvbw,\n      suvlbm,\n      suvbsa\n    } = suvFactor;\n    const petScaling = {};\n    if (suvlbm) {\n      petScaling.suvbwToSuvlbm = suvlbm / suvbw;\n    }\n    if (suvbsa) {\n      petScaling.suvbwToSuvbsa = suvbsa / suvbw;\n    }\n    if (suvbw) {\n      petScaling.suvbw = suvbw;\n    }\n    this.scaling = {\n      PT: petScaling\n    };\n  }\n}\nfunction getScalarDataType(scalarData, numFrames) {\n  let type, byteSize;\n  if (scalarData instanceof Uint8Array) {\n    type = 'Uint8Array';\n    byteSize = 1;\n  } else if (scalarData instanceof Float32Array) {\n    type = 'Float32Array';\n    byteSize = 4;\n  } else if (scalarData instanceof Uint16Array) {\n    type = 'Uint16Array';\n    byteSize = 2;\n  } else if (scalarData instanceof Int16Array) {\n    type = 'Int16Array';\n    byteSize = 2;\n  } else {\n    throw new Error('Unsupported array type');\n  }\n  const length = scalarData.length / numFrames;\n  const lengthInBytes = length * byteSize;\n  return {\n    type,\n    byteSize,\n    length,\n    lengthInBytes\n  };\n}\nfunction handleArrayBufferLoad(scalarData, image, options) {\n  if (!(scalarData.buffer instanceof ArrayBuffer)) {\n    return;\n  }\n  const offset = options.targetBuffer.offset;\n  const length = options.targetBuffer.length;\n  const pixelData = image.pixelData ? image.pixelData : image.getPixelData();\n  try {\n    if (scalarData instanceof Float32Array) {\n      const bytesInFloat = 4;\n      const floatView = new Float32Array(pixelData);\n      if (floatView.length !== length) {\n        throw 'Error pixelData length does not match frame length';\n      }\n      scalarData.set(floatView, offset / bytesInFloat);\n    }\n    if (scalarData instanceof Int16Array) {\n      const bytesInInt16 = 2;\n      const intView = new Int16Array(pixelData);\n      if (intView.length !== length) {\n        throw 'Error pixelData length does not match frame length';\n      }\n      scalarData.set(intView, offset / bytesInInt16);\n    }\n    if (scalarData instanceof Uint16Array) {\n      const bytesInUint16 = 2;\n      const intView = new Uint16Array(pixelData);\n      if (intView.length !== length) {\n        throw 'Error pixelData length does not match frame length';\n      }\n      scalarData.set(intView, offset / bytesInUint16);\n    }\n    if (scalarData instanceof Uint8Array) {\n      const bytesInUint8 = 1;\n      const intView = new Uint8Array(pixelData);\n      if (intView.length !== length) {\n        throw 'Error pixelData length does not match frame length';\n      }\n      scalarData.set(intView, offset / bytesInUint8);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}","map":{"version":3,"names":["Enums","eventTarget","metaData","imageLoadPoolManager","triggerEvent","ImageVolume","cache","imageLoader","utilities","csUtils","ProgressiveRetrieveImages","scaleArray","autoLoad","requestTypeDefault","RequestType","Prefetch","ProgressiveIterator","ImageQualityStatus","imageRetrieveMetadataProvider","BaseStreamingImageVolume","constructor","imageVolumeProperties","streamingProperties","framesLoaded","framesProcessed","framesUpdated","autoRenderOnLoad","cachedFrames","reRenderTarget","reRenderFraction","imagesLoader","cancelLoading","loadStatus","loading","cancelled","clearLoadCallbacks","filterFunction","additionalDetails","volumeId","filterRequests","load","callback","imageIds","numFrames","transferSyntaxUID","get","imageRetrieveConfiguration","IMAGE_RETRIEVE_CONFIGURATION","create","createProgressive","loaded","totalNumFrames","length","success","callbacks","push","_prefetchImageIds","invalidateVolume","immediate","imageData","vtkOpenGLTexture","i","setUpdatedFrame","modified","callLoadStatusCallback","evt","metadata","FrameOfReferenceUID","forEach","eventDetail","Events","IMAGE_VOLUME_LOADING_COMPLETED","updateTextureAndTriggerEvents","imageIdIndex","imageId","imageQualityStatus","FULL_RESOLUTION","frameIndex","imageIdIndexToFrameIndex","currentStatus","complete","imageVolume","IMAGE_VOLUME_MODIFIED","successCallback","image","getImageIdIndex","options","getLoaderImageOptions","scalarData","getScalarDataByImageIdIndex","handleArrayBufferLoad","scalingParameters","preScale","cachedImage","getCachedImageBasedOnImageURI","cachedVolume","getVolumeContainingImageId","console","warn","volume","isFromImageCache","targetBuffer","imageCacheOffsetMap","set","offset","cachedImageOrVolume","handleImageComingFromCache","buffer","errorCallback","permanent","error","IMAGE_LOAD_ERROR","imagePlaneModule","rows","columns","arrayBuffer","type","lengthInBytes","getScalarDataType","modalityLutModule","generalSeriesModule","rescaleSlope","rescaleIntercept","modality","suvFactor","_addScalingToVolume","suvbw","isSlopeAndInterceptNumbers","isPreScaled","ArrayBuffer","undefined","skipCreateImage","enabled","transferPixelData","loader","loadImage","callLoadImage","uncompressedIterator","as","bind","getImageIdsRequests","priorityDefault","autoRenderPercentage","requests","map","requestType","priority","imageLoadObject","convertToCornerstoneImage","promise","then","imageScalarData","_scaleIfNecessary","pixelsPerImage","bytesPerImage","cornerstoneImageMetaData","TypedArray","byteOffset","bytePerPixel","BYTES_PER_ELEMENT","volumeBufferView","catch","err","getImageLoadRequests","_priority","Error","getImageIdsToLoad","loadImages","listener","reverse","request","addRequest","Promise","resolve","e","debug","scalingParametersToUse","imageIsAlreadyScaled","scaled","noScalingParametersToUse","getPixelData","slice","pixelDataCopy","scaledArray","rescaleSlopeToUse","rescaleInterceptToUse","suvbwToUse","rescaleSlopeUsed","rescaleInterceptUsed","suvbwUsed","rescaleSlopeIsSame","rescaleInterceptIsSame","suvbwIsSame","newSuvbw","newRescaleSlope","newRescaleIntercept","newScalingParameters","scaling","suvlbm","suvbsa","petScaling","suvbwToSuvlbm","suvbwToSuvbsa","PT","byteSize","Uint8Array","Float32Array","Uint16Array","Int16Array","pixelData","bytesInFloat","floatView","bytesInInt16","intView","bytesInUint16","bytesInUint8"],"sources":["../../src/BaseStreamingImageVolume.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}