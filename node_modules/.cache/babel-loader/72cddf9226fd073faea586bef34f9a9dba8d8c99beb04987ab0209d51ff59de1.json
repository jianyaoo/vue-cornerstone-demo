{"ast":null,"code":"import { vec3, mat4 } from 'gl-matrix';\nimport spatialRegistrationMetadataProvider from './spatialRegistrationMetadataProvider';\nimport { metaData } from '..';\nconst ALLOWED_DELTA = 0.05;\nfunction calculateViewportsSpatialRegistration(viewport1, viewport2) {\n  const imageId1 = viewport1.getCurrentImageId();\n  const imageId2 = viewport2.getCurrentImageId();\n  const imagePlaneModule1 = metaData.get('imagePlaneModule', imageId1);\n  const imagePlaneModule2 = metaData.get('imagePlaneModule', imageId2);\n  if (!imagePlaneModule1 || !imagePlaneModule2) {\n    console.log('Viewport spatial registration requires image plane module');\n    return;\n  }\n  const {\n    imageOrientationPatient: iop2\n  } = imagePlaneModule2;\n  const isSameImagePlane = imagePlaneModule1.imageOrientationPatient.every((v, i) => Math.abs(v - iop2[i]) < ALLOWED_DELTA);\n  if (!isSameImagePlane) {\n    console.log('Viewport spatial registration only supported for same orientation (hence translation only) for now', imagePlaneModule1?.imageOrientationPatient, imagePlaneModule2?.imageOrientationPatient);\n    return;\n  }\n  const imagePositionPatient1 = imagePlaneModule1.imagePositionPatient;\n  const imagePositionPatient2 = imagePlaneModule2.imagePositionPatient;\n  const translation = vec3.subtract(vec3.create(), imagePositionPatient1, imagePositionPatient2);\n  const mat = mat4.fromTranslation(mat4.create(), translation);\n  spatialRegistrationMetadataProvider.add([viewport1.id, viewport2.id], mat);\n}\nexport default calculateViewportsSpatialRegistration;","map":{"version":3,"names":["vec3","mat4","spatialRegistrationMetadataProvider","metaData","ALLOWED_DELTA","calculateViewportsSpatialRegistration","viewport1","viewport2","imageId1","getCurrentImageId","imageId2","imagePlaneModule1","get","imagePlaneModule2","console","log","imageOrientationPatient","iop2","isSameImagePlane","every","v","i","Math","abs","imagePositionPatient1","imagePositionPatient","imagePositionPatient2","translation","subtract","create","mat","fromTranslation","add","id"],"sources":["../../../src/utilities/calculateViewportsSpatialRegistration.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,IAAI,EAAEC,IAAI,QAAQ,WAAW;AAEtC,OAAOC,mCAAmC,MAAM,uCAAuC;AACvF,SAASC,QAAQ,QAAQ,IAAI;AAQ7B,MAAMC,aAAa,GAAG,IAAI;AAc1B,SAASC,qCAAqCA,CAC5CC,SAA2C,EAC3CC,SAA2C;EAE3C,MAAMC,QAAQ,GAAGF,SAAS,CAACG,iBAAiB,EAAE;EAC9C,MAAMC,QAAQ,GAAGH,SAAS,CAACE,iBAAiB,EAAE;EAE9C,MAAME,iBAAiB,GAAGR,QAAQ,CAACS,GAAG,CAAC,kBAAkB,EAAEJ,QAAQ,CAAC;EACpE,MAAMK,iBAAiB,GAAGV,QAAQ,CAACS,GAAG,CAAC,kBAAkB,EAAEF,QAAQ,CAAC;EAEpE,IAAI,CAACC,iBAAiB,IAAI,CAACE,iBAAiB,EAAE;IAC5CC,OAAO,CAACC,GAAG,CAAC,2DAA2D,CAAC;IACxE;;EAEF,MAAM;IAAEC,uBAAuB,EAAEC;EAAI,CAAE,GAAGJ,iBAAiB;EAC3D,MAAMK,gBAAgB,GAAGP,iBAAiB,CAACK,uBAAuB,CAACG,KAAK,CACtE,CAACC,CAAC,EAAEC,CAAC,KAAKC,IAAI,CAACC,GAAG,CAACH,CAAC,GAAGH,IAAI,CAACI,CAAC,CAAC,CAAC,GAAGjB,aAAa,CAChD;EAED,IAAI,CAACc,gBAAgB,EAAE;IACrBJ,OAAO,CAACC,GAAG,CACT,oGAAoG,EACpGJ,iBAAiB,EAAEK,uBAAuB,EAC1CH,iBAAiB,EAAEG,uBAAuB,CAC3C;IACD;;EAGF,MAAMQ,qBAAqB,GAAGb,iBAAiB,CAACc,oBAAoB;EACpE,MAAMC,qBAAqB,GAAGb,iBAAiB,CAACY,oBAAoB;EAEpE,MAAME,WAAW,GAAG3B,IAAI,CAAC4B,QAAQ,CAC/B5B,IAAI,CAAC6B,MAAM,EAAE,EACbL,qBAAqB,EACrBE,qBAAqB,CACtB;EAED,MAAMI,GAAG,GAAG7B,IAAI,CAAC8B,eAAe,CAAC9B,IAAI,CAAC4B,MAAM,EAAE,EAAEF,WAAW,CAAC;EAC5DzB,mCAAmC,CAAC8B,GAAG,CAAC,CAAC1B,SAAS,CAAC2B,EAAE,EAAE1B,SAAS,CAAC0B,EAAE,CAAC,EAAEH,GAAG,CAAC;AAC5E;AAEA,eAAezB,qCAAqC"},"metadata":{},"sourceType":"module","externalDependencies":[]}