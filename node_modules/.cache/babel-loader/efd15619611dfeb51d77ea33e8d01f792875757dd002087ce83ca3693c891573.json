{"ast":null,"code":"import { m as macro } from '../../macros2.js';\nimport vtkWebGPUShaderCache from './ShaderCache.js';\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUShaderDescription methods\n// ----------------------------------------------------------------------------\n\n// shader description\n\nfunction vtkWebGPUShaderDescription(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUShaderDescription');\n  publicAPI.hasOutput = name => model.outputNames.includes(name);\n  publicAPI.addOutput = function (type, name) {\n    let interpolation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n    model.outputTypes.push(type);\n    model.outputNames.push(name);\n    model.outputInterpolations.push(interpolation);\n  };\n  publicAPI.addBuiltinOutput = (type, name) => {\n    model.builtinOutputTypes.push(type);\n    model.builtinOutputNames.push(name);\n  };\n  publicAPI.addBuiltinInput = (type, name) => {\n    model.builtinInputTypes.push(type);\n    model.builtinInputNames.push(name);\n  };\n\n  // perform shader replacements for the input and outputs\n  // of this shader. That includes vertex inputs if specified\n  publicAPI.replaceShaderCode = (priorStage, vertexInput) => {\n    const inputImpl = [];\n    let iodec = [];\n    if (vertexInput) {\n      inputImpl.push(vertexInput.getShaderCode());\n    }\n    if (priorStage || model.builtinInputNames.length) {\n      const inputStruct = [];\n      inputStruct.push(`struct ${model.type}Input\\n{`);\n      if (priorStage) {\n        const inputNames = priorStage.getOutputNamesByReference();\n        const inputTypes = priorStage.getOutputTypesByReference();\n        const inputInterpolations = priorStage.getOutputInterpolationsByReference();\n        for (let i = 0; i < inputNames.length; i++) {\n          if (inputInterpolations[i] !== undefined) {\n            inputStruct.push(`  @location(${i}) @interpolate(${inputInterpolations[i]}) ${inputNames[i]} : ${inputTypes[i]},`);\n          } else {\n            inputStruct.push(`  @location(${i}) ${inputNames[i]} : ${inputTypes[i]},`);\n          }\n        }\n      }\n      for (let i = 0; i < model.builtinInputNames.length; i++) {\n        inputStruct.push(`  ${model.builtinInputNames[i]} : ${model.builtinInputTypes[i]},`);\n      }\n      if (inputStruct.length > 1) {\n        inputStruct.push('};');\n        iodec = inputStruct;\n        inputImpl[inputImpl.length - 1] += ',';\n        inputImpl.push(`input: ${model.type}Input`);\n      }\n    }\n    if (inputImpl.length) {\n      model.code = vtkWebGPUShaderCache.substitute(model.code, '//VTK::IOStructs::Input', inputImpl).result;\n    }\n    if (model.outputNames.length + model.builtinOutputNames.length) {\n      const outputStruct = [`struct ${model.type}Output\\n{`];\n      for (let i = 0; i < model.outputNames.length; i++) {\n        if (model.outputInterpolations[i] !== undefined) {\n          outputStruct.push(`  @location(${i}) @interpolate(${model.outputInterpolations[i]}) ${model.outputNames[i]} : ${model.outputTypes[i]},`);\n        } else {\n          outputStruct.push(`  @location(${i}) ${model.outputNames[i]} : ${model.outputTypes[i]},`);\n        }\n      }\n      for (let i = 0; i < model.builtinOutputNames.length; i++) {\n        outputStruct.push(`  ${model.builtinOutputNames[i]} : ${model.builtinOutputTypes[i]},`);\n      }\n      outputStruct.push('};');\n      iodec = iodec.concat(outputStruct);\n      model.code = vtkWebGPUShaderCache.substitute(model.code, '//VTK::IOStructs::Output', [`-> ${model.type}Output`]).result;\n    }\n    model.code = vtkWebGPUShaderCache.substitute(model.code, '//VTK::IOStructs::Dec', iodec).result;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  type: null,\n  // 'vertex' or 'fragment'\n  hash: null,\n  code: null,\n  outputNames: null,\n  outputTypes: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  model.outputNames = [];\n  model.outputTypes = [];\n  model.outputInterpolations = [];\n  model.builtinOutputNames = [];\n  model.builtinOutputTypes = [];\n  model.builtinInputNames = [];\n  model.builtinInputTypes = [];\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['type', 'hash', 'code']);\n  macro.getArray(publicAPI, model, ['outputTypes', 'outputNames', 'outputInterpolations']);\n\n  // Object methods\n  vtkWebGPUShaderDescription(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkWebGPUShaderDescription');\n\n// ----------------------------------------------------------------------------\n\nvar vtkWebGPUShaderDescription$1 = {\n  newInstance,\n  extend\n};\nexport { vtkWebGPUShaderDescription$1 as default, extend, newInstance };","map":{"version":3,"names":["m","macro","vtkWebGPUShaderCache","vtkWebGPUShaderDescription","publicAPI","model","classHierarchy","push","hasOutput","name","outputNames","includes","addOutput","type","interpolation","arguments","length","undefined","outputTypes","outputInterpolations","addBuiltinOutput","builtinOutputTypes","builtinOutputNames","addBuiltinInput","builtinInputTypes","builtinInputNames","replaceShaderCode","priorStage","vertexInput","inputImpl","iodec","getShaderCode","inputStruct","inputNames","getOutputNamesByReference","inputTypes","getOutputTypesByReference","inputInterpolations","getOutputInterpolationsByReference","i","code","substitute","result","outputStruct","concat","DEFAULT_VALUES","hash","extend","initialValues","Object","assign","obj","setGet","getArray","newInstance","vtkWebGPUShaderDescription$1","default"],"sources":["/root/vue-cornerstone-demo/node_modules/@kitware/vtk.js/Rendering/WebGPU/ShaderDescription.js"],"sourcesContent":["import { m as macro } from '../../macros2.js';\nimport vtkWebGPUShaderCache from './ShaderCache.js';\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUShaderDescription methods\n// ----------------------------------------------------------------------------\n\n// shader description\n\nfunction vtkWebGPUShaderDescription(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUShaderDescription');\n  publicAPI.hasOutput = name => model.outputNames.includes(name);\n  publicAPI.addOutput = function (type, name) {\n    let interpolation = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n    model.outputTypes.push(type);\n    model.outputNames.push(name);\n    model.outputInterpolations.push(interpolation);\n  };\n  publicAPI.addBuiltinOutput = (type, name) => {\n    model.builtinOutputTypes.push(type);\n    model.builtinOutputNames.push(name);\n  };\n  publicAPI.addBuiltinInput = (type, name) => {\n    model.builtinInputTypes.push(type);\n    model.builtinInputNames.push(name);\n  };\n\n  // perform shader replacements for the input and outputs\n  // of this shader. That includes vertex inputs if specified\n  publicAPI.replaceShaderCode = (priorStage, vertexInput) => {\n    const inputImpl = [];\n    let iodec = [];\n    if (vertexInput) {\n      inputImpl.push(vertexInput.getShaderCode());\n    }\n    if (priorStage || model.builtinInputNames.length) {\n      const inputStruct = [];\n      inputStruct.push(`struct ${model.type}Input\\n{`);\n      if (priorStage) {\n        const inputNames = priorStage.getOutputNamesByReference();\n        const inputTypes = priorStage.getOutputTypesByReference();\n        const inputInterpolations = priorStage.getOutputInterpolationsByReference();\n        for (let i = 0; i < inputNames.length; i++) {\n          if (inputInterpolations[i] !== undefined) {\n            inputStruct.push(`  @location(${i}) @interpolate(${inputInterpolations[i]}) ${inputNames[i]} : ${inputTypes[i]},`);\n          } else {\n            inputStruct.push(`  @location(${i}) ${inputNames[i]} : ${inputTypes[i]},`);\n          }\n        }\n      }\n      for (let i = 0; i < model.builtinInputNames.length; i++) {\n        inputStruct.push(`  ${model.builtinInputNames[i]} : ${model.builtinInputTypes[i]},`);\n      }\n      if (inputStruct.length > 1) {\n        inputStruct.push('};');\n        iodec = inputStruct;\n        inputImpl[inputImpl.length - 1] += ',';\n        inputImpl.push(`input: ${model.type}Input`);\n      }\n    }\n    if (inputImpl.length) {\n      model.code = vtkWebGPUShaderCache.substitute(model.code, '//VTK::IOStructs::Input', inputImpl).result;\n    }\n    if (model.outputNames.length + model.builtinOutputNames.length) {\n      const outputStruct = [`struct ${model.type}Output\\n{`];\n      for (let i = 0; i < model.outputNames.length; i++) {\n        if (model.outputInterpolations[i] !== undefined) {\n          outputStruct.push(`  @location(${i}) @interpolate(${model.outputInterpolations[i]}) ${model.outputNames[i]} : ${model.outputTypes[i]},`);\n        } else {\n          outputStruct.push(`  @location(${i}) ${model.outputNames[i]} : ${model.outputTypes[i]},`);\n        }\n      }\n      for (let i = 0; i < model.builtinOutputNames.length; i++) {\n        outputStruct.push(`  ${model.builtinOutputNames[i]} : ${model.builtinOutputTypes[i]},`);\n      }\n      outputStruct.push('};');\n      iodec = iodec.concat(outputStruct);\n      model.code = vtkWebGPUShaderCache.substitute(model.code, '//VTK::IOStructs::Output', [`-> ${model.type}Output`]).result;\n    }\n    model.code = vtkWebGPUShaderCache.substitute(model.code, '//VTK::IOStructs::Dec', iodec).result;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  type: null,\n  // 'vertex' or 'fragment'\n  hash: null,\n  code: null,\n  outputNames: null,\n  outputTypes: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  model.outputNames = [];\n  model.outputTypes = [];\n  model.outputInterpolations = [];\n  model.builtinOutputNames = [];\n  model.builtinOutputTypes = [];\n  model.builtinInputNames = [];\n  model.builtinInputTypes = [];\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['type', 'hash', 'code']);\n  macro.getArray(publicAPI, model, ['outputTypes', 'outputNames', 'outputInterpolations']);\n\n  // Object methods\n  vtkWebGPUShaderDescription(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkWebGPUShaderDescription');\n\n// ----------------------------------------------------------------------------\n\nvar vtkWebGPUShaderDescription$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkWebGPUShaderDescription$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}