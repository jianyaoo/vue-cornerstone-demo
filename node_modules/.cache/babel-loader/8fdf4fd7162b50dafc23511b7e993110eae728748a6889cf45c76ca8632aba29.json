{"ast":null,"code":"import Constants from './StructuredData/Constants.js';\nconst {\n  StructuredType\n} = Constants;\nfunction getDataDescriptionFromExtent(inExt) {\n  let dataDim = 0;\n  for (let i = 0; i < 3; ++i) {\n    if (inExt[i * 2] < inExt[i * 2 + 1]) {\n      dataDim++;\n    }\n  }\n  if (inExt[0] > inExt[1] || inExt[2] > inExt[3] || inExt[4] > inExt[5]) {\n    return StructuredType.EMPTY;\n  }\n  if (dataDim === 3) {\n    return StructuredType.XYZ_GRID;\n  }\n  if (dataDim === 2) {\n    if (inExt[0] === inExt[1]) {\n      return StructuredType.YZ_PLANE;\n    }\n    if (inExt[2] === inExt[3]) {\n      return StructuredType.XZ_PLANE;\n    }\n    return StructuredType.XY_PLANE;\n  }\n  if (dataDim === 1) {\n    if (inExt[0] < inExt[1]) {\n      return StructuredType.X_LINE;\n    }\n    if (inExt[2] < inExt[3]) {\n      return StructuredType.Y_LINE;\n    }\n    return StructuredType.Z_LINE;\n  }\n  return StructuredType.SINGLE_POINT;\n}\nvar vtkStructuredData = {\n  getDataDescriptionFromExtent,\n  ...Constants\n};\nexport { vtkStructuredData as default, getDataDescriptionFromExtent };","map":{"version":3,"names":["Constants","StructuredType","getDataDescriptionFromExtent","inExt","dataDim","i","EMPTY","XYZ_GRID","YZ_PLANE","XZ_PLANE","XY_PLANE","X_LINE","Y_LINE","Z_LINE","SINGLE_POINT","vtkStructuredData","default"],"sources":["/Users/yzy/Documents/Playground/vue-cornerstone-demo/node_modules/@kitware/vtk.js/Common/DataModel/StructuredData.js"],"sourcesContent":["import Constants from './StructuredData/Constants.js';\n\nconst {\n  StructuredType\n} = Constants;\nfunction getDataDescriptionFromExtent(inExt) {\n  let dataDim = 0;\n  for (let i = 0; i < 3; ++i) {\n    if (inExt[i * 2] < inExt[i * 2 + 1]) {\n      dataDim++;\n    }\n  }\n  if (inExt[0] > inExt[1] || inExt[2] > inExt[3] || inExt[4] > inExt[5]) {\n    return StructuredType.EMPTY;\n  }\n  if (dataDim === 3) {\n    return StructuredType.XYZ_GRID;\n  }\n  if (dataDim === 2) {\n    if (inExt[0] === inExt[1]) {\n      return StructuredType.YZ_PLANE;\n    }\n    if (inExt[2] === inExt[3]) {\n      return StructuredType.XZ_PLANE;\n    }\n    return StructuredType.XY_PLANE;\n  }\n  if (dataDim === 1) {\n    if (inExt[0] < inExt[1]) {\n      return StructuredType.X_LINE;\n    }\n    if (inExt[2] < inExt[3]) {\n      return StructuredType.Y_LINE;\n    }\n    return StructuredType.Z_LINE;\n  }\n  return StructuredType.SINGLE_POINT;\n}\nvar vtkStructuredData = {\n  getDataDescriptionFromExtent,\n  ...Constants\n};\n\nexport { vtkStructuredData as default, getDataDescriptionFromExtent };\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,+BAA+B;AAErD,MAAM;EACJC;AACF,CAAC,GAAGD,SAAS;AACb,SAASE,4BAA4BA,CAACC,KAAK,EAAE;EAC3C,IAAIC,OAAO,GAAG,CAAC;EACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAE,EAAEA,CAAC,EAAE;IAC1B,IAAIF,KAAK,CAACE,CAAC,GAAG,CAAC,CAAC,GAAGF,KAAK,CAACE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;MACnCD,OAAO,EAAE;IACX;EACF;EACA,IAAID,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,EAAE;IACrE,OAAOF,cAAc,CAACK,KAAK;EAC7B;EACA,IAAIF,OAAO,KAAK,CAAC,EAAE;IACjB,OAAOH,cAAc,CAACM,QAAQ;EAChC;EACA,IAAIH,OAAO,KAAK,CAAC,EAAE;IACjB,IAAID,KAAK,CAAC,CAAC,CAAC,KAAKA,KAAK,CAAC,CAAC,CAAC,EAAE;MACzB,OAAOF,cAAc,CAACO,QAAQ;IAChC;IACA,IAAIL,KAAK,CAAC,CAAC,CAAC,KAAKA,KAAK,CAAC,CAAC,CAAC,EAAE;MACzB,OAAOF,cAAc,CAACQ,QAAQ;IAChC;IACA,OAAOR,cAAc,CAACS,QAAQ;EAChC;EACA,IAAIN,OAAO,KAAK,CAAC,EAAE;IACjB,IAAID,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,EAAE;MACvB,OAAOF,cAAc,CAACU,MAAM;IAC9B;IACA,IAAIR,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,EAAE;MACvB,OAAOF,cAAc,CAACW,MAAM;IAC9B;IACA,OAAOX,cAAc,CAACY,MAAM;EAC9B;EACA,OAAOZ,cAAc,CAACa,YAAY;AACpC;AACA,IAAIC,iBAAiB,GAAG;EACtBb,4BAA4B;EAC5B,GAAGF;AACL,CAAC;AAED,SAASe,iBAAiB,IAAIC,OAAO,EAAEd,4BAA4B"},"metadata":{},"sourceType":"module","externalDependencies":[]}