"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const pointInShapeCallback_1 = __importDefault(require("../../../../utilities/pointInShapeCallback"));
const StrategyCallbacks_1 = __importDefault(require("../../../../enums/StrategyCallbacks"));
exports.default = {
    [StrategyCallbacks_1.default.Fill]: (operationData) => {
        var _a;
        const { segmentsLocked, segmentationImageData, segmentationVoxelManager: segmentationVoxelManager, previewVoxelManager: previewVoxelManager, imageVoxelManager: imageVoxelManager, brushStrategy, centerIJK, } = operationData;
        const isWithinThreshold = (_a = brushStrategy.createIsInThreshold) === null || _a === void 0 ? void 0 : _a.call(brushStrategy, operationData);
        const { setValue } = brushStrategy;
        const callback = isWithinThreshold
            ? (data) => {
                const { value, index } = data;
                if (segmentsLocked.includes(value) || !isWithinThreshold(index)) {
                    return;
                }
                setValue(operationData, data);
            }
            : (data) => setValue(operationData, data);
        (0, pointInShapeCallback_1.default)(segmentationImageData, (imageVoxelManager === null || imageVoxelManager === void 0 ? void 0 : imageVoxelManager.isInObject) || segmentationVoxelManager.isInObject, callback, segmentationVoxelManager.boundsIJK);
        previewVoxelManager.addPoint(centerIJK);
    },
};
//# sourceMappingURL=regionFill.js.map