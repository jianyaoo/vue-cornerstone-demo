"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isAxisAlignedRectangle = void 0;
const gl_matrix_1 = require("gl-matrix");
const core_1 = require("@cornerstonejs/core");
const { isEqual } = core_1.utilities;
const iAxis = gl_matrix_1.vec3.fromValues(1, 0, 0);
const jAxis = gl_matrix_1.vec3.fromValues(0, 1, 0);
const kAxis = gl_matrix_1.vec3.fromValues(0, 0, 1);
const axisList = [iAxis, jAxis, kAxis];
function isAxisAlignedRectangle(rectangleCornersIJK) {
    const rectangleVec1 = gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), rectangleCornersIJK[0], rectangleCornersIJK[1]);
    const rectangleVec2 = gl_matrix_1.vec3.subtract(gl_matrix_1.vec3.create(), rectangleCornersIJK[0], rectangleCornersIJK[2]);
    const anglesVec1 = calculateAnglesWithAxes(rectangleVec1, axisList);
    const anglesVec2 = calculateAnglesWithAxes(rectangleVec2, axisList);
    const isAligned = [...anglesVec1, ...anglesVec2].every((angle) => isEqual(angle, 0) ||
        isEqual(angle, 90) ||
        isEqual(angle, 180) ||
        isEqual(angle, 270));
    return isAligned;
}
exports.isAxisAlignedRectangle = isAxisAlignedRectangle;
function calculateAnglesWithAxes(vec, axes) {
    return axes.map((axis) => (gl_matrix_1.vec3.angle(vec, axis) * 180) / Math.PI);
}
//# sourceMappingURL=isAxisAlignedRectangle.js.map