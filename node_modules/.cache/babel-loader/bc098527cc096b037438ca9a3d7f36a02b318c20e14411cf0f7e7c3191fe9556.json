{"ast":null,"code":"class EdgeLocator {\n  constructor() {\n    let oriented = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    this.oriented = oriented;\n    this.edgeMap = new Map();\n  }\n  initialize() {\n    this.edgeMap.clear();\n  }\n  computeEdgeKey(pointId0, pointId1) {\n    return this.oriented || pointId0 < pointId1 ?\n    // Cantor pairing function:\n    0.5 * (pointId0 * pointId1) * (pointId0 * pointId1 + 1) + pointId1 : 0.5 * (pointId1 * pointId0) * (pointId1 * pointId0 + 1) + pointId0;\n  }\n  insertUniqueEdge(pointId0, pointId1, newEdgeValue) {\n    // Generate a unique key\n    const key = this.computeEdgeKey(pointId0, pointId1);\n    let node = this.edgeMap.get(key);\n    if (!node) {\n      // Didn't find key, so add a new edge entry\n      node = {\n        key,\n        edgeId: this.edgeMap.size,\n        value: newEdgeValue\n      };\n      this.edgeMap.set(key, node);\n    }\n    return node;\n  }\n  insertEdge(pointId0, pointId1, newEdgeValue) {\n    // Generate a unique key\n    const key = this.computeEdgeKey(pointId0, pointId1);\n    const node = {\n      key,\n      edgeId: this.edgeMap.size,\n      value: newEdgeValue\n    };\n    this.edgeMap.set(key, node);\n    return node;\n  }\n  isInsertedEdge(pointId0, pointId1) {\n    const key = this.computeEdgeKey(pointId0, pointId1);\n    return this.edgeMap.get(key);\n  }\n  static getEdgePointIds(node) {\n    const n = 0.5 * (-1 + Math.sqrt(8 * node.key + 1));\n    const pointId0 = node.key - 0.5 * (n + 1) * n;\n    const pointId1 = n - pointId0;\n    return [pointId0, pointId1];\n  }\n}\nfunction newInstance() {\n  let initialValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return new EdgeLocator(initialValues.oriented);\n}\nvar vtkEdgeLocator = {\n  newInstance\n};\nexport { vtkEdgeLocator as default };","map":{"version":3,"names":["EdgeLocator","constructor","oriented","arguments","length","undefined","edgeMap","Map","initialize","clear","computeEdgeKey","pointId0","pointId1","insertUniqueEdge","newEdgeValue","key","node","get","edgeId","size","value","set","insertEdge","isInsertedEdge","getEdgePointIds","n","Math","sqrt","newInstance","initialValues","vtkEdgeLocator","default"],"sources":["/Users/yzy/Documents/Playground/vue-cornerstone-demo/node_modules/@kitware/vtk.js/Common/DataModel/EdgeLocator.js"],"sourcesContent":["class EdgeLocator {\n  constructor() {\n    let oriented = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    this.oriented = oriented;\n    this.edgeMap = new Map();\n  }\n  initialize() {\n    this.edgeMap.clear();\n  }\n  computeEdgeKey(pointId0, pointId1) {\n    return this.oriented || pointId0 < pointId1 ?\n    // Cantor pairing function:\n    0.5 * (pointId0 * pointId1) * (pointId0 * pointId1 + 1) + pointId1 : 0.5 * (pointId1 * pointId0) * (pointId1 * pointId0 + 1) + pointId0;\n  }\n  insertUniqueEdge(pointId0, pointId1, newEdgeValue) {\n    // Generate a unique key\n    const key = this.computeEdgeKey(pointId0, pointId1);\n    let node = this.edgeMap.get(key);\n    if (!node) {\n      // Didn't find key, so add a new edge entry\n      node = {\n        key,\n        edgeId: this.edgeMap.size,\n        value: newEdgeValue\n      };\n      this.edgeMap.set(key, node);\n    }\n    return node;\n  }\n  insertEdge(pointId0, pointId1, newEdgeValue) {\n    // Generate a unique key\n    const key = this.computeEdgeKey(pointId0, pointId1);\n    const node = {\n      key,\n      edgeId: this.edgeMap.size,\n      value: newEdgeValue\n    };\n    this.edgeMap.set(key, node);\n    return node;\n  }\n  isInsertedEdge(pointId0, pointId1) {\n    const key = this.computeEdgeKey(pointId0, pointId1);\n    return this.edgeMap.get(key);\n  }\n  static getEdgePointIds(node) {\n    const n = 0.5 * (-1 + Math.sqrt(8 * node.key + 1));\n    const pointId0 = node.key - 0.5 * (n + 1) * n;\n    const pointId1 = n - pointId0;\n    return [pointId0, pointId1];\n  }\n}\nfunction newInstance() {\n  let initialValues = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return new EdgeLocator(initialValues.oriented);\n}\nvar vtkEdgeLocator = {\n  newInstance\n};\n\nexport { vtkEdgeLocator as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}