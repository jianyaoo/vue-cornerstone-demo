"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.contourSegmentation = exports.annotationFrameRange = exports.voi = exports.polyDataUtils = exports.pointToString = exports.roundNumber = exports.scroll = exports.stackContextPrefetch = exports.stackPrefetch = exports.planarFreehandROITool = exports.rectangleROITool = exports.boundingBox = exports.clip = exports.cine = exports.viewport = exports.pointInSurroundingSphereCallback = exports.jumpToSlice = exports.getAnnotationNearPointOnEnabledElement = exports.getViewportForAnnotation = exports.getAnnotationNearPoint = exports.getSphereBoundsInfo = exports.pointInShapeCallback = exports.triggerAnnotationRender = exports.triggerAnnotationRenderForToolGroupIds = exports.triggerAnnotationRenderForViewportIds = exports.contours = exports.segmentation = exports.getCalibratedAspect = exports.getCalibratedProbeUnitsAndValue = exports.getCalibratedLengthUnitsAndScale = exports.calibrateImageSpacing = exports.triggerEvent = exports.touch = exports.isObject = exports.orientation = exports.throttle = exports.dynamicVolume = exports.debounce = exports.drawing = exports.viewportFilters = exports.planar = exports.math = void 0;
const core_1 = require("@cornerstonejs/core");
const getAnnotationNearPoint_1 = require("./getAnnotationNearPoint");
Object.defineProperty(exports, "getAnnotationNearPoint", { enumerable: true, get: function () { return getAnnotationNearPoint_1.getAnnotationNearPoint; } });
Object.defineProperty(exports, "getAnnotationNearPointOnEnabledElement", { enumerable: true, get: function () { return getAnnotationNearPoint_1.getAnnotationNearPointOnEnabledElement; } });
const debounce_1 = __importDefault(require("./debounce"));
exports.debounce = debounce_1.default;
const throttle_1 = __importDefault(require("./throttle"));
exports.throttle = throttle_1.default;
const isObject_1 = __importDefault(require("./isObject"));
exports.isObject = isObject_1.default;
const clip_1 = __importDefault(require("./clip"));
exports.clip = clip_1.default;
const calibrateImageSpacing_1 = __importDefault(require("./calibrateImageSpacing"));
exports.calibrateImageSpacing = calibrateImageSpacing_1.default;
const getCalibratedUnits_1 = require("./getCalibratedUnits");
Object.defineProperty(exports, "getCalibratedLengthUnitsAndScale", { enumerable: true, get: function () { return getCalibratedUnits_1.getCalibratedLengthUnitsAndScale; } });
Object.defineProperty(exports, "getCalibratedProbeUnitsAndValue", { enumerable: true, get: function () { return getCalibratedUnits_1.getCalibratedProbeUnitsAndValue; } });
Object.defineProperty(exports, "getCalibratedAspect", { enumerable: true, get: function () { return getCalibratedUnits_1.getCalibratedAspect; } });
const triggerAnnotationRenderForViewportIds_1 = __importDefault(require("./triggerAnnotationRenderForViewportIds"));
exports.triggerAnnotationRenderForViewportIds = triggerAnnotationRenderForViewportIds_1.default;
const triggerAnnotationRenderForToolGroupIds_1 = __importDefault(require("./triggerAnnotationRenderForToolGroupIds"));
exports.triggerAnnotationRenderForToolGroupIds = triggerAnnotationRenderForToolGroupIds_1.default;
const triggerAnnotationRender_1 = __importDefault(require("./triggerAnnotationRender"));
exports.triggerAnnotationRender = triggerAnnotationRender_1.default;
const jumpToSlice_1 = __importDefault(require("./viewport/jumpToSlice"));
exports.jumpToSlice = jumpToSlice_1.default;
const pointInShapeCallback_1 = __importDefault(require("./pointInShapeCallback"));
exports.pointInShapeCallback = pointInShapeCallback_1.default;
const getSphereBoundsInfo_1 = require("./getSphereBoundsInfo");
Object.defineProperty(exports, "getSphereBoundsInfo", { enumerable: true, get: function () { return getSphereBoundsInfo_1.getSphereBoundsInfo; } });
const scroll_1 = __importDefault(require("./scroll"));
exports.scroll = scroll_1.default;
const pointToString_1 = require("./pointToString");
Object.defineProperty(exports, "pointToString", { enumerable: true, get: function () { return pointToString_1.pointToString; } });
const annotationFrameRange_1 = __importDefault(require("./annotationFrameRange"));
exports.annotationFrameRange = annotationFrameRange_1.default;
const pointInSurroundingSphereCallback_1 = __importDefault(require("./pointInSurroundingSphereCallback"));
exports.pointInSurroundingSphereCallback = pointInSurroundingSphereCallback_1.default;
const getViewportForAnnotation_1 = __importDefault(require("./getViewportForAnnotation"));
exports.getViewportForAnnotation = getViewportForAnnotation_1.default;
const contours = __importStar(require("./contours"));
exports.contours = contours;
const segmentation = __importStar(require("./segmentation"));
exports.segmentation = segmentation;
const drawing = __importStar(require("./drawing"));
exports.drawing = drawing;
const math = __importStar(require("./math"));
exports.math = math;
const planar = __importStar(require("./planar"));
exports.planar = planar;
const viewportFilters = __importStar(require("./viewportFilters"));
exports.viewportFilters = viewportFilters;
const orientation = __importStar(require("./orientation"));
exports.orientation = orientation;
const cine = __importStar(require("./cine"));
exports.cine = cine;
const boundingBox = __importStar(require("./boundingBox"));
exports.boundingBox = boundingBox;
const planarFreehandROITool = __importStar(require("./planarFreehandROITool"));
exports.planarFreehandROITool = planarFreehandROITool;
const rectangleROITool = __importStar(require("./rectangleROITool"));
exports.rectangleROITool = rectangleROITool;
const stackPrefetch_1 = require("./stackPrefetch");
Object.defineProperty(exports, "stackPrefetch", { enumerable: true, get: function () { return stackPrefetch_1.stackPrefetch; } });
Object.defineProperty(exports, "stackContextPrefetch", { enumerable: true, get: function () { return stackPrefetch_1.stackContextPrefetch; } });
const viewport = __importStar(require("./viewport"));
exports.viewport = viewport;
const touch = __importStar(require("./touch"));
exports.touch = touch;
const dynamicVolume = __importStar(require("./dynamicVolume"));
exports.dynamicVolume = dynamicVolume;
const polyDataUtils = __importStar(require("./polyData/utils"));
exports.polyDataUtils = polyDataUtils;
const voi = __importStar(require("./voi"));
exports.voi = voi;
const contourSegmentation = __importStar(require("./contourSegmentation"));
exports.contourSegmentation = contourSegmentation;
const roundNumber = core_1.utilities.roundNumber;
exports.roundNumber = roundNumber;
const core_2 = require("@cornerstonejs/core");
Object.defineProperty(exports, "triggerEvent", { enumerable: true, get: function () { return core_2.triggerEvent; } });
//# sourceMappingURL=index.js.map