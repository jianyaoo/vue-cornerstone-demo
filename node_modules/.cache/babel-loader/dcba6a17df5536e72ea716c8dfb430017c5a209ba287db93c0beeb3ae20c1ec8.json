{"ast":null,"code":"import { IDENTITY } from '../Core/Math/Constants.js';\nimport { vec3, mat4 } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport { f as vtkMath } from '../Core/Math/index.js';\n\n// ----------------------------------------------------------------------------\n// vtkTransform methods\n// ----------------------------------------------------------------------------\n// eslint-disable-next-line import/no-mutable-exports\nlet newInstance;\nfunction vtkTransform(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkAbstractTransform', 'vtkHomogeneousTransform', 'vtkTransform');\n  publicAPI.transformPoint = (point, out) => {\n    vec3.transformMat4(out, point, model.matrix);\n    return out;\n  };\n  publicAPI.transformPoints = (points, out) => {\n    const inPoint = new Float64Array(3);\n    const outPoint = new Float64Array(3);\n    for (let i = 0; i < points.length; i += 3) {\n      inPoint[0] = points[i];\n      inPoint[1] = points[i + 1];\n      inPoint[2] = points[i + 2];\n      vec3.transformMat4(outPoint, inPoint, model.matrix);\n      out[i] = outPoint[0];\n      out[i + 1] = outPoint[1];\n      out[i + 2] = outPoint[2];\n    }\n    return out;\n  };\n\n  /**\n   * Sets the internal state of the transform to PreMultiply.\n   * All subsequent operations will occur before those already represented in the current transformation.\n   * In homogeneous matrix notation, M = M*A where M is the current transformation matrix and A is the applied matrix.\n   * The default is PreMultiply.\n   */\n  publicAPI.preMultiply = () => {\n    publicAPI.setPreMultiplyFlag(true);\n  };\n\n  /**\n   * Sets the internal state of the transform to PostMultiply.\n   * All subsequent operations will occur after those already represented in the current transformation.\n   * In homogeneous matrix notation, M = A*M where M is the current transformation matrix and A is the applied matrix.\n   * The default is PreMultiply.\n   */\n  publicAPI.postMultiply = () => {\n    publicAPI.setPreMultiplyFlag(false);\n  };\n  publicAPI.transformMatrix = (matrix, out) => {\n    if (model.preMultiplyFlag) {\n      mat4.multiply(out, model.matrix, matrix);\n    } else {\n      mat4.multiply(out, matrix, model.matrix);\n    }\n    return out;\n  };\n\n  // Apply the transform to each matrix in the same way as transformMatrix\n  // `matrices` can be a contiguous array of float or an array of array\n  publicAPI.transformMatrices = (matrices, out) => {\n    const inMat = new Float64Array(16);\n    const outMat = new Float64Array(16);\n    const transform = model.preMultiplyFlag ? () => mat4.multiply(outMat, model.matrix, inMat) : () => mat4.multiply(outMat, inMat, model.matrix);\n    for (let i = 0; i < matrices.length; i += 16) {\n      for (let j = 0; j < 16; ++j) {\n        inMat[j] = matrices[i + j];\n      }\n      transform();\n      for (let j = 0; j < 16; ++j) {\n        out[i + j] = outMat[j];\n      }\n    }\n    return out;\n  };\n  publicAPI.getInverse = () => newInstance({\n    matrix: vtkMath.invertMatrix(Array.from(model.matrix), [], 4),\n    preMultiplyFlag: model.preMultiplyFlag\n  });\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  preMultiplyFlag: false,\n  matrix: [...IDENTITY]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['preMultiplyFlag']);\n  macro.setGetArray(publicAPI, model, ['matrix'], 16);\n  vtkTransform(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\nnewInstance = macro.newInstance(extend, 'vtkTransform');\n\n// ----------------------------------------------------------------------------\n\nvar vtkTransform$1 = {\n  newInstance,\n  extend\n};\nexport { vtkTransform$1 as default, extend, newInstance };","map":{"version":3,"names":["IDENTITY","vec3","mat4","m","macro","f","vtkMath","newInstance","vtkTransform","publicAPI","model","classHierarchy","push","transformPoint","point","out","transformMat4","matrix","transformPoints","points","inPoint","Float64Array","outPoint","i","length","preMultiply","setPreMultiplyFlag","postMultiply","transformMatrix","preMultiplyFlag","multiply","transformMatrices","matrices","inMat","outMat","transform","j","getInverse","invertMatrix","Array","from","DEFAULT_VALUES","extend","initialValues","arguments","undefined","Object","assign","obj","setGet","setGetArray","vtkTransform$1","default"],"sources":["/root/vue-cornerstone-demo/node_modules/@kitware/vtk.js/Common/Transform/Transform.js"],"sourcesContent":["import { IDENTITY } from '../Core/Math/Constants.js';\nimport { vec3, mat4 } from 'gl-matrix';\nimport { m as macro } from '../../macros2.js';\nimport { f as vtkMath } from '../Core/Math/index.js';\n\n// ----------------------------------------------------------------------------\n// vtkTransform methods\n// ----------------------------------------------------------------------------\n// eslint-disable-next-line import/no-mutable-exports\nlet newInstance;\nfunction vtkTransform(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkAbstractTransform', 'vtkHomogeneousTransform', 'vtkTransform');\n  publicAPI.transformPoint = (point, out) => {\n    vec3.transformMat4(out, point, model.matrix);\n    return out;\n  };\n  publicAPI.transformPoints = (points, out) => {\n    const inPoint = new Float64Array(3);\n    const outPoint = new Float64Array(3);\n    for (let i = 0; i < points.length; i += 3) {\n      inPoint[0] = points[i];\n      inPoint[1] = points[i + 1];\n      inPoint[2] = points[i + 2];\n      vec3.transformMat4(outPoint, inPoint, model.matrix);\n      out[i] = outPoint[0];\n      out[i + 1] = outPoint[1];\n      out[i + 2] = outPoint[2];\n    }\n    return out;\n  };\n\n  /**\n   * Sets the internal state of the transform to PreMultiply.\n   * All subsequent operations will occur before those already represented in the current transformation.\n   * In homogeneous matrix notation, M = M*A where M is the current transformation matrix and A is the applied matrix.\n   * The default is PreMultiply.\n   */\n  publicAPI.preMultiply = () => {\n    publicAPI.setPreMultiplyFlag(true);\n  };\n\n  /**\n   * Sets the internal state of the transform to PostMultiply.\n   * All subsequent operations will occur after those already represented in the current transformation.\n   * In homogeneous matrix notation, M = A*M where M is the current transformation matrix and A is the applied matrix.\n   * The default is PreMultiply.\n   */\n  publicAPI.postMultiply = () => {\n    publicAPI.setPreMultiplyFlag(false);\n  };\n  publicAPI.transformMatrix = (matrix, out) => {\n    if (model.preMultiplyFlag) {\n      mat4.multiply(out, model.matrix, matrix);\n    } else {\n      mat4.multiply(out, matrix, model.matrix);\n    }\n    return out;\n  };\n\n  // Apply the transform to each matrix in the same way as transformMatrix\n  // `matrices` can be a contiguous array of float or an array of array\n  publicAPI.transformMatrices = (matrices, out) => {\n    const inMat = new Float64Array(16);\n    const outMat = new Float64Array(16);\n    const transform = model.preMultiplyFlag ? () => mat4.multiply(outMat, model.matrix, inMat) : () => mat4.multiply(outMat, inMat, model.matrix);\n    for (let i = 0; i < matrices.length; i += 16) {\n      for (let j = 0; j < 16; ++j) {\n        inMat[j] = matrices[i + j];\n      }\n      transform();\n      for (let j = 0; j < 16; ++j) {\n        out[i + j] = outMat[j];\n      }\n    }\n    return out;\n  };\n  publicAPI.getInverse = () => newInstance({\n    matrix: vtkMath.invertMatrix(Array.from(model.matrix), [], 4),\n    preMultiplyFlag: model.preMultiplyFlag\n  });\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  preMultiplyFlag: false,\n  matrix: [...IDENTITY]\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, ['preMultiplyFlag']);\n  macro.setGetArray(publicAPI, model, ['matrix'], 16);\n  vtkTransform(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\nnewInstance = macro.newInstance(extend, 'vtkTransform');\n\n// ----------------------------------------------------------------------------\n\nvar vtkTransform$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkTransform$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}