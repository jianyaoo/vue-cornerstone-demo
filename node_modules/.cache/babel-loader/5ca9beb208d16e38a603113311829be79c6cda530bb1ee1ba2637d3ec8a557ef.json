{"ast":null,"code":"var _class;\nimport \"core-js/modules/es.array.push.js\";\nimport Calculator from './Calculator';\nexport default class BasicStatsCalculator extends Calculator {}\n_class = BasicStatsCalculator;\n_class.max = [-Infinity];\n_class.sum = [0];\n_class.sumSquares = [0];\n_class.squaredDiffSum = [0];\n_class.count = 0;\n_class.statsCallback = ({\n  value: newValue\n}) => {\n  if (Array.isArray(newValue) && newValue.length > 1 && _class.max.length === 1) {\n    _class.max.push(_class.max[0], _class.max[0]);\n    _class.sum.push(_class.sum[0], _class.sum[0]);\n    _class.sumSquares.push(_class.sumSquares[0], _class.sumSquares[0]);\n    _class.squaredDiffSum.push(_class.squaredDiffSum[0], _class.squaredDiffSum[0]);\n  }\n  const newArray = Array.isArray(newValue) ? newValue : [newValue];\n  _class.count += 1;\n  _class.max.forEach((it, idx) => _class.max[idx] = Math.max(it, newArray[idx]));\n  _class.sum.map((it, idx) => _class.sum[idx] += newArray[idx]);\n  _class.sumSquares.map((it, idx) => _class.sumSquares[idx] += newArray[idx] ** 2);\n  _class.squaredDiffSum.map((it, idx) => _class.squaredDiffSum[idx] += Math.pow(newArray[idx] - _class.sum[idx] / _class.count, 2));\n};\n_class.getStatistics = () => {\n  const mean = _class.sum.map(sum => sum / _class.count);\n  const stdDev = _class.squaredDiffSum.map(squaredDiffSum => Math.sqrt(squaredDiffSum / _class.count));\n  const stdDevWithSumSquare = _class.sumSquares.map((it, idx) => Math.sqrt(_class.sumSquares[idx] / _class.count - mean[idx] ** 2));\n  const currentMax = _class.max;\n  _class.max = [-Infinity];\n  _class.sum = [0];\n  _class.sumSquares = [0];\n  _class.squaredDiffSum = [0];\n  _class.count = 0;\n  return [{\n    name: 'max',\n    value: singleArrayAsNumber(currentMax),\n    unit: null\n  }, {\n    name: 'mean',\n    value: singleArrayAsNumber(mean),\n    unit: null\n  }, {\n    name: 'stdDev',\n    value: singleArrayAsNumber(stdDev),\n    unit: null\n  }, {\n    name: 'stdDevWithSumSquare',\n    value: singleArrayAsNumber(stdDevWithSumSquare),\n    unit: null\n  }];\n};\nfunction singleArrayAsNumber(val) {\n  return val.length === 1 ? val[0] : val;\n}","map":{"version":3,"names":["Calculator","BasicStatsCalculator","_class","max","Infinity","sum","sumSquares","squaredDiffSum","count","statsCallback","value","newValue","Array","isArray","length","push","newArray","forEach","it","idx","Math","map","pow","getStatistics","mean","stdDev","sqrt","stdDevWithSumSquare","currentMax","name","singleArrayAsNumber","unit","val"],"sources":["../../../../../src/utilities/math/basic/BasicStatsCalculator.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}