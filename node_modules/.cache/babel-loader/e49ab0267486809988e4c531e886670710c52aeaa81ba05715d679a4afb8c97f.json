{"ast":null,"code":"import { CONSTANTS, getEnabledElement, triggerEvent, eventTarget, VolumeViewport, utilities as csUtils } from '@cornerstonejs/core';\nimport { vec3 } from 'gl-matrix';\nimport { getCalibratedAreaUnits, getCalibratedScale } from '../../utilities/getCalibratedUnits';\nimport { roundNumber } from '../../utilities';\nimport { Events } from '../../enums';\nimport { polyline } from '../../utilities/math';\nimport { filterAnnotationsForDisplay } from '../../utilities/planar';\nimport throttle from '../../utilities/throttle';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport registerDrawLoop from './planarFreehandROITool/drawLoop';\nimport registerEditLoopCommon from './planarFreehandROITool/editLoopCommon';\nimport registerClosedContourEditLoop from './planarFreehandROITool/closedContourEditLoop';\nimport registerOpenContourEditLoop from './planarFreehandROITool/openContourEditLoop';\nimport registerOpenContourEndEditLoop from './planarFreehandROITool/openContourEndEditLoop';\nimport registerRenderMethods from './planarFreehandROITool/renderMethods';\nimport { drawLinkedTextBox } from '../../drawingSvg';\nimport { getTextBoxCoordsCanvas } from '../../utilities/drawing';\nimport { getIntersectionCoordinatesWithPolyline } from '../../utilities/math/polyline/getIntersectionWithPolyline';\nimport pointInShapeCallback from '../../utilities/pointInShapeCallback';\nimport { isViewportPreScaled } from '../../utilities/viewport/isViewportPreScaled';\nimport { getModalityUnit } from '../../utilities/getModalityUnit';\nimport { BasicStatsCalculator } from '../../utilities/math/basic';\nimport ContourSegmentationBaseTool from '../base/ContourSegmentationBaseTool';\nconst {\n  pointCanProjectOnLine\n} = polyline;\nconst {\n  EPSILON\n} = CONSTANTS;\nconst PARALLEL_THRESHOLD = 1 - EPSILON;\nclass PlanarFreehandROITool extends ContourSegmentationBaseTool {\n  constructor(toolProps = {}, defaultToolProps = {\n    supportedInteractionTypes: ['Mouse', 'Touch'],\n    configuration: {\n      shadow: true,\n      preventHandleOutsideImage: false,\n      alwaysRenderOpenContourHandles: {\n        enabled: false,\n        radius: 2\n      },\n      allowOpenContours: true,\n      closeContourProximity: 10,\n      checkCanvasEditFallbackProximity: 6,\n      subPixelResolution: 4,\n      interpolation: {\n        interpolateOnAdd: false,\n        interpolateOnEdit: false,\n        knotsRatioPercentageOnAdd: 40,\n        knotsRatioPercentageOnEdit: 40\n      },\n      calculateStats: false,\n      getTextLines: defaultGetTextLines,\n      statsCalculator: BasicStatsCalculator\n    }\n  }) {\n    super(toolProps, defaultToolProps);\n    this.isDrawing = false;\n    this.isEditingClosed = false;\n    this.isEditingOpen = false;\n    this.addNewAnnotation = evt => {\n      const eventDetail = evt.detail;\n      const {\n        element\n      } = eventDetail;\n      const enabledElement = getEnabledElement(element);\n      const {\n        renderingEngine\n      } = enabledElement;\n      const annotation = this.createAnnotation(evt);\n      this.addAnnotation(annotation, element);\n      const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n      this.activateDraw(evt, annotation, viewportIdsToRender);\n      evt.preventDefault();\n      triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n      return annotation;\n    };\n    this.handleSelectedCallback = (evt, annotation, handle) => {\n      const eventDetail = evt.detail;\n      const {\n        element\n      } = eventDetail;\n      const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n      this.activateOpenContourEndEdit(evt, annotation, viewportIdsToRender, handle);\n    };\n    this.toolSelectedCallback = (evt, annotation) => {\n      const eventDetail = evt.detail;\n      const {\n        element\n      } = eventDetail;\n      const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n      if (annotation.data.contour.closed) {\n        this.activateClosedContourEdit(evt, annotation, viewportIdsToRender);\n      } else {\n        this.activateOpenContourEdit(evt, annotation, viewportIdsToRender);\n      }\n    };\n    this.isPointNearTool = (element, annotation, canvasCoords, proximity) => {\n      const enabledElement = getEnabledElement(element);\n      const {\n        viewport\n      } = enabledElement;\n      const points = annotation.data.contour.polyline;\n      let previousPoint = viewport.worldToCanvas(points[0]);\n      for (let i = 1; i < points.length; i++) {\n        const p1 = previousPoint;\n        const p2 = viewport.worldToCanvas(points[i]);\n        const canProject = pointCanProjectOnLine(canvasCoords, p1, p2, proximity);\n        if (canProject) {\n          return true;\n        }\n        previousPoint = p2;\n      }\n      if (!annotation.data.contour.closed) {\n        return false;\n      }\n      const pStart = viewport.worldToCanvas(points[0]);\n      const pEnd = viewport.worldToCanvas(points[points.length - 1]);\n      return pointCanProjectOnLine(canvasCoords, pStart, pEnd, proximity);\n    };\n    this.cancel = element => {\n      const isDrawing = this.isDrawing;\n      const isEditingOpen = this.isEditingOpen;\n      const isEditingClosed = this.isEditingClosed;\n      if (isDrawing) {\n        this.cancelDrawing(element);\n      } else if (isEditingOpen) {\n        this.cancelOpenContourEdit(element);\n      } else if (isEditingClosed) {\n        this.cancelClosedContourEdit(element);\n      }\n    };\n    this.triggerAnnotationModified = (annotation, enabledElement) => {\n      const {\n        viewportId,\n        renderingEngineId\n      } = enabledElement;\n      const eventType = Events.ANNOTATION_MODIFIED;\n      const eventDetail = {\n        annotation,\n        viewportId,\n        renderingEngineId\n      };\n      triggerEvent(eventTarget, eventType, eventDetail);\n    };\n    this.triggerAnnotationCompleted = annotation => {\n      const eventType = Events.ANNOTATION_COMPLETED;\n      const eventDetail = {\n        annotation\n      };\n      triggerEvent(eventTarget, eventType, eventDetail);\n    };\n    this._calculateCachedStats = (annotation, viewport, renderingEngine, enabledElement) => {\n      const {\n        data\n      } = annotation;\n      const {\n        cachedStats\n      } = data;\n      const {\n        polyline: points\n      } = data.contour;\n      const targetIds = Object.keys(cachedStats);\n      for (let i = 0; i < targetIds.length; i++) {\n        const targetId = targetIds[i];\n        const image = this.getTargetIdImage(targetId, renderingEngine);\n        if (!image) {\n          continue;\n        }\n        const {\n          imageData,\n          metadata\n        } = image;\n        const canvasCoordinates = points.map(p => viewport.worldToCanvas(p));\n        const canvasPoint = canvasCoordinates[0];\n        const originalWorldPoint = viewport.canvasToWorld(canvasPoint);\n        const deltaXPoint = viewport.canvasToWorld([canvasPoint[0] + 1, canvasPoint[1]]);\n        const deltaYPoint = viewport.canvasToWorld([canvasPoint[0], canvasPoint[1] + 1]);\n        const deltaInX = vec3.distance(originalWorldPoint, deltaXPoint);\n        const deltaInY = vec3.distance(originalWorldPoint, deltaYPoint);\n        const scale = getCalibratedScale(image);\n        let area = polyline.calculateAreaOfPoints(canvasCoordinates) / scale / scale;\n        area *= deltaInX * deltaInY;\n        const worldPosIndex = csUtils.transformWorldToIndex(imageData, points[0]);\n        worldPosIndex[0] = Math.floor(worldPosIndex[0]);\n        worldPosIndex[1] = Math.floor(worldPosIndex[1]);\n        worldPosIndex[2] = Math.floor(worldPosIndex[2]);\n        let iMin = worldPosIndex[0];\n        let iMax = worldPosIndex[0];\n        let jMin = worldPosIndex[1];\n        let jMax = worldPosIndex[1];\n        let kMin = worldPosIndex[2];\n        let kMax = worldPosIndex[2];\n        for (let j = 1; j < points.length; j++) {\n          const worldPosIndex = csUtils.transformWorldToIndex(imageData, points[j]);\n          worldPosIndex[0] = Math.floor(worldPosIndex[0]);\n          worldPosIndex[1] = Math.floor(worldPosIndex[1]);\n          worldPosIndex[2] = Math.floor(worldPosIndex[2]);\n          iMin = Math.min(iMin, worldPosIndex[0]);\n          iMax = Math.max(iMax, worldPosIndex[0]);\n          jMin = Math.min(jMin, worldPosIndex[1]);\n          jMax = Math.max(jMax, worldPosIndex[1]);\n          kMin = Math.min(kMin, worldPosIndex[2]);\n          kMax = Math.max(kMax, worldPosIndex[2]);\n        }\n        const iDelta = 0.01 * (iMax - iMin);\n        const jDelta = 0.01 * (jMax - jMin);\n        const kDelta = 0.01 * (kMax - kMin);\n        iMin = Math.floor(iMin - iDelta);\n        iMax = Math.ceil(iMax + iDelta);\n        jMin = Math.floor(jMin - jDelta);\n        jMax = Math.ceil(jMax + jDelta);\n        kMin = Math.floor(kMin - kDelta);\n        kMax = Math.ceil(kMax + kDelta);\n        const boundsIJK = [[iMin, iMax], [jMin, jMax], [kMin, kMax]];\n        const worldPosEnd = imageData.indexToWorld([iMax, jMax, kMax]);\n        const canvasPosEnd = viewport.worldToCanvas(worldPosEnd);\n        let curRow = 0;\n        let intersections = [];\n        let intersectionCounter = 0;\n        const pointsInShape = pointInShapeCallback(imageData, (pointLPS, pointIJK) => {\n          let result = true;\n          const point = viewport.worldToCanvas(pointLPS);\n          if (point[1] != curRow) {\n            intersectionCounter = 0;\n            curRow = point[1];\n            intersections = getIntersectionCoordinatesWithPolyline(canvasCoordinates, point, [canvasPosEnd[0], point[1]]);\n            intersections.sort(function (index) {\n              return function (a, b) {\n                return a[index] === b[index] ? 0 : a[index] < b[index] ? -1 : 1;\n              };\n            }(0));\n          }\n          if (intersections.length && point[0] > intersections[0][0]) {\n            intersections.shift();\n            intersectionCounter++;\n          }\n          if (intersectionCounter % 2 === 0) {\n            result = false;\n          }\n          return result;\n        }, this.configuration.statsCalculator.statsCallback, boundsIJK);\n        const modalityUnitOptions = {\n          isPreScaled: isViewportPreScaled(viewport, targetId),\n          isSuvScaled: this.isSuvScaled(viewport, targetId, annotation.metadata.referencedImageId)\n        };\n        const modalityUnit = getModalityUnit(metadata.Modality, annotation.metadata.referencedImageId, modalityUnitOptions);\n        const stats = this.configuration.statsCalculator.getStatistics();\n        cachedStats[targetId] = {\n          Modality: metadata.Modality,\n          area,\n          mean: stats[1]?.value,\n          max: stats[0]?.value,\n          stdDev: stats[3]?.value,\n          statsArray: stats,\n          pointsInShape: pointsInShape,\n          areaUnit: getCalibratedAreaUnits(null, image),\n          modalityUnit\n        };\n      }\n      this.triggerAnnotationModified(annotation, enabledElement);\n      annotation.invalidated = false;\n      return cachedStats;\n    };\n    this._renderStats = (annotation, viewport, enabledElement, svgDrawingHelper) => {\n      const {\n        data\n      } = annotation;\n      const targetId = this.getTargetId(viewport);\n      const styleSpecifier = {\n        toolGroupId: this.toolGroupId,\n        toolName: this.getToolName(),\n        viewportId: enabledElement.viewport.id\n      };\n      const options = this.getLinkedTextBoxStyle(styleSpecifier, annotation);\n      if (!options.visibility) {\n        return;\n      }\n      const textLines = this.configuration.getTextLines(data, targetId);\n      if (!textLines || textLines.length === 0) {\n        return;\n      }\n      const canvasCoordinates = data.contour.polyline.map(p => viewport.worldToCanvas(p));\n      if (!data.handles.textBox.hasMoved) {\n        const canvasTextBoxCoords = getTextBoxCoordsCanvas(canvasCoordinates);\n        data.handles.textBox.worldPosition = viewport.canvasToWorld(canvasTextBoxCoords);\n      }\n      const textBoxPosition = viewport.worldToCanvas(data.handles.textBox.worldPosition);\n      const textBoxUID = '1';\n      const boundingBox = drawLinkedTextBox(svgDrawingHelper, annotation.annotationUID ?? '', textBoxUID, textLines, textBoxPosition, canvasCoordinates, {}, options);\n      const {\n        x: left,\n        y: top,\n        width,\n        height\n      } = boundingBox;\n      data.handles.textBox.worldBoundingBox = {\n        topLeft: viewport.canvasToWorld([left, top]),\n        topRight: viewport.canvasToWorld([left + width, top]),\n        bottomLeft: viewport.canvasToWorld([left, top + height]),\n        bottomRight: viewport.canvasToWorld([left + width, top + height])\n      };\n    };\n    registerDrawLoop(this);\n    registerEditLoopCommon(this);\n    registerClosedContourEditLoop(this);\n    registerOpenContourEditLoop(this);\n    registerOpenContourEndEditLoop(this);\n    registerRenderMethods(this);\n    this._throttledCalculateCachedStats = throttle(this._calculateCachedStats, 100, {\n      trailing: true\n    });\n  }\n  filterInteractableAnnotationsForElement(element, annotations) {\n    if (!annotations || !annotations.length) {\n      return;\n    }\n    const enabledElement = getEnabledElement(element);\n    const {\n      viewport\n    } = enabledElement;\n    let annotationsToDisplay;\n    if (viewport instanceof VolumeViewport) {\n      const camera = viewport.getCamera();\n      const {\n        spacingInNormalDirection\n      } = csUtils.getTargetVolumeAndSpacingInNormalDir(viewport, camera);\n      annotationsToDisplay = this.filterAnnotationsWithinSlice(annotations, camera, spacingInNormalDirection);\n    } else {\n      annotationsToDisplay = filterAnnotationsForDisplay(viewport, annotations);\n    }\n    return annotationsToDisplay;\n  }\n  filterAnnotationsWithinSlice(annotations, camera, spacingInNormalDirection) {\n    const {\n      viewPlaneNormal\n    } = camera;\n    const annotationsWithParallelNormals = annotations.filter(td => {\n      const annotationViewPlaneNormal = td.metadata.viewPlaneNormal;\n      const isParallel = Math.abs(vec3.dot(viewPlaneNormal, annotationViewPlaneNormal)) > PARALLEL_THRESHOLD;\n      return annotationViewPlaneNormal && isParallel;\n    });\n    if (!annotationsWithParallelNormals.length) {\n      return [];\n    }\n    const halfSpacingInNormalDirection = spacingInNormalDirection / 2;\n    const {\n      focalPoint\n    } = camera;\n    const annotationsWithinSlice = [];\n    for (const annotation of annotationsWithParallelNormals) {\n      const data = annotation.data;\n      const point = data.contour.polyline[0];\n      if (!annotation.isVisible) {\n        continue;\n      }\n      const dir = vec3.create();\n      vec3.sub(dir, focalPoint, point);\n      const dot = vec3.dot(dir, viewPlaneNormal);\n      if (Math.abs(dot) < halfSpacingInNormalDirection) {\n        annotationsWithinSlice.push(annotation);\n      }\n    }\n    return annotationsWithinSlice;\n  }\n  isContourSegmentationTool() {\n    return false;\n  }\n  createAnnotation(evt) {\n    const worldPos = evt.detail.currentPoints.world;\n    const contourAnnotation = super.createAnnotation(evt);\n    return csUtils.deepMerge(contourAnnotation, {\n      data: {\n        contour: {\n          polyline: [[...worldPos]]\n        },\n        label: '',\n        cachedStats: {}\n      }\n    });\n  }\n  getAnnotationStyle(context) {\n    return super.getAnnotationStyle(context);\n  }\n  renderAnnotationInstance(renderContext) {\n    const {\n      enabledElement,\n      targetId,\n      svgDrawingHelper,\n      annotationStyle\n    } = renderContext;\n    const annotation = renderContext.annotation;\n    let renderStatus = false;\n    const {\n      viewport,\n      renderingEngine\n    } = enabledElement;\n    const isDrawing = this.isDrawing;\n    const isEditingOpen = this.isEditingOpen;\n    const isEditingClosed = this.isEditingClosed;\n    if (!(isDrawing || isEditingOpen || isEditingClosed)) {\n      this.renderContour(enabledElement, svgDrawingHelper, annotation);\n    } else {\n      const activeAnnotationUID = this.commonData.annotation.annotationUID;\n      if (annotation.annotationUID === activeAnnotationUID) {\n        if (isDrawing) {\n          this.renderContourBeingDrawn(enabledElement, svgDrawingHelper, annotation);\n        } else if (isEditingClosed) {\n          this.renderClosedContourBeingEdited(enabledElement, svgDrawingHelper, annotation);\n        } else if (isEditingOpen) {\n          this.renderOpenContourBeingEdited(enabledElement, svgDrawingHelper, annotation);\n        } else {\n          throw new Error(`Unknown ${this.getToolName()} annotation rendering state`);\n        }\n      } else {\n        this.renderContour(enabledElement, svgDrawingHelper, annotation);\n      }\n      renderStatus = true;\n    }\n    if (!this.configuration.calculateStats) {\n      return;\n    }\n    this._calculateStatsIfActive(annotation, targetId, viewport, renderingEngine, enabledElement);\n    this._renderStats(annotation, viewport, enabledElement, svgDrawingHelper);\n    return renderStatus;\n  }\n  _calculateStatsIfActive(annotation, targetId, viewport, renderingEngine, enabledElement) {\n    const activeAnnotationUID = this.commonData?.annotation.annotationUID;\n    if (annotation.annotationUID === activeAnnotationUID && !this.commonData?.movingTextBox) {\n      return;\n    }\n    if (!this.commonData?.movingTextBox) {\n      const {\n        data\n      } = annotation;\n      if (!data.cachedStats[targetId] || data.cachedStats[targetId].areaUnit == null) {\n        data.cachedStats[targetId] = {\n          Modality: null,\n          area: null,\n          max: null,\n          mean: null,\n          stdDev: null,\n          areaUnit: null\n        };\n        this._calculateCachedStats(annotation, viewport, renderingEngine, enabledElement);\n      } else if (annotation.invalidated) {\n        this._throttledCalculateCachedStats(annotation, viewport, renderingEngine, enabledElement);\n      }\n    }\n  }\n}\nfunction defaultGetTextLines(data, targetId) {\n  const cachedVolumeStats = data.cachedStats[targetId];\n  const {\n    area,\n    mean,\n    stdDev,\n    max,\n    isEmptyArea,\n    areaUnit,\n    modalityUnit\n  } = cachedVolumeStats;\n  const textLines = [];\n  if (area) {\n    const areaLine = isEmptyArea ? `Area: Oblique not supported` : `Area: ${roundNumber(area)} ${areaUnit}`;\n    textLines.push(areaLine);\n  }\n  if (mean) {\n    textLines.push(`Mean: ${roundNumber(mean)} ${modalityUnit}`);\n  }\n  if (max) {\n    textLines.push(`Max: ${roundNumber(max)} ${modalityUnit}`);\n  }\n  if (stdDev) {\n    textLines.push(`Std Dev: ${roundNumber(stdDev)} ${modalityUnit}`);\n  }\n  return textLines;\n}\nPlanarFreehandROITool.toolName = 'PlanarFreehandROI';\nexport default PlanarFreehandROITool;","map":{"version":3,"names":["CONSTANTS","getEnabledElement","triggerEvent","eventTarget","VolumeViewport","utilities","csUtils","vec3","getCalibratedAreaUnits","getCalibratedScale","roundNumber","Events","polyline","filterAnnotationsForDisplay","throttle","getViewportIdsWithToolToRender","triggerAnnotationRenderForViewportIds","registerDrawLoop","registerEditLoopCommon","registerClosedContourEditLoop","registerOpenContourEditLoop","registerOpenContourEndEditLoop","registerRenderMethods","drawLinkedTextBox","getTextBoxCoordsCanvas","getIntersectionCoordinatesWithPolyline","pointInShapeCallback","isViewportPreScaled","getModalityUnit","BasicStatsCalculator","ContourSegmentationBaseTool","pointCanProjectOnLine","EPSILON","PARALLEL_THRESHOLD","PlanarFreehandROITool","constructor","toolProps","defaultToolProps","supportedInteractionTypes","configuration","shadow","preventHandleOutsideImage","alwaysRenderOpenContourHandles","enabled","radius","allowOpenContours","closeContourProximity","checkCanvasEditFallbackProximity","subPixelResolution","interpolation","interpolateOnAdd","interpolateOnEdit","knotsRatioPercentageOnAdd","knotsRatioPercentageOnEdit","calculateStats","getTextLines","defaultGetTextLines","statsCalculator","isDrawing","isEditingClosed","isEditingOpen","addNewAnnotation","evt","eventDetail","detail","element","enabledElement","renderingEngine","annotation","createAnnotation","addAnnotation","viewportIdsToRender","getToolName","activateDraw","preventDefault","handleSelectedCallback","handle","activateOpenContourEndEdit","toolSelectedCallback","data","contour","closed","activateClosedContourEdit","activateOpenContourEdit","isPointNearTool","canvasCoords","proximity","viewport","points","previousPoint","worldToCanvas","i","length","p1","p2","canProject","pStart","pEnd","cancel","cancelDrawing","cancelOpenContourEdit","cancelClosedContourEdit","triggerAnnotationModified","viewportId","renderingEngineId","eventType","ANNOTATION_MODIFIED","triggerAnnotationCompleted","ANNOTATION_COMPLETED","_calculateCachedStats","cachedStats","targetIds","Object","keys","targetId","image","getTargetIdImage","imageData","metadata","canvasCoordinates","map","p","canvasPoint","originalWorldPoint","canvasToWorld","deltaXPoint","deltaYPoint","deltaInX","distance","deltaInY","scale","area","calculateAreaOfPoints","worldPosIndex","transformWorldToIndex","Math","floor","iMin","iMax","jMin","jMax","kMin","kMax","j","min","max","iDelta","jDelta","kDelta","ceil","boundsIJK","worldPosEnd","indexToWorld","canvasPosEnd","curRow","intersections","intersectionCounter","pointsInShape","pointLPS","pointIJK","result","point","sort","index","a","b","shift","statsCallback","modalityUnitOptions","isPreScaled","isSuvScaled","referencedImageId","modalityUnit","Modality","stats","getStatistics","mean","value","stdDev","statsArray","areaUnit","invalidated","_renderStats","svgDrawingHelper","getTargetId","styleSpecifier","toolGroupId","toolName","id","options","getLinkedTextBoxStyle","visibility","textLines","handles","textBox","hasMoved","canvasTextBoxCoords","worldPosition","textBoxPosition","textBoxUID","boundingBox","annotationUID","x","left","y","top","width","height","worldBoundingBox","topLeft","topRight","bottomLeft","bottomRight","_throttledCalculateCachedStats","trailing","filterInteractableAnnotationsForElement","annotations","annotationsToDisplay","camera","getCamera","spacingInNormalDirection","getTargetVolumeAndSpacingInNormalDir","filterAnnotationsWithinSlice","viewPlaneNormal","annotationsWithParallelNormals","filter","td","annotationViewPlaneNormal","isParallel","abs","dot","halfSpacingInNormalDirection","focalPoint","annotationsWithinSlice","isVisible","dir","create","sub","push","isContourSegmentationTool","worldPos","currentPoints","world","contourAnnotation","deepMerge","label","getAnnotationStyle","context","renderAnnotationInstance","renderContext","annotationStyle","renderStatus","renderContour","activeAnnotationUID","commonData","renderContourBeingDrawn","renderClosedContourBeingEdited","renderOpenContourBeingEdited","Error","_calculateStatsIfActive","movingTextBox","cachedVolumeStats","isEmptyArea","areaLine"],"sources":["../../../../src/tools/annotation/PlanarFreehandROITool.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}