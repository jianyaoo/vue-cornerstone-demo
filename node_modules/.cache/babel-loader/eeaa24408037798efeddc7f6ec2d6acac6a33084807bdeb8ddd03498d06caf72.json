{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport LookupTable from './lookupTable';\nimport CPU_COLORMAPS from '../../../../constants/cpuColormaps';\nconst COLOR_TRANSPARENT = [0, 0, 0, 0];\nfunction linspace(a, b, n) {\n  n = n === null ? 100 : n;\n  const increment = (b - a) / (n - 1);\n  const vector = [];\n  while (n-- > 0) {\n    vector.push(a);\n    a += increment;\n  }\n  vector[vector.length - 1] = b;\n  return vector;\n}\nfunction getRank(array, elem) {\n  let left = 0;\n  let right = array.length - 1;\n  while (left <= right) {\n    const mid = left + Math.floor((right - left) / 2);\n    const midElem = array[mid];\n    if (midElem === elem) {\n      return mid;\n    } else if (elem < midElem) {\n      right = mid - 1;\n    } else {\n      left = mid + 1;\n    }\n  }\n  return left;\n}\nfunction searchSorted(inputArray, values) {\n  let i;\n  const indexes = [];\n  const len = values.length;\n  inputArray.sort(function (a, b) {\n    return a - b;\n  });\n  for (i = 0; i < len; i++) {\n    indexes[i] = getRank(inputArray, values[i]);\n  }\n  return indexes;\n}\nfunction makeMappingArray(N, data, gamma) {\n  let i;\n  const x = [];\n  const y0 = [];\n  const y1 = [];\n  const lut = [];\n  gamma = gamma === null ? 1 : gamma;\n  for (i = 0; i < data.length; i++) {\n    const element = data[i];\n    x.push((N - 1) * element[0]);\n    y0.push(element[1]);\n    y1.push(element[1]);\n  }\n  const xLinSpace = linspace(0, 1, N);\n  for (i = 0; i < N; i++) {\n    xLinSpace[i] = (N - 1) * Math.pow(xLinSpace[i], gamma);\n  }\n  const xLinSpaceIndexes = searchSorted(x, xLinSpace);\n  for (i = 1; i < N - 1; i++) {\n    const index = xLinSpaceIndexes[i];\n    const colorPercent = (xLinSpace[i] - x[index - 1]) / (x[index] - x[index - 1]);\n    const colorDelta = y0[index] - y1[index - 1];\n    lut[i] = colorPercent * colorDelta + y1[index - 1];\n  }\n  lut[0] = y1[0];\n  lut[N - 1] = y0[data.length - 1];\n  return lut;\n}\nfunction createLinearSegmentedColormap(segmentedData, N, gamma) {\n  let i;\n  const lut = [];\n  N = N === null ? 256 : N;\n  gamma = gamma === null ? 1 : gamma;\n  const redLut = makeMappingArray(N, segmentedData.red, gamma);\n  const greenLut = makeMappingArray(N, segmentedData.green, gamma);\n  const blueLut = makeMappingArray(N, segmentedData.blue, gamma);\n  for (i = 0; i < N; i++) {\n    const red = Math.round(redLut[i] * 255);\n    const green = Math.round(greenLut[i] * 255);\n    const blue = Math.round(blueLut[i] * 255);\n    const rgba = [red, green, blue, 255];\n    lut.push(rgba);\n  }\n  return lut;\n}\nexport function getColormapsList() {\n  const colormaps = [];\n  const keys = Object.keys(CPU_COLORMAPS);\n  keys.forEach(function (key) {\n    if (CPU_COLORMAPS.hasOwnProperty(key)) {\n      const colormap = CPU_COLORMAPS[key];\n      colormaps.push({\n        id: key,\n        name: colormap.name\n      });\n    }\n  });\n  colormaps.sort(function (a, b) {\n    const aName = a.name.toLowerCase();\n    const bName = b.name.toLowerCase();\n    if (aName === bName) {\n      return 0;\n    }\n    return aName < bName ? -1 : 1;\n  });\n  return colormaps;\n}\nexport function getColormap(id, colormapData) {\n  let colormap = CPU_COLORMAPS[id];\n  if (!colormap) {\n    colormap = CPU_COLORMAPS[id] = colormapData || {\n      name: '',\n      colors: []\n    };\n  }\n  if (!colormap.colors && colormap.segmentedData) {\n    colormap.colors = createLinearSegmentedColormap(colormap.segmentedData, colormap.numColors, colormap.gamma);\n  }\n  const cpuFallbackColormap = {\n    getId() {\n      return id;\n    },\n    getColorSchemeName() {\n      return colormap.name;\n    },\n    setColorSchemeName(name) {\n      colormap.name = name;\n    },\n    getNumberOfColors() {\n      return colormap.colors.length;\n    },\n    setNumberOfColors(numColors) {\n      while (colormap.colors.length < numColors) {\n        colormap.colors.push(COLOR_TRANSPARENT);\n      }\n      colormap.colors.length = numColors;\n    },\n    getColor(index) {\n      if (this.isValidIndex(index)) {\n        return colormap.colors[index];\n      }\n      return COLOR_TRANSPARENT;\n    },\n    getColorRepeating(index) {\n      const numColors = colormap.colors.length;\n      index = numColors ? index % numColors : 0;\n      return this.getColor(index);\n    },\n    setColor(index, rgba) {\n      if (this.isValidIndex(index)) {\n        colormap.colors[index] = rgba;\n      }\n    },\n    addColor(rgba) {\n      colormap.colors.push(rgba);\n    },\n    insertColor(index, rgba) {\n      if (this.isValidIndex(index)) {\n        colormap.colors.splice(index, 1, rgba);\n      }\n    },\n    removeColor(index) {\n      if (this.isValidIndex(index)) {\n        colormap.colors.splice(index, 1);\n      }\n    },\n    clearColors() {\n      colormap.colors = [];\n    },\n    buildLookupTable(lut) {\n      if (!lut) {\n        return;\n      }\n      const numColors = colormap.colors.length;\n      lut.setNumberOfTableValues(numColors);\n      for (let i = 0; i < numColors; i++) {\n        lut.setTableValue(i, colormap.colors[i]);\n      }\n    },\n    createLookupTable() {\n      const lut = new LookupTable();\n      this.buildLookupTable(lut);\n      return lut;\n    },\n    isValidIndex(index) {\n      return index >= 0 && index < colormap.colors.length;\n    }\n  };\n  return cpuFallbackColormap;\n}","map":{"version":3,"names":["LookupTable","CPU_COLORMAPS","COLOR_TRANSPARENT","linspace","a","b","n","increment","vector","push","length","getRank","array","elem","left","right","mid","Math","floor","midElem","searchSorted","inputArray","values","i","indexes","len","sort","makeMappingArray","N","data","gamma","x","y0","y1","lut","element","xLinSpace","pow","xLinSpaceIndexes","index","colorPercent","colorDelta","createLinearSegmentedColormap","segmentedData","redLut","red","greenLut","green","blueLut","blue","round","rgba","getColormapsList","colormaps","keys","Object","forEach","key","hasOwnProperty","colormap","id","name","aName","toLowerCase","bName","getColormap","colormapData","colors","numColors","cpuFallbackColormap","getId","getColorSchemeName","setColorSchemeName","getNumberOfColors","setNumberOfColors","getColor","isValidIndex","getColorRepeating","setColor","addColor","insertColor","splice","removeColor","clearColors","buildLookupTable","setNumberOfTableValues","setTableValue","createLookupTable"],"sources":["../../../../../../src/RenderingEngine/helpers/cpuFallback/colors/colormap.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}