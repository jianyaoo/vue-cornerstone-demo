{"ast":null,"code":"import { vec2, vec3 } from 'gl-matrix';\nimport { getEnabledElement, eventTarget, utilities as csUtils } from '@cornerstonejs/core';\nimport { SegmentationRepresentations, ToolModes, Events as cstEvents } from '../enums';\nimport { ToolGroupManager, state } from '../store';\nimport { debounce } from '../utilities';\nimport { segmentation } from '..';\nimport { AnnotationTool, AdvancedMagnifyTool, SegmentationDisplayTool } from './';\nimport { distanceToPoint } from '../utilities/math/point';\nconst MAGNIFY_CLASSNAME = 'advancedMagnifyTool';\nconst MAGNIFY_VIEWPORT_INITIAL_RADIUS = 125;\nconst isSegmentation = actor => actor.uid !== actor.referenceId;\nclass AdvancedMagnifyViewport {\n  constructor({\n    magnifyViewportId,\n    sourceEnabledElement,\n    radius = MAGNIFY_VIEWPORT_INITIAL_RADIUS,\n    position = [0, 0],\n    zoomFactor,\n    autoPan\n  }) {\n    this._enabledElement = null;\n    this._sourceToolGroup = null;\n    this._magnifyToolGroup = null;\n    this._isViewportReady = false;\n    this._radius = 0;\n    this._resized = false;\n    this._canAutoPan = false;\n    this._viewportId = magnifyViewportId ?? csUtils.uuidv4();\n    this._sourceEnabledElement = sourceEnabledElement;\n    this._autoPan = autoPan;\n    this.radius = radius;\n    this.position = position;\n    this.zoomFactor = zoomFactor;\n    this.visible = true;\n    this._browserMouseDownCallback = this._browserMouseDownCallback.bind(this);\n    this._browserMouseUpCallback = this._browserMouseUpCallback.bind(this);\n    this._handleToolModeChanged = this._handleToolModeChanged.bind(this);\n    this._mouseDragCallback = this._mouseDragCallback.bind(this);\n    this._resizeViewportAsync = debounce(this._resizeViewport.bind(this), 1);\n    this._initialize();\n  }\n  get sourceEnabledElement() {\n    return this._sourceEnabledElement;\n  }\n  get viewportId() {\n    return this._viewportId;\n  }\n  get radius() {\n    return this._radius;\n  }\n  set radius(radius) {\n    if (Math.abs(this._radius - radius) > 0.00001) {\n      this._radius = radius;\n      this._resized = true;\n    }\n  }\n  update() {\n    const {\n      radius,\n      position,\n      visible\n    } = this;\n    const {\n      viewport\n    } = this._enabledElement;\n    const {\n      element\n    } = viewport;\n    const size = 2 * radius;\n    const [x, y] = position;\n    if (this._resized) {\n      this._resizeViewportAsync();\n      this._resized = false;\n    }\n    Object.assign(element.style, {\n      display: visible ? 'block' : 'hidden',\n      width: `${size}px`,\n      height: `${size}px`,\n      left: `${-radius}px`,\n      top: `${-radius}px`,\n      transform: `translate(${x}px, ${y}px)`\n    });\n    if (this._isViewportReady) {\n      this._syncViewports();\n      viewport.render();\n    }\n  }\n  dispose() {\n    const {\n      viewport\n    } = this._enabledElement;\n    const {\n      element\n    } = viewport;\n    const renderingEngine = viewport.getRenderingEngine();\n    this._removeEventListeners(element);\n    renderingEngine.disableElement(viewport.id);\n    if (element.parentNode) {\n      element.parentNode.removeChild(element);\n    }\n  }\n  _handleToolModeChanged(evt) {\n    const {\n      _magnifyToolGroup: magnifyToolGroup\n    } = this;\n    const {\n      toolGroupId,\n      toolName,\n      mode,\n      toolBindingsOptions\n    } = evt.detail;\n    if (this._sourceToolGroup?.id !== toolGroupId) {\n      return;\n    }\n    switch (mode) {\n      case ToolModes.Active:\n        magnifyToolGroup.setToolActive(toolName, toolBindingsOptions);\n        break;\n      case ToolModes.Passive:\n        magnifyToolGroup.setToolPassive(toolName);\n        break;\n      case ToolModes.Enabled:\n        magnifyToolGroup.setToolEnabled(toolName);\n        break;\n      case ToolModes.Disabled:\n        magnifyToolGroup.setToolDisabled(toolName);\n        break;\n      default:\n        throw new Error(`Unknow tool mode (${mode})`);\n    }\n  }\n  _inheritBorderRadius(magnifyElement) {\n    const viewport = magnifyElement.querySelector('.viewport-element');\n    const canvas = magnifyElement.querySelector('.cornerstone-canvas');\n    viewport.style.borderRadius = 'inherit';\n    canvas.style.borderRadius = 'inherit';\n  }\n  _createViewportNode() {\n    const magnifyElement = document.createElement('div');\n    const {\n      radius\n    } = this;\n    const size = radius * 2;\n    magnifyElement.classList.add(MAGNIFY_CLASSNAME);\n    Object.assign(magnifyElement.style, {\n      display: 'block',\n      width: `${size}px`,\n      height: `${size}px`,\n      position: 'absolute',\n      overflow: 'hidden',\n      borderRadius: '50%',\n      boxSizing: 'border-box',\n      left: `${-radius}px`,\n      top: `${-radius}px`,\n      transform: `translate(-1000px, -1000px)`\n    });\n    return magnifyElement;\n  }\n  _convertZoomFactorToParalellScale(viewport, magnifyViewport, zoomFactor) {\n    const {\n      parallelScale\n    } = viewport.getCamera();\n    const canvasRatio = magnifyViewport.canvas.offsetWidth / viewport.canvas.offsetWidth;\n    return parallelScale * (1 / zoomFactor) * canvasRatio;\n  }\n  _isStackViewport(viewport) {\n    return 'setStack' in viewport;\n  }\n  _isVolumeViewport(viewport) {\n    return 'addVolumes' in viewport;\n  }\n  _cloneToolGroups(sourceViewport, magnifyViewport) {\n    const sourceActors = sourceViewport.getActors();\n    const magnifyToolGroupId = `${magnifyViewport.id}-toolGroup`;\n    const sourceToolGroup = ToolGroupManager.getToolGroupForViewport(sourceViewport.id, sourceViewport.renderingEngineId);\n    const magnifyToolGroup = sourceToolGroup.clone(magnifyToolGroupId, toolName => {\n      const toolInstance = sourceToolGroup.getToolInstance(toolName);\n      const isAnnotationTool = toolInstance instanceof AnnotationTool && !(toolInstance instanceof AdvancedMagnifyTool);\n      return isAnnotationTool || toolName === SegmentationDisplayTool.toolName;\n    });\n    magnifyToolGroup.addViewport(magnifyViewport.id, magnifyViewport.renderingEngineId);\n    sourceActors.filter(isSegmentation).forEach(actor => {\n      segmentation.addSegmentationRepresentations(magnifyToolGroupId, [{\n        segmentationId: actor.referenceId,\n        type: SegmentationRepresentations.Labelmap\n      }]);\n    });\n    return {\n      sourceToolGroup,\n      magnifyToolGroup\n    };\n  }\n  _cloneStack(sourceViewport, magnifyViewport) {\n    const imageIds = sourceViewport.getImageIds();\n    magnifyViewport.setStack(imageIds).then(() => {\n      this._isViewportReady = true;\n      this.update();\n    });\n  }\n  _cloneVolumes(sourceViewport, magnifyViewport) {\n    const actors = sourceViewport.getActors();\n    const volumeInputArray = actors.filter(actor => !isSegmentation(actor)).map(actor => ({\n      volumeId: actor.uid\n    }));\n    magnifyViewport.setVolumes(volumeInputArray).then(() => {\n      this._isViewportReady = true;\n      this.update();\n    });\n    return magnifyViewport;\n  }\n  _cloneViewport(sourceViewport, magnifyElement) {\n    const {\n      viewportId: magnifyViewportId\n    } = this;\n    const renderingEngine = sourceViewport.getRenderingEngine();\n    const {\n      options: sourceViewportOptions\n    } = sourceViewport;\n    const viewportInput = {\n      element: magnifyElement,\n      viewportId: magnifyViewportId,\n      type: sourceViewport.type,\n      defaultOptions: {\n        ...sourceViewportOptions\n      }\n    };\n    renderingEngine.enableElement(viewportInput);\n    const magnifyViewport = renderingEngine.getViewport(magnifyViewportId);\n    if (this._isStackViewport(sourceViewport)) {\n      this._cloneStack(sourceViewport, magnifyViewport);\n    } else if (this._isVolumeViewport(sourceViewport)) {\n      this._cloneVolumes(sourceViewport, magnifyViewport);\n    }\n    this._inheritBorderRadius(magnifyElement);\n    const toolGroups = this._cloneToolGroups(sourceViewport, magnifyViewport);\n    this._sourceToolGroup = toolGroups.sourceToolGroup;\n    this._magnifyToolGroup = toolGroups.magnifyToolGroup;\n  }\n  _cancelMouseEventCallback(evt) {\n    evt.stopPropagation();\n    evt.preventDefault();\n  }\n  _browserMouseUpCallback(evt) {\n    const {\n      element\n    } = this._enabledElement.viewport;\n    document.removeEventListener('mouseup', this._browserMouseUpCallback);\n    element.addEventListener('mouseup', this._cancelMouseEventCallback);\n    element.addEventListener('mousemove', this._cancelMouseEventCallback);\n  }\n  _browserMouseDownCallback(evt) {\n    const {\n      element\n    } = this._enabledElement.viewport;\n    this._canAutoPan = !!evt.target?.closest('.advancedMagnifyTool');\n    document.addEventListener('mouseup', this._browserMouseUpCallback);\n    element.removeEventListener('mouseup', this._cancelMouseEventCallback);\n    element.removeEventListener('mousemove', this._cancelMouseEventCallback);\n  }\n  _mouseDragCallback(evt) {\n    if (!state.isInteractingWithTool) {\n      return;\n    }\n    const {\n      _autoPan: autoPan\n    } = this;\n    if (!autoPan.enabled || !this._canAutoPan) {\n      return;\n    }\n    const {\n      currentPoints\n    } = evt.detail;\n    const {\n      viewport\n    } = this._enabledElement;\n    const {\n      canvasToWorld\n    } = viewport;\n    const {\n      canvas: canvasCurrent\n    } = currentPoints;\n    const {\n      radius: magnifyRadius\n    } = this;\n    const canvasCenter = [magnifyRadius, magnifyRadius];\n    const dist = distanceToPoint(canvasCenter, canvasCurrent);\n    const maxDist = magnifyRadius - autoPan.padding;\n    if (dist <= maxDist) {\n      return;\n    }\n    const panDist = dist - maxDist;\n    const canvasDeltaPos = vec2.sub(vec2.create(), canvasCurrent, canvasCenter);\n    vec2.normalize(canvasDeltaPos, canvasDeltaPos);\n    vec2.scale(canvasDeltaPos, canvasDeltaPos, panDist);\n    const newCanvasPosition = vec2.add(vec2.create(), this.position, canvasDeltaPos);\n    const currentWorldPos = canvasToWorld(this.position);\n    const newWorldPos = canvasToWorld(newCanvasPosition);\n    const worldDeltaPos = vec3.sub(vec3.create(), newWorldPos, currentWorldPos);\n    const autoPanCallbackData = {\n      points: {\n        currentPosition: {\n          canvas: this.position,\n          world: currentWorldPos\n        },\n        newPosition: {\n          canvas: newCanvasPosition,\n          world: newWorldPos\n        }\n      },\n      delta: {\n        canvas: canvasDeltaPos,\n        world: worldDeltaPos\n      }\n    };\n    autoPan.callback(autoPanCallbackData);\n  }\n  _addBrowserEventListeners(element) {\n    document.addEventListener('mousedown', this._browserMouseDownCallback, true);\n    element.addEventListener('mousedown', this._cancelMouseEventCallback);\n    element.addEventListener('mouseup', this._cancelMouseEventCallback);\n    element.addEventListener('mousemove', this._cancelMouseEventCallback);\n    element.addEventListener('dblclick', this._cancelMouseEventCallback);\n  }\n  _removeBrowserEventListeners(element) {\n    document.removeEventListener('mousedown', this._browserMouseDownCallback, true);\n    document.removeEventListener('mouseup', this._browserMouseUpCallback);\n    element.removeEventListener('mousedown', this._cancelMouseEventCallback);\n    element.removeEventListener('mouseup', this._cancelMouseEventCallback);\n    element.removeEventListener('mousemove', this._cancelMouseEventCallback);\n    element.removeEventListener('dblclick', this._cancelMouseEventCallback);\n  }\n  _addEventListeners(element) {\n    eventTarget.addEventListener(cstEvents.TOOL_MODE_CHANGED, this._handleToolModeChanged);\n    element.addEventListener(cstEvents.MOUSE_MOVE, this._mouseDragCallback);\n    element.addEventListener(cstEvents.MOUSE_DRAG, this._mouseDragCallback);\n    this._addBrowserEventListeners(element);\n  }\n  _removeEventListeners(element) {\n    eventTarget.removeEventListener(cstEvents.TOOL_MODE_CHANGED, this._handleToolModeChanged);\n    element.addEventListener(cstEvents.MOUSE_MOVE, this._mouseDragCallback);\n    element.addEventListener(cstEvents.MOUSE_DRAG, this._mouseDragCallback);\n    this._removeBrowserEventListeners(element);\n  }\n  _initialize() {\n    const {\n      _sourceEnabledElement: sourceEnabledElement\n    } = this;\n    const {\n      viewport: sourceViewport\n    } = sourceEnabledElement;\n    const {\n      canvas: sourceCanvas\n    } = sourceViewport;\n    const magnifyElement = this._createViewportNode();\n    sourceCanvas.parentNode.appendChild(magnifyElement);\n    this._addEventListeners(magnifyElement);\n    this._cloneViewport(sourceViewport, magnifyElement);\n    this._enabledElement = getEnabledElement(magnifyElement);\n  }\n  _syncViewportsCameras(sourceViewport, magnifyViewport) {\n    const worldPos = sourceViewport.canvasToWorld(this.position);\n    const parallelScale = this._convertZoomFactorToParalellScale(sourceViewport, magnifyViewport, this.zoomFactor);\n    const {\n      focalPoint,\n      position,\n      viewPlaneNormal\n    } = magnifyViewport.getCamera();\n    const distance = Math.sqrt(Math.pow(focalPoint[0] - position[0], 2) + Math.pow(focalPoint[1] - position[1], 2) + Math.pow(focalPoint[2] - position[2], 2));\n    const updatedFocalPoint = [worldPos[0], worldPos[1], worldPos[2]];\n    const updatedPosition = [updatedFocalPoint[0] + distance * viewPlaneNormal[0], updatedFocalPoint[1] + distance * viewPlaneNormal[1], updatedFocalPoint[2] + distance * viewPlaneNormal[2]];\n    magnifyViewport.setCamera({\n      parallelScale,\n      focalPoint: updatedFocalPoint,\n      position: updatedPosition\n    });\n  }\n  _syncStackViewports(sourceViewport, magnifyViewport) {\n    magnifyViewport.setImageIdIndex(sourceViewport.getCurrentImageIdIndex());\n  }\n  _syncViewports() {\n    const {\n      viewport: sourceViewport\n    } = this._sourceEnabledElement;\n    const {\n      viewport: magnifyViewport\n    } = this._enabledElement;\n    const sourceProperties = sourceViewport.getProperties();\n    magnifyViewport.setProperties(sourceProperties);\n    this._syncViewportsCameras(sourceViewport, magnifyViewport);\n    if (this._isStackViewport(sourceViewport)) {\n      this._syncStackViewports(sourceViewport, magnifyViewport);\n    }\n  }\n  _resizeViewport() {\n    const {\n      viewport\n    } = this._enabledElement;\n    const renderingEngine = viewport.getRenderingEngine();\n    renderingEngine.resize();\n  }\n}\nexport { AdvancedMagnifyViewport as default, AdvancedMagnifyViewport };","map":{"version":3,"names":["vec2","vec3","getEnabledElement","eventTarget","utilities","csUtils","SegmentationRepresentations","ToolModes","Events","cstEvents","ToolGroupManager","state","debounce","segmentation","AnnotationTool","AdvancedMagnifyTool","SegmentationDisplayTool","distanceToPoint","MAGNIFY_CLASSNAME","MAGNIFY_VIEWPORT_INITIAL_RADIUS","isSegmentation","actor","uid","referenceId","AdvancedMagnifyViewport","constructor","magnifyViewportId","sourceEnabledElement","radius","position","zoomFactor","autoPan","_enabledElement","_sourceToolGroup","_magnifyToolGroup","_isViewportReady","_radius","_resized","_canAutoPan","_viewportId","uuidv4","_sourceEnabledElement","_autoPan","visible","_browserMouseDownCallback","bind","_browserMouseUpCallback","_handleToolModeChanged","_mouseDragCallback","_resizeViewportAsync","_resizeViewport","_initialize","viewportId","Math","abs","update","viewport","element","size","x","y","Object","assign","style","display","width","height","left","top","transform","_syncViewports","render","dispose","renderingEngine","getRenderingEngine","_removeEventListeners","disableElement","id","parentNode","removeChild","evt","magnifyToolGroup","toolGroupId","toolName","mode","toolBindingsOptions","detail","Active","setToolActive","Passive","setToolPassive","Enabled","setToolEnabled","Disabled","setToolDisabled","Error","_inheritBorderRadius","magnifyElement","querySelector","canvas","borderRadius","_createViewportNode","document","createElement","classList","add","overflow","boxSizing","_convertZoomFactorToParalellScale","magnifyViewport","parallelScale","getCamera","canvasRatio","offsetWidth","_isStackViewport","_isVolumeViewport","_cloneToolGroups","sourceViewport","sourceActors","getActors","magnifyToolGroupId","sourceToolGroup","getToolGroupForViewport","renderingEngineId","clone","toolInstance","getToolInstance","isAnnotationTool","addViewport","filter","forEach","addSegmentationRepresentations","segmentationId","type","Labelmap","_cloneStack","imageIds","getImageIds","setStack","then","_cloneVolumes","actors","volumeInputArray","map","volumeId","setVolumes","_cloneViewport","options","sourceViewportOptions","viewportInput","defaultOptions","enableElement","getViewport","toolGroups","_cancelMouseEventCallback","stopPropagation","preventDefault","removeEventListener","addEventListener","target","closest","isInteractingWithTool","enabled","currentPoints","canvasToWorld","canvasCurrent","magnifyRadius","canvasCenter","dist","maxDist","padding","panDist","canvasDeltaPos","sub","create","normalize","scale","newCanvasPosition","currentWorldPos","newWorldPos","worldDeltaPos","autoPanCallbackData","points","currentPosition","world","newPosition","delta","callback","_addBrowserEventListeners","_removeBrowserEventListeners","_addEventListeners","TOOL_MODE_CHANGED","MOUSE_MOVE","MOUSE_DRAG","sourceCanvas","appendChild","_syncViewportsCameras","worldPos","focalPoint","viewPlaneNormal","distance","sqrt","pow","updatedFocalPoint","updatedPosition","setCamera","_syncStackViewports","setImageIdIndex","getCurrentImageIdIndex","sourceProperties","getProperties","setProperties","resize","default"],"sources":["../../../src/tools/AdvancedMagnifyViewport.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}