{"ast":null,"code":"import \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport { getEnabledElement, Enums, VolumeViewport3D } from '@cornerstonejs/core';\nimport vtkMapper from '@kitware/vtk.js/Rendering/Core/Mapper';\nimport vtkActor from '@kitware/vtk.js/Rendering/Core/Actor';\nimport vtkClipClosedSurface from '@kitware/vtk.js/Filters/General/ClipClosedSurface';\nimport vtkPolyData from '@kitware/vtk.js/Common/DataModel/PolyData';\nimport vtkCellArray from '@kitware/vtk.js/Common/Core/CellArray';\nimport { pointToString } from '../../../utilities/pointToString';\nconst polyDataCache = new Map();\nfunction addSurfaceToElement(element, surface, actorUID) {\n  const enabledElement = getEnabledElement(element);\n  const {\n    viewport\n  } = enabledElement;\n  const points = surface.getPoints();\n  const polys = surface.getPolys();\n  const color = surface.getColor();\n  const polyData = vtkPolyData.newInstance();\n  polyData.getPoints().setData(points, 3);\n  const triangles = vtkCellArray.newInstance({\n    values: Float32Array.from(polys)\n  });\n  polyData.setPolys(triangles);\n  const mapper = vtkMapper.newInstance({});\n  let clippingFilter;\n  if (!(viewport instanceof VolumeViewport3D)) {\n    clippingFilter = vtkClipClosedSurface.newInstance({\n      clippingPlanes: [],\n      activePlaneId: 2,\n      passPointData: false\n    });\n    clippingFilter.setInputData(polyData);\n    clippingFilter.setGenerateOutline(true);\n    clippingFilter.setGenerateFaces(false);\n    clippingFilter.update();\n    const filteredData = clippingFilter.getOutputData();\n    mapper.setInputData(filteredData);\n  } else {\n    mapper.setInputData(polyData);\n  }\n  const actor = vtkActor.newInstance();\n  actor.setMapper(mapper);\n  actor.getProperty().setColor(color[0] / 255, color[1] / 255, color[2] / 255);\n  viewport.addActor({\n    actor,\n    uid: actorUID,\n    clippingFilter\n  });\n  element.addEventListener(Enums.Events.CLIPPING_PLANES_UPDATED, updateSurfacePlanes);\n}\nfunction updateSurfacePlanes(evt) {\n  const {\n    actorEntry,\n    vtkPlanes,\n    viewport\n  } = evt.detail;\n  if (!actorEntry?.clippingFilter) {\n    return;\n  }\n  const mapper = actorEntry.actor.getMapper();\n  const {\n    viewPlaneNormal\n  } = viewport.getCamera();\n  const imageIndex = viewport.getCurrentImageIdIndex();\n  const cacheId = `${viewport.id}-${pointToString(viewPlaneNormal)}-${imageIndex}`;\n  let actorCache = polyDataCache.get(actorEntry.uid);\n  if (!actorCache) {\n    actorCache = new Map();\n    polyDataCache.set(actorEntry.uid, actorCache);\n  }\n  let polyData = actorCache.get(cacheId);\n  if (!polyData) {\n    const clippingFilter = actorEntry.clippingFilter;\n    clippingFilter.setClippingPlanes(vtkPlanes);\n    try {\n      clippingFilter.update();\n      polyData = clippingFilter.getOutputData();\n      actorCache.set(cacheId, polyData);\n    } catch (e) {\n      console.error('Error clipping surface', e);\n    }\n  }\n  mapper.setInputData(polyData);\n}\nexport default addSurfaceToElement;","map":{"version":3,"names":["getEnabledElement","Enums","VolumeViewport3D","vtkMapper","vtkActor","vtkClipClosedSurface","vtkPolyData","vtkCellArray","pointToString","polyDataCache","Map","addSurfaceToElement","element","surface","actorUID","enabledElement","viewport","points","getPoints","polys","getPolys","color","getColor","polyData","newInstance","setData","triangles","values","Float32Array","from","setPolys","mapper","clippingFilter","clippingPlanes","activePlaneId","passPointData","setInputData","setGenerateOutline","setGenerateFaces","update","filteredData","getOutputData","actor","setMapper","getProperty","setColor","addActor","uid","addEventListener","Events","CLIPPING_PLANES_UPDATED","updateSurfacePlanes","evt","actorEntry","vtkPlanes","detail","getMapper","viewPlaneNormal","getCamera","imageIndex","getCurrentImageIdIndex","cacheId","id","actorCache","get","set","setClippingPlanes","e","console","error"],"sources":["../../../../../src/tools/displayTools/Surface/addSurfaceToElement.ts"],"sourcesContent":[null],"mappings":";;;AAAA,SACEA,iBAAiB,EACjBC,KAAK,EACLC,gBAAgB,QACX,qBAAqB;AAC5B,OAAOC,SAAS,MAAM,uCAAuC;AAC7D,OAAOC,QAAQ,MAAM,sCAAsC;AAC3D,OAAOC,oBAAoB,MAAM,mDAAmD;AACpF,OAAOC,WAAW,MAAM,2CAA2C;AACnE,OAAOC,YAAY,MAAM,uCAAuC;AAChE,SAASC,aAAa,QAAQ,kCAAkC;AAEhE,MAAMC,aAAa,GAAG,IAAIC,GAAG,EAAE;AAE/B,SAASC,mBAAmBA,CAC1BC,OAAuB,EACvBC,OAAY,EACZC,QAAgB;EAEhB,MAAMC,cAAc,GAAGf,iBAAiB,CAACY,OAAO,CAAC;EACjD,MAAM;IAAEI;EAAQ,CAAE,GAAGD,cAAc;EAKnC,MAAME,MAAM,GAAGJ,OAAO,CAACK,SAAS,EAAE;EAClC,MAAMC,KAAK,GAAGN,OAAO,CAACO,QAAQ,EAAE;EAChC,MAAMC,KAAK,GAAGR,OAAO,CAACS,QAAQ,EAAE;EAEhC,MAAMC,QAAQ,GAAGjB,WAAW,CAACkB,WAAW,EAAE;EAC1CD,QAAQ,CAACL,SAAS,EAAE,CAACO,OAAO,CAACR,MAAM,EAAE,CAAC,CAAC;EAEvC,MAAMS,SAAS,GAAGnB,YAAY,CAACiB,WAAW,CAAC;IACzCG,MAAM,EAAEC,YAAY,CAACC,IAAI,CAACV,KAAK;GAChC,CAAC;EACFI,QAAQ,CAACO,QAAQ,CAACJ,SAAS,CAAC;EAE5B,MAAMK,MAAM,GAAG5B,SAAS,CAACqB,WAAW,CAAC,EAAE,CAAC;EACxC,IAAIQ,cAAc;EAClB,IAAI,EAAEhB,QAAQ,YAAYd,gBAAgB,CAAC,EAAE;IAC3C8B,cAAc,GAAG3B,oBAAoB,CAACmB,WAAW,CAAC;MAChDS,cAAc,EAAE,EAAE;MAClBC,aAAa,EAAE,CAAC;MAChBC,aAAa,EAAE;KAChB,CAAC;IACFH,cAAc,CAACI,YAAY,CAACb,QAAQ,CAAC;IACrCS,cAAc,CAACK,kBAAkB,CAAC,IAAI,CAAC;IACvCL,cAAc,CAACM,gBAAgB,CAAC,KAAK,CAAC;IACtCN,cAAc,CAACO,MAAM,EAAE;IACvB,MAAMC,YAAY,GAAGR,cAAc,CAACS,aAAa,EAAE;IACnDV,MAAM,CAACK,YAAY,CAACI,YAAY,CAAC;GAClC,MAAM;IACLT,MAAM,CAACK,YAAY,CAACb,QAAQ,CAAC;;EAG/B,MAAMmB,KAAK,GAAGtC,QAAQ,CAACoB,WAAW,EAAE;EACpCkB,KAAK,CAACC,SAAS,CAACZ,MAAM,CAAC;EAGvBW,KAAK,CAACE,WAAW,EAAE,CAACC,QAAQ,CAACxB,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,EAAEA,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,EAAEA,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;EAC5EL,QAAQ,CAAC8B,QAAQ,CAAC;IAChBJ,KAAK;IACLK,GAAG,EAAEjC,QAAQ;IACbkB;GACD,CAAC;EAEFpB,OAAO,CAACoC,gBAAgB,CACtB/C,KAAK,CAACgD,MAAM,CAACC,uBAAuB,EACpCC,mBAAmB,CACpB;AACH;AAMA,SAASA,mBAAmBA,CAACC,GAAG;EAC9B,MAAM;IAAEC,UAAU;IAAEC,SAAS;IAAEtC;EAAQ,CAAE,GAAGoC,GAAG,CAACG,MAAM;EACtD,IAAI,CAACF,UAAU,EAAErB,cAAc,EAAE;IAC/B;;EAGF,MAAMD,MAAM,GAAGsB,UAAU,CAACX,KAAK,CAACc,SAAS,EAAE;EAE3C,MAAM;IAAEC;EAAe,CAAE,GAAGzC,QAAQ,CAAC0C,SAAS,EAAE;EAChD,MAAMC,UAAU,GAAG3C,QAAQ,CAAC4C,sBAAsB,EAAE;EAIpD,MAAMC,OAAO,GAAG,GAAG7C,QAAQ,CAAC8C,EAAE,IAAItD,aAAa,CAC7CiD,eAAe,CAChB,IAAIE,UAAU,EAAE;EAEjB,IAAII,UAAU,GAAGtD,aAAa,CAACuD,GAAG,CAACX,UAAU,CAACN,GAAG,CAAC;EAClD,IAAI,CAACgB,UAAU,EAAE;IACfA,UAAU,GAAG,IAAIrD,GAAG,EAAE;IACtBD,aAAa,CAACwD,GAAG,CAACZ,UAAU,CAACN,GAAG,EAAEgB,UAAU,CAAC;;EAG/C,IAAIxC,QAAQ,GAAGwC,UAAU,CAACC,GAAG,CAACH,OAAO,CAAC;EACtC,IAAI,CAACtC,QAAQ,EAAE;IACb,MAAMS,cAAc,GAAGqB,UAAU,CAACrB,cAAc;IAChDA,cAAc,CAACkC,iBAAiB,CAACZ,SAAS,CAAC;IAC3C,IAAI;MACFtB,cAAc,CAACO,MAAM,EAAE;MACvBhB,QAAQ,GAAGS,cAAc,CAACS,aAAa,EAAE;MACzCsB,UAAU,CAACE,GAAG,CAACJ,OAAO,EAAEtC,QAAQ,CAAC;KAClC,CAAC,OAAO4C,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,CAAC,CAAC;;;EAG9CpC,MAAM,CAACK,YAAY,CAACb,QAAQ,CAAC;AAC/B;AAEA,eAAeZ,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}