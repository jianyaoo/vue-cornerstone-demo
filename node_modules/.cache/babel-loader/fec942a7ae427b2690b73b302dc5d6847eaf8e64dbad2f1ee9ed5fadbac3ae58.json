{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport { mat4, mat3 } from 'gl-matrix';\nimport { n as newInstance$1, o as obj, e as setGet } from '../../macros2.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLCamera methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLCamera(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLCamera');\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      model._openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      model._openGLRenderWindow = model._openGLRenderer.getParent();\n      model.context = model._openGLRenderWindow.getContext();\n    }\n  };\n\n  // Renders myself\n  publicAPI.opaquePass = prepass => {\n    if (prepass) {\n      const tsize = model._openGLRenderer.getTiledSizeAndOrigin();\n      model.context.viewport(tsize.lowerLeftU, tsize.lowerLeftV, tsize.usize, tsize.vsize);\n      model.context.scissor(tsize.lowerLeftU, tsize.lowerLeftV, tsize.usize, tsize.vsize);\n    }\n  };\n  publicAPI.translucentPass = publicAPI.opaquePass;\n  publicAPI.zBufferPass = publicAPI.opaquePass;\n  publicAPI.opaqueZBufferPass = publicAPI.opaquePass;\n  publicAPI.volumePass = publicAPI.opaquePass;\n  publicAPI.getKeyMatrices = ren => {\n    // has the camera changed?\n    if (ren !== model.lastRenderer || model._openGLRenderWindow.getMTime() > model.keyMatrixTime.getMTime() || publicAPI.getMTime() > model.keyMatrixTime.getMTime() || ren.getMTime() > model.keyMatrixTime.getMTime() || model.renderable.getMTime() > model.keyMatrixTime.getMTime()) {\n      mat4.copy(model.keyMatrices.wcvc, model.renderable.getViewMatrix());\n      mat3.fromMat4(model.keyMatrices.normalMatrix, model.keyMatrices.wcvc);\n      mat3.invert(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\n      mat4.transpose(model.keyMatrices.wcvc, model.keyMatrices.wcvc);\n      const aspectRatio = model._openGLRenderer.getAspectRatio();\n      mat4.copy(model.keyMatrices.vcpc, model.renderable.getProjectionMatrix(aspectRatio, -1, 1));\n      mat4.transpose(model.keyMatrices.vcpc, model.keyMatrices.vcpc);\n      mat4.multiply(model.keyMatrices.wcpc, model.keyMatrices.vcpc, model.keyMatrices.wcvc);\n      model.keyMatrixTime.modified();\n      model.lastRenderer = ren;\n    }\n    return model.keyMatrices;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null,\n  lastRenderer: null,\n  keyMatrixTime: null,\n  keyMatrices: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.keyMatrixTime = {};\n  obj(model.keyMatrixTime);\n\n  // values always get set by the get method\n  model.keyMatrices = {\n    normalMatrix: new Float64Array(9),\n    vcpc: new Float64Array(16),\n    wcvc: new Float64Array(16),\n    wcpc: new Float64Array(16)\n  };\n\n  // Build VTK API\n  setGet(publicAPI, model, ['context', 'keyMatrixTime']);\n\n  // Object methods\n  vtkOpenGLCamera(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend);\n\n// ----------------------------------------------------------------------------\n\nvar vtkCamera = {\n  newInstance,\n  extend\n};\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkCamera', newInstance);\nexport { vtkCamera as default, extend, newInstance };","map":{"version":3,"names":["mat4","mat3","n","newInstance$1","o","obj","e","setGet","vtkViewNode","registerOverride","vtkOpenGLCamera","publicAPI","model","classHierarchy","push","buildPass","prepass","_openGLRenderer","getFirstAncestorOfType","_openGLRenderWindow","getParent","context","getContext","opaquePass","tsize","getTiledSizeAndOrigin","viewport","lowerLeftU","lowerLeftV","usize","vsize","scissor","translucentPass","zBufferPass","opaqueZBufferPass","volumePass","getKeyMatrices","ren","lastRenderer","getMTime","keyMatrixTime","renderable","copy","keyMatrices","wcvc","getViewMatrix","fromMat4","normalMatrix","invert","transpose","aspectRatio","getAspectRatio","vcpc","getProjectionMatrix","multiply","wcpc","modified","DEFAULT_VALUES","extend","initialValues","arguments","length","undefined","Object","assign","Float64Array","newInstance","vtkCamera","default"],"sources":["/Users/yzy/Documents/Playground/vue-cornerstone-demo/node_modules/@kitware/vtk.js/Rendering/OpenGL/Camera.js"],"sourcesContent":["import { mat4, mat3 } from 'gl-matrix';\nimport { n as newInstance$1, o as obj, e as setGet } from '../../macros2.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// ----------------------------------------------------------------------------\n// vtkOpenGLCamera methods\n// ----------------------------------------------------------------------------\n\nfunction vtkOpenGLCamera(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOpenGLCamera');\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      model._openGLRenderer = publicAPI.getFirstAncestorOfType('vtkOpenGLRenderer');\n      model._openGLRenderWindow = model._openGLRenderer.getParent();\n      model.context = model._openGLRenderWindow.getContext();\n    }\n  };\n\n  // Renders myself\n  publicAPI.opaquePass = prepass => {\n    if (prepass) {\n      const tsize = model._openGLRenderer.getTiledSizeAndOrigin();\n      model.context.viewport(tsize.lowerLeftU, tsize.lowerLeftV, tsize.usize, tsize.vsize);\n      model.context.scissor(tsize.lowerLeftU, tsize.lowerLeftV, tsize.usize, tsize.vsize);\n    }\n  };\n  publicAPI.translucentPass = publicAPI.opaquePass;\n  publicAPI.zBufferPass = publicAPI.opaquePass;\n  publicAPI.opaqueZBufferPass = publicAPI.opaquePass;\n  publicAPI.volumePass = publicAPI.opaquePass;\n  publicAPI.getKeyMatrices = ren => {\n    // has the camera changed?\n    if (ren !== model.lastRenderer || model._openGLRenderWindow.getMTime() > model.keyMatrixTime.getMTime() || publicAPI.getMTime() > model.keyMatrixTime.getMTime() || ren.getMTime() > model.keyMatrixTime.getMTime() || model.renderable.getMTime() > model.keyMatrixTime.getMTime()) {\n      mat4.copy(model.keyMatrices.wcvc, model.renderable.getViewMatrix());\n      mat3.fromMat4(model.keyMatrices.normalMatrix, model.keyMatrices.wcvc);\n      mat3.invert(model.keyMatrices.normalMatrix, model.keyMatrices.normalMatrix);\n      mat4.transpose(model.keyMatrices.wcvc, model.keyMatrices.wcvc);\n      const aspectRatio = model._openGLRenderer.getAspectRatio();\n      mat4.copy(model.keyMatrices.vcpc, model.renderable.getProjectionMatrix(aspectRatio, -1, 1));\n      mat4.transpose(model.keyMatrices.vcpc, model.keyMatrices.vcpc);\n      mat4.multiply(model.keyMatrices.wcpc, model.keyMatrices.vcpc, model.keyMatrices.wcvc);\n      model.keyMatrixTime.modified();\n      model.lastRenderer = ren;\n    }\n    return model.keyMatrices;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  context: null,\n  lastRenderer: null,\n  keyMatrixTime: null,\n  keyMatrices: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.keyMatrixTime = {};\n  obj(model.keyMatrixTime);\n\n  // values always get set by the get method\n  model.keyMatrices = {\n    normalMatrix: new Float64Array(9),\n    vcpc: new Float64Array(16),\n    wcvc: new Float64Array(16),\n    wcpc: new Float64Array(16)\n  };\n\n  // Build VTK API\n  setGet(publicAPI, model, ['context', 'keyMatrixTime']);\n\n  // Object methods\n  vtkOpenGLCamera(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend);\n\n// ----------------------------------------------------------------------------\n\nvar vtkCamera = {\n  newInstance,\n  extend\n};\n\n// Register ourself to OpenGL backend if imported\nregisterOverride('vtkCamera', newInstance);\n\nexport { vtkCamera as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}