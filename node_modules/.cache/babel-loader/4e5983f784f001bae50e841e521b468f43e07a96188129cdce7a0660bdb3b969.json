{"ast":null,"code":"import { vec3, mat4 } from 'gl-matrix';\nimport { getRenderingEngine, metaData, utilities, VolumeViewport } from '@cornerstonejs/core';\nimport { jumpToSlice } from '../../utilities';\nimport areViewportsCoplanar from './areViewportsCoplanar ';\nconst getSpatialRegistration = (targetId, sourceId) => utilities.spatialRegistrationMetadataProvider.get('spatialRegistrationModule', targetId, sourceId);\nexport default async function imageSliceSyncCallback(synchronizerInstance, sourceViewport, targetViewport) {\n  const renderingEngine = getRenderingEngine(targetViewport.renderingEngineId);\n  if (!renderingEngine) {\n    throw new Error(`No RenderingEngine for Id: ${targetViewport.renderingEngineId}`);\n  }\n  const sViewport = renderingEngine.getViewport(sourceViewport.viewportId);\n  const options = synchronizerInstance.getOptions(targetViewport.viewportId);\n  if (options?.disabled) {\n    return;\n  }\n  const tViewport = renderingEngine.getViewport(targetViewport.viewportId);\n  const imageId1 = sViewport.getCurrentImageId();\n  const imagePlaneModule1 = metaData.get('imagePlaneModule', imageId1);\n  const sourceImagePositionPatient = imagePlaneModule1.imagePositionPatient;\n  const targetImageIds = tViewport.getImageIds();\n  if (!areViewportsCoplanar(sViewport, tViewport)) {\n    return;\n  }\n  let registrationMatrixMat4 = getSpatialRegistration(targetViewport.viewportId, sourceViewport.viewportId);\n  if (!registrationMatrixMat4) {\n    const frameOfReferenceUID1 = sViewport.getFrameOfReferenceUID();\n    const frameOfReferenceUID2 = tViewport.getFrameOfReferenceUID();\n    if (frameOfReferenceUID1 === frameOfReferenceUID2 && options?.useInitialPosition !== false) {\n      registrationMatrixMat4 = mat4.identity(mat4.create());\n    } else {\n      utilities.calculateViewportsSpatialRegistration(sViewport, tViewport);\n      registrationMatrixMat4 = getSpatialRegistration(targetViewport.viewportId, sourceViewport.viewportId);\n    }\n    if (!registrationMatrixMat4) {\n      return;\n    }\n  }\n  const targetImagePositionPatientWithRegistrationMatrix = vec3.transformMat4(vec3.create(), sourceImagePositionPatient, registrationMatrixMat4);\n  const closestImageIdIndex2 = _getClosestImageIdIndex(targetImagePositionPatientWithRegistrationMatrix, targetImageIds);\n  let imageIndexToSet = closestImageIdIndex2.index;\n  if (tViewport instanceof VolumeViewport) {\n    imageIndexToSet = targetImageIds.length - closestImageIdIndex2.index - 1;\n  }\n  if (closestImageIdIndex2.index !== -1 && tViewport.getCurrentImageIdIndex() !== closestImageIdIndex2.index) {\n    await jumpToSlice(tViewport.element, {\n      imageIndex: imageIndexToSet\n    });\n  }\n}\nfunction _getClosestImageIdIndex(targetPoint, imageIds) {\n  return imageIds.reduce((closestImageIdIndex, imageId, index) => {\n    const {\n      imagePositionPatient\n    } = metaData.get('imagePlaneModule', imageId);\n    const distance = vec3.distance(imagePositionPatient, targetPoint);\n    if (distance < closestImageIdIndex.distance) {\n      return {\n        distance,\n        index\n      };\n    }\n    return closestImageIdIndex;\n  }, {\n    distance: Infinity,\n    index: -1\n  });\n}","map":{"version":3,"names":["vec3","mat4","getRenderingEngine","metaData","utilities","VolumeViewport","jumpToSlice","areViewportsCoplanar","getSpatialRegistration","targetId","sourceId","spatialRegistrationMetadataProvider","get","imageSliceSyncCallback","synchronizerInstance","sourceViewport","targetViewport","renderingEngine","renderingEngineId","Error","sViewport","getViewport","viewportId","options","getOptions","disabled","tViewport","imageId1","getCurrentImageId","imagePlaneModule1","sourceImagePositionPatient","imagePositionPatient","targetImageIds","getImageIds","registrationMatrixMat4","frameOfReferenceUID1","getFrameOfReferenceUID","frameOfReferenceUID2","useInitialPosition","identity","create","calculateViewportsSpatialRegistration","targetImagePositionPatientWithRegistrationMatrix","transformMat4","closestImageIdIndex2","_getClosestImageIdIndex","imageIndexToSet","index","length","getCurrentImageIdIndex","element","imageIndex","targetPoint","imageIds","reduce","closestImageIdIndex","imageId","distance","Infinity"],"sources":["../../../../src/synchronizers/callbacks/imageSliceSyncCallback.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}