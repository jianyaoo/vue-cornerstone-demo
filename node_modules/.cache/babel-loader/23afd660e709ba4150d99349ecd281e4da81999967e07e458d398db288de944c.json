{"ast":null,"code":"import { getEnabledElement } from '@cornerstonejs/core';\nimport { vec3, vec2 } from 'gl-matrix';\nimport { BaseTool } from '../base';\nimport { fillInsideSphere, thresholdInsideSphere } from './strategies/fillSphere';\nimport { eraseInsideSphere } from './strategies/eraseSphere';\nimport { thresholdInsideCircle, fillInsideCircle } from './strategies/fillCircle';\nimport { eraseInsideCircle } from './strategies/eraseCircle';\nimport { Events, ToolModes, SegmentationRepresentations, StrategyCallbacks } from '../../enums';\nimport { drawCircle as drawCircleSvg } from '../../drawingSvg';\nimport { resetElementCursor, hideElementCursor } from '../../cursors/elementCursor';\nimport triggerAnnotationRenderForViewportUIDs from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport { config as segmentationConfig, segmentLocking, segmentIndex as segmentIndexController, state as segmentationState, activeSegmentation } from '../../stateManagement/segmentation';\nimport { isVolumeSegmentation } from './strategies/utils/stackVolumeCheck';\nclass BrushTool extends BaseTool {\n  constructor(toolProps = {}, defaultToolProps = {\n    supportedInteractionTypes: ['Mouse', 'Touch'],\n    configuration: {\n      strategies: {\n        FILL_INSIDE_CIRCLE: fillInsideCircle,\n        ERASE_INSIDE_CIRCLE: eraseInsideCircle,\n        FILL_INSIDE_SPHERE: fillInsideSphere,\n        ERASE_INSIDE_SPHERE: eraseInsideSphere,\n        THRESHOLD_INSIDE_CIRCLE: thresholdInsideCircle,\n        THRESHOLD_INSIDE_SPHERE: thresholdInsideSphere\n      },\n      strategySpecificConfiguration: {\n        THRESHOLD: {\n          threshold: [-150, -70]\n        }\n      },\n      defaultStrategy: 'FILL_INSIDE_CIRCLE',\n      activeStrategy: 'FILL_INSIDE_CIRCLE',\n      brushSize: 25,\n      preview: {\n        enabled: false,\n        previewColors: {},\n        previewTimeMs: 250,\n        previewMoveDistance: 8,\n        dragMoveDistance: 4,\n        dragTimeMs: 500\n      },\n      centerRadius: 2,\n      actions: {\n        [StrategyCallbacks.AcceptPreview]: {\n          method: StrategyCallbacks.AcceptPreview,\n          bindings: [{\n            key: 'Enter'\n          }]\n        },\n        [StrategyCallbacks.RejectPreview]: {\n          method: StrategyCallbacks.RejectPreview,\n          bindings: [{\n            key: 'Escape'\n          }]\n        }\n      }\n    }\n  }) {\n    super(toolProps, defaultToolProps);\n    this._previewData = {\n      preview: null,\n      element: null,\n      timerStart: 0,\n      timer: null,\n      startPoint: [NaN, NaN],\n      isDrag: false\n    };\n    this.onSetToolPassive = evt => {\n      this.disableCursor();\n    };\n    this.onSetToolEnabled = () => {\n      this.disableCursor();\n    };\n    this.onSetToolDisabled = evt => {\n      this.disableCursor();\n    };\n    this.preMouseDownCallback = evt => {\n      const eventData = evt.detail;\n      const {\n        element\n      } = eventData;\n      const enabledElement = getEnabledElement(element);\n      const {\n        renderingEngine\n      } = enabledElement;\n      this._editData = this.createEditData(element);\n      this._activateDraw(element);\n      hideElementCursor(element);\n      evt.preventDefault();\n      this._previewData.isDrag = false;\n      this._previewData.timerStart = Date.now();\n      const hoverData = this._hoverData || this.createHoverData(element);\n      triggerAnnotationRenderForViewportUIDs(renderingEngine, hoverData.viewportIdsToRender);\n      this.applyActiveStrategyCallback(enabledElement, this.getOperationData(element), StrategyCallbacks.OnInteractionStart);\n      return true;\n    };\n    this.mouseMoveCallback = evt => {\n      if (this.mode === ToolModes.Active) {\n        this.updateCursor(evt);\n        if (!this.configuration.preview.enabled) {\n          return;\n        }\n        const {\n          previewTimeMs,\n          previewMoveDistance,\n          dragMoveDistance\n        } = this.configuration.preview;\n        const {\n          currentPoints,\n          element\n        } = evt.detail;\n        const {\n          canvas\n        } = currentPoints;\n        const {\n          preview,\n          startPoint,\n          timer,\n          timerStart,\n          isDrag\n        } = this._previewData;\n        const delta = vec2.distance(canvas, startPoint);\n        const time = Date.now() - timerStart;\n        if (delta > previewMoveDistance || time > previewTimeMs && delta > dragMoveDistance) {\n          if (timer) {\n            window.clearTimeout(timer);\n            this._previewData.timer = null;\n          }\n          if (preview && !isDrag) {\n            this.rejectPreview(element);\n          }\n        }\n        if (!this._previewData.timer) {\n          const timer = window.setTimeout(this.previewCallback, 250);\n          Object.assign(this._previewData, {\n            timerStart: Date.now(),\n            timer,\n            startPoint: canvas,\n            element\n          });\n        }\n      }\n    };\n    this.previewCallback = () => {\n      if (this._previewData.preview) {\n        return;\n      }\n      this._previewData.timer = null;\n      this._previewData.preview = this.applyActiveStrategyCallback(getEnabledElement(this._previewData.element), this.getOperationData(this._previewData.element), StrategyCallbacks.Preview);\n    };\n    this._dragCallback = evt => {\n      const eventData = evt.detail;\n      const {\n        element,\n        currentPoints\n      } = eventData;\n      const enabledElement = getEnabledElement(element);\n      const {\n        renderingEngine\n      } = enabledElement;\n      this.updateCursor(evt);\n      const {\n        viewportIdsToRender\n      } = this._hoverData;\n      triggerAnnotationRenderForViewportUIDs(renderingEngine, viewportIdsToRender);\n      const delta = vec2.distance(currentPoints.canvas, this._previewData.startPoint);\n      const {\n        dragTimeMs,\n        dragMoveDistance\n      } = this.configuration.preview;\n      if (!this._previewData.isDrag && this._previewData.preview && Date.now() - this._previewData.timerStart < dragTimeMs && delta < dragMoveDistance) {\n        return;\n      }\n      this._previewData.preview = this.applyActiveStrategy(enabledElement, this.getOperationData());\n      this._previewData.element = element;\n      this._previewData.timerStart = Date.now() + dragTimeMs;\n      this._previewData.isDrag = true;\n      this._previewData.startPoint = currentPoints.canvas;\n    };\n    this._endCallback = evt => {\n      const eventData = evt.detail;\n      const {\n        element\n      } = eventData;\n      const enabledElement = getEnabledElement(element);\n      const operationData = this.getOperationData(element);\n      if (!this._previewData.preview && !this._previewData.isDrag) {\n        this.applyActiveStrategy(enabledElement, operationData);\n      }\n      this._deactivateDraw(element);\n      resetElementCursor(element);\n      this.updateCursor(evt);\n      this._editData = null;\n      this.applyActiveStrategyCallback(enabledElement, operationData, StrategyCallbacks.OnInteractionEnd);\n      if (!this._previewData.isDrag) {\n        this.acceptPreview(element);\n      }\n    };\n    this._activateDraw = element => {\n      element.addEventListener(Events.MOUSE_UP, this._endCallback);\n      element.addEventListener(Events.MOUSE_DRAG, this._dragCallback);\n      element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n    };\n    this._deactivateDraw = element => {\n      element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n      element.removeEventListener(Events.MOUSE_DRAG, this._dragCallback);\n      element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n    };\n  }\n  disableCursor() {\n    this._hoverData = undefined;\n    this.rejectPreview();\n  }\n  createEditData(element) {\n    const enabledElement = getEnabledElement(element);\n    const {\n      viewport\n    } = enabledElement;\n    const toolGroupId = this.toolGroupId;\n    const activeSegmentationRepresentation = activeSegmentation.getActiveSegmentationRepresentation(toolGroupId);\n    if (!activeSegmentationRepresentation) {\n      throw new Error('No active segmentation detected, create a segmentation representation before using the brush tool');\n    }\n    const {\n      segmentationId,\n      type,\n      segmentationRepresentationUID\n    } = activeSegmentationRepresentation;\n    if (type === SegmentationRepresentations.Contour) {\n      throw new Error('Not implemented yet');\n    }\n    const segmentsLocked = segmentLocking.getLockedSegments(segmentationId);\n    const {\n      representationData\n    } = segmentationState.getSegmentation(segmentationId);\n    const labelmapData = representationData[SegmentationRepresentations.Labelmap];\n    if (isVolumeSegmentation(labelmapData)) {\n      const {\n        volumeId\n      } = representationData[type];\n      const actors = viewport.getActors();\n      const firstVolumeActorUID = actors[0].uid;\n      return {\n        volumeId,\n        referencedVolumeId: firstVolumeActorUID,\n        segmentsLocked,\n        segmentationRepresentationUID\n      };\n    } else {\n      const {\n        imageIdReferenceMap\n      } = labelmapData;\n      const currentImageId = viewport.getCurrentImageId();\n      if (!imageIdReferenceMap.get(currentImageId)) {\n        return;\n      }\n      if (this.configuration.activeStrategy.includes('SPHERE')) {\n        throw new Error('Sphere manipulation is not supported for stacks of image segmentations yet');\n      }\n      return {\n        imageIdReferenceMap,\n        segmentsLocked,\n        segmentationRepresentationUID\n      };\n    }\n  }\n  createHoverData(element, centerCanvas) {\n    const enabledElement = getEnabledElement(element);\n    const {\n      viewport\n    } = enabledElement;\n    const camera = viewport.getCamera();\n    const {\n      viewPlaneNormal,\n      viewUp\n    } = camera;\n    const viewportIdsToRender = [viewport.id];\n    const {\n      segmentIndex,\n      segmentationId,\n      segmentationRepresentationUID,\n      segmentColor\n    } = this.getActiveSegmentationData() || {};\n    const brushCursor = {\n      metadata: {\n        viewPlaneNormal: [...viewPlaneNormal],\n        viewUp: [...viewUp],\n        FrameOfReferenceUID: viewport.getFrameOfReferenceUID(),\n        referencedImageId: '',\n        toolName: this.getToolName(),\n        segmentColor\n      },\n      data: {}\n    };\n    return {\n      brushCursor,\n      centerCanvas,\n      segmentIndex,\n      segmentationId,\n      segmentationRepresentationUID,\n      segmentColor,\n      viewportIdsToRender\n    };\n  }\n  getActiveSegmentationData() {\n    const toolGroupId = this.toolGroupId;\n    const activeSegmentationRepresentation = activeSegmentation.getActiveSegmentationRepresentation(toolGroupId);\n    if (!activeSegmentationRepresentation) {\n      console.warn('No active segmentation detected, create one before using the brush tool');\n      return;\n    }\n    const {\n      segmentationRepresentationUID,\n      segmentationId\n    } = activeSegmentationRepresentation;\n    const segmentIndex = segmentIndexController.getActiveSegmentIndex(segmentationId);\n    const segmentColor = segmentationConfig.color.getColorForSegmentIndex(toolGroupId, segmentationRepresentationUID, segmentIndex);\n    return {\n      segmentIndex,\n      segmentationId,\n      segmentationRepresentationUID,\n      segmentColor\n    };\n  }\n  updateCursor(evt) {\n    const eventData = evt.detail;\n    const {\n      element\n    } = eventData;\n    const {\n      currentPoints\n    } = eventData;\n    const centerCanvas = currentPoints.canvas;\n    this._hoverData = this.createHoverData(element, centerCanvas);\n    this._calculateCursor(element, centerCanvas);\n    if (!this._hoverData) {\n      return;\n    }\n    triggerAnnotationRenderForViewportUIDs(getEnabledElement(element).renderingEngine, this._hoverData.viewportIdsToRender);\n  }\n  getOperationData(element) {\n    const editData = this._editData || this.createEditData(element);\n    const {\n      segmentIndex,\n      segmentationId,\n      segmentationRepresentationUID,\n      brushCursor\n    } = this._hoverData || this.createHoverData(element);\n    const {\n      data,\n      metadata = {}\n    } = brushCursor || {};\n    const {\n      viewPlaneNormal,\n      viewUp\n    } = metadata;\n    const operationData = {\n      ...editData,\n      points: data?.handles?.points,\n      segmentIndex,\n      previewColors: this.configuration.preview.enabled ? this.configuration.preview.previewColors : null,\n      viewPlaneNormal,\n      toolGroupId: this.toolGroupId,\n      segmentationId,\n      segmentationRepresentationUID,\n      viewUp,\n      strategySpecificConfiguration: this.configuration.strategySpecificConfiguration,\n      preview: this._previewData?.preview\n    };\n    return operationData;\n  }\n  _calculateCursor(element, centerCanvas) {\n    const enabledElement = getEnabledElement(element);\n    const {\n      viewport\n    } = enabledElement;\n    const {\n      canvasToWorld\n    } = viewport;\n    const camera = viewport.getCamera();\n    const {\n      brushSize\n    } = this.configuration;\n    const viewUp = vec3.fromValues(camera.viewUp[0], camera.viewUp[1], camera.viewUp[2]);\n    const viewPlaneNormal = vec3.fromValues(camera.viewPlaneNormal[0], camera.viewPlaneNormal[1], camera.viewPlaneNormal[2]);\n    const viewRight = vec3.create();\n    vec3.cross(viewRight, viewUp, viewPlaneNormal);\n    const centerCursorInWorld = canvasToWorld([centerCanvas[0], centerCanvas[1]]);\n    const bottomCursorInWorld = vec3.create();\n    const topCursorInWorld = vec3.create();\n    const leftCursorInWorld = vec3.create();\n    const rightCursorInWorld = vec3.create();\n    for (let i = 0; i <= 2; i++) {\n      bottomCursorInWorld[i] = centerCursorInWorld[i] - viewUp[i] * brushSize;\n      topCursorInWorld[i] = centerCursorInWorld[i] + viewUp[i] * brushSize;\n      leftCursorInWorld[i] = centerCursorInWorld[i] - viewRight[i] * brushSize;\n      rightCursorInWorld[i] = centerCursorInWorld[i] + viewRight[i] * brushSize;\n    }\n    if (!this._hoverData) {\n      return;\n    }\n    const {\n      brushCursor\n    } = this._hoverData;\n    const {\n      data\n    } = brushCursor;\n    if (data.handles === undefined) {\n      data.handles = {};\n    }\n    data.handles.points = [bottomCursorInWorld, topCursorInWorld, leftCursorInWorld, rightCursorInWorld];\n    data.invalidated = false;\n  }\n  rejectPreview(element = this._previewData.element) {\n    if (!element || !this._previewData.preview) {\n      return;\n    }\n    const enabledElement = getEnabledElement(element);\n    this.applyActiveStrategyCallback(enabledElement, this.getOperationData(element), StrategyCallbacks.RejectPreview);\n    this._previewData.preview = null;\n    this._previewData.isDrag = false;\n  }\n  acceptPreview(element = this._previewData.element) {\n    if (!element) {\n      return;\n    }\n    const enabledElement = getEnabledElement(element);\n    this.applyActiveStrategyCallback(enabledElement, this.getOperationData(element), StrategyCallbacks.AcceptPreview);\n    this._previewData.isDrag = false;\n    this._previewData.preview = null;\n  }\n  invalidateBrushCursor() {\n    if (this._hoverData === undefined) {\n      return;\n    }\n    const {\n      data\n    } = this._hoverData.brushCursor;\n    data.invalidated = true;\n    const {\n      segmentColor\n    } = this.getActiveSegmentationData() || {};\n    this._hoverData.brushCursor.metadata.segmentColor = segmentColor;\n  }\n  renderAnnotation(enabledElement, svgDrawingHelper) {\n    if (!this._hoverData) {\n      return;\n    }\n    const {\n      viewport\n    } = enabledElement;\n    const viewportIdsToRender = this._hoverData.viewportIdsToRender;\n    if (!viewportIdsToRender.includes(viewport.id)) {\n      return;\n    }\n    const brushCursor = this._hoverData.brushCursor;\n    if (brushCursor.data.invalidated === true) {\n      const {\n        centerCanvas\n      } = this._hoverData;\n      const {\n        element\n      } = viewport;\n      this._calculateCursor(element, centerCanvas);\n    }\n    const toolMetadata = brushCursor.metadata;\n    if (!toolMetadata) {\n      return;\n    }\n    const annotationUID = toolMetadata.brushCursorUID;\n    const data = brushCursor.data;\n    const {\n      points\n    } = data.handles;\n    const canvasCoordinates = points.map(p => viewport.worldToCanvas(p));\n    const bottom = canvasCoordinates[0];\n    const top = canvasCoordinates[1];\n    const center = [Math.floor((bottom[0] + top[0]) / 2), Math.floor((bottom[1] + top[1]) / 2)];\n    const radius = Math.abs(bottom[1] - Math.floor((bottom[1] + top[1]) / 2));\n    const color = `rgb(${toolMetadata.segmentColor?.slice(0, 3) || [0, 0, 0]})`;\n    if (!viewport.getRenderingEngine()) {\n      console.warn('Rendering Engine has been destroyed');\n      return;\n    }\n    const circleUID = '0';\n    drawCircleSvg(svgDrawingHelper, annotationUID, circleUID, center, radius, {\n      color\n    });\n    const {\n      centerRadius\n    } = this.configuration;\n    if (centerRadius >= 0) {\n      const circleUID1 = '1';\n      drawCircleSvg(svgDrawingHelper, annotationUID, circleUID1, center, 2, {\n        color\n      });\n    }\n  }\n}\nBrushTool.toolName = 'Brush';\nexport default BrushTool;","map":{"version":3,"names":["getEnabledElement","vec3","vec2","BaseTool","fillInsideSphere","thresholdInsideSphere","eraseInsideSphere","thresholdInsideCircle","fillInsideCircle","eraseInsideCircle","Events","ToolModes","SegmentationRepresentations","StrategyCallbacks","drawCircle","drawCircleSvg","resetElementCursor","hideElementCursor","triggerAnnotationRenderForViewportUIDs","config","segmentationConfig","segmentLocking","segmentIndex","segmentIndexController","state","segmentationState","activeSegmentation","isVolumeSegmentation","BrushTool","constructor","toolProps","defaultToolProps","supportedInteractionTypes","configuration","strategies","FILL_INSIDE_CIRCLE","ERASE_INSIDE_CIRCLE","FILL_INSIDE_SPHERE","ERASE_INSIDE_SPHERE","THRESHOLD_INSIDE_CIRCLE","THRESHOLD_INSIDE_SPHERE","strategySpecificConfiguration","THRESHOLD","threshold","defaultStrategy","activeStrategy","brushSize","preview","enabled","previewColors","previewTimeMs","previewMoveDistance","dragMoveDistance","dragTimeMs","centerRadius","actions","AcceptPreview","method","bindings","key","RejectPreview","_previewData","element","timerStart","timer","startPoint","NaN","isDrag","onSetToolPassive","evt","disableCursor","onSetToolEnabled","onSetToolDisabled","preMouseDownCallback","eventData","detail","enabledElement","renderingEngine","_editData","createEditData","_activateDraw","preventDefault","Date","now","hoverData","_hoverData","createHoverData","viewportIdsToRender","applyActiveStrategyCallback","getOperationData","OnInteractionStart","mouseMoveCallback","mode","Active","updateCursor","currentPoints","canvas","delta","distance","time","window","clearTimeout","rejectPreview","setTimeout","previewCallback","Object","assign","Preview","_dragCallback","applyActiveStrategy","_endCallback","operationData","_deactivateDraw","OnInteractionEnd","acceptPreview","addEventListener","MOUSE_UP","MOUSE_DRAG","MOUSE_CLICK","removeEventListener","undefined","viewport","toolGroupId","activeSegmentationRepresentation","getActiveSegmentationRepresentation","Error","segmentationId","type","segmentationRepresentationUID","Contour","segmentsLocked","getLockedSegments","representationData","getSegmentation","labelmapData","Labelmap","volumeId","actors","getActors","firstVolumeActorUID","uid","referencedVolumeId","imageIdReferenceMap","currentImageId","getCurrentImageId","get","includes","centerCanvas","camera","getCamera","viewPlaneNormal","viewUp","id","segmentColor","getActiveSegmentationData","brushCursor","metadata","FrameOfReferenceUID","getFrameOfReferenceUID","referencedImageId","toolName","getToolName","data","console","warn","getActiveSegmentIndex","color","getColorForSegmentIndex","_calculateCursor","editData","points","handles","canvasToWorld","fromValues","viewRight","create","cross","centerCursorInWorld","bottomCursorInWorld","topCursorInWorld","leftCursorInWorld","rightCursorInWorld","i","invalidated","invalidateBrushCursor","renderAnnotation","svgDrawingHelper","toolMetadata","annotationUID","brushCursorUID","canvasCoordinates","map","p","worldToCanvas","bottom","top","center","Math","floor","radius","abs","slice","getRenderingEngine","circleUID","circleUID1"],"sources":["../../../../src/tools/segmentation/BrushTool.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}