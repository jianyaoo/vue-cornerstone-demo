{"ast":null,"code":"import { state } from '../../stateManagement/annotation';\nimport { RectangleROIStartEndThresholdTool, RectangleROIThresholdTool } from '../../tools';\nimport thresholdVolumeByRange from './thresholdVolumeByRange';\nimport getBoundsIJKFromRectangleAnnotations from '../rectangleROITool/getBoundsIJKFromRectangleAnnotations';\nfunction rectangleROIThresholdVolumeByRange(annotationUIDs, segmentationVolume, thresholdVolumeInformation, options) {\n  const annotations = annotationUIDs.map(annotationUID => {\n    return state.getAnnotation(annotationUID);\n  });\n  _validateAnnotations(annotations);\n  let boundsIJK;\n  for (let i = 0; i < thresholdVolumeInformation.length; i++) {\n    const volumeSize = thresholdVolumeInformation[i].volume.getScalarData().length;\n    if (volumeSize === segmentationVolume.getScalarData().length || i === 0) {\n      boundsIJK = getBoundsIJKFromRectangleAnnotations(annotations, thresholdVolumeInformation[i].volume, options);\n    }\n  }\n  const outputSegmentationVolume = thresholdVolumeByRange(segmentationVolume, thresholdVolumeInformation, {\n    ...options,\n    boundsIJK\n  });\n  return outputSegmentationVolume;\n}\nfunction _validateAnnotations(annotations) {\n  const validToolNames = [RectangleROIThresholdTool.toolName, RectangleROIStartEndThresholdTool.toolName];\n  for (const annotation of annotations) {\n    const name = annotation.metadata.toolName;\n    if (!validToolNames.includes(name)) {\n      throw new Error('rectangleROIThresholdVolumeByRange only supports RectangleROIThreshold and RectangleROIStartEndThreshold annotations');\n    }\n  }\n}\nexport default rectangleROIThresholdVolumeByRange;","map":{"version":3,"names":["state","RectangleROIStartEndThresholdTool","RectangleROIThresholdTool","thresholdVolumeByRange","getBoundsIJKFromRectangleAnnotations","rectangleROIThresholdVolumeByRange","annotationUIDs","segmentationVolume","thresholdVolumeInformation","options","annotations","map","annotationUID","getAnnotation","_validateAnnotations","boundsIJK","i","length","volumeSize","volume","getScalarData","outputSegmentationVolume","validToolNames","toolName","annotation","name","metadata","includes","Error"],"sources":["../../../../src/utilities/segmentation/rectangleROIThresholdVolumeByRange.ts"],"sourcesContent":[null],"mappings":"AACA,SAASA,KAAK,QAAQ,kCAAkC;AACxD,SACEC,iCAAiC,EACjCC,yBAAyB,QACpB,aAAa;AAEpB,OAAOC,sBAAsB,MAAM,0BAA0B;AAC7D,OAAOC,oCAAoC,MAAM,0DAA0D;AA+B3G,SAASC,kCAAkCA,CACzCC,cAAwB,EACxBC,kBAAsC,EACtCC,0BAAkD,EAClDC,OAAyB;EAEzB,MAAMC,WAAW,GAAGJ,cAAc,CAACK,GAAG,CAAEC,aAAa,IAAI;IACvD,OAAOZ,KAAK,CAACa,aAAa,CAACD,aAAa,CAAC;EAC3C,CAAC,CAAC;EAEFE,oBAAoB,CAACJ,WAAW,CAAC;EAEjC,IAAIK,SAAS;EACb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,0BAA0B,CAACS,MAAM,EAAED,CAAC,EAAE,EAAE;IAE1D,MAAME,UAAU,GACdV,0BAA0B,CAACQ,CAAC,CAAC,CAACG,MAAM,CAACC,aAAa,EAAE,CAACH,MAAM;IAC7D,IAAIC,UAAU,KAAKX,kBAAkB,CAACa,aAAa,EAAE,CAACH,MAAM,IAAID,CAAC,KAAK,CAAC,EAAE;MACvED,SAAS,GAAGX,oCAAoC,CAC9CM,WAAW,EACXF,0BAA0B,CAACQ,CAAC,CAAC,CAACG,MAAM,EACpCV,OAAO,CACR;;;EAIL,MAAMY,wBAAwB,GAAGlB,sBAAsB,CACrDI,kBAAkB,EAClBC,0BAA0B,EAC1B;IAAE,GAAGC,OAAO;IAAEM;EAAS,CAAE,CAC1B;EAED,OAAOM,wBAAwB;AACjC;AAEA,SAASP,oBAAoBA,CAACJ,WAAW;EACvC,MAAMY,cAAc,GAAG,CACrBpB,yBAAyB,CAACqB,QAAQ,EAClCtB,iCAAiC,CAACsB,QAAQ,CAC3C;EAED,KAAK,MAAMC,UAAU,IAAId,WAAW,EAAE;IACpC,MAAMe,IAAI,GAAGD,UAAU,CAACE,QAAQ,CAACH,QAAQ;IACzC,IAAI,CAACD,cAAc,CAACK,QAAQ,CAACF,IAAI,CAAC,EAAE;MAClC,MAAM,IAAIG,KAAK,CACb,sHAAsH,CACvH;;;AAGP;AAEA,eAAevB,kCAAkC"},"metadata":{},"sourceType":"module","externalDependencies":[]}