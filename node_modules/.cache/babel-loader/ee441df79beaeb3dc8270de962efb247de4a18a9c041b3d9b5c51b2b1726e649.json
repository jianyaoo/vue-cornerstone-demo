{"ast":null,"code":"import _getHash from './_getHash';\nimport setNewAttributesIfValid from './setNewAttributesIfValid';\nimport setAttributesIfNecessary from './setAttributesIfNecessary';\nexport default function drawPolyline(svgDrawingHelper, annotationUID, polylineUID, points, options) {\n  if (points.length < 2) {\n    return;\n  }\n  const {\n    fillColor,\n    fillOpacity,\n    color,\n    width,\n    lineWidth,\n    lineDash\n  } = Object.assign({\n    color: 'dodgerblue',\n    width: '2',\n    fillColor: 'none',\n    fillOpacity: 0,\n    lineWidth: undefined,\n    lineDash: undefined,\n    connectLastToFirst: false\n  }, options);\n  const strokeWidth = lineWidth || width;\n  const svgns = 'http://www.w3.org/2000/svg';\n  const svgNodeHash = _getHash(annotationUID, 'polyline', polylineUID);\n  const existingPolyLine = svgDrawingHelper.getSvgNode(svgNodeHash);\n  let pointsAttribute = '';\n  for (const point of points) {\n    pointsAttribute += `${point[0]}, ${point[1]} `;\n  }\n  if (options.connectLastToFirst) {\n    const firstPoint = points[0];\n    pointsAttribute += `${firstPoint[0]}, ${firstPoint[1]}`;\n  }\n  const attributes = {\n    points: pointsAttribute,\n    stroke: color,\n    fill: fillColor,\n    'fill-opacity': fillOpacity,\n    'stroke-width': strokeWidth,\n    'stroke-dasharray': lineDash\n  };\n  if (existingPolyLine) {\n    setAttributesIfNecessary(attributes, existingPolyLine);\n    svgDrawingHelper.setNodeTouched(svgNodeHash);\n  } else {\n    const newPolyLine = document.createElementNS(svgns, 'polyline');\n    setNewAttributesIfValid(attributes, newPolyLine);\n    svgDrawingHelper.appendNode(newPolyLine, svgNodeHash);\n  }\n}","map":{"version":3,"names":["_getHash","setNewAttributesIfValid","setAttributesIfNecessary","drawPolyline","svgDrawingHelper","annotationUID","polylineUID","points","options","length","fillColor","fillOpacity","color","width","lineWidth","lineDash","Object","assign","undefined","connectLastToFirst","strokeWidth","svgns","svgNodeHash","existingPolyLine","getSvgNode","pointsAttribute","point","firstPoint","attributes","stroke","fill","setNodeTouched","newPolyLine","document","createElementNS","appendNode"],"sources":["../../../src/drawingSvg/drawPolyline.ts"],"sourcesContent":[null],"mappings":"AACA,OAAOA,QAAQ,MAAM,YAAY;AACjC,OAAOC,uBAAuB,MAAM,2BAA2B;AAC/D,OAAOC,wBAAwB,MAAM,4BAA4B;AASjE,eAAc,SAAUC,YAAYA,CAClCC,gBAAkC,EAClCC,aAAqB,EACrBC,WAAmB,EACnBC,MAAsB,EACtBC,OAQC;EAED,IAAID,MAAM,CAACE,MAAM,GAAG,CAAC,EAAE;IACrB;;EAGF,MAAM;IAAEC,SAAS;IAAEC,WAAW;IAAEC,KAAK;IAAEC,KAAK;IAAEC,SAAS;IAAEC;EAAQ,CAAE,GACjEC,MAAM,CAACC,MAAM,CACX;IACEL,KAAK,EAAE,YAAY;IACnBC,KAAK,EAAE,GAAG;IACVH,SAAS,EAAE,MAAM;IACjBC,WAAW,EAAE,CAAC;IACdG,SAAS,EAAEI,SAAS;IACpBH,QAAQ,EAAEG,SAAS;IACnBC,kBAAkB,EAAE;GACrB,EACDX,OAAO,CACR;EAGH,MAAMY,WAAW,GAAGN,SAAS,IAAID,KAAK;EAEtC,MAAMQ,KAAK,GAAG,4BAA4B;EAC1C,MAAMC,WAAW,GAAGtB,QAAQ,CAACK,aAAa,EAAE,UAAU,EAAEC,WAAW,CAAC;EACpE,MAAMiB,gBAAgB,GAAGnB,gBAAgB,CAACoB,UAAU,CAACF,WAAW,CAAC;EAEjE,IAAIG,eAAe,GAAG,EAAE;EAExB,KAAK,MAAMC,KAAK,IAAInB,MAAM,EAAE;IAC1BkB,eAAe,IAAI,GAAGC,KAAK,CAAC,CAAC,CAAC,KAAKA,KAAK,CAAC,CAAC,CAAC,GAAG;;EAGhD,IAAIlB,OAAO,CAACW,kBAAkB,EAAE;IAC9B,MAAMQ,UAAU,GAAGpB,MAAM,CAAC,CAAC,CAAC;IAE5BkB,eAAe,IAAI,GAAGE,UAAU,CAAC,CAAC,CAAC,KAAKA,UAAU,CAAC,CAAC,CAAC,EAAE;;EAGzD,MAAMC,UAAU,GAAG;IACjBrB,MAAM,EAAEkB,eAAe;IACvBI,MAAM,EAAEjB,KAAK;IACbkB,IAAI,EAAEpB,SAAS;IACf,cAAc,EAAEC,WAAW;IAC3B,cAAc,EAAES,WAAW;IAC3B,kBAAkB,EAAEL;GACrB;EAED,IAAIQ,gBAAgB,EAAE;IAEpBrB,wBAAwB,CAAC0B,UAAU,EAAEL,gBAAgB,CAAC;IAEtDnB,gBAAgB,CAAC2B,cAAc,CAACT,WAAW,CAAC;GAC7C,MAAM;IACL,MAAMU,WAAW,GAAGC,QAAQ,CAACC,eAAe,CAACb,KAAK,EAAE,UAAU,CAAC;IAE/DpB,uBAAuB,CAAC2B,UAAU,EAAEI,WAAW,CAAC;IAEhD5B,gBAAgB,CAAC+B,UAAU,CAACH,WAAW,EAAEV,WAAW,CAAC;;AAEzD"},"metadata":{},"sourceType":"module","externalDependencies":[]}