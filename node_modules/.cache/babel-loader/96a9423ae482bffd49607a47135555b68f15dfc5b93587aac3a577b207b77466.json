{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getVolumeInfo, splitImageIdsBy4DTags } from './helpers';\nimport StreamingDynamicImageVolume from './StreamingDynamicImageVolume';\nfunction get4DVolumeInfo(imageIds) {\n  const imageIdsGroups = splitImageIdsBy4DTags(imageIds);\n  return imageIdsGroups.map(imageIds => getVolumeInfo(imageIds));\n}\nfunction cornerstoneStreamingDynamicImageVolumeLoader(volumeId, options) {\n  if (!options || !options.imageIds || !options.imageIds.length) {\n    throw new Error('ImageIds must be provided to create a 4D streaming image volume');\n  }\n  const {\n    imageIds\n  } = options;\n  const volumesInfo = get4DVolumeInfo(imageIds);\n  const {\n    metadata: volumeMetadata,\n    dimensions,\n    spacing,\n    origin,\n    direction,\n    sizeInBytes\n  } = volumesInfo[0];\n  const sortedImageIdsArrays = [];\n  const scalarDataArrays = [];\n  volumesInfo.forEach(volumeInfo => {\n    sortedImageIdsArrays.push(volumeInfo.sortedImageIds);\n    scalarDataArrays.push(volumeInfo.scalarData);\n  });\n  const sortedImageIds = sortedImageIdsArrays.flat();\n  let streamingImageVolume = new StreamingDynamicImageVolume({\n    volumeId,\n    metadata: volumeMetadata,\n    dimensions,\n    spacing,\n    origin,\n    direction,\n    scalarData: scalarDataArrays,\n    sizeInBytes,\n    imageIds: sortedImageIds\n  }, {\n    imageIds: sortedImageIds,\n    loadStatus: {\n      loaded: false,\n      loading: false,\n      cancelled: false,\n      cachedFrames: [],\n      callbacks: []\n    }\n  });\n  return {\n    promise: Promise.resolve(streamingImageVolume),\n    decache: () => {\n      streamingImageVolume.destroy();\n      streamingImageVolume = null;\n    },\n    cancel: () => {\n      streamingImageVolume.cancelLoading();\n    }\n  };\n}\nexport default cornerstoneStreamingDynamicImageVolumeLoader;","map":{"version":3,"names":["getVolumeInfo","splitImageIdsBy4DTags","StreamingDynamicImageVolume","get4DVolumeInfo","imageIds","imageIdsGroups","map","cornerstoneStreamingDynamicImageVolumeLoader","volumeId","options","length","Error","volumesInfo","metadata","volumeMetadata","dimensions","spacing","origin","direction","sizeInBytes","sortedImageIdsArrays","scalarDataArrays","forEach","volumeInfo","push","sortedImageIds","scalarData","flat","streamingImageVolume","loadStatus","loaded","loading","cancelled","cachedFrames","callbacks","promise","Promise","resolve","decache","destroy","cancel","cancelLoading"],"sources":["../../src/cornerstoneStreamingDynamicImageVolumeLoader.ts"],"sourcesContent":[null],"mappings":";AAAA,SAASA,aAAa,EAAEC,qBAAqB,QAAQ,WAAW;AAChE,OAAOC,2BAA2B,MAAM,+BAA+B;AAQvE,SAASC,eAAeA,CAACC,QAAkB;EACzC,MAAMC,cAAc,GAAGJ,qBAAqB,CAACG,QAAQ,CAAC;EACtD,OAAOC,cAAc,CAACC,GAAG,CAAEF,QAAQ,IAAKJ,aAAa,CAACI,QAAQ,CAAC,CAAC;AAClE;AAcA,SAASG,4CAA4CA,CACnDC,QAAgB,EAChBC,OAEC;EAED,IAAI,CAACA,OAAO,IAAI,CAACA,OAAO,CAACL,QAAQ,IAAI,CAACK,OAAO,CAACL,QAAQ,CAACM,MAAM,EAAE;IAC7D,MAAM,IAAIC,KAAK,CACb,iEAAiE,CAClE;;EAGH,MAAM;IAAEP;EAAQ,CAAE,GAAGK,OAAO;EAC5B,MAAMG,WAAW,GAAGT,eAAe,CAACC,QAAQ,CAAC;EAE7C,MAAM;IACJS,QAAQ,EAAEC,cAAc;IACxBC,UAAU;IACVC,OAAO;IACPC,MAAM;IACNC,SAAS;IACTC;EAAW,CACZ,GAAGP,WAAW,CAAC,CAAC,CAAC;EAElB,MAAMQ,oBAAoB,GAAG,EAAE;EAC/B,MAAMC,gBAAgB,GAAG,EAAE;EAE3BT,WAAW,CAACU,OAAO,CAAEC,UAAU,IAAI;IACjCH,oBAAoB,CAACI,IAAI,CAACD,UAAU,CAACE,cAAc,CAAC;IACpDJ,gBAAgB,CAACG,IAAI,CAACD,UAAU,CAACG,UAAU,CAAC;EAC9C,CAAC,CAAC;EAEF,MAAMD,cAAc,GAAGL,oBAAoB,CAACO,IAAI,EAAE;EAClD,IAAIC,oBAAoB,GAAG,IAAI1B,2BAA2B,CAExD;IACEM,QAAQ;IACRK,QAAQ,EAAEC,cAAc;IACxBC,UAAU;IACVC,OAAO;IACPC,MAAM;IACNC,SAAS;IACTQ,UAAU,EAAEL,gBAAgB;IAC5BF,WAAW;IACXf,QAAQ,EAAEqB;GACX,EAED;IACErB,QAAQ,EAAEqB,cAAc;IACxBI,UAAU,EAAE;MAEVC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE,KAAK;MACdC,SAAS,EAAE,KAAK;MAChBC,YAAY,EAAE,EAAE;MAChBC,SAAS,EAAE;;GAEd,CACF;EAED,OAAO;IACLC,OAAO,EAAEC,OAAO,CAACC,OAAO,CAACT,oBAAoB,CAAC;IAC9CU,OAAO,EAAEA,CAAA,KAAK;MACZV,oBAAoB,CAACW,OAAO,EAAE;MAC9BX,oBAAoB,GAAG,IAAI;IAC7B,CAAC;IACDY,MAAM,EAAEA,CAAA,KAAK;MACXZ,oBAAoB,CAACa,aAAa,EAAE;IACtC;GACD;AACH;AAEA,eAAelC,4CAA4C"},"metadata":{},"sourceType":"module","externalDependencies":[]}