{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { m as macro } from '../../macros2.js';\nimport vtkViewNode from './ViewNode.js';\n\n// ----------------------------------------------------------------------------\n// vtkRenderWindowViewNode is intended to be a superclass for all api specific\n// RenderWindows. It is intended to define a common API that can be invoked\n// upon an api specific render window and provide some common method\n// implementations. If your application requires communicating with an api specific\n// view try to limit such interactions to methods defined in this class.\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n// vtkRenderWindowViewNode methods\n// ----------------------------------------------------------------------------\n\nfunction vtkRenderWindowViewNode(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderWindowViewNode');\n  publicAPI.getViewNodeFactory = () => null;\n  publicAPI.getAspectRatio = () => model.size[0] / model.size[1];\n  publicAPI.getAspectRatioForRenderer = renderer => {\n    const viewport = renderer.getViewportByReference();\n    return model.size[0] * (viewport[2] - viewport[0]) / ((viewport[3] - viewport[1]) * model.size[1]);\n  };\n  publicAPI.isInViewport = (x, y, viewport) => {\n    const vCoords = viewport.getViewportByReference();\n    const size = publicAPI.getFramebufferSize();\n    if (vCoords[0] * size[0] <= x && vCoords[2] * size[0] >= x && vCoords[1] * size[1] <= y && vCoords[3] * size[1] >= y) {\n      return true;\n    }\n    return false;\n  };\n  publicAPI.getViewportSize = viewport => {\n    const vCoords = viewport.getViewportByReference();\n    const size = publicAPI.getFramebufferSize();\n    return [(vCoords[2] - vCoords[0]) * size[0], (vCoords[3] - vCoords[1]) * size[1]];\n  };\n  publicAPI.getViewportCenter = viewport => {\n    const size = publicAPI.getViewportSize(viewport);\n    return [size[0] * 0.5, size[1] * 0.5];\n  };\n  publicAPI.displayToNormalizedDisplay = (x, y, z) => {\n    const size = publicAPI.getFramebufferSize();\n    return [x / size[0], y / size[1], z];\n  };\n  publicAPI.normalizedDisplayToDisplay = (x, y, z) => {\n    const size = publicAPI.getFramebufferSize();\n    return [x * size[0], y * size[1], z];\n  };\n  publicAPI.worldToView = (x, y, z, renderer) => renderer.worldToView(x, y, z);\n  publicAPI.viewToWorld = (x, y, z, renderer) => renderer.viewToWorld(x, y, z);\n  publicAPI.worldToDisplay = (x, y, z, renderer) => {\n    const val = renderer.worldToView(x, y, z);\n    const dims = publicAPI.getViewportSize(renderer);\n    const val2 = renderer.viewToProjection(val[0], val[1], val[2], dims[0] / dims[1]);\n    const val3 = renderer.projectionToNormalizedDisplay(val2[0], val2[1], val2[2]);\n    return publicAPI.normalizedDisplayToDisplay(val3[0], val3[1], val3[2]);\n  };\n  publicAPI.displayToWorld = (x, y, z, renderer) => {\n    const val = publicAPI.displayToNormalizedDisplay(x, y, z);\n    const val2 = renderer.normalizedDisplayToProjection(val[0], val[1], val[2]);\n    const dims = publicAPI.getViewportSize(renderer);\n    const val3 = renderer.projectionToView(val2[0], val2[1], val2[2], dims[0] / dims[1]);\n    return renderer.viewToWorld(val3[0], val3[1], val3[2]);\n  };\n  publicAPI.normalizedDisplayToViewport = (x, y, z, renderer) => {\n    let vCoords = renderer.getViewportByReference();\n    vCoords = publicAPI.normalizedDisplayToDisplay(vCoords[0], vCoords[1], 0.0);\n    const coords = publicAPI.normalizedDisplayToDisplay(x, y, z);\n    return [coords[0] - vCoords[0] - 0.5, coords[1] - vCoords[1] - 0.5, z];\n  };\n  publicAPI.viewportToNormalizedViewport = (x, y, z, renderer) => {\n    const size = publicAPI.getViewportSize(renderer);\n    if (size && size[0] !== 0 && size[1] !== 0) {\n      return [x / (size[0] - 1.0), y / (size[1] - 1.0), z];\n    }\n    return [x, y, z];\n  };\n  publicAPI.normalizedViewportToViewport = (x, y, z, renderer) => {\n    const size = publicAPI.getViewportSize(renderer);\n    return [x * (size[0] - 1.0), y * (size[1] - 1.0), z];\n  };\n  publicAPI.displayToLocalDisplay = (x, y, z) => {\n    const size = publicAPI.getFramebufferSize();\n    return [x, size[1] - y - 1, z];\n  };\n  publicAPI.viewportToNormalizedDisplay = (x, y, z, renderer) => {\n    let vCoords = renderer.getViewportByReference();\n    vCoords = publicAPI.normalizedDisplayToDisplay(vCoords[0], vCoords[1], 0.0);\n    const x2 = x + vCoords[0] + 0.5;\n    const y2 = y + vCoords[1] + 0.5;\n    return publicAPI.displayToNormalizedDisplay(x2, y2, z);\n  };\n  publicAPI.getComputedDevicePixelRatio = () => model.size[0] / publicAPI.getContainerSize()[0];\n  publicAPI.getContainerSize = () => {\n    macro.vtkErrorMacro('not implemented');\n  };\n  publicAPI.getPixelData = (x1, y1, x2, y2) => {\n    macro.vtkErrorMacro('not implemented');\n  };\n  publicAPI.createSelector = () => {\n    macro.vtkErrorMacro('not implemented');\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  size: undefined,\n  selector: undefined\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  if (!model.size) {\n    model.size = [300, 300];\n  }\n  macro.getArray(publicAPI, model, ['size'], 2);\n  macro.get(publicAPI, model, ['selector']);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n\n  // Object methods\n  vtkRenderWindowViewNode(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkRenderWindowViewNode');\n\n// ----------------------------------------------------------------------------\n\nvar vtkRenderWindowViewNode$1 = {\n  newInstance,\n  extend\n};\nexport { vtkRenderWindowViewNode$1 as default, extend, newInstance };","map":{"version":3,"names":["m","macro","vtkViewNode","vtkRenderWindowViewNode","publicAPI","model","classHierarchy","push","getViewNodeFactory","getAspectRatio","size","getAspectRatioForRenderer","renderer","viewport","getViewportByReference","isInViewport","x","y","vCoords","getFramebufferSize","getViewportSize","getViewportCenter","displayToNormalizedDisplay","z","normalizedDisplayToDisplay","worldToView","viewToWorld","worldToDisplay","val","dims","val2","viewToProjection","val3","projectionToNormalizedDisplay","displayToWorld","normalizedDisplayToProjection","projectionToView","normalizedDisplayToViewport","coords","viewportToNormalizedViewport","normalizedViewportToViewport","displayToLocalDisplay","viewportToNormalizedDisplay","x2","y2","getComputedDevicePixelRatio","getContainerSize","vtkErrorMacro","getPixelData","x1","y1","createSelector","DEFAULT_VALUES","undefined","selector","extend","initialValues","arguments","length","Object","assign","getArray","get","newInstance","vtkRenderWindowViewNode$1","default"],"sources":["/root/vue-cornerstone-demo/node_modules/@kitware/vtk.js/Rendering/SceneGraph/RenderWindowViewNode.js"],"sourcesContent":["import { m as macro } from '../../macros2.js';\nimport vtkViewNode from './ViewNode.js';\n\n// ----------------------------------------------------------------------------\n// vtkRenderWindowViewNode is intended to be a superclass for all api specific\n// RenderWindows. It is intended to define a common API that can be invoked\n// upon an api specific render window and provide some common method\n// implementations. If your application requires communicating with an api specific\n// view try to limit such interactions to methods defined in this class.\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n// vtkRenderWindowViewNode methods\n// ----------------------------------------------------------------------------\n\nfunction vtkRenderWindowViewNode(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkRenderWindowViewNode');\n  publicAPI.getViewNodeFactory = () => null;\n  publicAPI.getAspectRatio = () => model.size[0] / model.size[1];\n  publicAPI.getAspectRatioForRenderer = renderer => {\n    const viewport = renderer.getViewportByReference();\n    return model.size[0] * (viewport[2] - viewport[0]) / ((viewport[3] - viewport[1]) * model.size[1]);\n  };\n  publicAPI.isInViewport = (x, y, viewport) => {\n    const vCoords = viewport.getViewportByReference();\n    const size = publicAPI.getFramebufferSize();\n    if (vCoords[0] * size[0] <= x && vCoords[2] * size[0] >= x && vCoords[1] * size[1] <= y && vCoords[3] * size[1] >= y) {\n      return true;\n    }\n    return false;\n  };\n  publicAPI.getViewportSize = viewport => {\n    const vCoords = viewport.getViewportByReference();\n    const size = publicAPI.getFramebufferSize();\n    return [(vCoords[2] - vCoords[0]) * size[0], (vCoords[3] - vCoords[1]) * size[1]];\n  };\n  publicAPI.getViewportCenter = viewport => {\n    const size = publicAPI.getViewportSize(viewport);\n    return [size[0] * 0.5, size[1] * 0.5];\n  };\n  publicAPI.displayToNormalizedDisplay = (x, y, z) => {\n    const size = publicAPI.getFramebufferSize();\n    return [x / size[0], y / size[1], z];\n  };\n  publicAPI.normalizedDisplayToDisplay = (x, y, z) => {\n    const size = publicAPI.getFramebufferSize();\n    return [x * size[0], y * size[1], z];\n  };\n  publicAPI.worldToView = (x, y, z, renderer) => renderer.worldToView(x, y, z);\n  publicAPI.viewToWorld = (x, y, z, renderer) => renderer.viewToWorld(x, y, z);\n  publicAPI.worldToDisplay = (x, y, z, renderer) => {\n    const val = renderer.worldToView(x, y, z);\n    const dims = publicAPI.getViewportSize(renderer);\n    const val2 = renderer.viewToProjection(val[0], val[1], val[2], dims[0] / dims[1]);\n    const val3 = renderer.projectionToNormalizedDisplay(val2[0], val2[1], val2[2]);\n    return publicAPI.normalizedDisplayToDisplay(val3[0], val3[1], val3[2]);\n  };\n  publicAPI.displayToWorld = (x, y, z, renderer) => {\n    const val = publicAPI.displayToNormalizedDisplay(x, y, z);\n    const val2 = renderer.normalizedDisplayToProjection(val[0], val[1], val[2]);\n    const dims = publicAPI.getViewportSize(renderer);\n    const val3 = renderer.projectionToView(val2[0], val2[1], val2[2], dims[0] / dims[1]);\n    return renderer.viewToWorld(val3[0], val3[1], val3[2]);\n  };\n  publicAPI.normalizedDisplayToViewport = (x, y, z, renderer) => {\n    let vCoords = renderer.getViewportByReference();\n    vCoords = publicAPI.normalizedDisplayToDisplay(vCoords[0], vCoords[1], 0.0);\n    const coords = publicAPI.normalizedDisplayToDisplay(x, y, z);\n    return [coords[0] - vCoords[0] - 0.5, coords[1] - vCoords[1] - 0.5, z];\n  };\n  publicAPI.viewportToNormalizedViewport = (x, y, z, renderer) => {\n    const size = publicAPI.getViewportSize(renderer);\n    if (size && size[0] !== 0 && size[1] !== 0) {\n      return [x / (size[0] - 1.0), y / (size[1] - 1.0), z];\n    }\n    return [x, y, z];\n  };\n  publicAPI.normalizedViewportToViewport = (x, y, z, renderer) => {\n    const size = publicAPI.getViewportSize(renderer);\n    return [x * (size[0] - 1.0), y * (size[1] - 1.0), z];\n  };\n  publicAPI.displayToLocalDisplay = (x, y, z) => {\n    const size = publicAPI.getFramebufferSize();\n    return [x, size[1] - y - 1, z];\n  };\n  publicAPI.viewportToNormalizedDisplay = (x, y, z, renderer) => {\n    let vCoords = renderer.getViewportByReference();\n    vCoords = publicAPI.normalizedDisplayToDisplay(vCoords[0], vCoords[1], 0.0);\n    const x2 = x + vCoords[0] + 0.5;\n    const y2 = y + vCoords[1] + 0.5;\n    return publicAPI.displayToNormalizedDisplay(x2, y2, z);\n  };\n  publicAPI.getComputedDevicePixelRatio = () => model.size[0] / publicAPI.getContainerSize()[0];\n  publicAPI.getContainerSize = () => {\n    macro.vtkErrorMacro('not implemented');\n  };\n  publicAPI.getPixelData = (x1, y1, x2, y2) => {\n    macro.vtkErrorMacro('not implemented');\n  };\n  publicAPI.createSelector = () => {\n    macro.vtkErrorMacro('not implemented');\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  size: undefined,\n  selector: undefined\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  if (!model.size) {\n    model.size = [300, 300];\n  }\n  macro.getArray(publicAPI, model, ['size'], 2);\n  macro.get(publicAPI, model, ['selector']);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n\n  // Object methods\n  vtkRenderWindowViewNode(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkRenderWindowViewNode');\n\n// ----------------------------------------------------------------------------\n\nvar vtkRenderWindowViewNode$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkRenderWindowViewNode$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}