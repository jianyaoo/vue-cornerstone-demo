{"ast":null,"code":"import SegmentationRepresentations from '../../enums/SegmentationRepresentations';\nimport { labelmapDisplay } from '../../tools/displayTools/Labelmap';\nimport { contourDisplay } from '../../tools/displayTools/Contour';\nimport { getSegmentationRepresentations, getSegmentationRepresentationByUID } from './segmentationState';\nfunction removeSegmentationsFromToolGroup(toolGroupId, segmentationRepresentationUIDs, immediate) {\n  const toolGroupSegRepresentations = getSegmentationRepresentations(toolGroupId);\n  if (!toolGroupSegRepresentations || toolGroupSegRepresentations.length === 0) {\n    return;\n  }\n  const toolGroupSegRepresentationUIDs = toolGroupSegRepresentations.map(representation => representation.segmentationRepresentationUID);\n  let segRepresentationUIDsToRemove = segmentationRepresentationUIDs;\n  if (segRepresentationUIDsToRemove) {\n    const invalidSegRepresentationUIDs = segmentationRepresentationUIDs.filter(segRepresentationUID => !toolGroupSegRepresentationUIDs.includes(segRepresentationUID));\n    if (invalidSegRepresentationUIDs.length > 0) {\n      throw new Error(`The following segmentationRepresentationUIDs are not part of the toolGroup: ${JSON.stringify(invalidSegRepresentationUIDs)}`);\n    }\n  } else {\n    segRepresentationUIDsToRemove = toolGroupSegRepresentationUIDs;\n  }\n  segRepresentationUIDsToRemove.forEach(segmentationDataUID => {\n    _removeSegmentation(toolGroupId, segmentationDataUID, immediate);\n  });\n}\nfunction _removeSegmentation(toolGroupId, segmentationRepresentationUID, immediate) {\n  const segmentationRepresentation = getSegmentationRepresentationByUID(toolGroupId, segmentationRepresentationUID);\n  const {\n    type\n  } = segmentationRepresentation;\n  if (type === SegmentationRepresentations.Labelmap) {\n    labelmapDisplay.removeSegmentationRepresentation(toolGroupId, segmentationRepresentationUID, immediate);\n  } else if (type === SegmentationRepresentations.Contour) {\n    contourDisplay.removeSegmentationRepresentation(toolGroupId, segmentationRepresentationUID, immediate);\n  } else {\n    throw new Error(`The representation ${type} is not supported yet`);\n  }\n}\nexport default removeSegmentationsFromToolGroup;","map":{"version":3,"names":["SegmentationRepresentations","labelmapDisplay","contourDisplay","getSegmentationRepresentations","getSegmentationRepresentationByUID","removeSegmentationsFromToolGroup","toolGroupId","segmentationRepresentationUIDs","immediate","toolGroupSegRepresentations","length","toolGroupSegRepresentationUIDs","map","representation","segmentationRepresentationUID","segRepresentationUIDsToRemove","invalidSegRepresentationUIDs","filter","segRepresentationUID","includes","Error","JSON","stringify","forEach","segmentationDataUID","_removeSegmentation","segmentationRepresentation","type","Labelmap","removeSegmentationRepresentation","Contour"],"sources":["../../../../src/stateManagement/segmentation/removeSegmentationsFromToolGroup.ts"],"sourcesContent":[null],"mappings":"AAAA,OAAOA,2BAA2B,MAAM,yCAAyC;AACjF,SAASC,eAAe,QAAQ,mCAAmC;AACnE,SAASC,cAAc,QAAQ,kCAAkC;AAEjE,SACEC,8BAA8B,EAC9BC,kCAAkC,QAC7B,qBAAqB;AAQ5B,SAASC,gCAAgCA,CACvCC,WAAmB,EACnBC,8BAAqD,EACrDC,SAAmB;EAEnB,MAAMC,2BAA2B,GAC/BN,8BAA8B,CAACG,WAAW,CAAC;EAE7C,IACE,CAACG,2BAA2B,IAC5BA,2BAA2B,CAACC,MAAM,KAAK,CAAC,EACxC;IACA;;EAGF,MAAMC,8BAA8B,GAAGF,2BAA2B,CAACG,GAAG,CACnEC,cAAc,IAAKA,cAAc,CAACC,6BAA6B,CACjE;EAED,IAAIC,6BAA6B,GAAGR,8BAA8B;EAClE,IAAIQ,6BAA6B,EAAE;IAGjC,MAAMC,4BAA4B,GAAGT,8BAA8B,CAACU,MAAM,CACvEC,oBAAoB,IACnB,CAACP,8BAA8B,CAACQ,QAAQ,CAACD,oBAAoB,CAAC,CACjE;IAED,IAAIF,4BAA4B,CAACN,MAAM,GAAG,CAAC,EAAE;MAC3C,MAAM,IAAIU,KAAK,CACb,+EAA+EC,IAAI,CAACC,SAAS,CAC3FN,4BAA4B,CAC7B,EAAE,CACJ;;GAEJ,MAAM;IAELD,6BAA6B,GAAGJ,8BAA8B;;EAGhEI,6BAA6B,CAACQ,OAAO,CAAEC,mBAAmB,IAAI;IAC5DC,mBAAmB,CAACnB,WAAW,EAAEkB,mBAAmB,EAAEhB,SAAS,CAAC;EAClE,CAAC,CAAC;AACJ;AAEA,SAASiB,mBAAmBA,CAC1BnB,WAAmB,EACnBQ,6BAAqC,EACrCN,SAAmB;EAEnB,MAAMkB,0BAA0B,GAAGtB,kCAAkC,CACnEE,WAAW,EACXQ,6BAA6B,CAC9B;EAED,MAAM;IAAEa;EAAI,CAAE,GAAGD,0BAA0B;EAE3C,IAAIC,IAAI,KAAK3B,2BAA2B,CAAC4B,QAAQ,EAAE;IACjD3B,eAAe,CAAC4B,gCAAgC,CAC9CvB,WAAW,EACXQ,6BAA6B,EAC7BN,SAAS,CACV;GACF,MAAM,IAAImB,IAAI,KAAK3B,2BAA2B,CAAC8B,OAAO,EAAE;IACvD5B,cAAc,CAAC2B,gCAAgC,CAC7CvB,WAAW,EACXQ,6BAA6B,EAC7BN,SAAS,CACV;GACF,MAAM;IACL,MAAM,IAAIY,KAAK,CAAC,sBAAsBO,IAAI,uBAAuB,CAAC;;AAEtE;AAEA,eAAetB,gCAAgC"},"metadata":{},"sourceType":"module","externalDependencies":[]}