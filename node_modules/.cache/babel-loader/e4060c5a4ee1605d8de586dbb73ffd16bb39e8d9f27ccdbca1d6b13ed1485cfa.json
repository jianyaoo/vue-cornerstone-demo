{"ast":null,"code":"import _getHash from './_getHash';\nimport _setAttributesIfNecessary from './setAttributesIfNecessary';\nimport _setNewAttributesIfValid from './setNewAttributesIfValid';\nexport default function drawRedactionRect(svgDrawingHelper, annotationUID, rectangleUID, start, end, options = {}) {\n  const {\n    color,\n    width: _width,\n    lineWidth,\n    lineDash\n  } = Object.assign({\n    color: 'dodgerblue',\n    width: '2',\n    lineWidth: undefined,\n    lineDash: undefined\n  }, options);\n  const strokeWidth = lineWidth || _width;\n  const svgns = 'http://www.w3.org/2000/svg';\n  const svgNodeHash = _getHash(annotationUID, 'rect', rectangleUID);\n  const existingRect = svgDrawingHelper.getSvgNode(svgNodeHash);\n  const tlhc = [Math.min(start[0], end[0]), Math.min(start[1], end[1])];\n  const width = Math.abs(start[0] - end[0]);\n  const height = Math.abs(start[1] - end[1]);\n  const attributes = {\n    x: `${tlhc[0]}`,\n    y: `${tlhc[1]}`,\n    width: `${width}`,\n    height: `${height}`,\n    stroke: color,\n    fill: 'black',\n    'stroke-width': strokeWidth,\n    'stroke-dasharray': lineDash\n  };\n  if (existingRect) {\n    _setAttributesIfNecessary(attributes, existingRect);\n    svgDrawingHelper.setNodeTouched(svgNodeHash);\n  } else {\n    const svgRectElement = document.createElementNS(svgns, 'rect');\n    _setNewAttributesIfValid(attributes, svgRectElement);\n    svgDrawingHelper.appendNode(svgRectElement, svgNodeHash);\n  }\n}","map":{"version":3,"names":["_getHash","_setAttributesIfNecessary","_setNewAttributesIfValid","drawRedactionRect","svgDrawingHelper","annotationUID","rectangleUID","start","end","options","color","width","_width","lineWidth","lineDash","Object","assign","undefined","strokeWidth","svgns","svgNodeHash","existingRect","getSvgNode","tlhc","Math","min","abs","height","attributes","x","y","stroke","fill","setNodeTouched","svgRectElement","document","createElementNS","appendNode"],"sources":["../../../src/drawingSvg/drawRedactionRect.ts"],"sourcesContent":[null],"mappings":"AAAA,OAAOA,QAAQ,MAAM,YAAY;AACjC,OAAOC,yBAAyB,MAAM,4BAA4B;AAClE,OAAOC,wBAAwB,MAAM,2BAA2B;AAGhE,eAAc,SAAUC,iBAAiBA,CACvCC,gBAAqB,EACrBC,aAAqB,EACrBC,YAAoB,EACpBC,KAAU,EACVC,GAAQ,EACRC,OAAO,GAAG,EAAE;EAEZ,MAAM;IACJC,KAAK;IACLC,KAAK,EAAEC,MAAM;IACbC,SAAS;IACTC;EAAQ,CACT,GAAGC,MAAM,CAACC,MAAM,CACf;IACEN,KAAK,EAAE,YAAY;IACnBC,KAAK,EAAE,GAAG;IACVE,SAAS,EAAEI,SAAS;IACpBH,QAAQ,EAAEG;GACX,EACDR,OAAO,CACR;EAGD,MAAMS,WAAW,GAAGL,SAAS,IAAID,MAAM;EAEvC,MAAMO,KAAK,GAAG,4BAA4B;EAC1C,MAAMC,WAAW,GAAGpB,QAAQ,CAACK,aAAa,EAAE,MAAM,EAAEC,YAAY,CAAC;EACjE,MAAMe,YAAY,GAAGjB,gBAAgB,CAACkB,UAAU,CAACF,WAAW,CAAC;EAE7D,MAAMG,IAAI,GAAG,CAACC,IAAI,CAACC,GAAG,CAAClB,KAAK,CAAC,CAAC,CAAC,EAAEC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAEgB,IAAI,CAACC,GAAG,CAAClB,KAAK,CAAC,CAAC,CAAC,EAAEC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACrE,MAAMG,KAAK,GAAGa,IAAI,CAACE,GAAG,CAACnB,KAAK,CAAC,CAAC,CAAC,GAAGC,GAAG,CAAC,CAAC,CAAC,CAAC;EACzC,MAAMmB,MAAM,GAAGH,IAAI,CAACE,GAAG,CAACnB,KAAK,CAAC,CAAC,CAAC,GAAGC,GAAG,CAAC,CAAC,CAAC,CAAC;EAE1C,MAAMoB,UAAU,GAAG;IACjBC,CAAC,EAAE,GAAGN,IAAI,CAAC,CAAC,CAAC,EAAE;IACfO,CAAC,EAAE,GAAGP,IAAI,CAAC,CAAC,CAAC,EAAE;IACfZ,KAAK,EAAE,GAAGA,KAAK,EAAE;IACjBgB,MAAM,EAAE,GAAGA,MAAM,EAAE;IACnBI,MAAM,EAAErB,KAAK;IACbsB,IAAI,EAAE,OAAO;IACb,cAAc,EAAEd,WAAW;IAC3B,kBAAkB,EAAEJ;GACrB;EAED,IAAIO,YAAY,EAAE;IAChBpB,yBAAyB,CAAC2B,UAAU,EAAEP,YAAY,CAAC;IAEnDjB,gBAAgB,CAAC6B,cAAc,CAACb,WAAW,CAAC;GAC7C,MAAM;IACL,MAAMc,cAAc,GAAGC,QAAQ,CAACC,eAAe,CAACjB,KAAK,EAAE,MAAM,CAAC;IAE9DjB,wBAAwB,CAAC0B,UAAU,EAAEM,cAAc,CAAC;IAEpD9B,gBAAgB,CAACiC,UAAU,CAACH,cAAc,EAAEd,WAAW,CAAC;;AAE5D"},"metadata":{},"sourceType":"module","externalDependencies":[]}