{"ast":null,"code":"import { vec3 } from 'gl-matrix';\nimport { eventTarget, Enums, getRenderingEngine, CONSTANTS } from '@cornerstonejs/core';\nimport { Events as cstEvents } from '../enums';\nimport { AdvancedMagnifyViewport } from './AdvancedMagnifyViewport';\nconst ADVANCED_MAGNIFY_TOOL_NAME = 'AdvancedMagnify';\nconst PARALLEL_THRESHOLD = 1 - CONSTANTS.EPSILON;\nconst {\n  Events\n} = Enums;\nclass AdvancedMagnifyViewportManager {\n  constructor() {\n    this.createViewport = (annotation, viewportInfo) => {\n      const {\n        magnifyViewportId,\n        sourceEnabledElement,\n        position,\n        radius,\n        zoomFactor,\n        autoPan\n      } = viewportInfo;\n      const {\n        viewport: sourceViewport\n      } = sourceEnabledElement;\n      const {\n        element: sourceElement\n      } = sourceViewport;\n      const magnifyViewport = new AdvancedMagnifyViewport({\n        magnifyViewportId,\n        sourceEnabledElement,\n        radius,\n        position,\n        zoomFactor,\n        autoPan\n      });\n      this._addSourceElementEventListener(sourceElement);\n      this._magnifyViewportsMap.set(magnifyViewport.viewportId, {\n        annotation,\n        magnifyViewport\n      });\n      return magnifyViewport;\n    };\n    this._annotationRemovedCallback = evt => {\n      const {\n        annotation\n      } = evt.detail;\n      if (annotation.metadata.toolName !== ADVANCED_MAGNIFY_TOOL_NAME) {\n        return;\n      }\n      this._destroyViewport(annotation.data.magnifyViewportId);\n    };\n    this._newStackImageCallback = evt => {\n      const {\n        viewportId: sourceViewportId,\n        imageId\n      } = evt.detail;\n      const magnifyViewportsMapEntries = this._getMagnifyViewportsMapEntriesBySourceViewportId(sourceViewportId);\n      magnifyViewportsMapEntries.forEach(({\n        annotation\n      }) => {\n        annotation.metadata.referencedImageId = imageId;\n        annotation.invalidated = true;\n      });\n    };\n    this._newVolumeImageCallback = evt => {\n      const {\n        renderingEngineId,\n        viewportId: sourceViewportId\n      } = evt.detail;\n      const renderingEngine = getRenderingEngine(renderingEngineId);\n      const sourceViewport = renderingEngine.getViewport(sourceViewportId);\n      const {\n        viewPlaneNormal: currentViewPlaneNormal\n      } = sourceViewport.getCamera();\n      const magnifyViewportsMapEntries = this._getMagnifyViewportsMapEntriesBySourceViewportId(sourceViewportId);\n      magnifyViewportsMapEntries.forEach(({\n        annotation\n      }) => {\n        const {\n          viewPlaneNormal\n        } = annotation.metadata;\n        const isParallel = Math.abs(vec3.dot(viewPlaneNormal, currentViewPlaneNormal)) > PARALLEL_THRESHOLD;\n        if (!isParallel) {\n          return;\n        }\n        const {\n          handles\n        } = annotation.data;\n        const worldImagePlanePoint = sourceViewport.canvasToWorld([0, 0]);\n        const vecHandleToImagePlane = vec3.sub(vec3.create(), worldImagePlanePoint, handles.points[0]);\n        const worldDist = vec3.dot(vecHandleToImagePlane, currentViewPlaneNormal);\n        const worldDelta = vec3.scale(vec3.create(), currentViewPlaneNormal, worldDist);\n        for (let i = 0, len = handles.points.length; i < len; i++) {\n          const point = handles.points[i];\n          point[0] += worldDelta[0];\n          point[1] += worldDelta[1];\n          point[2] += worldDelta[2];\n        }\n        annotation.invalidated = true;\n      });\n    };\n    this._magnifyViewportsMap = new Map();\n    this._initialize();\n  }\n  static getInstance() {\n    AdvancedMagnifyViewportManager._singleton = AdvancedMagnifyViewportManager._singleton ?? new AdvancedMagnifyViewportManager();\n    return AdvancedMagnifyViewportManager._singleton;\n  }\n  getViewport(magnifyViewportId) {\n    return this._magnifyViewportsMap.get(magnifyViewportId)?.magnifyViewport;\n  }\n  dispose() {\n    this._removeEventListeners();\n    this._destroyViewports();\n  }\n  _destroyViewport(magnifyViewportId) {\n    const magnifyViewportMapEntry = this._magnifyViewportsMap.get(magnifyViewportId);\n    if (magnifyViewportMapEntry) {\n      const {\n        magnifyViewport\n      } = magnifyViewportMapEntry;\n      const {\n        viewport: sourceViewport\n      } = magnifyViewport.sourceEnabledElement;\n      const {\n        element: sourceElement\n      } = sourceViewport;\n      this._removeSourceElementEventListener(sourceElement);\n      magnifyViewport.dispose();\n      this._magnifyViewportsMap.delete(magnifyViewportId);\n    }\n  }\n  _destroyViewports() {\n    const magnifyViewportIds = Array.from(this._magnifyViewportsMap.keys());\n    magnifyViewportIds.forEach(magnifyViewportId => this._destroyViewport(magnifyViewportId));\n  }\n  _getMagnifyViewportsMapEntriesBySourceViewportId(sourceViewportId) {\n    const magnifyViewportsMapEntries = Array.from(this._magnifyViewportsMap.values());\n    return magnifyViewportsMapEntries.filter(({\n      magnifyViewport\n    }) => {\n      const {\n        viewport\n      } = magnifyViewport.sourceEnabledElement;\n      return viewport.id === sourceViewportId;\n    });\n  }\n  _addEventListeners() {\n    eventTarget.addEventListener(cstEvents.ANNOTATION_REMOVED, this._annotationRemovedCallback);\n  }\n  _removeEventListeners() {\n    eventTarget.removeEventListener(cstEvents.ANNOTATION_REMOVED, this._annotationRemovedCallback);\n  }\n  _addSourceElementEventListener(element) {\n    element.addEventListener(Events.STACK_NEW_IMAGE, this._newStackImageCallback);\n    element.addEventListener(Events.VOLUME_NEW_IMAGE, this._newVolumeImageCallback);\n  }\n  _removeSourceElementEventListener(element) {\n    element.removeEventListener(Events.STACK_NEW_IMAGE, this._newStackImageCallback);\n    element.removeEventListener(Events.VOLUME_NEW_IMAGE, this._newVolumeImageCallback);\n  }\n  _initialize() {\n    this._addEventListeners();\n  }\n}\nexport { AdvancedMagnifyViewportManager as default, AdvancedMagnifyViewportManager };","map":{"version":3,"names":["vec3","eventTarget","Enums","getRenderingEngine","CONSTANTS","Events","cstEvents","AdvancedMagnifyViewport","ADVANCED_MAGNIFY_TOOL_NAME","PARALLEL_THRESHOLD","EPSILON","AdvancedMagnifyViewportManager","constructor","createViewport","annotation","viewportInfo","magnifyViewportId","sourceEnabledElement","position","radius","zoomFactor","autoPan","viewport","sourceViewport","element","sourceElement","magnifyViewport","_addSourceElementEventListener","_magnifyViewportsMap","set","viewportId","_annotationRemovedCallback","evt","detail","metadata","toolName","_destroyViewport","data","_newStackImageCallback","sourceViewportId","imageId","magnifyViewportsMapEntries","_getMagnifyViewportsMapEntriesBySourceViewportId","forEach","referencedImageId","invalidated","_newVolumeImageCallback","renderingEngineId","renderingEngine","getViewport","viewPlaneNormal","currentViewPlaneNormal","getCamera","isParallel","Math","abs","dot","handles","worldImagePlanePoint","canvasToWorld","vecHandleToImagePlane","sub","create","points","worldDist","worldDelta","scale","i","len","length","point","Map","_initialize","getInstance","_singleton","get","dispose","_removeEventListeners","_destroyViewports","magnifyViewportMapEntry","_removeSourceElementEventListener","delete","magnifyViewportIds","Array","from","keys","values","filter","id","_addEventListeners","addEventListener","ANNOTATION_REMOVED","removeEventListener","STACK_NEW_IMAGE","VOLUME_NEW_IMAGE","default"],"sources":["../../../src/tools/AdvancedMagnifyViewportManager.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}