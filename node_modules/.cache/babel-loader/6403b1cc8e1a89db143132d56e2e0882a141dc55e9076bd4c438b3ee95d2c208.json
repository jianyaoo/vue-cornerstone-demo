{"ast":null,"code":"import { vec3 } from 'gl-matrix';\nexport default function pointInShapeCallback(imageData, pointInShapeFn, callback, boundsIJK) {\n  let iMin, iMax, jMin, jMax, kMin, kMax;\n  let scalarData;\n  if (imageData.getScalarData) {\n    scalarData = imageData.getScalarData();\n  } else {\n    scalarData = imageData.getPointData().getScalars().getData();\n  }\n  const dimensions = imageData.getDimensions();\n  if (!boundsIJK) {\n    iMin = 0;\n    iMax = dimensions[0];\n    jMin = 0;\n    jMax = dimensions[1];\n    kMin = 0;\n    kMax = dimensions[2];\n  } else {\n    [[iMin, iMax], [jMin, jMax], [kMin, kMax]] = boundsIJK;\n  }\n  const start = vec3.fromValues(iMin, jMin, kMin);\n  const direction = imageData.getDirection();\n  const rowCosines = direction.slice(0, 3);\n  const columnCosines = direction.slice(3, 6);\n  const scanAxisNormal = direction.slice(6, 9);\n  const spacing = imageData.getSpacing();\n  const [rowSpacing, columnSpacing, scanAxisSpacing] = spacing;\n  const worldPosStart = imageData.indexToWorld(start);\n  const rowStep = vec3.fromValues(rowCosines[0] * rowSpacing, rowCosines[1] * rowSpacing, rowCosines[2] * rowSpacing);\n  const columnStep = vec3.fromValues(columnCosines[0] * columnSpacing, columnCosines[1] * columnSpacing, columnCosines[2] * columnSpacing);\n  const scanAxisStep = vec3.fromValues(scanAxisNormal[0] * scanAxisSpacing, scanAxisNormal[1] * scanAxisSpacing, scanAxisNormal[2] * scanAxisSpacing);\n  const xMultiple = scalarData.length / dimensions[2] / dimensions[1] / dimensions[0];\n  const yMultiple = dimensions[0] * xMultiple;\n  const zMultiple = dimensions[1] * yMultiple;\n  const pointsInShape = [];\n  const currentPos = vec3.clone(worldPosStart);\n  for (let k = kMin; k <= kMax; k++) {\n    const startPosJ = vec3.clone(currentPos);\n    for (let j = jMin; j <= jMax; j++) {\n      const startPosI = vec3.clone(currentPos);\n      for (let i = iMin; i <= iMax; i++) {\n        const pointIJK = [i, j, k];\n        if (pointInShapeFn(currentPos, pointIJK)) {\n          const index = k * zMultiple + j * yMultiple + i * xMultiple;\n          let value;\n          if (xMultiple > 2) {\n            value = [scalarData[index], scalarData[index + 1], scalarData[index + 2]];\n          } else {\n            value = scalarData[index];\n          }\n          pointsInShape.push({\n            value,\n            index,\n            pointIJK,\n            pointLPS: currentPos\n          });\n          if (callback) {\n            callback({\n              value,\n              index,\n              pointIJK,\n              pointLPS: currentPos\n            });\n          }\n        }\n        vec3.add(currentPos, currentPos, rowStep);\n      }\n      vec3.copy(currentPos, startPosI);\n      vec3.add(currentPos, currentPos, columnStep);\n    }\n    vec3.copy(currentPos, startPosJ);\n    vec3.add(currentPos, currentPos, scanAxisStep);\n  }\n  return pointsInShape;\n}","map":{"version":3,"names":["vec3","pointInShapeCallback","imageData","pointInShapeFn","callback","boundsIJK","iMin","iMax","jMin","jMax","kMin","kMax","scalarData","getScalarData","getPointData","getScalars","getData","dimensions","getDimensions","start","fromValues","direction","getDirection","rowCosines","slice","columnCosines","scanAxisNormal","spacing","getSpacing","rowSpacing","columnSpacing","scanAxisSpacing","worldPosStart","indexToWorld","rowStep","columnStep","scanAxisStep","xMultiple","length","yMultiple","zMultiple","pointsInShape","currentPos","clone","k","startPosJ","j","startPosI","i","pointIJK","index","value","push","pointLPS","add","copy"],"sources":["../../../src/utilities/pointInShapeCallback.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}