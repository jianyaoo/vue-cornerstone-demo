{"ast":null,"code":"import { addProvider } from '../metaData';\nlet state = {};\nconst metadataProvider = {\n  add: (imageId, payload) => {\n    const type = payload.type;\n    if (!state[imageId]) {\n      state[imageId] = {};\n    }\n    state[imageId][type] = JSON.parse(JSON.stringify(payload.metadata));\n  },\n  get: (type, imageId) => {\n    return state[imageId]?.[type];\n  },\n  clear: () => {\n    state = {};\n  }\n};\naddProvider(metadataProvider.get);\nexport default metadataProvider;","map":{"version":3,"names":["addProvider","state","metadataProvider","add","imageId","payload","type","JSON","parse","stringify","metadata","get","clear"],"sources":["../../../src/utilities/genericMetadataProvider.ts"],"sourcesContent":[null],"mappings":"AAAA,SAASA,WAAW,QAAQ,aAAa;AAEzC,IAAIC,KAAK,GAAwB,EAAE;AAInC,MAAMC,gBAAgB,GAAG;EAMvBC,GAAG,EAAEA,CAACC,OAAe,EAAEC,OAAY,KAAU;IAC3C,MAAMC,IAAI,GAAGD,OAAO,CAACC,IAAI;IAEzB,IAAI,CAACL,KAAK,CAACG,OAAO,CAAC,EAAE;MACnBH,KAAK,CAACG,OAAO,CAAC,GAAG,EAAE;;IAIrBH,KAAK,CAACG,OAAO,CAAC,CAACE,IAAI,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACJ,OAAO,CAACK,QAAQ,CAAC,CAAC;EACrE,CAAC;EAODC,GAAG,EAAEA,CAACL,IAAY,EAAEF,OAAe,KAAS;IAC1C,OAAOH,KAAK,CAACG,OAAO,CAAC,GAAGE,IAAI,CAAC;EAC/B,CAAC;EAKDM,KAAK,EAAEA,CAAA,KAAW;IAChBX,KAAK,GAAG,EAAE;EACZ;CACD;AAEDD,WAAW,CAACE,gBAAgB,CAACS,GAAG,CAAC;AAEjC,eAAeT,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}