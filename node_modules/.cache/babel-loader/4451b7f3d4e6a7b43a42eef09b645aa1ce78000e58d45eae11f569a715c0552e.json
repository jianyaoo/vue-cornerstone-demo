{"ast":null,"code":"export class LivewirePath {\n  constructor(inputPointArray, inputControlPointIndexArray) {\n    this.pointArray = inputPointArray ? inputPointArray.slice() : [];\n    this._controlPointIndexes = inputControlPointIndexArray ? inputControlPointIndexArray.slice() : [];\n  }\n  getPoint(index) {\n    return this.pointArray[index];\n  }\n  getLastPoint() {\n    return this.pointArray[this.pointArray.length - 1];\n  }\n  isControlPoint(point) {\n    const index = this.pointArray.indexOf(point);\n    if (index !== -1) {\n      return this._controlPointIndexes.indexOf(index) !== -1;\n    } else {\n      throw new Error('Error: isControlPoint called with not in list point.');\n    }\n  }\n  addPoint(point) {\n    this.pointArray.push(point);\n  }\n  addControlPoint(point) {\n    const index = this.pointArray.indexOf(point);\n    if (index !== -1) {\n      this._controlPointIndexes.push(index);\n    } else {\n      throw new Error('Cannot mark a non registered point as control point.');\n    }\n  }\n  getControlPoints() {\n    return this._controlPointIndexes.map(i => this.pointArray[i]);\n  }\n  getNumControlPoints() {\n    return this._controlPointIndexes.length;\n  }\n  removeLastControlPoint() {\n    if (this._controlPointIndexes.length) {\n      this._controlPointIndexes.pop();\n    }\n  }\n  addPoints(newPointArray) {\n    this.pointArray = this.pointArray.concat(newPointArray);\n  }\n  prependPath(other) {\n    const otherSize = other.pointArray.length;\n    const shiftedIndexArray = [];\n    this.pointArray = other.pointArray.concat(this.pointArray);\n    for (let i = 0; i < this._controlPointIndexes.length; ++i) {\n      shiftedIndexArray[i] = this._controlPointIndexes[i] + otherSize;\n    }\n    this._controlPointIndexes = other._controlPointIndexes.concat(shiftedIndexArray);\n  }\n}","map":{"version":3,"names":["LivewirePath","constructor","inputPointArray","inputControlPointIndexArray","pointArray","slice","_controlPointIndexes","getPoint","index","getLastPoint","length","isControlPoint","point","indexOf","Error","addPoint","push","addControlPoint","getControlPoints","map","i","getNumControlPoints","removeLastControlPoint","pop","addPoints","newPointArray","concat","prependPath","other","otherSize","shiftedIndexArray"],"sources":["../../../../src/utilities/livewire/LiveWirePath.ts"],"sourcesContent":[null],"mappings":"AAKA,OAAM,MAAOA,YAAY;EAgBvBC,YACEC,eAAgC,EAChCC,2BAAsC;IAEtC,IAAI,CAACC,UAAU,GAAGF,eAAe,GAAGA,eAAe,CAACG,KAAK,EAAE,GAAG,EAAE;IAChE,IAAI,CAACC,oBAAoB,GAAGH,2BAA2B,GACnDA,2BAA2B,CAACE,KAAK,EAAE,GACnC,EAAE;EACR;EAQOE,QAAQA,CAACC,KAAa;IAC3B,OAAO,IAAI,CAACJ,UAAU,CAACI,KAAK,CAAC;EAC/B;EAOOC,YAAYA,CAAA;IACjB,OAAO,IAAI,CAACL,UAAU,CAAC,IAAI,CAACA,UAAU,CAACM,MAAM,GAAG,CAAC,CAAC;EACpD;EAQOC,cAAcA,CAACC,KAAmB;IACvC,MAAMJ,KAAK,GAAG,IAAI,CAACJ,UAAU,CAACS,OAAO,CAACD,KAAK,CAAC;IAC5C,IAAIJ,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,OAAO,IAAI,CAACF,oBAAoB,CAACO,OAAO,CAACL,KAAK,CAAC,KAAK,CAAC,CAAC;KACvD,MAAM;MACL,MAAM,IAAIM,KAAK,CAAC,sDAAsD,CAAC;;EAE3E;EAOOC,QAAQA,CAACH,KAAmB;IACjC,IAAI,CAACR,UAAU,CAACY,IAAI,CAACJ,KAAK,CAAC;EAC7B;EAOOK,eAAeA,CAACL,KAAmB;IACxC,MAAMJ,KAAK,GAAG,IAAI,CAACJ,UAAU,CAACS,OAAO,CAACD,KAAK,CAAC;IAE5C,IAAIJ,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACF,oBAAoB,CAACU,IAAI,CAACR,KAAK,CAAC;KACtC,MAAM;MACL,MAAM,IAAIM,KAAK,CAAC,sDAAsD,CAAC;;EAE3E;EAEOI,gBAAgBA,CAAA;IACrB,OAAO,IAAI,CAACZ,oBAAoB,CAACa,GAAG,CAAEC,CAAC,IAAK,IAAI,CAAChB,UAAU,CAACgB,CAAC,CAAC,CAAC;EACjE;EAEOC,mBAAmBA,CAAA;IACxB,OAAO,IAAI,CAACf,oBAAoB,CAACI,MAAM;EACzC;EAEOY,sBAAsBA,CAAA;IAC3B,IAAI,IAAI,CAAChB,oBAAoB,CAACI,MAAM,EAAE;MACpC,IAAI,CAACJ,oBAAoB,CAACiB,GAAG,EAAE;;EAEnC;EAOOC,SAASA,CAACC,aAA6B;IAC5C,IAAI,CAACrB,UAAU,GAAG,IAAI,CAACA,UAAU,CAACsB,MAAM,CAACD,aAAa,CAAC;EACzD;EAOOE,WAAWA,CAACC,KAAmB;IACpC,MAAMC,SAAS,GAAGD,KAAK,CAACxB,UAAU,CAACM,MAAM;IACzC,MAAMoB,iBAAiB,GAAa,EAAE;IAEtC,IAAI,CAAC1B,UAAU,GAAGwB,KAAK,CAACxB,UAAU,CAACsB,MAAM,CAAC,IAAI,CAACtB,UAAU,CAAC;IAE1D,KAAK,IAAIgB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,IAAI,CAACd,oBAAoB,CAACI,MAAM,EAAE,EAAEU,CAAC,EAAE;MACzDU,iBAAiB,CAACV,CAAC,CAAC,GAAG,IAAI,CAACd,oBAAoB,CAACc,CAAC,CAAC,GAAGS,SAAS;;IAGjE,IAAI,CAACvB,oBAAoB,GACvBsB,KAAK,CAACtB,oBAAoB,CAACoB,MAAM,CAACI,iBAAiB,CAAC;EACxD"},"metadata":{},"sourceType":"module","externalDependencies":[]}