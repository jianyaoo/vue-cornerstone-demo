{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { glMatrix, vec3 } from 'gl-matrix';\nimport { utilities as csUtils, getEnabledElement, StackViewport, VolumeViewport, cache, BaseVolumeViewport, Enums } from '@cornerstonejs/core';\nimport CINE_EVENTS from './events';\nimport { addToolState, getToolState } from './state';\nimport scroll from '../scroll';\nconst {\n  ViewportStatus\n} = Enums;\nconst {\n  triggerEvent\n} = csUtils;\nconst debounced = true;\nconst loop = true;\nconst dynamicVolumesPlayingMap = new Map();\nfunction playClip(element, playClipOptions) {\n  let playClipTimeouts;\n  let playClipIsTimeVarying;\n  if (element === undefined) {\n    throw new Error('playClip: element must not be undefined');\n  }\n  const enabledElement = getEnabledElement(element);\n  if (!enabledElement) {\n    throw new Error('playClip: element must be a valid Cornerstone enabled element');\n  }\n  playClipOptions.dynamicCineEnabled = playClipOptions.dynamicCineEnabled ?? true;\n  const {\n    viewport\n  } = enabledElement;\n  const volume = _getVolumeFromViewport(viewport);\n  const playClipContext = _createCinePlayContext(viewport, playClipOptions);\n  let playClipData = getToolState(element);\n  const isDynamicCinePlaying = playClipOptions.dynamicCineEnabled && volume?.isDynamicVolume();\n  if (isDynamicCinePlaying) {\n    _stopDynamicVolumeCine(element);\n  }\n  if (!playClipData) {\n    playClipData = {\n      intervalId: undefined,\n      framesPerSecond: 30,\n      lastFrameTimeStamp: undefined,\n      ignoreFrameTimeVector: false,\n      usingFrameTimeVector: false,\n      frameTimeVector: playClipOptions.frameTimeVector ?? undefined,\n      speed: playClipOptions.frameTimeVectorSpeedMultiplier ?? 1,\n      reverse: playClipOptions.reverse ?? false,\n      loop: playClipOptions.loop ?? true\n    };\n    addToolState(element, playClipData);\n  } else {\n    _stopClip(element, isDynamicCinePlaying);\n  }\n  playClipData.dynamicCineEnabled = playClipOptions.dynamicCineEnabled;\n  if (playClipOptions.framesPerSecond < 0 || playClipOptions.framesPerSecond > 0) {\n    playClipData.framesPerSecond = Number(playClipOptions.framesPerSecond);\n    playClipData.reverse = playClipData.framesPerSecond < 0;\n    playClipData.ignoreFrameTimeVector = true;\n  }\n  if (playClipData.ignoreFrameTimeVector !== true && playClipData.frameTimeVector && playClipData.frameTimeVector.length === playClipContext.numScrollSteps && playClipContext.frameTimeVectorEnabled) {\n    const {\n      timeouts,\n      isTimeVarying\n    } = _getPlayClipTimeouts(playClipData.frameTimeVector, playClipData.speed);\n    playClipTimeouts = timeouts;\n    playClipIsTimeVarying = isTimeVarying;\n  }\n  const playClipAction = () => {\n    const {\n      numScrollSteps,\n      currentStepIndex\n    } = playClipContext;\n    let newStepIndex = currentStepIndex + (playClipData.reverse ? -1 : 1);\n    const newStepIndexOutOfRange = newStepIndex < 0 || newStepIndex >= numScrollSteps;\n    if (!loop && newStepIndexOutOfRange) {\n      _stopClip(element, isDynamicCinePlaying);\n      const eventDetail = {\n        element\n      };\n      triggerEvent(element, CINE_EVENTS.CLIP_STOPPED, eventDetail);\n      return;\n    }\n    if (newStepIndex >= numScrollSteps) {\n      newStepIndex = 0;\n    } else if (newStepIndex < 0) {\n      newStepIndex = numScrollSteps - 1;\n    }\n    const delta = newStepIndex - currentStepIndex;\n    if (delta) {\n      playClipContext.scroll(delta);\n    }\n  };\n  if (isDynamicCinePlaying) {\n    dynamicVolumesPlayingMap.set(volume.volumeId, element);\n  }\n  if (playClipTimeouts && playClipTimeouts.length > 0 && playClipIsTimeVarying) {\n    playClipData.usingFrameTimeVector = true;\n    playClipData.intervalId = window.setTimeout(function playClipTimeoutHandler() {\n      playClipData.intervalId = window.setTimeout(playClipTimeoutHandler, playClipTimeouts[playClipContext.currentStepIndex]);\n      playClipAction();\n    }, 0);\n  } else {\n    playClipData.usingFrameTimeVector = false;\n    playClipData.intervalId = window.setInterval(playClipAction, 1000 / Math.abs(playClipData.framesPerSecond));\n  }\n  const eventDetail = {\n    element\n  };\n  triggerEvent(element, CINE_EVENTS.CLIP_STARTED, eventDetail);\n}\nfunction stopClip(element) {\n  _stopClip(element, true);\n}\nfunction _stopClip(element, stopDynamicCine) {\n  const enabledElement = getEnabledElement(element);\n  if (!enabledElement) {\n    return;\n  }\n  const {\n    viewport\n  } = enabledElement;\n  const cineToolData = getToolState(viewport.element);\n  if (cineToolData) {\n    _stopClipWithData(cineToolData);\n  }\n  if (stopDynamicCine && viewport instanceof BaseVolumeViewport) {\n    _stopDynamicVolumeCine(element);\n  }\n}\nfunction _stopDynamicVolumeCine(element) {\n  const {\n    viewport\n  } = getEnabledElement(element);\n  const volume = _getVolumeFromViewport(viewport);\n  if (volume?.isDynamicVolume()) {\n    const dynamicCineElement = dynamicVolumesPlayingMap.get(volume.volumeId);\n    dynamicVolumesPlayingMap.delete(volume.volumeId);\n    if (dynamicCineElement && dynamicCineElement !== element) {\n      stopClip(dynamicCineElement);\n    }\n  }\n}\nfunction _getPlayClipTimeouts(vector, speed) {\n  let i;\n  let sample;\n  let delay;\n  let sum = 0;\n  const limit = vector.length;\n  const timeouts = [];\n  let isTimeVarying = false;\n  if (typeof speed !== 'number' || speed <= 0) {\n    speed = 1;\n  }\n  for (i = 1; i < limit; i++) {\n    delay = Number(vector[i]) / speed | 0;\n    timeouts.push(delay);\n    if (i === 1) {\n      sample = delay;\n    } else if (delay !== sample) {\n      isTimeVarying = true;\n    }\n    sum += delay;\n  }\n  if (timeouts.length > 0) {\n    if (isTimeVarying) {\n      delay = sum / timeouts.length | 0;\n    } else {\n      delay = timeouts[0];\n    }\n    timeouts.push(delay);\n  }\n  return {\n    timeouts,\n    isTimeVarying\n  };\n}\nfunction _stopClipWithData(playClipData) {\n  const id = playClipData.intervalId;\n  if (typeof id !== 'undefined') {\n    playClipData.intervalId = undefined;\n    if (playClipData.usingFrameTimeVector) {\n      clearTimeout(id);\n    } else {\n      clearInterval(id);\n    }\n  }\n}\nfunction _getVolumesFromViewport(viewport) {\n  return viewport.getActors().map(actor => cache.getVolume(actor.uid)).filter(volume => !!volume);\n}\nfunction _getVolumeFromViewport(viewport) {\n  const volumes = _getVolumesFromViewport(viewport);\n  const dynamicVolume = volumes.find(volume => volume.isDynamicVolume());\n  return dynamicVolume ?? volumes[0];\n}\nfunction _createStackViewportCinePlayContext(viewport, waitForRendered) {\n  const imageIds = viewport.getImageIds();\n  return {\n    get numScrollSteps() {\n      return imageIds.length;\n    },\n    get currentStepIndex() {\n      return viewport.getTargetImageIdIndex();\n    },\n    get frameTimeVectorEnabled() {\n      return true;\n    },\n    waitForRenderedCount: 0,\n    scroll(delta) {\n      if (this.waitForRenderedCount <= waitForRendered && viewport.viewportStatus !== ViewportStatus.RENDERED) {\n        this.waitForRenderedCount++;\n        return;\n      }\n      this.waitForRenderedCount = 0;\n      scroll(viewport, {\n        delta,\n        debounceLoading: debounced\n      });\n    }\n  };\n}\nfunction _createVolumeViewportCinePlayContext(viewport, volume) {\n  const {\n    volumeId\n  } = volume;\n  const cachedScrollInfo = {\n    viewPlaneNormal: vec3.create(),\n    scrollInfo: null\n  };\n  const getScrollInfo = () => {\n    const camera = viewport.getCamera();\n    const updateCache = !cachedScrollInfo.scrollInfo || !vec3.equals(camera.viewPlaneNormal, cachedScrollInfo.viewPlaneNormal);\n    if (updateCache) {\n      const scrollInfo = csUtils.getVolumeViewportScrollInfo(viewport, volumeId);\n      cachedScrollInfo.viewPlaneNormal = camera.viewPlaneNormal;\n      cachedScrollInfo.scrollInfo = scrollInfo;\n    }\n    return cachedScrollInfo.scrollInfo;\n  };\n  return {\n    get numScrollSteps() {\n      return getScrollInfo().numScrollSteps;\n    },\n    get currentStepIndex() {\n      return getScrollInfo().currentStepIndex;\n    },\n    get frameTimeVectorEnabled() {\n      const camera = viewport.getCamera();\n      const volumeViewPlaneNormal = volume.direction.slice(6, 9).map(x => -x);\n      const dot = vec3.dot(volumeViewPlaneNormal, camera.viewPlaneNormal);\n      return glMatrix.equals(dot, 1);\n    },\n    scroll(delta) {\n      getScrollInfo().currentStepIndex += delta;\n      scroll(viewport, {\n        delta\n      });\n    }\n  };\n}\nfunction _createDynamicVolumeViewportCinePlayContext(volume) {\n  return {\n    get numScrollSteps() {\n      return volume.numTimePoints;\n    },\n    get currentStepIndex() {\n      return volume.timePointIndex;\n    },\n    get frameTimeVectorEnabled() {\n      return false;\n    },\n    scroll(delta) {\n      volume.timePointIndex += delta;\n    }\n  };\n}\nfunction _createCinePlayContext(viewport, playClipOptions) {\n  if (viewport instanceof StackViewport) {\n    return _createStackViewportCinePlayContext(viewport, playClipOptions.waitForRendered ?? 30);\n  }\n  if (viewport instanceof VolumeViewport) {\n    const volume = _getVolumeFromViewport(viewport);\n    if (playClipOptions.dynamicCineEnabled && volume?.isDynamicVolume()) {\n      return _createDynamicVolumeViewportCinePlayContext(volume);\n    }\n    return _createVolumeViewportCinePlayContext(viewport, volume);\n  }\n  throw new Error('Unknown viewport type');\n}\nexport { playClip, stopClip };","map":{"version":3,"names":["glMatrix","vec3","utilities","csUtils","getEnabledElement","StackViewport","VolumeViewport","cache","BaseVolumeViewport","Enums","CINE_EVENTS","addToolState","getToolState","scroll","ViewportStatus","triggerEvent","debounced","loop","dynamicVolumesPlayingMap","Map","playClip","element","playClipOptions","playClipTimeouts","playClipIsTimeVarying","undefined","Error","enabledElement","dynamicCineEnabled","viewport","volume","_getVolumeFromViewport","playClipContext","_createCinePlayContext","playClipData","isDynamicCinePlaying","isDynamicVolume","_stopDynamicVolumeCine","intervalId","framesPerSecond","lastFrameTimeStamp","ignoreFrameTimeVector","usingFrameTimeVector","frameTimeVector","speed","frameTimeVectorSpeedMultiplier","reverse","_stopClip","Number","length","numScrollSteps","frameTimeVectorEnabled","timeouts","isTimeVarying","_getPlayClipTimeouts","playClipAction","currentStepIndex","newStepIndex","newStepIndexOutOfRange","eventDetail","CLIP_STOPPED","delta","set","volumeId","window","setTimeout","playClipTimeoutHandler","setInterval","Math","abs","CLIP_STARTED","stopClip","stopDynamicCine","cineToolData","_stopClipWithData","dynamicCineElement","get","delete","vector","i","sample","delay","sum","limit","push","id","clearTimeout","clearInterval","_getVolumesFromViewport","getActors","map","actor","getVolume","uid","filter","volumes","dynamicVolume","find","_createStackViewportCinePlayContext","waitForRendered","imageIds","getImageIds","getTargetImageIdIndex","waitForRenderedCount","viewportStatus","RENDERED","debounceLoading","_createVolumeViewportCinePlayContext","cachedScrollInfo","viewPlaneNormal","create","scrollInfo","getScrollInfo","camera","getCamera","updateCache","equals","getVolumeViewportScrollInfo","volumeViewPlaneNormal","direction","slice","x","dot","_createDynamicVolumeViewportCinePlayContext","numTimePoints","timePointIndex"],"sources":["../../../../src/utilities/cine/playClip.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}