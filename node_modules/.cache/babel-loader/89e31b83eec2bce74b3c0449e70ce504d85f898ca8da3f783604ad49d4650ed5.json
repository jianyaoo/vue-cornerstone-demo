{"ast":null,"code":"import now from './now';\nexport default function (image, lut, canvasImageDataData) {\n  let start = now();\n  const pixelData = image.getPixelData();\n  image.stats.lastGetPixelDataTime = now() - start;\n  const numPixels = pixelData.length;\n  const minPixelValue = image.minPixelValue;\n  let canvasImageDataIndex = 0;\n  let storedPixelDataIndex = 0;\n  let pixelValue;\n  start = now();\n  if (pixelData instanceof Int16Array) {\n    if (minPixelValue < 0) {\n      while (storedPixelDataIndex < numPixels) {\n        pixelValue = lut[pixelData[storedPixelDataIndex++] + -minPixelValue];\n        canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n        canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n        canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n        canvasImageDataData[canvasImageDataIndex++] = 255;\n      }\n    } else {\n      while (storedPixelDataIndex < numPixels) {\n        pixelValue = lut[pixelData[storedPixelDataIndex++]];\n        canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n        canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n        canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n        canvasImageDataData[canvasImageDataIndex++] = 255;\n      }\n    }\n  } else if (pixelData instanceof Uint16Array) {\n    while (storedPixelDataIndex < numPixels) {\n      pixelValue = lut[pixelData[storedPixelDataIndex++]];\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = 255;\n    }\n  } else if (minPixelValue < 0) {\n    while (storedPixelDataIndex < numPixels) {\n      pixelValue = lut[pixelData[storedPixelDataIndex++] + -minPixelValue];\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = 255;\n    }\n  } else {\n    while (storedPixelDataIndex < numPixels) {\n      pixelValue = lut[pixelData[storedPixelDataIndex++]];\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = pixelValue;\n      canvasImageDataData[canvasImageDataIndex++] = 255;\n    }\n  }\n  image.stats.lastStoredPixelDataToCanvasImageDataTime = now() - start;\n}","map":{"version":3,"names":["now","image","lut","canvasImageDataData","start","pixelData","getPixelData","stats","lastGetPixelDataTime","numPixels","length","minPixelValue","canvasImageDataIndex","storedPixelDataIndex","pixelValue","Int16Array","Uint16Array","lastStoredPixelDataToCanvasImageDataTime"],"sources":["../../../../../../src/RenderingEngine/helpers/cpuFallback/rendering/storedPixelDataToCanvasImageDataRGBA.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}