{"ast":null,"code":"import \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport { mat4, glMatrix, vec3 } from 'gl-matrix';\nimport { a as areMatricesEqual } from './Math/index.js';\nimport { IDENTITY } from './Math/Constants.js';\nconst NoOp = v => v;\nconst EPSILON = 1e-6;\nclass Transform {\n  constructor() {\n    let useDegree = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    this.matrix = mat4.identity(new Float64Array(16));\n    this.tmp = new Float64Array(3);\n    this.angleConv = useDegree ? glMatrix.toRadian : NoOp;\n  }\n  rotateFromDirections(originDirection, targetDirection) {\n    const src = new Float64Array(3);\n    const dst = new Float64Array(3);\n    const transf = new Float64Array(16);\n    vec3.set(src, originDirection[0], originDirection[1], originDirection[2]);\n    vec3.set(dst, targetDirection[0], targetDirection[1], targetDirection[2]);\n    vec3.normalize(src, src);\n    vec3.normalize(dst, dst);\n    const cosAlpha = vec3.dot(src, dst);\n    if (cosAlpha >= 1) {\n      return this;\n    }\n    vec3.cross(this.tmp, src, dst);\n    if (vec3.length(this.tmp) < EPSILON) {\n      // cross product is 0, so pick arbitrary axis perpendicular\n      // to originDirection.\n      vec3.cross(this.tmp, [1, 0, 0], originDirection);\n      if (vec3.length(this.tmp) < EPSILON) {\n        vec3.cross(this.tmp, [0, 1, 0], originDirection);\n      }\n    }\n    mat4.fromRotation(transf, Math.acos(cosAlpha), this.tmp);\n    mat4.multiply(this.matrix, this.matrix, transf);\n    return this;\n  }\n  rotate(angle, axis) {\n    vec3.set(this.tmp, ...axis);\n    vec3.normalize(this.tmp, this.tmp);\n    mat4.rotate(this.matrix, this.matrix, this.angleConv(angle), this.tmp);\n    return this;\n  }\n  rotateX(angle) {\n    mat4.rotateX(this.matrix, this.matrix, this.angleConv(angle));\n    return this;\n  }\n  rotateY(angle) {\n    mat4.rotateY(this.matrix, this.matrix, this.angleConv(angle));\n    return this;\n  }\n  rotateZ(angle) {\n    mat4.rotateZ(this.matrix, this.matrix, this.angleConv(angle));\n    return this;\n  }\n  translate(x, y, z) {\n    vec3.set(this.tmp, x, y, z);\n    mat4.translate(this.matrix, this.matrix, this.tmp);\n    return this;\n  }\n  scale(sx, sy, sz) {\n    vec3.set(this.tmp, sx, sy, sz);\n    mat4.scale(this.matrix, this.matrix, this.tmp);\n    return this;\n  }\n  multiply(mat4x4) {\n    mat4.multiply(this.matrix, this.matrix, mat4x4);\n    return this;\n  }\n  multiply3x3(mat3x3) {\n    mat4.multiply(this.matrix, this.matrix, [mat3x3[0], mat3x3[1], mat3x3[2], 0, mat3x3[3], mat3x3[4], mat3x3[5], 0, mat3x3[6], mat3x3[7], mat3x3[8], 0, 0, 0, 0, 1]);\n    return this;\n  }\n  invert() {\n    mat4.invert(this.matrix, this.matrix);\n    return this;\n  }\n  identity() {\n    mat4.identity(this.matrix);\n    return this;\n  }\n\n  //-----------\n\n  apply(typedArray) {\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let nbIterations = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n    if (areMatricesEqual(IDENTITY, this.matrix)) {\n      // Make sure we can chain apply...\n      return this;\n    }\n    const size = nbIterations === -1 ? typedArray.length : offset + nbIterations * 3;\n    for (let i = offset; i < size; i += 3) {\n      vec3.set(this.tmp, typedArray[i], typedArray[i + 1], typedArray[i + 2]);\n      vec3.transformMat4(this.tmp, this.tmp, this.matrix);\n      typedArray[i] = this.tmp[0];\n      typedArray[i + 1] = this.tmp[1];\n      typedArray[i + 2] = this.tmp[2];\n    }\n\n    // Make sure we can chain apply...\n    return this;\n  }\n  getMatrix() {\n    return this.matrix;\n  }\n  setMatrix(mat4x4) {\n    if (!!mat4x4 && mat4x4.length === 16) {\n      mat4.copy(this.matrix, mat4x4);\n    }\n    return this;\n  }\n}\nfunction buildFromDegree() {\n  return new Transform(true);\n}\nfunction buildFromRadian() {\n  return new Transform(false);\n}\nvar vtkMatrixBuilder = {\n  buildFromDegree,\n  buildFromRadian\n};\nexport { vtkMatrixBuilder as default };","map":{"version":3,"names":["mat4","glMatrix","vec3","a","areMatricesEqual","IDENTITY","NoOp","v","EPSILON","Transform","constructor","useDegree","arguments","length","undefined","matrix","identity","Float64Array","tmp","angleConv","toRadian","rotateFromDirections","originDirection","targetDirection","src","dst","transf","set","normalize","cosAlpha","dot","cross","fromRotation","Math","acos","multiply","rotate","angle","axis","rotateX","rotateY","rotateZ","translate","x","y","z","scale","sx","sy","sz","mat4x4","multiply3x3","mat3x3","invert","apply","typedArray","offset","nbIterations","size","i","transformMat4","getMatrix","setMatrix","copy","buildFromDegree","buildFromRadian","vtkMatrixBuilder","default"],"sources":["/root/vue-cornerstone-demo/node_modules/@kitware/vtk.js/Common/Core/MatrixBuilder.js"],"sourcesContent":["import { mat4, glMatrix, vec3 } from 'gl-matrix';\nimport { a as areMatricesEqual } from './Math/index.js';\nimport { IDENTITY } from './Math/Constants.js';\n\nconst NoOp = v => v;\nconst EPSILON = 1e-6;\nclass Transform {\n  constructor() {\n    let useDegree = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    this.matrix = mat4.identity(new Float64Array(16));\n    this.tmp = new Float64Array(3);\n    this.angleConv = useDegree ? glMatrix.toRadian : NoOp;\n  }\n  rotateFromDirections(originDirection, targetDirection) {\n    const src = new Float64Array(3);\n    const dst = new Float64Array(3);\n    const transf = new Float64Array(16);\n    vec3.set(src, originDirection[0], originDirection[1], originDirection[2]);\n    vec3.set(dst, targetDirection[0], targetDirection[1], targetDirection[2]);\n    vec3.normalize(src, src);\n    vec3.normalize(dst, dst);\n    const cosAlpha = vec3.dot(src, dst);\n    if (cosAlpha >= 1) {\n      return this;\n    }\n    vec3.cross(this.tmp, src, dst);\n    if (vec3.length(this.tmp) < EPSILON) {\n      // cross product is 0, so pick arbitrary axis perpendicular\n      // to originDirection.\n      vec3.cross(this.tmp, [1, 0, 0], originDirection);\n      if (vec3.length(this.tmp) < EPSILON) {\n        vec3.cross(this.tmp, [0, 1, 0], originDirection);\n      }\n    }\n    mat4.fromRotation(transf, Math.acos(cosAlpha), this.tmp);\n    mat4.multiply(this.matrix, this.matrix, transf);\n    return this;\n  }\n  rotate(angle, axis) {\n    vec3.set(this.tmp, ...axis);\n    vec3.normalize(this.tmp, this.tmp);\n    mat4.rotate(this.matrix, this.matrix, this.angleConv(angle), this.tmp);\n    return this;\n  }\n  rotateX(angle) {\n    mat4.rotateX(this.matrix, this.matrix, this.angleConv(angle));\n    return this;\n  }\n  rotateY(angle) {\n    mat4.rotateY(this.matrix, this.matrix, this.angleConv(angle));\n    return this;\n  }\n  rotateZ(angle) {\n    mat4.rotateZ(this.matrix, this.matrix, this.angleConv(angle));\n    return this;\n  }\n  translate(x, y, z) {\n    vec3.set(this.tmp, x, y, z);\n    mat4.translate(this.matrix, this.matrix, this.tmp);\n    return this;\n  }\n  scale(sx, sy, sz) {\n    vec3.set(this.tmp, sx, sy, sz);\n    mat4.scale(this.matrix, this.matrix, this.tmp);\n    return this;\n  }\n  multiply(mat4x4) {\n    mat4.multiply(this.matrix, this.matrix, mat4x4);\n    return this;\n  }\n  multiply3x3(mat3x3) {\n    mat4.multiply(this.matrix, this.matrix, [mat3x3[0], mat3x3[1], mat3x3[2], 0, mat3x3[3], mat3x3[4], mat3x3[5], 0, mat3x3[6], mat3x3[7], mat3x3[8], 0, 0, 0, 0, 1]);\n    return this;\n  }\n  invert() {\n    mat4.invert(this.matrix, this.matrix);\n    return this;\n  }\n  identity() {\n    mat4.identity(this.matrix);\n    return this;\n  }\n\n  //-----------\n\n  apply(typedArray) {\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let nbIterations = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n    if (areMatricesEqual(IDENTITY, this.matrix)) {\n      // Make sure we can chain apply...\n      return this;\n    }\n    const size = nbIterations === -1 ? typedArray.length : offset + nbIterations * 3;\n    for (let i = offset; i < size; i += 3) {\n      vec3.set(this.tmp, typedArray[i], typedArray[i + 1], typedArray[i + 2]);\n      vec3.transformMat4(this.tmp, this.tmp, this.matrix);\n      typedArray[i] = this.tmp[0];\n      typedArray[i + 1] = this.tmp[1];\n      typedArray[i + 2] = this.tmp[2];\n    }\n\n    // Make sure we can chain apply...\n    return this;\n  }\n  getMatrix() {\n    return this.matrix;\n  }\n  setMatrix(mat4x4) {\n    if (!!mat4x4 && mat4x4.length === 16) {\n      mat4.copy(this.matrix, mat4x4);\n    }\n    return this;\n  }\n}\nfunction buildFromDegree() {\n  return new Transform(true);\n}\nfunction buildFromRadian() {\n  return new Transform(false);\n}\nvar vtkMatrixBuilder = {\n  buildFromDegree,\n  buildFromRadian\n};\n\nexport { vtkMatrixBuilder as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}