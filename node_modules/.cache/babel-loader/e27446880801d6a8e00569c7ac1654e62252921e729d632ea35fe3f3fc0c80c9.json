{"ast":null,"code":"import { cache } from '@cornerstonejs/core';\nimport vtkDataArray from '@kitware/vtk.js/Common/Core/DataArray';\nimport vtkAppendPolyData from '@kitware/vtk.js/Filters/General/AppendPolyData';\nimport vtkActor from '@kitware/vtk.js/Rendering/Core/Actor';\nimport vtkMapper from '@kitware/vtk.js/Rendering/Core/Mapper';\nimport { getPolyData, getSegmentSpecificConfig, validateGeometry } from './utils';\nimport { getConfigCache, setConfigCache } from './contourConfigCache';\nexport function addContourSetsToElement(viewport, geometryIds, contourRepresentation, contourRepresentationConfig, contourActorUID) {\n  const {\n    segmentationRepresentationUID,\n    segmentsHidden\n  } = contourRepresentation;\n  const appendPolyData = vtkAppendPolyData.newInstance();\n  const scalarToColorMap = new Map();\n  const segmentSpecificMap = new Map();\n  geometryIds.forEach(geometryId => {\n    const geometry = cache.getGeometry(geometryId);\n    if (!geometry) {\n      console.warn(`No geometry found for geometryId ${geometryId}. Skipping render.`);\n      return;\n    }\n    const segmentIndex = geometry.data.getSegmentIndex();\n    validateGeometry(geometry);\n    const segmentSpecificConfig = getSegmentSpecificConfig(contourRepresentation, geometryId, segmentIndex);\n    const contourSet = geometry.data;\n    const polyData = getPolyData(contourSet);\n    const color = contourSet.getColor();\n    const size = polyData.getPoints().getNumberOfPoints();\n    const scalars = vtkDataArray.newInstance({\n      size: size * 4,\n      numberOfComponents: 4,\n      dataType: 'Uint8Array'\n    });\n    for (let i = 0; i < size; ++i) {\n      scalars.setTuple(i, [...color, 255]);\n    }\n    polyData.getPointData().setScalars(scalars);\n    if (segmentSpecificConfig) {\n      segmentSpecificMap.set(segmentIndex, segmentSpecificConfig);\n    }\n    scalarToColorMap.set(segmentIndex, [...color, segmentsHidden.has(segmentIndex) ? 0 : 255]);\n    segmentIndex === 0 ? appendPolyData.setInputData(polyData) : appendPolyData.addInputData(polyData);\n  });\n  const polyDataOutput = appendPolyData.getOutputData();\n  const outlineWidthActive = contourRepresentationConfig.representations.CONTOUR.outlineWidthActive;\n  const mapper = vtkMapper.newInstance();\n  mapper.setInputData(polyDataOutput);\n  const actor = vtkActor.newInstance();\n  actor.setMapper(mapper);\n  actor.getProperty().setLineWidth(outlineWidthActive);\n  setConfigCache(segmentationRepresentationUID, Object.assign({}, getConfigCache(segmentationRepresentationUID), {\n    segmentsHidden: new Set(segmentsHidden),\n    segmentSpecificMap,\n    outlineWidthActive\n  }));\n  actor.setForceOpaque(true);\n  viewport.addActor({\n    uid: contourActorUID,\n    actor: actor\n  });\n  viewport.resetCamera();\n  viewport.render();\n}","map":{"version":3,"names":["cache","vtkDataArray","vtkAppendPolyData","vtkActor","vtkMapper","getPolyData","getSegmentSpecificConfig","validateGeometry","getConfigCache","setConfigCache","addContourSetsToElement","viewport","geometryIds","contourRepresentation","contourRepresentationConfig","contourActorUID","segmentationRepresentationUID","segmentsHidden","appendPolyData","newInstance","scalarToColorMap","Map","segmentSpecificMap","forEach","geometryId","geometry","getGeometry","console","warn","segmentIndex","data","getSegmentIndex","segmentSpecificConfig","contourSet","polyData","color","getColor","size","getPoints","getNumberOfPoints","scalars","numberOfComponents","dataType","i","setTuple","getPointData","setScalars","set","has","setInputData","addInputData","polyDataOutput","getOutputData","outlineWidthActive","representations","CONTOUR","mapper","actor","setMapper","getProperty","setLineWidth","Object","assign","Set","setForceOpaque","addActor","uid","resetCamera","render"],"sources":["../../../../../src/tools/displayTools/Contour/addContourSetsToElement.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}