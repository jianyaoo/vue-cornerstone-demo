{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { vec2 } from 'gl-matrix';\nfunction getAllIntersectionsWithPolyline(points, p1, q1, closed = true) {\n  let initialI;\n  let j;\n  const intersections = [];\n  if (closed) {\n    j = points.length - 1;\n    initialI = 0;\n  } else {\n    j = 0;\n    initialI = 1;\n  }\n  for (let i = initialI; i < points.length; i++) {\n    const p2 = points[j];\n    const q2 = points[i];\n    if (doesIntersect(p1, q1, p2, q2)) {\n      intersections.push([j, i]);\n    }\n    j = i;\n  }\n  return intersections;\n}\nfunction getIntersectionCoordinatesWithPolyline(points, p1, q1, closed = true) {\n  const result = [];\n  const polylineIndexes = getAllIntersectionsWithPolyline(points, p1, q1, closed);\n  for (let i = 0; i < polylineIndexes.length; i++) {\n    const p2 = points[polylineIndexes[i][0]];\n    const q2 = points[polylineIndexes[i][1]];\n    const intersection = getIntersection(p1, q1, p2, q2);\n    result.push(intersection);\n  }\n  return result;\n}\nfunction getFirstIntersectionWithPolyline(points, p1, q1, closed = true) {\n  let initialI;\n  let j;\n  if (closed) {\n    j = points.length - 1;\n    initialI = 0;\n  } else {\n    j = 0;\n    initialI = 1;\n  }\n  for (let i = initialI; i < points.length; i++) {\n    const p2 = points[j];\n    const q2 = points[i];\n    if (doesIntersect(p1, q1, p2, q2)) {\n      return [j, i];\n    }\n    j = i;\n  }\n}\nfunction getClosestIntersectionWithPolyline(points, p1, q1, closed = true) {\n  let initialI;\n  let j;\n  if (closed) {\n    j = points.length - 1;\n    initialI = 0;\n  } else {\n    j = 0;\n    initialI = 1;\n  }\n  const intersections = [];\n  for (let i = initialI; i < points.length; i++) {\n    const p2 = points[j];\n    const q2 = points[i];\n    if (doesIntersect(p1, q1, p2, q2)) {\n      intersections.push([j, i]);\n    }\n    j = i;\n  }\n  if (intersections.length === 0) {\n    return;\n  }\n  const distances = [];\n  intersections.forEach(intersection => {\n    const intersectionPoints = [points[intersection[0]], points[intersection[1]]];\n    const midpoint = [(intersectionPoints[0][0] + intersectionPoints[1][0]) / 2, (intersectionPoints[0][1] + intersectionPoints[1][1]) / 2];\n    distances.push(vec2.distance(midpoint, p1));\n  });\n  const minDistance = Math.min(...distances);\n  const indexOfMinDistance = distances.indexOf(minDistance);\n  return {\n    segment: intersections[indexOfMinDistance],\n    distance: minDistance\n  };\n}\nfunction doesIntersect(p1, q1, p2, q2) {\n  let result = false;\n  const orient = [orientation(p1, q1, p2), orientation(p1, q1, q2), orientation(p2, q2, p1), orientation(p2, q2, q1)];\n  if (orient[0] !== orient[1] && orient[2] !== orient[3]) {\n    return true;\n  }\n  if (orient[0] === 0 && onSegment(p1, p2, q1)) {\n    result = true;\n  } else if (orient[1] === 0 && onSegment(p1, q2, q1)) {\n    result = true;\n  } else if (orient[2] === 0 && onSegment(p2, p1, q2)) {\n    result = true;\n  } else if (orient[3] === 0 && onSegment(p2, q1, q2)) {\n    result = true;\n  }\n  return result;\n}\nfunction orientation(p, q, r) {\n  const orientationValue = (q[1] - p[1]) * (r[0] - q[0]) - (q[0] - p[0]) * (r[1] - q[1]);\n  if (orientationValue === 0) {\n    return 0;\n  }\n  return orientationValue > 0 ? 1 : 2;\n}\nfunction onSegment(p, q, r) {\n  if (q[0] <= Math.max(p[0], r[0]) && q[0] >= Math.min(p[0], r[0]) && q[1] <= Math.max(p[1], r[1]) && q[1] >= Math.min(p[1], r[1])) {\n    return true;\n  }\n  return false;\n}\nfunction getIntersection(p1, q1, p2, q2) {\n  const denominator = (q2[1] - p2[1]) * (q1[0] - p1[0]) - (q2[0] - p2[0]) * (q1[1] - p1[1]);\n  if (denominator == 0) {\n    return;\n  }\n  let a = p1[1] - p2[1];\n  let b = p1[0] - p2[0];\n  const numerator1 = (q2[0] - p2[0]) * a - (q2[1] - p2[1]) * b;\n  const numerator2 = (q1[0] - p1[0]) * a - (q1[1] - p1[1]) * b;\n  a = numerator1 / denominator;\n  b = numerator2 / denominator;\n  const resultX = p1[0] + a * (q1[0] - p1[0]);\n  const resultY = p1[1] + a * (q1[1] - p1[1]);\n  return [resultX, resultY];\n}\nexport { getAllIntersectionsWithPolyline, getFirstIntersectionWithPolyline, getClosestIntersectionWithPolyline, getIntersectionCoordinatesWithPolyline };","map":{"version":3,"names":["vec2","getAllIntersectionsWithPolyline","points","p1","q1","closed","initialI","j","intersections","length","i","p2","q2","doesIntersect","push","getIntersectionCoordinatesWithPolyline","result","polylineIndexes","intersection","getIntersection","getFirstIntersectionWithPolyline","getClosestIntersectionWithPolyline","distances","forEach","intersectionPoints","midpoint","distance","minDistance","Math","min","indexOfMinDistance","indexOf","segment","orient","orientation","onSegment","p","q","r","orientationValue","max","denominator","a","b","numerator1","numerator2","resultX","resultY"],"sources":["../../../../../src/utilities/math/polyline/getIntersectionWithPolyline.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}