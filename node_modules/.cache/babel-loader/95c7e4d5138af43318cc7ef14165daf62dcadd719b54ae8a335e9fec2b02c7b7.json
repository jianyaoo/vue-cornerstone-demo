{"ast":null,"code":"import { m as macro } from '../../macros2.js';\nimport vtkRenderer from '../../Rendering/Core/Renderer.js';\nimport Constants from './OrientationMarkerWidget/Constants.js';\nconst {\n  vtkErrorMacro\n} = macro;\nconst {\n  Corners\n} = Constants;\n\n// ----------------------------------------------------------------------------\n// vtkOrientationMarkerWidget\n// ----------------------------------------------------------------------------\n\nfunction vtkOrientationMarkerWidget(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOrientationMarkerWidget');\n  const superClass = {\n    ...publicAPI\n  };\n\n  // Private variables\n\n  const previousCameraInput = [];\n  const selfRenderer = vtkRenderer.newInstance();\n  const resizeObserver = new ResizeObserver(entries => {\n    publicAPI.updateViewport();\n  });\n  let onCameraChangedSub = null;\n  let onCameraModifiedSub = null;\n  let onAnimationSub = null;\n  let onEndAnimationSub = null;\n  let selfSubscription = null;\n  function onCameraModified() {\n    // If animating, marker will be updated on Animation event\n    if (!model._interactor.isAnimating()) {\n      publicAPI.updateMarkerOrientation();\n    }\n  }\n  model._onParentRendererChanged = () => publicAPI.updateViewport();\n  publicAPI.computeViewport = () => {\n    const parentRen = model.parentRenderer || model._interactor.getCurrentRenderer();\n    const [xMin, yMin, xMax, yMax] = parentRen.getViewport();\n    const view = model._interactor.getView();\n    const canvasSize = view.getSize();\n    const [viewXSize, viewYSize] = view.getViewportSize(parentRen);\n    const minViewSize = Math.min(viewXSize, viewYSize);\n    let pixelSize = model.viewportSize * minViewSize;\n    // clamp pixel size\n    pixelSize = Math.max(Math.min(model.minPixelSize, minViewSize), Math.min(model.maxPixelSize, pixelSize));\n    const xFrac = pixelSize / canvasSize[0];\n    const yFrac = pixelSize / canvasSize[1];\n    // [left bottom right top]\n    switch (model.viewportCorner) {\n      case Corners.TOP_LEFT:\n        return [xMin, yMax - yFrac, xMin + xFrac, yMax];\n      case Corners.TOP_RIGHT:\n        return [xMax - xFrac, yMax - yFrac, xMax, yMax];\n      case Corners.BOTTOM_LEFT:\n        return [xMin, yMin, xMin + xFrac, yMin + yFrac];\n      case Corners.BOTTOM_RIGHT:\n        return [xMax - xFrac, yMin, xMax, yMin + yFrac];\n      default:\n        vtkErrorMacro('Invalid widget corner');\n        return null;\n    }\n  };\n  publicAPI.updateViewport = () => {\n    if (model.enabled) {\n      selfRenderer.setViewport(...publicAPI.computeViewport());\n      model._interactor.render();\n    }\n  };\n  publicAPI.updateMarkerOrientation = () => {\n    const ren = model.parentRenderer || model._interactor.getCurrentRenderer();\n    const currentCamera = ren.getActiveCamera();\n    if (!currentCamera) {\n      return;\n    }\n    const position = currentCamera.getReferenceByName('position');\n    const focalPoint = currentCamera.getReferenceByName('focalPoint');\n    const viewUp = currentCamera.getReferenceByName('viewUp');\n    if (previousCameraInput[0] !== position[0] || previousCameraInput[1] !== position[1] || previousCameraInput[2] !== position[2] || previousCameraInput[3] !== focalPoint[0] || previousCameraInput[4] !== focalPoint[1] || previousCameraInput[5] !== focalPoint[2] || previousCameraInput[6] !== viewUp[0] || previousCameraInput[7] !== viewUp[1] || previousCameraInput[8] !== viewUp[2]) {\n      previousCameraInput[0] = position[0];\n      previousCameraInput[1] = position[1];\n      previousCameraInput[2] = position[2];\n      previousCameraInput[3] = focalPoint[0];\n      previousCameraInput[4] = focalPoint[1];\n      previousCameraInput[5] = focalPoint[2];\n      previousCameraInput[6] = viewUp[0];\n      previousCameraInput[7] = viewUp[1];\n      previousCameraInput[8] = viewUp[2];\n      const activeCamera = selfRenderer.getActiveCamera();\n      activeCamera.setPosition(position[0], position[1], position[2]);\n      activeCamera.setFocalPoint(focalPoint[0], focalPoint[1], focalPoint[2]);\n      activeCamera.setViewUp(viewUp[0], viewUp[1], viewUp[2]);\n      selfRenderer.resetCamera();\n    }\n  };\n\n  /**\n   * Enables/Disables the orientation marker.\n   */\n  publicAPI.setEnabled = enabling => {\n    if (enabling) {\n      if (model.enabled) {\n        return;\n      }\n      if (!model.actor) {\n        vtkErrorMacro('Must set actor before enabling orientation marker.');\n        return;\n      }\n      if (!model._interactor) {\n        vtkErrorMacro('Must set interactor before enabling orientation marker.');\n        return;\n      }\n      const ren = model.parentRenderer || model._interactor.getCurrentRenderer();\n      const renderWindow = ren.getRenderWindow();\n      renderWindow.addRenderer(selfRenderer);\n      if (renderWindow.getNumberOfLayers() < 2) {\n        renderWindow.setNumberOfLayers(2);\n      }\n      // Highest number is foreground\n      selfRenderer.setLayer(renderWindow.getNumberOfLayers() - 1);\n      selfRenderer.setInteractive(false);\n      selfRenderer.addViewProp(model.actor);\n      model.actor.setVisibility(true);\n      onCameraChangedSub = ren.onEvent(event => {\n        if (event.type === 'ActiveCameraEvent') {\n          if (onCameraModifiedSub) {\n            onCameraModifiedSub.unsubscribe();\n          }\n          onCameraModifiedSub = event.camera.onModified(onCameraModified);\n        }\n      });\n      onCameraModifiedSub = ren.getActiveCamera().onModified(onCameraModified);\n      onAnimationSub = model._interactor.onAnimation(publicAPI.updateMarkerOrientation);\n      onEndAnimationSub = model._interactor.onEndAnimation(publicAPI.updateMarkerOrientation);\n      resizeObserver.observe(model._interactor.getView().getCanvas());\n      publicAPI.updateViewport();\n      publicAPI.updateMarkerOrientation();\n      model.enabled = true;\n    } else {\n      if (!model.enabled) {\n        return;\n      }\n      model.enabled = false;\n      resizeObserver.disconnect();\n      onCameraChangedSub.unsubscribe();\n      onCameraChangedSub = null;\n      onCameraModifiedSub.unsubscribe();\n      onCameraModifiedSub = null;\n      onAnimationSub.unsubscribe();\n      onAnimationSub = null;\n      onEndAnimationSub.unsubscribe();\n      onEndAnimationSub = null;\n      model.actor.setVisibility(false);\n      selfRenderer.removeViewProp(model.actor);\n      const renderWindow = model._interactor?.findPokedRenderer()?.getRenderWindow();\n      if (renderWindow) {\n        renderWindow.removeRenderer(selfRenderer);\n      }\n    }\n    publicAPI.modified();\n  };\n\n  /**\n   * Sets the viewport corner.\n   */\n  publicAPI.setViewportCorner = corner => {\n    if (corner === model.viewportCorner) {\n      return;\n    }\n    model.viewportCorner = corner;\n    publicAPI.updateViewport();\n  };\n\n  /**\n   * Sets the viewport size.\n   */\n  publicAPI.setViewportSize = sizeFactor => {\n    const viewportSize = Math.min(1, Math.max(0, sizeFactor));\n    if (viewportSize === model.viewportSize) {\n      return;\n    }\n    model.viewportSize = viewportSize;\n    publicAPI.updateViewport();\n  };\n  publicAPI.setActor = actor => {\n    const previousState = model.enabled;\n    publicAPI.setEnabled(false);\n    model.actor = actor;\n    publicAPI.setEnabled(previousState);\n  };\n  publicAPI.getRenderer = () => selfRenderer;\n  publicAPI.delete = () => {\n    superClass.delete();\n    if (selfSubscription) {\n      selfSubscription.unsubscribe();\n      selfSubscription = null;\n    }\n    if (onCameraChangedSub) {\n      onCameraChangedSub.unsubscribe();\n      onCameraChangedSub = null;\n    }\n    if (onCameraModifiedSub) {\n      onCameraModifiedSub.unsubscribe();\n      onCameraModifiedSub = null;\n    }\n    if (onAnimationSub) {\n      onAnimationSub.unsubscribe();\n      onAnimationSub = null;\n    }\n    if (onEndAnimationSub) {\n      onEndAnimationSub.unsubscribe();\n      onEndAnimationSub = null;\n    }\n    resizeObserver.disconnect();\n  };\n\n  // --------------------------------------------------------------------------\n\n  // update viewport whenever we are updated\n  selfSubscription = publicAPI.onModified(publicAPI.updateViewport);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // actor: null,\n  // _interactor: null,\n  viewportCorner: Constants.Corners.BOTTOM_LEFT,\n  viewportSize: 0.2,\n  minPixelSize: 50,\n  maxPixelSize: 200,\n  parentRenderer: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['enabled', 'viewportCorner', 'viewportSize']);\n\n  // NOTE: setting these while the widget is enabled will\n  // not update the widget.\n  macro.setGet(publicAPI, model, ['_interactor', 'minPixelSize', 'maxPixelSize', 'parentRenderer']);\n  macro.get(publicAPI, model, ['actor']);\n  macro.moveToProtected(publicAPI, model, ['interactor']);\n\n  // Object methods\n  vtkOrientationMarkerWidget(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkOrientationMarkerWidget');\n\n// ----------------------------------------------------------------------------\n\nvar vtkOrientationMarkerWidget$1 = {\n  newInstance,\n  extend,\n  ...Constants\n};\nexport { DEFAULT_VALUES, vtkOrientationMarkerWidget$1 as default, extend, newInstance };","map":{"version":3,"names":["m","macro","vtkRenderer","Constants","vtkErrorMacro","Corners","vtkOrientationMarkerWidget","publicAPI","model","classHierarchy","push","superClass","previousCameraInput","selfRenderer","newInstance","resizeObserver","ResizeObserver","entries","updateViewport","onCameraChangedSub","onCameraModifiedSub","onAnimationSub","onEndAnimationSub","selfSubscription","onCameraModified","_interactor","isAnimating","updateMarkerOrientation","_onParentRendererChanged","computeViewport","parentRen","parentRenderer","getCurrentRenderer","xMin","yMin","xMax","yMax","getViewport","view","getView","canvasSize","getSize","viewXSize","viewYSize","getViewportSize","minViewSize","Math","min","pixelSize","viewportSize","max","minPixelSize","maxPixelSize","xFrac","yFrac","viewportCorner","TOP_LEFT","TOP_RIGHT","BOTTOM_LEFT","BOTTOM_RIGHT","enabled","setViewport","render","ren","currentCamera","getActiveCamera","position","getReferenceByName","focalPoint","viewUp","activeCamera","setPosition","setFocalPoint","setViewUp","resetCamera","setEnabled","enabling","actor","renderWindow","getRenderWindow","addRenderer","getNumberOfLayers","setNumberOfLayers","setLayer","setInteractive","addViewProp","setVisibility","onEvent","event","type","unsubscribe","camera","onModified","onAnimation","onEndAnimation","observe","getCanvas","disconnect","removeViewProp","findPokedRenderer","removeRenderer","modified","setViewportCorner","corner","setViewportSize","sizeFactor","setActor","previousState","getRenderer","delete","DEFAULT_VALUES","extend","initialValues","arguments","length","undefined","Object","assign","obj","get","setGet","moveToProtected","vtkOrientationMarkerWidget$1","default"],"sources":["/root/vue-cornerstone-demo/node_modules/@kitware/vtk.js/Interaction/Widgets/OrientationMarkerWidget.js"],"sourcesContent":["import { m as macro } from '../../macros2.js';\nimport vtkRenderer from '../../Rendering/Core/Renderer.js';\nimport Constants from './OrientationMarkerWidget/Constants.js';\n\nconst {\n  vtkErrorMacro\n} = macro;\nconst {\n  Corners\n} = Constants;\n\n// ----------------------------------------------------------------------------\n// vtkOrientationMarkerWidget\n// ----------------------------------------------------------------------------\n\nfunction vtkOrientationMarkerWidget(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkOrientationMarkerWidget');\n  const superClass = {\n    ...publicAPI\n  };\n\n  // Private variables\n\n  const previousCameraInput = [];\n  const selfRenderer = vtkRenderer.newInstance();\n  const resizeObserver = new ResizeObserver(entries => {\n    publicAPI.updateViewport();\n  });\n  let onCameraChangedSub = null;\n  let onCameraModifiedSub = null;\n  let onAnimationSub = null;\n  let onEndAnimationSub = null;\n  let selfSubscription = null;\n  function onCameraModified() {\n    // If animating, marker will be updated on Animation event\n    if (!model._interactor.isAnimating()) {\n      publicAPI.updateMarkerOrientation();\n    }\n  }\n  model._onParentRendererChanged = () => publicAPI.updateViewport();\n  publicAPI.computeViewport = () => {\n    const parentRen = model.parentRenderer || model._interactor.getCurrentRenderer();\n    const [xMin, yMin, xMax, yMax] = parentRen.getViewport();\n    const view = model._interactor.getView();\n    const canvasSize = view.getSize();\n    const [viewXSize, viewYSize] = view.getViewportSize(parentRen);\n    const minViewSize = Math.min(viewXSize, viewYSize);\n    let pixelSize = model.viewportSize * minViewSize;\n    // clamp pixel size\n    pixelSize = Math.max(Math.min(model.minPixelSize, minViewSize), Math.min(model.maxPixelSize, pixelSize));\n    const xFrac = pixelSize / canvasSize[0];\n    const yFrac = pixelSize / canvasSize[1];\n    // [left bottom right top]\n    switch (model.viewportCorner) {\n      case Corners.TOP_LEFT:\n        return [xMin, yMax - yFrac, xMin + xFrac, yMax];\n      case Corners.TOP_RIGHT:\n        return [xMax - xFrac, yMax - yFrac, xMax, yMax];\n      case Corners.BOTTOM_LEFT:\n        return [xMin, yMin, xMin + xFrac, yMin + yFrac];\n      case Corners.BOTTOM_RIGHT:\n        return [xMax - xFrac, yMin, xMax, yMin + yFrac];\n      default:\n        vtkErrorMacro('Invalid widget corner');\n        return null;\n    }\n  };\n  publicAPI.updateViewport = () => {\n    if (model.enabled) {\n      selfRenderer.setViewport(...publicAPI.computeViewport());\n      model._interactor.render();\n    }\n  };\n  publicAPI.updateMarkerOrientation = () => {\n    const ren = model.parentRenderer || model._interactor.getCurrentRenderer();\n    const currentCamera = ren.getActiveCamera();\n    if (!currentCamera) {\n      return;\n    }\n    const position = currentCamera.getReferenceByName('position');\n    const focalPoint = currentCamera.getReferenceByName('focalPoint');\n    const viewUp = currentCamera.getReferenceByName('viewUp');\n    if (previousCameraInput[0] !== position[0] || previousCameraInput[1] !== position[1] || previousCameraInput[2] !== position[2] || previousCameraInput[3] !== focalPoint[0] || previousCameraInput[4] !== focalPoint[1] || previousCameraInput[5] !== focalPoint[2] || previousCameraInput[6] !== viewUp[0] || previousCameraInput[7] !== viewUp[1] || previousCameraInput[8] !== viewUp[2]) {\n      previousCameraInput[0] = position[0];\n      previousCameraInput[1] = position[1];\n      previousCameraInput[2] = position[2];\n      previousCameraInput[3] = focalPoint[0];\n      previousCameraInput[4] = focalPoint[1];\n      previousCameraInput[5] = focalPoint[2];\n      previousCameraInput[6] = viewUp[0];\n      previousCameraInput[7] = viewUp[1];\n      previousCameraInput[8] = viewUp[2];\n      const activeCamera = selfRenderer.getActiveCamera();\n      activeCamera.setPosition(position[0], position[1], position[2]);\n      activeCamera.setFocalPoint(focalPoint[0], focalPoint[1], focalPoint[2]);\n      activeCamera.setViewUp(viewUp[0], viewUp[1], viewUp[2]);\n      selfRenderer.resetCamera();\n    }\n  };\n\n  /**\n   * Enables/Disables the orientation marker.\n   */\n  publicAPI.setEnabled = enabling => {\n    if (enabling) {\n      if (model.enabled) {\n        return;\n      }\n      if (!model.actor) {\n        vtkErrorMacro('Must set actor before enabling orientation marker.');\n        return;\n      }\n      if (!model._interactor) {\n        vtkErrorMacro('Must set interactor before enabling orientation marker.');\n        return;\n      }\n      const ren = model.parentRenderer || model._interactor.getCurrentRenderer();\n      const renderWindow = ren.getRenderWindow();\n      renderWindow.addRenderer(selfRenderer);\n      if (renderWindow.getNumberOfLayers() < 2) {\n        renderWindow.setNumberOfLayers(2);\n      }\n      // Highest number is foreground\n      selfRenderer.setLayer(renderWindow.getNumberOfLayers() - 1);\n      selfRenderer.setInteractive(false);\n      selfRenderer.addViewProp(model.actor);\n      model.actor.setVisibility(true);\n      onCameraChangedSub = ren.onEvent(event => {\n        if (event.type === 'ActiveCameraEvent') {\n          if (onCameraModifiedSub) {\n            onCameraModifiedSub.unsubscribe();\n          }\n          onCameraModifiedSub = event.camera.onModified(onCameraModified);\n        }\n      });\n      onCameraModifiedSub = ren.getActiveCamera().onModified(onCameraModified);\n      onAnimationSub = model._interactor.onAnimation(publicAPI.updateMarkerOrientation);\n      onEndAnimationSub = model._interactor.onEndAnimation(publicAPI.updateMarkerOrientation);\n      resizeObserver.observe(model._interactor.getView().getCanvas());\n      publicAPI.updateViewport();\n      publicAPI.updateMarkerOrientation();\n      model.enabled = true;\n    } else {\n      if (!model.enabled) {\n        return;\n      }\n      model.enabled = false;\n      resizeObserver.disconnect();\n      onCameraChangedSub.unsubscribe();\n      onCameraChangedSub = null;\n      onCameraModifiedSub.unsubscribe();\n      onCameraModifiedSub = null;\n      onAnimationSub.unsubscribe();\n      onAnimationSub = null;\n      onEndAnimationSub.unsubscribe();\n      onEndAnimationSub = null;\n      model.actor.setVisibility(false);\n      selfRenderer.removeViewProp(model.actor);\n      const renderWindow = model._interactor?.findPokedRenderer()?.getRenderWindow();\n      if (renderWindow) {\n        renderWindow.removeRenderer(selfRenderer);\n      }\n    }\n    publicAPI.modified();\n  };\n\n  /**\n   * Sets the viewport corner.\n   */\n  publicAPI.setViewportCorner = corner => {\n    if (corner === model.viewportCorner) {\n      return;\n    }\n    model.viewportCorner = corner;\n    publicAPI.updateViewport();\n  };\n\n  /**\n   * Sets the viewport size.\n   */\n  publicAPI.setViewportSize = sizeFactor => {\n    const viewportSize = Math.min(1, Math.max(0, sizeFactor));\n    if (viewportSize === model.viewportSize) {\n      return;\n    }\n    model.viewportSize = viewportSize;\n    publicAPI.updateViewport();\n  };\n  publicAPI.setActor = actor => {\n    const previousState = model.enabled;\n    publicAPI.setEnabled(false);\n    model.actor = actor;\n    publicAPI.setEnabled(previousState);\n  };\n  publicAPI.getRenderer = () => selfRenderer;\n  publicAPI.delete = () => {\n    superClass.delete();\n    if (selfSubscription) {\n      selfSubscription.unsubscribe();\n      selfSubscription = null;\n    }\n    if (onCameraChangedSub) {\n      onCameraChangedSub.unsubscribe();\n      onCameraChangedSub = null;\n    }\n    if (onCameraModifiedSub) {\n      onCameraModifiedSub.unsubscribe();\n      onCameraModifiedSub = null;\n    }\n    if (onAnimationSub) {\n      onAnimationSub.unsubscribe();\n      onAnimationSub = null;\n    }\n    if (onEndAnimationSub) {\n      onEndAnimationSub.unsubscribe();\n      onEndAnimationSub = null;\n    }\n    resizeObserver.disconnect();\n  };\n\n  // --------------------------------------------------------------------------\n\n  // update viewport whenever we are updated\n  selfSubscription = publicAPI.onModified(publicAPI.updateViewport);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // actor: null,\n  // _interactor: null,\n  viewportCorner: Constants.Corners.BOTTOM_LEFT,\n  viewportSize: 0.2,\n  minPixelSize: 50,\n  maxPixelSize: 200,\n  parentRenderer: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['enabled', 'viewportCorner', 'viewportSize']);\n\n  // NOTE: setting these while the widget is enabled will\n  // not update the widget.\n  macro.setGet(publicAPI, model, ['_interactor', 'minPixelSize', 'maxPixelSize', 'parentRenderer']);\n  macro.get(publicAPI, model, ['actor']);\n  macro.moveToProtected(publicAPI, model, ['interactor']);\n\n  // Object methods\n  vtkOrientationMarkerWidget(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend, 'vtkOrientationMarkerWidget');\n\n// ----------------------------------------------------------------------------\n\nvar vtkOrientationMarkerWidget$1 = {\n  newInstance,\n  extend,\n  ...Constants\n};\n\nexport { DEFAULT_VALUES, vtkOrientationMarkerWidget$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}