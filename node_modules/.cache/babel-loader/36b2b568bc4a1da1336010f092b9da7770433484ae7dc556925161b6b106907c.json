{"ast":null,"code":"/**\n * Remove invalid tags from a metadata and return a new object.\n *\n * At this time it is only removing tags that has `null` or `undefined` values\n * which is our main goal because that breaks when `naturalizeDataset(...)` is\n * called.\n *\n * Validating the tag id using regex like /^[a-fA-F0-9]{8}$/ make it run\n * +50% slower and looping through all characteres (split+every+Set or simple\n * FOR+Set) double the time it takes to run. It is currently taking +12ms/1k\n * images on average which can change depending on the machine.\n *\n * @param srcMetadata - source metadata\n * @returns new metadata object without invalid tags\n */\nfunction removeInvalidTags(srcMetadata) {\n  // Object.create(null) make it ~9% faster\n  const dstMetadata = Object.create(null);\n  const tagIds = Object.keys(srcMetadata);\n  let tagValue;\n  tagIds.forEach(tagId => {\n    tagValue = srcMetadata[tagId];\n    if (tagValue !== undefined && tagValue !== null) {\n      dstMetadata[tagId] = tagValue;\n    }\n  });\n  return dstMetadata;\n}\nexport { removeInvalidTags as default, removeInvalidTags };","map":{"version":3,"names":["removeInvalidTags","srcMetadata","dstMetadata","Object","create","tagIds","keys","tagValue","forEach","tagId","undefined","default"],"sources":["/Users/yzy/Documents/Playground/vue-cornerstone-demo/src/cornerstone/dicomwebClient/removeInvalidTags.js"],"sourcesContent":["/**\n * Remove invalid tags from a metadata and return a new object.\n *\n * At this time it is only removing tags that has `null` or `undefined` values\n * which is our main goal because that breaks when `naturalizeDataset(...)` is\n * called.\n *\n * Validating the tag id using regex like /^[a-fA-F0-9]{8}$/ make it run\n * +50% slower and looping through all characteres (split+every+Set or simple\n * FOR+Set) double the time it takes to run. It is currently taking +12ms/1k\n * images on average which can change depending on the machine.\n *\n * @param srcMetadata - source metadata\n * @returns new metadata object without invalid tags\n */\nfunction removeInvalidTags(srcMetadata) {\n  // Object.create(null) make it ~9% faster\n  const dstMetadata = Object.create(null);\n  const tagIds = Object.keys(srcMetadata);\n  let tagValue;\n\n  tagIds.forEach((tagId) => {\n    tagValue = srcMetadata[tagId];\n\n    if (tagValue !== undefined && tagValue !== null) {\n      dstMetadata[tagId] = tagValue;\n    }\n  });\n\n  return dstMetadata;\n}\n\nexport { removeInvalidTags as default, removeInvalidTags };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,iBAAiBA,CAACC,WAAW,EAAE;EACtC;EACA,MAAMC,WAAW,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;EACvC,MAAMC,MAAM,GAAGF,MAAM,CAACG,IAAI,CAACL,WAAW,CAAC;EACvC,IAAIM,QAAQ;EAEZF,MAAM,CAACG,OAAO,CAAEC,KAAK,IAAK;IACxBF,QAAQ,GAAGN,WAAW,CAACQ,KAAK,CAAC;IAE7B,IAAIF,QAAQ,KAAKG,SAAS,IAAIH,QAAQ,KAAK,IAAI,EAAE;MAC/CL,WAAW,CAACO,KAAK,CAAC,GAAGF,QAAQ;IAC/B;EACF,CAAC,CAAC;EAEF,OAAOL,WAAW;AACpB;AAEA,SAASF,iBAAiB,IAAIW,OAAO,EAAEX,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}