{"ast":null,"code":"import \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { m as macro } from '../../macros2.js';\nimport Constants from './BufferManager/Constants.js';\n\n// methods we forward to the handle\nconst forwarded = ['getMappedRange', 'mapAsync', 'unmap'];\nfunction bufferSubData(device, destBuffer, destOffset, srcArrayBuffer) {\n  const byteCount = srcArrayBuffer.byteLength;\n  const srcBuffer = device.createBuffer({\n    size: byteCount,\n    /* eslint-disable no-undef */\n    usage: GPUBufferUsage.COPY_SRC,\n    /* eslint-enable no-undef */\n    mappedAtCreation: true\n  });\n  const arrayBuffer = srcBuffer.getMappedRange(0, byteCount);\n  new Uint8Array(arrayBuffer).set(new Uint8Array(srcArrayBuffer)); // memcpy\n  srcBuffer.unmap();\n  const encoder = device.createCommandEncoder();\n  encoder.copyBufferToBuffer(srcBuffer, 0, destBuffer, destOffset, byteCount);\n  const commandBuffer = encoder.finish();\n  const queue = device.queue;\n  queue.submit([commandBuffer]);\n  srcBuffer.destroy();\n}\n// ----------------------------------------------------------------------------\n// vtkWebGPUBufferManager methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUBuffer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUBuffer');\n  publicAPI.create = (sizeInBytes, usage) => {\n    model.handle = model.device.getHandle().createBuffer({\n      size: sizeInBytes,\n      usage,\n      label: model.label\n    });\n    model.sizeInBytes = sizeInBytes;\n    model.usage = usage;\n  };\n  publicAPI.write = data => {\n    bufferSubData(model.device.getHandle(), model.handle, 0, data.buffer);\n  };\n  publicAPI.createAndWrite = (data, usage) => {\n    model.handle = model.device.getHandle().createBuffer({\n      size: data.byteLength,\n      usage,\n      mappedAtCreation: true,\n      label: model.label\n    });\n    model.sizeInBytes = data.byteLength;\n    model.usage = usage;\n    new Uint8Array(model.handle.getMappedRange()).set(new Uint8Array(data.buffer)); // memcpy\n    model.handle.unmap();\n  };\n\n  // simple forwarders\n  for (let i = 0; i < forwarded.length; i++) {\n    publicAPI[forwarded[i]] = function () {\n      return model.handle[forwarded[i]](...arguments);\n    };\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  device: null,\n  handle: null,\n  sizeInBytes: 0,\n  strideInBytes: 0,\n  arrayInformation: null,\n  usage: null,\n  label: null,\n  sourceTime: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['handle', 'sizeInBytes', 'usage']);\n  macro.setGet(publicAPI, model, ['strideInBytes', 'device', 'arrayInformation', 'label', 'sourceTime']);\n  vtkWebGPUBuffer(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nvar vtkWebGPUBuffer$1 = {\n  newInstance,\n  extend,\n  ...Constants\n};\nexport { vtkWebGPUBuffer$1 as default, extend, newInstance };","map":{"version":3,"names":["m","macro","Constants","forwarded","bufferSubData","device","destBuffer","destOffset","srcArrayBuffer","byteCount","byteLength","srcBuffer","createBuffer","size","usage","GPUBufferUsage","COPY_SRC","mappedAtCreation","arrayBuffer","getMappedRange","Uint8Array","set","unmap","encoder","createCommandEncoder","copyBufferToBuffer","commandBuffer","finish","queue","submit","destroy","vtkWebGPUBuffer","publicAPI","model","classHierarchy","push","create","sizeInBytes","handle","getHandle","label","write","data","buffer","createAndWrite","i","length","arguments","DEFAULT_VALUES","strideInBytes","arrayInformation","sourceTime","extend","initialValues","undefined","Object","assign","obj","get","setGet","newInstance","vtkWebGPUBuffer$1","default"],"sources":["/Users/yzy/Documents/Playground/vue-cornerstone-demo/node_modules/@kitware/vtk.js/Rendering/WebGPU/Buffer.js"],"sourcesContent":["import { m as macro } from '../../macros2.js';\nimport Constants from './BufferManager/Constants.js';\n\n// methods we forward to the handle\nconst forwarded = ['getMappedRange', 'mapAsync', 'unmap'];\nfunction bufferSubData(device, destBuffer, destOffset, srcArrayBuffer) {\n  const byteCount = srcArrayBuffer.byteLength;\n  const srcBuffer = device.createBuffer({\n    size: byteCount,\n    /* eslint-disable no-undef */\n    usage: GPUBufferUsage.COPY_SRC,\n    /* eslint-enable no-undef */\n    mappedAtCreation: true\n  });\n  const arrayBuffer = srcBuffer.getMappedRange(0, byteCount);\n  new Uint8Array(arrayBuffer).set(new Uint8Array(srcArrayBuffer)); // memcpy\n  srcBuffer.unmap();\n  const encoder = device.createCommandEncoder();\n  encoder.copyBufferToBuffer(srcBuffer, 0, destBuffer, destOffset, byteCount);\n  const commandBuffer = encoder.finish();\n  const queue = device.queue;\n  queue.submit([commandBuffer]);\n  srcBuffer.destroy();\n}\n// ----------------------------------------------------------------------------\n// vtkWebGPUBufferManager methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUBuffer(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUBuffer');\n  publicAPI.create = (sizeInBytes, usage) => {\n    model.handle = model.device.getHandle().createBuffer({\n      size: sizeInBytes,\n      usage,\n      label: model.label\n    });\n    model.sizeInBytes = sizeInBytes;\n    model.usage = usage;\n  };\n  publicAPI.write = data => {\n    bufferSubData(model.device.getHandle(), model.handle, 0, data.buffer);\n  };\n  publicAPI.createAndWrite = (data, usage) => {\n    model.handle = model.device.getHandle().createBuffer({\n      size: data.byteLength,\n      usage,\n      mappedAtCreation: true,\n      label: model.label\n    });\n    model.sizeInBytes = data.byteLength;\n    model.usage = usage;\n    new Uint8Array(model.handle.getMappedRange()).set(new Uint8Array(data.buffer)); // memcpy\n    model.handle.unmap();\n  };\n\n  // simple forwarders\n  for (let i = 0; i < forwarded.length; i++) {\n    publicAPI[forwarded[i]] = function () {\n      return model.handle[forwarded[i]](...arguments);\n    };\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  device: null,\n  handle: null,\n  sizeInBytes: 0,\n  strideInBytes: 0,\n  arrayInformation: null,\n  usage: null,\n  label: null,\n  sourceTime: null\n};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.get(publicAPI, model, ['handle', 'sizeInBytes', 'usage']);\n  macro.setGet(publicAPI, model, ['strideInBytes', 'device', 'arrayInformation', 'label', 'sourceTime']);\n  vtkWebGPUBuffer(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = macro.newInstance(extend);\n\n// ----------------------------------------------------------------------------\n\nvar vtkWebGPUBuffer$1 = {\n  newInstance,\n  extend,\n  ...Constants\n};\n\nexport { vtkWebGPUBuffer$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}