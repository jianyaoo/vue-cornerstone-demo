{"ast":null,"code":"import { vec2, vec3 } from 'gl-matrix';\nimport vtkMath from '@kitware/vtk.js/Common/Core/Math';\nimport vtkMatrixBuilder from '@kitware/vtk.js/Common/Core/MatrixBuilder';\nimport { AnnotationTool } from './base';\nimport { getEnabledElementByIds, getEnabledElement, utilities as csUtils, Enums } from '@cornerstonejs/core';\nimport { getToolGroup, getToolGroupForViewport } from '../store/ToolGroupManager';\nimport { addAnnotation, getAnnotations, removeAnnotation } from '../stateManagement/annotation/annotationState';\nimport { drawCircle as drawCircleSvg, drawHandles as drawHandlesSvg, drawLine as drawLineSvg } from '../drawingSvg';\nimport { state } from '../store';\nimport { Events } from '../enums';\nimport { getViewportIdsWithToolToRender } from '../utilities/viewportFilters';\nimport { resetElementCursor, hideElementCursor } from '../cursors/elementCursor';\nimport liangBarksyClip from '../utilities/math/vec2/liangBarksyClip';\nimport * as lineSegment from '../utilities/math/line';\nimport { isAnnotationLocked } from '../stateManagement/annotation/annotationLocking';\nimport triggerAnnotationRenderForViewportIds from '../utilities/triggerAnnotationRenderForViewportIds';\nimport { CONSTANTS } from '@cornerstonejs/core';\nconst {\n  RENDERING_DEFAULTS\n} = CONSTANTS;\nfunction defaultReferenceLineColor() {\n  return 'rgb(0, 200, 0)';\n}\nfunction defaultReferenceLineControllable() {\n  return true;\n}\nfunction defaultReferenceLineDraggableRotatable() {\n  return true;\n}\nfunction defaultReferenceLineSlabThicknessControlsOn() {\n  return true;\n}\nconst OPERATION = {\n  DRAG: 1,\n  ROTATE: 2,\n  SLAB: 3\n};\nconst EPSILON = 1e-3;\nclass CrosshairsTool extends AnnotationTool {\n  constructor(toolProps = {}, defaultToolProps = {\n    supportedInteractionTypes: ['Mouse'],\n    configuration: {\n      shadow: true,\n      viewportIndicators: true,\n      autoPan: {\n        enabled: false,\n        panSize: 10\n      },\n      referenceLinesCenterGapRadius: 20,\n      filterActorUIDsToSetSlabThickness: [],\n      slabThicknessBlendMode: Enums.BlendModes.MAXIMUM_INTENSITY_BLEND,\n      mobile: {\n        enabled: false,\n        opacity: 0.8,\n        handleRadius: 9\n      }\n    }\n  }) {\n    super(toolProps, defaultToolProps);\n    this.toolCenter = [0, 0, 0];\n    this.initializeViewport = ({\n      renderingEngineId,\n      viewportId\n    }) => {\n      const enabledElement = getEnabledElementByIds(viewportId, renderingEngineId);\n      const {\n        FrameOfReferenceUID,\n        viewport\n      } = enabledElement;\n      const {\n        element\n      } = viewport;\n      const {\n        position,\n        focalPoint,\n        viewPlaneNormal\n      } = viewport.getCamera();\n      let annotations = this._getAnnotations(enabledElement);\n      annotations = this.filterInteractableAnnotationsForElement(element, annotations);\n      if (annotations.length) {\n        removeAnnotation(annotations[0].annotationUID);\n      }\n      const annotation = {\n        highlighted: false,\n        metadata: {\n          cameraPosition: [...position],\n          cameraFocalPoint: [...focalPoint],\n          FrameOfReferenceUID,\n          toolName: this.getToolName()\n        },\n        data: {\n          handles: {\n            rotationPoints: [],\n            slabThicknessPoints: [],\n            toolCenter: this.toolCenter\n          },\n          activeOperation: null,\n          activeViewportIds: [],\n          viewportId\n        }\n      };\n      addAnnotation(annotation, element);\n      return {\n        normal: viewPlaneNormal,\n        point: viewport.canvasToWorld([viewport.canvas.clientWidth / 2, viewport.canvas.clientHeight / 2])\n      };\n    };\n    this._getViewportsInfo = () => {\n      const viewports = getToolGroup(this.toolGroupId).viewportsInfo;\n      return viewports;\n    };\n    this.computeToolCenter = viewportsInfo => {\n      if (!viewportsInfo.length || viewportsInfo.length === 1) {\n        throw new Error('For crosshairs to operate, at least two viewports must be given.');\n      }\n      const [firstViewport, secondViewport, thirdViewport] = viewportsInfo;\n      const {\n        normal: normal1,\n        point: point1\n      } = this.initializeViewport(firstViewport);\n      const {\n        normal: normal2,\n        point: point2\n      } = this.initializeViewport(secondViewport);\n      let normal3 = [0, 0, 0];\n      let point3 = vec3.create();\n      if (thirdViewport) {\n        ({\n          normal: normal3,\n          point: point3\n        } = this.initializeViewport(thirdViewport));\n      } else {\n        vec3.add(point3, point1, point2);\n        vec3.scale(point3, point3, 0.5);\n        vec3.cross(normal3, normal1, normal2);\n      }\n      const firstPlane = csUtils.planar.planeEquation(normal1, point1);\n      const secondPlane = csUtils.planar.planeEquation(normal2, point2);\n      const thirdPlane = csUtils.planar.planeEquation(normal3, point3);\n      this.toolCenter = csUtils.planar.threePlaneIntersection(firstPlane, secondPlane, thirdPlane);\n      const {\n        renderingEngine\n      } = getEnabledElementByIds(viewportsInfo[0].viewportId, viewportsInfo[0].renderingEngineId);\n      triggerAnnotationRenderForViewportIds(renderingEngine, viewportsInfo.map(({\n        viewportId\n      }) => viewportId));\n    };\n    this.addNewAnnotation = evt => {\n      const eventDetail = evt.detail;\n      const {\n        element\n      } = eventDetail;\n      const {\n        currentPoints\n      } = eventDetail;\n      const jumpWorld = currentPoints.world;\n      const enabledElement = getEnabledElement(element);\n      const {\n        viewport\n      } = enabledElement;\n      this._jump(enabledElement, jumpWorld);\n      const annotations = this._getAnnotations(enabledElement);\n      const filteredAnnotations = this.filterInteractableAnnotationsForElement(viewport.element, annotations);\n      const {\n        data\n      } = filteredAnnotations[0];\n      const {\n        rotationPoints\n      } = data.handles;\n      const viewportIdArray = [];\n      for (let i = 0; i < rotationPoints.length - 1; ++i) {\n        const otherViewport = rotationPoints[i][1];\n        const viewportControllable = this._getReferenceLineControllable(otherViewport.id);\n        const viewportDraggableRotatable = this._getReferenceLineDraggableRotatable(otherViewport.id);\n        if (!viewportControllable || !viewportDraggableRotatable) {\n          continue;\n        }\n        viewportIdArray.push(otherViewport.id);\n        i++;\n      }\n      data.activeViewportIds = [...viewportIdArray];\n      data.handles.activeOperation = OPERATION.DRAG;\n      evt.preventDefault();\n      hideElementCursor(element);\n      this._activateModify(element);\n      return filteredAnnotations[0];\n    };\n    this.cancel = () => {\n      console.log('Not implemented yet');\n    };\n    this.handleSelectedCallback = (evt, annotation) => {\n      const eventDetail = evt.detail;\n      const {\n        element\n      } = eventDetail;\n      annotation.highlighted = true;\n      this._activateModify(element);\n      hideElementCursor(element);\n      evt.preventDefault();\n    };\n    this.isPointNearTool = (element, annotation, canvasCoords, proximity) => {\n      if (this._pointNearTool(element, annotation, canvasCoords, 6)) {\n        return true;\n      }\n      return false;\n    };\n    this.toolSelectedCallback = (evt, annotation, interactionType) => {\n      const eventDetail = evt.detail;\n      const {\n        element\n      } = eventDetail;\n      annotation.highlighted = true;\n      this._activateModify(element);\n      hideElementCursor(element);\n      evt.preventDefault();\n    };\n    this.onCameraModified = evt => {\n      const eventDetail = evt.detail;\n      const {\n        element\n      } = eventDetail;\n      const enabledElement = getEnabledElement(element);\n      const {\n        renderingEngine\n      } = enabledElement;\n      const viewport = enabledElement.viewport;\n      const annotations = this._getAnnotations(enabledElement);\n      const filteredToolAnnotations = this.filterInteractableAnnotationsForElement(element, annotations);\n      const viewportAnnotation = filteredToolAnnotations[0];\n      if (!viewportAnnotation) {\n        return;\n      }\n      const currentCamera = viewport.getCamera();\n      const oldCameraPosition = viewportAnnotation.metadata.cameraPosition;\n      const deltaCameraPosition = [0, 0, 0];\n      vtkMath.subtract(currentCamera.position, oldCameraPosition, deltaCameraPosition);\n      const oldCameraFocalPoint = viewportAnnotation.metadata.cameraFocalPoint;\n      const deltaCameraFocalPoint = [0, 0, 0];\n      vtkMath.subtract(currentCamera.focalPoint, oldCameraFocalPoint, deltaCameraFocalPoint);\n      viewportAnnotation.metadata.cameraPosition = [...currentCamera.position];\n      viewportAnnotation.metadata.cameraFocalPoint = [...currentCamera.focalPoint];\n      const viewportControllable = this._getReferenceLineControllable(viewport.id);\n      const viewportDraggableRotatable = this._getReferenceLineDraggableRotatable(viewport.id);\n      if (!csUtils.isEqual(currentCamera.position, oldCameraPosition, 1e-3) && viewportControllable && viewportDraggableRotatable) {\n        let isRotation = false;\n        const cameraModifiedSameForPosAndFocalPoint = csUtils.isEqual(deltaCameraPosition, deltaCameraFocalPoint, 1e-3);\n        if (!cameraModifiedSameForPosAndFocalPoint) {\n          isRotation = true;\n        }\n        const cameraModifiedInPlane = Math.abs(vtkMath.dot(deltaCameraPosition, currentCamera.viewPlaneNormal)) < 1e-2;\n        if (!isRotation && !cameraModifiedInPlane) {\n          this.toolCenter[0] += deltaCameraPosition[0];\n          this.toolCenter[1] += deltaCameraPosition[1];\n          this.toolCenter[2] += deltaCameraPosition[2];\n        }\n      }\n      if (this.configuration.autoPan?.enabled) {\n        const toolGroup = getToolGroupForViewport(viewport.id, renderingEngine.id);\n        const otherViewportIds = toolGroup.getViewportIds().filter(id => id !== viewport.id);\n        otherViewportIds.forEach(viewportId => {\n          this._autoPanViewportIfNecessary(viewportId, renderingEngine);\n        });\n      }\n      const requireSameOrientation = false;\n      const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName(), requireSameOrientation);\n      triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n    };\n    this.mouseMoveCallback = (evt, filteredToolAnnotations) => {\n      const {\n        element,\n        currentPoints\n      } = evt.detail;\n      const canvasCoords = currentPoints.canvas;\n      let imageNeedsUpdate = false;\n      for (let i = 0; i < filteredToolAnnotations.length; i++) {\n        const annotation = filteredToolAnnotations[i];\n        if (isAnnotationLocked(annotation)) {\n          continue;\n        }\n        const {\n          data,\n          highlighted\n        } = annotation;\n        if (!data.handles) {\n          continue;\n        }\n        const previousActiveOperation = data.handles.activeOperation;\n        const previousActiveViewportIds = data.activeViewportIds && data.activeViewportIds.length > 0 ? [...data.activeViewportIds] : [];\n        data.activeViewportIds = [];\n        data.handles.activeOperation = null;\n        const handleNearImagePoint = this.getHandleNearImagePoint(element, annotation, canvasCoords, 6);\n        let near = false;\n        if (handleNearImagePoint) {\n          near = true;\n        } else {\n          near = this._pointNearTool(element, annotation, canvasCoords, 6);\n        }\n        const nearToolAndNotMarkedActive = near && !highlighted;\n        const notNearToolAndMarkedActive = !near && highlighted;\n        if (nearToolAndNotMarkedActive || notNearToolAndMarkedActive) {\n          annotation.highlighted = !highlighted;\n          imageNeedsUpdate = true;\n        } else if (data.handles.activeOperation !== previousActiveOperation || !this._areViewportIdArraysEqual(data.activeViewportIds, previousActiveViewportIds)) {\n          imageNeedsUpdate = true;\n        }\n      }\n      return imageNeedsUpdate;\n    };\n    this.filterInteractableAnnotationsForElement = (element, annotations) => {\n      if (!annotations || !annotations.length) {\n        return [];\n      }\n      const enabledElement = getEnabledElement(element);\n      const {\n        viewportId\n      } = enabledElement;\n      const viewportUIDSpecificCrosshairs = annotations.filter(annotation => annotation.data.viewportId === viewportId);\n      return viewportUIDSpecificCrosshairs;\n    };\n    this.renderAnnotation = (enabledElement, svgDrawingHelper) => {\n      let renderStatus = false;\n      const {\n        viewport,\n        renderingEngine\n      } = enabledElement;\n      const {\n        element\n      } = viewport;\n      const annotations = this._getAnnotations(enabledElement);\n      const camera = viewport.getCamera();\n      const filteredToolAnnotations = this.filterInteractableAnnotationsForElement(element, annotations);\n      const viewportAnnotation = filteredToolAnnotations[0];\n      if (!annotations?.length || !viewportAnnotation?.data) {\n        return renderStatus;\n      }\n      const annotationUID = viewportAnnotation.annotationUID;\n      const {\n        clientWidth,\n        clientHeight\n      } = viewport.canvas;\n      const canvasDiagonalLength = Math.sqrt(clientWidth * clientWidth + clientHeight * clientHeight);\n      const canvasMinDimensionLength = Math.min(clientWidth, clientHeight);\n      const data = viewportAnnotation.data;\n      const crosshairCenterCanvas = viewport.worldToCanvas(this.toolCenter);\n      const otherViewportAnnotations = this._filterAnnotationsByUniqueViewportOrientations(enabledElement, annotations);\n      const referenceLines = [];\n      const canvasBox = [0, 0, clientWidth, clientHeight];\n      otherViewportAnnotations.forEach(annotation => {\n        const {\n          data\n        } = annotation;\n        data.handles.toolCenter = this.toolCenter;\n        const otherViewport = renderingEngine.getViewport(data.viewportId);\n        const otherCamera = otherViewport.getCamera();\n        const otherViewportControllable = this._getReferenceLineControllable(otherViewport.id);\n        const otherViewportDraggableRotatable = this._getReferenceLineDraggableRotatable(otherViewport.id);\n        const otherViewportSlabThicknessControlsOn = this._getReferenceLineSlabThicknessControlsOn(otherViewport.id);\n        const {\n          clientWidth,\n          clientHeight\n        } = otherViewport.canvas;\n        const otherCanvasDiagonalLength = Math.sqrt(clientWidth * clientWidth + clientHeight * clientHeight);\n        const otherCanvasCenter = [clientWidth * 0.5, clientHeight * 0.5];\n        const otherViewportCenterWorld = otherViewport.canvasToWorld(otherCanvasCenter);\n        const direction = [0, 0, 0];\n        vtkMath.cross(camera.viewPlaneNormal, otherCamera.viewPlaneNormal, direction);\n        vtkMath.normalize(direction);\n        vtkMath.multiplyScalar(direction, otherCanvasDiagonalLength);\n        const pointWorld0 = [0, 0, 0];\n        vtkMath.add(otherViewportCenterWorld, direction, pointWorld0);\n        const pointWorld1 = [0, 0, 0];\n        vtkMath.subtract(otherViewportCenterWorld, direction, pointWorld1);\n        const pointCanvas0 = viewport.worldToCanvas(pointWorld0);\n        const otherViewportCenterCanvas = viewport.worldToCanvas(otherViewportCenterWorld);\n        const canvasUnitVectorFromCenter = vec2.create();\n        vec2.subtract(canvasUnitVectorFromCenter, pointCanvas0, otherViewportCenterCanvas);\n        vec2.normalize(canvasUnitVectorFromCenter, canvasUnitVectorFromCenter);\n        const canvasVectorFromCenterLong = vec2.create();\n        vec2.scale(canvasVectorFromCenterLong, canvasUnitVectorFromCenter, canvasDiagonalLength * 100);\n        const canvasVectorFromCenterMid = vec2.create();\n        vec2.scale(canvasVectorFromCenterMid, canvasUnitVectorFromCenter, canvasMinDimensionLength * 0.4);\n        const canvasVectorFromCenterShort = vec2.create();\n        vec2.scale(canvasVectorFromCenterShort, canvasUnitVectorFromCenter, canvasMinDimensionLength * 0.2);\n        const canvasVectorFromCenterStart = vec2.create();\n        const centerGap = this.configuration.referenceLinesCenterGapRadius;\n        vec2.scale(canvasVectorFromCenterStart, canvasUnitVectorFromCenter, otherViewportAnnotations.length === 2 ? centerGap : 0);\n        const refLinePointOne = vec2.create();\n        const refLinePointTwo = vec2.create();\n        const refLinePointThree = vec2.create();\n        const refLinePointFour = vec2.create();\n        let refLinesCenter = vec2.clone(crosshairCenterCanvas);\n        if (!otherViewportDraggableRotatable || !otherViewportControllable) {\n          refLinesCenter = vec2.clone(otherViewportCenterCanvas);\n        }\n        vec2.add(refLinePointOne, refLinesCenter, canvasVectorFromCenterStart);\n        vec2.add(refLinePointTwo, refLinesCenter, canvasVectorFromCenterLong);\n        vec2.subtract(refLinePointThree, refLinesCenter, canvasVectorFromCenterStart);\n        vec2.subtract(refLinePointFour, refLinesCenter, canvasVectorFromCenterLong);\n        liangBarksyClip(refLinePointOne, refLinePointTwo, canvasBox);\n        liangBarksyClip(refLinePointThree, refLinePointFour, canvasBox);\n        const rotHandleOne = vec2.create();\n        vec2.subtract(rotHandleOne, crosshairCenterCanvas, canvasVectorFromCenterMid);\n        const rotHandleTwo = vec2.create();\n        vec2.add(rotHandleTwo, crosshairCenterCanvas, canvasVectorFromCenterMid);\n        let stHandlesCenterCanvas = vec2.clone(crosshairCenterCanvas);\n        if (!otherViewportDraggableRotatable && otherViewportSlabThicknessControlsOn) {\n          stHandlesCenterCanvas = vec2.clone(otherViewportCenterCanvas);\n        }\n        let stHandlesCenterWorld = [...this.toolCenter];\n        if (!otherViewportDraggableRotatable && otherViewportSlabThicknessControlsOn) {\n          stHandlesCenterWorld = [...otherViewportCenterWorld];\n        }\n        const worldUnitVectorFromCenter = [0, 0, 0];\n        vtkMath.subtract(pointWorld0, pointWorld1, worldUnitVectorFromCenter);\n        vtkMath.normalize(worldUnitVectorFromCenter);\n        const {\n          viewPlaneNormal\n        } = camera;\n        const {\n          matrix\n        } = vtkMatrixBuilder.buildFromDegree().rotate(90, viewPlaneNormal);\n        const worldUnitOrthoVectorFromCenter = [0, 0, 0];\n        vec3.transformMat4(worldUnitOrthoVectorFromCenter, worldUnitVectorFromCenter, matrix);\n        const slabThicknessValue = otherViewport.getSlabThickness();\n        const worldOrthoVectorFromCenter = [...worldUnitOrthoVectorFromCenter];\n        vtkMath.multiplyScalar(worldOrthoVectorFromCenter, slabThicknessValue);\n        const worldVerticalRefPoint = [0, 0, 0];\n        vtkMath.add(stHandlesCenterWorld, worldOrthoVectorFromCenter, worldVerticalRefPoint);\n        const canvasVerticalRefPoint = viewport.worldToCanvas(worldVerticalRefPoint);\n        const canvasOrthoVectorFromCenter = vec2.create();\n        vec2.subtract(canvasOrthoVectorFromCenter, stHandlesCenterCanvas, canvasVerticalRefPoint);\n        const stLinePointOne = vec2.create();\n        vec2.subtract(stLinePointOne, stHandlesCenterCanvas, canvasVectorFromCenterLong);\n        vec2.add(stLinePointOne, stLinePointOne, canvasOrthoVectorFromCenter);\n        const stLinePointTwo = vec2.create();\n        vec2.add(stLinePointTwo, stHandlesCenterCanvas, canvasVectorFromCenterLong);\n        vec2.add(stLinePointTwo, stLinePointTwo, canvasOrthoVectorFromCenter);\n        liangBarksyClip(stLinePointOne, stLinePointTwo, canvasBox);\n        const stLinePointThree = vec2.create();\n        vec2.add(stLinePointThree, stHandlesCenterCanvas, canvasVectorFromCenterLong);\n        vec2.subtract(stLinePointThree, stLinePointThree, canvasOrthoVectorFromCenter);\n        const stLinePointFour = vec2.create();\n        vec2.subtract(stLinePointFour, stHandlesCenterCanvas, canvasVectorFromCenterLong);\n        vec2.subtract(stLinePointFour, stLinePointFour, canvasOrthoVectorFromCenter);\n        liangBarksyClip(stLinePointThree, stLinePointFour, canvasBox);\n        const stHandleOne = vec2.create();\n        const stHandleTwo = vec2.create();\n        const stHandleThree = vec2.create();\n        const stHandleFour = vec2.create();\n        vec2.subtract(stHandleOne, stHandlesCenterCanvas, canvasVectorFromCenterShort);\n        vec2.add(stHandleOne, stHandleOne, canvasOrthoVectorFromCenter);\n        vec2.add(stHandleTwo, stHandlesCenterCanvas, canvasVectorFromCenterShort);\n        vec2.add(stHandleTwo, stHandleTwo, canvasOrthoVectorFromCenter);\n        vec2.subtract(stHandleThree, stHandlesCenterCanvas, canvasVectorFromCenterShort);\n        vec2.subtract(stHandleThree, stHandleThree, canvasOrthoVectorFromCenter);\n        vec2.add(stHandleFour, stHandlesCenterCanvas, canvasVectorFromCenterShort);\n        vec2.subtract(stHandleFour, stHandleFour, canvasOrthoVectorFromCenter);\n        referenceLines.push([otherViewport, refLinePointOne, refLinePointTwo, refLinePointThree, refLinePointFour, stLinePointOne, stLinePointTwo, stLinePointThree, stLinePointFour, rotHandleOne, rotHandleTwo, stHandleOne, stHandleTwo, stHandleThree, stHandleFour]);\n      });\n      const newRtpoints = [];\n      const newStpoints = [];\n      const viewportColor = this._getReferenceLineColor(viewport.id);\n      const color = viewportColor !== undefined ? viewportColor : 'rgb(200, 200, 200)';\n      referenceLines.forEach((line, lineIndex) => {\n        const otherViewport = line[0];\n        const viewportColor = this._getReferenceLineColor(otherViewport.id);\n        const viewportControllable = this._getReferenceLineControllable(otherViewport.id);\n        const viewportDraggableRotatable = this._getReferenceLineDraggableRotatable(otherViewport.id) || this.configuration.mobile?.enabled;\n        const viewportSlabThicknessControlsOn = this._getReferenceLineSlabThicknessControlsOn(otherViewport.id) || this.configuration.mobile?.enabled;\n        const selectedViewportId = data.activeViewportIds.find(id => id === otherViewport.id);\n        let color = viewportColor !== undefined ? viewportColor : 'rgb(200, 200, 200)';\n        let lineWidth = 1;\n        const lineActive = data.handles.activeOperation !== null && data.handles.activeOperation === OPERATION.DRAG && selectedViewportId;\n        if (lineActive) {\n          lineWidth = 2.5;\n        }\n        let lineUID = `${lineIndex}`;\n        if (viewportControllable && viewportDraggableRotatable) {\n          lineUID = `${lineIndex}One`;\n          drawLineSvg(svgDrawingHelper, annotationUID, lineUID, line[1], line[2], {\n            color,\n            lineWidth\n          });\n          lineUID = `${lineIndex}Two`;\n          drawLineSvg(svgDrawingHelper, annotationUID, lineUID, line[3], line[4], {\n            color,\n            lineWidth\n          });\n        } else {\n          drawLineSvg(svgDrawingHelper, annotationUID, lineUID, line[2], line[4], {\n            color,\n            lineWidth\n          });\n        }\n        if (viewportControllable) {\n          color = viewportColor !== undefined ? viewportColor : 'rgb(200, 200, 200)';\n          const rotHandlesActive = data.handles.activeOperation === OPERATION.ROTATE;\n          const rotationHandles = [line[9], line[10]];\n          const rotHandleWorldOne = [viewport.canvasToWorld(line[9]), otherViewport, line[1], line[2]];\n          const rotHandleWorldTwo = [viewport.canvasToWorld(line[10]), otherViewport, line[3], line[4]];\n          newRtpoints.push(rotHandleWorldOne, rotHandleWorldTwo);\n          const slabThicknessHandlesActive = data.handles.activeOperation === OPERATION.SLAB;\n          const slabThicknessHandles = [line[11], line[12], line[13], line[14]];\n          const slabThicknessHandleWorldOne = [viewport.canvasToWorld(line[11]), otherViewport, line[5], line[6]];\n          const slabThicknessHandleWorldTwo = [viewport.canvasToWorld(line[12]), otherViewport, line[5], line[6]];\n          const slabThicknessHandleWorldThree = [viewport.canvasToWorld(line[13]), otherViewport, line[7], line[8]];\n          const slabThicknessHandleWorldFour = [viewport.canvasToWorld(line[14]), otherViewport, line[7], line[8]];\n          newStpoints.push(slabThicknessHandleWorldOne, slabThicknessHandleWorldTwo, slabThicknessHandleWorldThree, slabThicknessHandleWorldFour);\n          if ((lineActive || this.configuration.mobile?.enabled) && !rotHandlesActive && !slabThicknessHandlesActive && viewportDraggableRotatable && viewportSlabThicknessControlsOn) {\n            let handleUID = `${lineIndex}One`;\n            drawHandlesSvg(svgDrawingHelper, annotationUID, handleUID, rotationHandles, {\n              color,\n              handleRadius: this.configuration.mobile?.enabled ? this.configuration.mobile?.handleRadius : 3,\n              opacity: this.configuration.mobile?.enabled ? this.configuration.mobile?.opacity : 1,\n              type: 'circle'\n            });\n            handleUID = `${lineIndex}Two`;\n            drawHandlesSvg(svgDrawingHelper, annotationUID, handleUID, slabThicknessHandles, {\n              color,\n              handleRadius: this.configuration.mobile?.enabled ? this.configuration.mobile?.handleRadius : 3,\n              opacity: this.configuration.mobile?.enabled ? this.configuration.mobile?.opacity : 1,\n              type: 'rect'\n            });\n          } else if (lineActive && !rotHandlesActive && !slabThicknessHandlesActive && viewportDraggableRotatable) {\n            const handleUID = `${lineIndex}`;\n            drawHandlesSvg(svgDrawingHelper, annotationUID, handleUID, rotationHandles, {\n              color,\n              handleRadius: this.configuration.mobile?.enabled ? this.configuration.mobile?.handleRadius : 3,\n              opacity: this.configuration.mobile?.enabled ? this.configuration.mobile?.opacity : 1,\n              type: 'circle'\n            });\n          } else if (selectedViewportId && !rotHandlesActive && !slabThicknessHandlesActive && viewportSlabThicknessControlsOn) {\n            const handleUID = `${lineIndex}`;\n            drawHandlesSvg(svgDrawingHelper, annotationUID, handleUID, slabThicknessHandles, {\n              color,\n              handleRadius: this.configuration.mobile?.enabled ? this.configuration.mobile?.handleRadius : 3,\n              opacity: this.configuration.mobile?.enabled ? this.configuration.mobile?.opacity : 1,\n              type: 'rect'\n            });\n          } else if (rotHandlesActive && viewportDraggableRotatable) {\n            const handleUID = `${lineIndex}`;\n            drawHandlesSvg(svgDrawingHelper, annotationUID, handleUID, rotationHandles, {\n              color,\n              handleRadius: 2,\n              fill: color,\n              type: 'circle'\n            });\n          } else if (slabThicknessHandlesActive && selectedViewportId && viewportSlabThicknessControlsOn) {\n            drawHandlesSvg(svgDrawingHelper, annotationUID, lineUID, slabThicknessHandles, {\n              color,\n              handleRadius: 2,\n              fill: color,\n              type: 'rect'\n            });\n          }\n          const slabThicknessValue = otherViewport.getSlabThickness();\n          if (slabThicknessValue > 0.5 && viewportSlabThicknessControlsOn) {\n            lineUID = `${lineIndex}STOne`;\n            drawLineSvg(svgDrawingHelper, annotationUID, lineUID, line[5], line[6], {\n              color,\n              width: 1,\n              lineDash: [2, 3]\n            });\n            lineUID = `${lineIndex}STTwo`;\n            drawLineSvg(svgDrawingHelper, annotationUID, lineUID, line[7], line[8], {\n              color,\n              width: line,\n              lineDash: [2, 3]\n            });\n          }\n        }\n      });\n      renderStatus = true;\n      data.handles.rotationPoints = newRtpoints;\n      data.handles.slabThicknessPoints = newStpoints;\n      if (this.configuration.viewportIndicators) {\n        const referenceColorCoordinates = [clientWidth * 0.95, clientHeight * 0.05];\n        const circleRadius = canvasDiagonalLength * 0.01;\n        const circleUID = '0';\n        drawCircleSvg(svgDrawingHelper, annotationUID, circleUID, referenceColorCoordinates, circleRadius, {\n          color,\n          fill: color\n        });\n      }\n      return renderStatus;\n    };\n    this._getAnnotations = enabledElement => {\n      const {\n        viewport\n      } = enabledElement;\n      const annotations = getAnnotations(this.getToolName(), viewport.element) || [];\n      const viewportIds = this._getViewportsInfo().map(({\n        viewportId\n      }) => viewportId);\n      const toolGroupAnnotations = annotations.filter(annotation => {\n        const {\n          data\n        } = annotation;\n        return viewportIds.includes(data.viewportId);\n      });\n      return toolGroupAnnotations;\n    };\n    this._onNewVolume = e => {\n      const viewportsInfo = this._getViewportsInfo();\n      this.computeToolCenter(viewportsInfo);\n    };\n    this._areViewportIdArraysEqual = (viewportIdArrayOne, viewportIdArrayTwo) => {\n      if (viewportIdArrayOne.length !== viewportIdArrayTwo.length) {\n        return false;\n      }\n      viewportIdArrayOne.forEach(id => {\n        let itemFound = false;\n        for (let i = 0; i < viewportIdArrayTwo.length; ++i) {\n          if (id === viewportIdArrayTwo[i]) {\n            itemFound = true;\n            break;\n          }\n        }\n        if (itemFound === false) {\n          return false;\n        }\n      });\n      return true;\n    };\n    this._getAnnotationsForViewportsWithDifferentCameras = (enabledElement, annotations) => {\n      const {\n        viewportId,\n        renderingEngine,\n        viewport\n      } = enabledElement;\n      const otherViewportAnnotations = annotations.filter(annotation => annotation.data.viewportId !== viewportId);\n      if (!otherViewportAnnotations || !otherViewportAnnotations.length) {\n        return [];\n      }\n      const camera = viewport.getCamera();\n      const {\n        viewPlaneNormal,\n        position\n      } = camera;\n      const viewportsWithDifferentCameras = otherViewportAnnotations.filter(annotation => {\n        const {\n          viewportId\n        } = annotation.data;\n        const targetViewport = renderingEngine.getViewport(viewportId);\n        const cameraOfTarget = targetViewport.getCamera();\n        return !(csUtils.isEqual(cameraOfTarget.viewPlaneNormal, viewPlaneNormal, 1e-2) && csUtils.isEqual(cameraOfTarget.position, position, 1));\n      });\n      return viewportsWithDifferentCameras;\n    };\n    this._filterViewportWithSameOrientation = (enabledElement, referenceAnnotation, annotations) => {\n      const {\n        renderingEngine\n      } = enabledElement;\n      const {\n        data\n      } = referenceAnnotation;\n      const viewport = renderingEngine.getViewport(data.viewportId);\n      const linkedViewportAnnotations = annotations.filter(annotation => {\n        const {\n          data\n        } = annotation;\n        const otherViewport = renderingEngine.getViewport(data.viewportId);\n        const otherViewportControllable = this._getReferenceLineControllable(otherViewport.id);\n        return otherViewportControllable === true;\n      });\n      if (!linkedViewportAnnotations || !linkedViewportAnnotations.length) {\n        return [];\n      }\n      const camera = viewport.getCamera();\n      const viewPlaneNormal = camera.viewPlaneNormal;\n      vtkMath.normalize(viewPlaneNormal);\n      const otherViewportsAnnotationsWithSameCameraDirection = linkedViewportAnnotations.filter(annotation => {\n        const {\n          viewportId\n        } = annotation.data;\n        const otherViewport = renderingEngine.getViewport(viewportId);\n        const otherCamera = otherViewport.getCamera();\n        const otherViewPlaneNormal = otherCamera.viewPlaneNormal;\n        vtkMath.normalize(otherViewPlaneNormal);\n        return csUtils.isEqual(viewPlaneNormal, otherViewPlaneNormal, 1e-2) && csUtils.isEqual(camera.viewUp, otherCamera.viewUp, 1e-2);\n      });\n      return otherViewportsAnnotationsWithSameCameraDirection;\n    };\n    this._filterAnnotationsByUniqueViewportOrientations = (enabledElement, annotations) => {\n      const {\n        renderingEngine,\n        viewport\n      } = enabledElement;\n      const camera = viewport.getCamera();\n      const viewPlaneNormal = camera.viewPlaneNormal;\n      vtkMath.normalize(viewPlaneNormal);\n      const otherLinkedViewportAnnotationsFromSameScene = annotations.filter(annotation => {\n        const {\n          data\n        } = annotation;\n        const otherViewport = renderingEngine.getViewport(data.viewportId);\n        const otherViewportControllable = this._getReferenceLineControllable(otherViewport.id);\n        return viewport !== otherViewport && otherViewportControllable === true;\n      });\n      const otherViewportsAnnotationsWithUniqueCameras = [];\n      for (let i = 0; i < otherLinkedViewportAnnotationsFromSameScene.length; ++i) {\n        const annotation = otherLinkedViewportAnnotationsFromSameScene[i];\n        const {\n          viewportId\n        } = annotation.data;\n        const otherViewport = renderingEngine.getViewport(viewportId);\n        const otherCamera = otherViewport.getCamera();\n        const otherViewPlaneNormal = otherCamera.viewPlaneNormal;\n        vtkMath.normalize(otherViewPlaneNormal);\n        if (csUtils.isEqual(viewPlaneNormal, otherViewPlaneNormal, 1e-2) || csUtils.isOpposite(viewPlaneNormal, otherViewPlaneNormal, 1e-2)) {\n          continue;\n        }\n        let cameraFound = false;\n        for (let jj = 0; jj < otherViewportsAnnotationsWithUniqueCameras.length; ++jj) {\n          const annotation = otherViewportsAnnotationsWithUniqueCameras[jj];\n          const {\n            viewportId\n          } = annotation.data;\n          const stockedViewport = renderingEngine.getViewport(viewportId);\n          const cameraOfStocked = stockedViewport.getCamera();\n          if (csUtils.isEqual(cameraOfStocked.viewPlaneNormal, otherCamera.viewPlaneNormal, 1e-2) && csUtils.isEqual(cameraOfStocked.position, otherCamera.position, 1)) {\n            cameraFound = true;\n          }\n        }\n        if (!cameraFound) {\n          otherViewportsAnnotationsWithUniqueCameras.push(annotation);\n        }\n      }\n      const otherNonLinkedViewportAnnotationsFromSameScene = annotations.filter(annotation => {\n        const {\n          data\n        } = annotation;\n        const otherViewport = renderingEngine.getViewport(data.viewportId);\n        const otherViewportControllable = this._getReferenceLineControllable(otherViewport.id);\n        return viewport !== otherViewport && otherViewportControllable !== true;\n      });\n      for (let i = 0; i < otherNonLinkedViewportAnnotationsFromSameScene.length; ++i) {\n        const annotation = otherNonLinkedViewportAnnotationsFromSameScene[i];\n        const {\n          viewportId\n        } = annotation.data;\n        const otherViewport = renderingEngine.getViewport(viewportId);\n        const otherCamera = otherViewport.getCamera();\n        const otherViewPlaneNormal = otherCamera.viewPlaneNormal;\n        vtkMath.normalize(otherViewPlaneNormal);\n        if (csUtils.isEqual(viewPlaneNormal, otherViewPlaneNormal, 1e-2) || csUtils.isOpposite(viewPlaneNormal, otherViewPlaneNormal, 1e-2)) {\n          continue;\n        }\n        let cameraFound = false;\n        for (let jj = 0; jj < otherViewportsAnnotationsWithUniqueCameras.length; ++jj) {\n          const annotation = otherViewportsAnnotationsWithUniqueCameras[jj];\n          const {\n            viewportId\n          } = annotation.data;\n          const stockedViewport = renderingEngine.getViewport(viewportId);\n          const cameraOfStocked = stockedViewport.getCamera();\n          if (csUtils.isEqual(cameraOfStocked.viewPlaneNormal, otherCamera.viewPlaneNormal, 1e-2) && csUtils.isEqual(cameraOfStocked.position, otherCamera.position, 1)) {\n            cameraFound = true;\n          }\n        }\n        if (!cameraFound) {\n          otherViewportsAnnotationsWithUniqueCameras.push(annotation);\n        }\n      }\n      const otherViewportAnnotations = this._getAnnotationsForViewportsWithDifferentCameras(enabledElement, annotations);\n      for (let i = 0; i < otherViewportAnnotations.length; ++i) {\n        const annotation = otherViewportAnnotations[i];\n        if (otherViewportsAnnotationsWithUniqueCameras.some(element => element === annotation)) {\n          continue;\n        }\n        const {\n          viewportId\n        } = annotation.data;\n        const otherViewport = renderingEngine.getViewport(viewportId);\n        const otherCamera = otherViewport.getCamera();\n        const otherViewPlaneNormal = otherCamera.viewPlaneNormal;\n        vtkMath.normalize(otherViewPlaneNormal);\n        if (csUtils.isEqual(viewPlaneNormal, otherViewPlaneNormal, 1e-2) || csUtils.isOpposite(viewPlaneNormal, otherViewPlaneNormal, 1e-2)) {\n          continue;\n        }\n        let cameraFound = false;\n        for (let jj = 0; jj < otherViewportsAnnotationsWithUniqueCameras.length; ++jj) {\n          const annotation = otherViewportsAnnotationsWithUniqueCameras[jj];\n          const {\n            viewportId\n          } = annotation.data;\n          const stockedViewport = renderingEngine.getViewport(viewportId);\n          const cameraOfStocked = stockedViewport.getCamera();\n          if (csUtils.isEqual(cameraOfStocked.viewPlaneNormal, otherCamera.viewPlaneNormal, 1e-2) && csUtils.isEqual(cameraOfStocked.position, otherCamera.position, 1)) {\n            cameraFound = true;\n          }\n        }\n        if (!cameraFound) {\n          otherViewportsAnnotationsWithUniqueCameras.push(annotation);\n        }\n      }\n      return otherViewportsAnnotationsWithUniqueCameras;\n    };\n    this._checkIfViewportsRenderingSameScene = (viewport, otherViewport) => {\n      const actors = viewport.getActors();\n      const otherViewportActors = otherViewport.getActors();\n      let sameScene = true;\n      actors.forEach(actor => {\n        if (actors.length !== otherViewportActors.length || otherViewportActors.find(({\n          uid\n        }) => uid === actor.uid) === undefined) {\n          sameScene = false;\n        }\n      });\n      return sameScene;\n    };\n    this._jump = (enabledElement, jumpWorld) => {\n      state.isInteractingWithTool = true;\n      const {\n        viewport,\n        renderingEngine\n      } = enabledElement;\n      const annotations = this._getAnnotations(enabledElement);\n      const delta = [0, 0, 0];\n      vtkMath.subtract(jumpWorld, this.toolCenter, delta);\n      const otherViewportAnnotations = this._getAnnotationsForViewportsWithDifferentCameras(enabledElement, annotations);\n      const viewportsAnnotationsToUpdate = otherViewportAnnotations.filter(annotation => {\n        const {\n          data\n        } = annotation;\n        const otherViewport = renderingEngine.getViewport(data.viewportId);\n        const sameScene = this._checkIfViewportsRenderingSameScene(viewport, otherViewport);\n        return this._getReferenceLineControllable(otherViewport.id) && this._getReferenceLineDraggableRotatable(otherViewport.id) && sameScene;\n      });\n      if (viewportsAnnotationsToUpdate.length === 0) {\n        state.isInteractingWithTool = false;\n        return false;\n      }\n      this._applyDeltaShiftToSelectedViewportCameras(renderingEngine, viewportsAnnotationsToUpdate, delta);\n      state.isInteractingWithTool = false;\n      return true;\n    };\n    this._activateModify = element => {\n      state.isInteractingWithTool = !this.configuration.mobile?.enabled;\n      element.addEventListener(Events.MOUSE_UP, this._endCallback);\n      element.addEventListener(Events.MOUSE_DRAG, this._dragCallback);\n      element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n      element.addEventListener(Events.TOUCH_END, this._endCallback);\n      element.addEventListener(Events.TOUCH_DRAG, this._dragCallback);\n      element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n    };\n    this._deactivateModify = element => {\n      state.isInteractingWithTool = false;\n      element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n      element.removeEventListener(Events.MOUSE_DRAG, this._dragCallback);\n      element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n      element.removeEventListener(Events.TOUCH_END, this._endCallback);\n      element.removeEventListener(Events.TOUCH_DRAG, this._dragCallback);\n      element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n    };\n    this._endCallback = evt => {\n      const eventDetail = evt.detail;\n      const {\n        element\n      } = eventDetail;\n      this.editData.annotation.data.handles.activeOperation = null;\n      this.editData.annotation.data.activeViewportIds = [];\n      this._deactivateModify(element);\n      resetElementCursor(element);\n      this.editData = null;\n      const enabledElement = getEnabledElement(element);\n      const {\n        renderingEngine\n      } = enabledElement;\n      const requireSameOrientation = false;\n      const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName(), requireSameOrientation);\n      triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n    };\n    this._dragCallback = evt => {\n      const eventDetail = evt.detail;\n      const delta = eventDetail.deltaPoints.world;\n      if (Math.abs(delta[0]) < 1e-3 && Math.abs(delta[1]) < 1e-3 && Math.abs(delta[2]) < 1e-3) {\n        return;\n      }\n      const {\n        element\n      } = eventDetail;\n      const enabledElement = getEnabledElement(element);\n      const {\n        renderingEngine,\n        viewport\n      } = enabledElement;\n      const annotations = this._getAnnotations(enabledElement);\n      const filteredToolAnnotations = this.filterInteractableAnnotationsForElement(element, annotations);\n      const viewportAnnotation = filteredToolAnnotations[0];\n      if (!viewportAnnotation) {\n        return;\n      }\n      const {\n        handles\n      } = viewportAnnotation.data;\n      const {\n        currentPoints\n      } = evt.detail;\n      const canvasCoords = currentPoints.canvas;\n      if (handles.activeOperation === OPERATION.DRAG) {\n        const otherViewportAnnotations = this._getAnnotationsForViewportsWithDifferentCameras(enabledElement, annotations);\n        const viewportsAnnotationsToUpdate = otherViewportAnnotations.filter(annotation => {\n          const {\n            data\n          } = annotation;\n          const otherViewport = renderingEngine.getViewport(data.viewportId);\n          const otherViewportControllable = this._getReferenceLineControllable(otherViewport.id);\n          const otherViewportDraggableRotatable = this._getReferenceLineDraggableRotatable(otherViewport.id);\n          return otherViewportControllable === true && otherViewportDraggableRotatable === true && viewportAnnotation.data.activeViewportIds.find(id => id === otherViewport.id);\n        });\n        this._applyDeltaShiftToSelectedViewportCameras(renderingEngine, viewportsAnnotationsToUpdate, delta);\n      } else if (handles.activeOperation === OPERATION.ROTATE) {\n        const otherViewportAnnotations = this._getAnnotationsForViewportsWithDifferentCameras(enabledElement, annotations);\n        const viewportsAnnotationsToUpdate = otherViewportAnnotations.filter(annotation => {\n          const {\n            data\n          } = annotation;\n          const otherViewport = renderingEngine.getViewport(data.viewportId);\n          const otherViewportControllable = this._getReferenceLineControllable(otherViewport.id);\n          const otherViewportDraggableRotatable = this._getReferenceLineDraggableRotatable(otherViewport.id);\n          return otherViewportControllable === true && otherViewportDraggableRotatable === true;\n        });\n        const dir1 = vec2.create();\n        const dir2 = vec2.create();\n        const center = [this.toolCenter[0], this.toolCenter[1], this.toolCenter[2]];\n        const centerCanvas = viewport.worldToCanvas(center);\n        const finalPointCanvas = eventDetail.currentPoints.canvas;\n        const originalPointCanvas = vec2.create();\n        vec2.sub(originalPointCanvas, finalPointCanvas, eventDetail.deltaPoints.canvas);\n        vec2.sub(dir1, originalPointCanvas, centerCanvas);\n        vec2.sub(dir2, finalPointCanvas, centerCanvas);\n        let angle = vec2.angle(dir1, dir2);\n        if (this._isClockWise(centerCanvas, originalPointCanvas, finalPointCanvas)) {\n          angle *= -1;\n        }\n        angle = Math.round(angle * 100) / 100;\n        const rotationAxis = viewport.getCamera().viewPlaneNormal;\n        const {\n          matrix\n        } = vtkMatrixBuilder.buildFromRadian().translate(center[0], center[1], center[2]).rotate(angle, rotationAxis).translate(-center[0], -center[1], -center[2]);\n        const otherViewportsIds = [];\n        viewportsAnnotationsToUpdate.forEach(annotation => {\n          const {\n            data\n          } = annotation;\n          data.handles.toolCenter = center;\n          const otherViewport = renderingEngine.getViewport(data.viewportId);\n          const camera = otherViewport.getCamera();\n          const {\n            viewUp,\n            position,\n            focalPoint\n          } = camera;\n          viewUp[0] += position[0];\n          viewUp[1] += position[1];\n          viewUp[2] += position[2];\n          vec3.transformMat4(focalPoint, focalPoint, matrix);\n          vec3.transformMat4(position, position, matrix);\n          vec3.transformMat4(viewUp, viewUp, matrix);\n          viewUp[0] -= position[0];\n          viewUp[1] -= position[1];\n          viewUp[2] -= position[2];\n          otherViewport.setCamera({\n            position,\n            viewUp,\n            focalPoint\n          });\n          otherViewportsIds.push(otherViewport.id);\n        });\n        renderingEngine.renderViewports(otherViewportsIds);\n      } else if (handles.activeOperation === OPERATION.SLAB) {\n        const otherViewportAnnotations = this._getAnnotationsForViewportsWithDifferentCameras(enabledElement, annotations);\n        const referenceAnnotations = otherViewportAnnotations.filter(annotation => {\n          const {\n            data\n          } = annotation;\n          const otherViewport = renderingEngine.getViewport(data.viewportId);\n          const otherViewportControllable = this._getReferenceLineControllable(otherViewport.id);\n          const otherViewportSlabThicknessControlsOn = this._getReferenceLineSlabThicknessControlsOn(otherViewport.id);\n          return otherViewportControllable === true && otherViewportSlabThicknessControlsOn === true && viewportAnnotation.data.activeViewportIds.find(id => id === otherViewport.id);\n        });\n        if (referenceAnnotations.length === 0) {\n          return;\n        }\n        const viewportsAnnotationsToUpdate = this._filterViewportWithSameOrientation(enabledElement, referenceAnnotations[0], annotations);\n        const viewportsIds = [];\n        viewportsIds.push(viewport.id);\n        viewportsAnnotationsToUpdate.forEach(annotation => {\n          const {\n            data\n          } = annotation;\n          const otherViewport = renderingEngine.getViewport(data.viewportId);\n          const camera = otherViewport.getCamera();\n          const normal = camera.viewPlaneNormal;\n          const dotProd = vtkMath.dot(delta, normal);\n          const projectedDelta = [...normal];\n          vtkMath.multiplyScalar(projectedDelta, dotProd);\n          if (Math.abs(projectedDelta[0]) > 1e-3 || Math.abs(projectedDelta[1]) > 1e-3 || Math.abs(projectedDelta[2]) > 1e-3) {\n            const mod = Math.sqrt(projectedDelta[0] * projectedDelta[0] + projectedDelta[1] * projectedDelta[1] + projectedDelta[2] * projectedDelta[2]);\n            const currentPoint = eventDetail.lastPoints.world;\n            const direction = [0, 0, 0];\n            const currentCenter = [this.toolCenter[0], this.toolCenter[1], this.toolCenter[2]];\n            const viewportDraggableRotatable = this._getReferenceLineDraggableRotatable(otherViewport.id);\n            if (!viewportDraggableRotatable) {\n              const {\n                rotationPoints\n              } = this.editData.annotation.data.handles;\n              const otherViewportRotationPoints = rotationPoints.filter(point => point[1].uid === otherViewport.id);\n              if (otherViewportRotationPoints.length === 2) {\n                const point1 = viewport.canvasToWorld(otherViewportRotationPoints[0][3]);\n                const point2 = viewport.canvasToWorld(otherViewportRotationPoints[1][3]);\n                vtkMath.add(point1, point2, currentCenter);\n                vtkMath.multiplyScalar(currentCenter, 0.5);\n              }\n            }\n            vtkMath.subtract(currentPoint, currentCenter, direction);\n            const dotProdDirection = vtkMath.dot(direction, normal);\n            const projectedDirection = [...normal];\n            vtkMath.multiplyScalar(projectedDirection, dotProdDirection);\n            const normalizedProjectedDirection = [projectedDirection[0], projectedDirection[1], projectedDirection[2]];\n            vec3.normalize(normalizedProjectedDirection, normalizedProjectedDirection);\n            const normalizedProjectedDelta = [projectedDelta[0], projectedDelta[1], projectedDelta[2]];\n            vec3.normalize(normalizedProjectedDelta, normalizedProjectedDelta);\n            let slabThicknessValue = otherViewport.getSlabThickness();\n            if (csUtils.isOpposite(normalizedProjectedDirection, normalizedProjectedDelta, 1e-3)) {\n              slabThicknessValue -= mod;\n            } else {\n              slabThicknessValue += mod;\n            }\n            slabThicknessValue = Math.abs(slabThicknessValue);\n            slabThicknessValue = Math.max(RENDERING_DEFAULTS.MINIMUM_SLAB_THICKNESS, slabThicknessValue);\n            const near = this._pointNearReferenceLine(viewportAnnotation, canvasCoords, 6, otherViewport);\n            if (near) {\n              slabThicknessValue = RENDERING_DEFAULTS.MINIMUM_SLAB_THICKNESS;\n            }\n            const toolGroup = getToolGroupForViewport(otherViewport.id, renderingEngine.id);\n            const crosshairsInstance = toolGroup.getToolInstance(this.getToolName());\n            crosshairsInstance.setSlabThickness(otherViewport, slabThicknessValue);\n            viewportsIds.push(otherViewport.id);\n          }\n        });\n        renderingEngine.renderViewports(viewportsIds);\n      }\n    };\n    this._pointNearReferenceLine = (annotation, canvasCoords, proximity, lineViewport) => {\n      const {\n        data\n      } = annotation;\n      const {\n        rotationPoints\n      } = data.handles;\n      for (let i = 0; i < rotationPoints.length - 1; ++i) {\n        const otherViewport = rotationPoints[i][1];\n        if (otherViewport.id !== lineViewport.id) {\n          continue;\n        }\n        const viewportControllable = this._getReferenceLineControllable(otherViewport.id);\n        if (!viewportControllable) {\n          continue;\n        }\n        const lineSegment1 = {\n          start: {\n            x: rotationPoints[i][2][0],\n            y: rotationPoints[i][2][1]\n          },\n          end: {\n            x: rotationPoints[i][3][0],\n            y: rotationPoints[i][3][1]\n          }\n        };\n        const distanceToPoint1 = lineSegment.distanceToPoint([lineSegment1.start.x, lineSegment1.start.y], [lineSegment1.end.x, lineSegment1.end.y], [canvasCoords[0], canvasCoords[1]]);\n        const lineSegment2 = {\n          start: {\n            x: rotationPoints[i + 1][2][0],\n            y: rotationPoints[i + 1][2][1]\n          },\n          end: {\n            x: rotationPoints[i + 1][3][0],\n            y: rotationPoints[i + 1][3][1]\n          }\n        };\n        const distanceToPoint2 = lineSegment.distanceToPoint([lineSegment2.start.x, lineSegment2.start.y], [lineSegment2.end.x, lineSegment2.end.y], [canvasCoords[0], canvasCoords[1]]);\n        if (distanceToPoint1 <= proximity || distanceToPoint2 <= proximity) {\n          return true;\n        }\n        i++;\n      }\n      return false;\n    };\n    this._getReferenceLineColor = toolProps.configuration?.getReferenceLineColor || defaultReferenceLineColor;\n    this._getReferenceLineControllable = toolProps.configuration?.getReferenceLineControllable || defaultReferenceLineControllable;\n    this._getReferenceLineDraggableRotatable = toolProps.configuration?.getReferenceLineDraggableRotatable || defaultReferenceLineDraggableRotatable;\n    this._getReferenceLineSlabThicknessControlsOn = toolProps.configuration?.getReferenceLineSlabThicknessControlsOn || defaultReferenceLineSlabThicknessControlsOn;\n  }\n  onSetToolActive() {\n    const viewportsInfo = this._getViewportsInfo();\n    this._unsubscribeToViewportNewVolumeSet(viewportsInfo);\n    this._subscribeToViewportNewVolumeSet(viewportsInfo);\n    this.computeToolCenter(viewportsInfo);\n  }\n  onSetToolPassive() {\n    const viewportsInfo = this._getViewportsInfo();\n    this.computeToolCenter(viewportsInfo);\n  }\n  onSetToolEnabled() {\n    const viewportsInfo = this._getViewportsInfo();\n    this.computeToolCenter(viewportsInfo);\n  }\n  onSetToolDisabled() {\n    const viewportsInfo = this._getViewportsInfo();\n    this._unsubscribeToViewportNewVolumeSet(viewportsInfo);\n    viewportsInfo.forEach(({\n      renderingEngineId,\n      viewportId\n    }) => {\n      const enabledElement = getEnabledElementByIds(viewportId, renderingEngineId);\n      if (!enabledElement) {\n        return;\n      }\n      const annotations = this._getAnnotations(enabledElement);\n      if (annotations?.length) {\n        annotations.forEach(annotation => {\n          removeAnnotation(annotation.annotationUID);\n        });\n      }\n    });\n  }\n  getHandleNearImagePoint(element, annotation, canvasCoords, proximity) {\n    const enabledElement = getEnabledElement(element);\n    const {\n      viewport\n    } = enabledElement;\n    let point = this._getRotationHandleNearImagePoint(viewport, annotation, canvasCoords, proximity);\n    if (point !== null) {\n      return point;\n    }\n    point = this._getSlabThicknessHandleNearImagePoint(viewport, annotation, canvasCoords, proximity);\n    if (point !== null) {\n      return point;\n    }\n  }\n  _unsubscribeToViewportNewVolumeSet(viewportsInfo) {\n    viewportsInfo.forEach(({\n      viewportId,\n      renderingEngineId\n    }) => {\n      const {\n        viewport\n      } = getEnabledElementByIds(viewportId, renderingEngineId);\n      const {\n        element\n      } = viewport;\n      element.removeEventListener(Enums.Events.VOLUME_VIEWPORT_NEW_VOLUME, this._onNewVolume);\n    });\n  }\n  _subscribeToViewportNewVolumeSet(viewports) {\n    viewports.forEach(({\n      viewportId,\n      renderingEngineId\n    }) => {\n      const {\n        viewport\n      } = getEnabledElementByIds(viewportId, renderingEngineId);\n      const {\n        element\n      } = viewport;\n      element.addEventListener(Enums.Events.VOLUME_VIEWPORT_NEW_VOLUME, this._onNewVolume);\n    });\n  }\n  _autoPanViewportIfNecessary(viewportId, renderingEngine) {\n    const viewport = renderingEngine.getViewport(viewportId);\n    const {\n      clientWidth,\n      clientHeight\n    } = viewport.canvas;\n    const toolCenterCanvas = viewport.worldToCanvas(this.toolCenter);\n    const pan = this.configuration.autoPan.panSize;\n    const visiblePointCanvas = [toolCenterCanvas[0], toolCenterCanvas[1]];\n    if (toolCenterCanvas[0] < 0) {\n      visiblePointCanvas[0] = pan;\n    } else if (toolCenterCanvas[0] > clientWidth) {\n      visiblePointCanvas[0] = clientWidth - pan;\n    }\n    if (toolCenterCanvas[1] < 0) {\n      visiblePointCanvas[1] = pan;\n    } else if (toolCenterCanvas[1] > clientHeight) {\n      visiblePointCanvas[1] = clientHeight - pan;\n    }\n    if (visiblePointCanvas[0] === toolCenterCanvas[0] && visiblePointCanvas[1] === toolCenterCanvas[1]) {\n      return;\n    }\n    const visiblePointWorld = viewport.canvasToWorld(visiblePointCanvas);\n    const deltaPointsWorld = [visiblePointWorld[0] - this.toolCenter[0], visiblePointWorld[1] - this.toolCenter[1], visiblePointWorld[2] - this.toolCenter[2]];\n    const camera = viewport.getCamera();\n    const {\n      focalPoint,\n      position\n    } = camera;\n    const updatedPosition = [position[0] - deltaPointsWorld[0], position[1] - deltaPointsWorld[1], position[2] - deltaPointsWorld[2]];\n    const updatedFocalPoint = [focalPoint[0] - deltaPointsWorld[0], focalPoint[1] - deltaPointsWorld[1], focalPoint[2] - deltaPointsWorld[2]];\n    viewport.setCamera({\n      focalPoint: updatedFocalPoint,\n      position: updatedPosition\n    });\n    viewport.render();\n  }\n  setSlabThickness(viewport, slabThickness) {\n    let actorUIDs;\n    const {\n      filterActorUIDsToSetSlabThickness\n    } = this.configuration;\n    if (filterActorUIDsToSetSlabThickness && filterActorUIDsToSetSlabThickness.length > 0) {\n      actorUIDs = filterActorUIDsToSetSlabThickness;\n    }\n    let blendModeToUse = this.configuration.slabThicknessBlendMode;\n    if (slabThickness === RENDERING_DEFAULTS.MINIMUM_SLAB_THICKNESS) {\n      blendModeToUse = Enums.BlendModes.COMPOSITE;\n    }\n    const immediate = false;\n    viewport.setBlendMode(blendModeToUse, actorUIDs, immediate);\n    viewport.setSlabThickness(slabThickness, actorUIDs);\n  }\n  _isClockWise(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]) > 0;\n  }\n  _applyDeltaShiftToSelectedViewportCameras(renderingEngine, viewportsAnnotationsToUpdate, delta) {\n    viewportsAnnotationsToUpdate.forEach(annotation => {\n      this._applyDeltaShiftToViewportCamera(renderingEngine, annotation, delta);\n    });\n  }\n  _applyDeltaShiftToViewportCamera(renderingEngine, annotation, delta) {\n    const {\n      data\n    } = annotation;\n    const viewport = renderingEngine.getViewport(data.viewportId);\n    const camera = viewport.getCamera();\n    const normal = camera.viewPlaneNormal;\n    const dotProd = vtkMath.dot(delta, normal);\n    const projectedDelta = [...normal];\n    vtkMath.multiplyScalar(projectedDelta, dotProd);\n    if (Math.abs(projectedDelta[0]) > 1e-3 || Math.abs(projectedDelta[1]) > 1e-3 || Math.abs(projectedDelta[2]) > 1e-3) {\n      const newFocalPoint = [0, 0, 0];\n      const newPosition = [0, 0, 0];\n      vtkMath.add(camera.focalPoint, projectedDelta, newFocalPoint);\n      vtkMath.add(camera.position, projectedDelta, newPosition);\n      viewport.setCamera({\n        focalPoint: newFocalPoint,\n        position: newPosition\n      });\n      viewport.render();\n    }\n  }\n  _getRotationHandleNearImagePoint(viewport, annotation, canvasCoords, proximity) {\n    const {\n      data\n    } = annotation;\n    const {\n      rotationPoints\n    } = data.handles;\n    for (let i = 0; i < rotationPoints.length; i++) {\n      const point = rotationPoints[i][0];\n      const otherViewport = rotationPoints[i][1];\n      const viewportControllable = this._getReferenceLineControllable(otherViewport.id);\n      if (!viewportControllable) {\n        continue;\n      }\n      const viewportDraggableRotatable = this._getReferenceLineDraggableRotatable(otherViewport.id);\n      if (!viewportDraggableRotatable) {\n        continue;\n      }\n      const annotationCanvasCoordinate = viewport.worldToCanvas(point);\n      if (vec2.distance(canvasCoords, annotationCanvasCoordinate) < proximity) {\n        data.handles.activeOperation = OPERATION.ROTATE;\n        this.editData = {\n          annotation\n        };\n        return point;\n      }\n    }\n    return null;\n  }\n  _getSlabThicknessHandleNearImagePoint(viewport, annotation, canvasCoords, proximity) {\n    const {\n      data\n    } = annotation;\n    const {\n      slabThicknessPoints\n    } = data.handles;\n    for (let i = 0; i < slabThicknessPoints.length; i++) {\n      const point = slabThicknessPoints[i][0];\n      const otherViewport = slabThicknessPoints[i][1];\n      const viewportControllable = this._getReferenceLineControllable(otherViewport.id);\n      if (!viewportControllable) {\n        continue;\n      }\n      const viewportSlabThicknessControlsOn = this._getReferenceLineSlabThicknessControlsOn(otherViewport.id);\n      if (!viewportSlabThicknessControlsOn) {\n        continue;\n      }\n      const annotationCanvasCoordinate = viewport.worldToCanvas(point);\n      if (vec2.distance(canvasCoords, annotationCanvasCoordinate) < proximity) {\n        data.handles.activeOperation = OPERATION.SLAB;\n        data.activeViewportIds = [otherViewport.id];\n        this.editData = {\n          annotation\n        };\n        return point;\n      }\n    }\n    return null;\n  }\n  _pointNearTool(element, annotation, canvasCoords, proximity) {\n    const enabledElement = getEnabledElement(element);\n    const {\n      viewport\n    } = enabledElement;\n    const {\n      clientWidth,\n      clientHeight\n    } = viewport.canvas;\n    const canvasDiagonalLength = Math.sqrt(clientWidth * clientWidth + clientHeight * clientHeight);\n    const {\n      data\n    } = annotation;\n    const {\n      rotationPoints\n    } = data.handles;\n    const {\n      slabThicknessPoints\n    } = data.handles;\n    const viewportIdArray = [];\n    for (let i = 0; i < rotationPoints.length - 1; ++i) {\n      const otherViewport = rotationPoints[i][1];\n      const viewportControllable = this._getReferenceLineControllable(otherViewport.id);\n      const viewportDraggableRotatable = this._getReferenceLineDraggableRotatable(otherViewport.id);\n      if (!viewportControllable || !viewportDraggableRotatable) {\n        continue;\n      }\n      const lineSegment1 = {\n        start: {\n          x: rotationPoints[i][2][0],\n          y: rotationPoints[i][2][1]\n        },\n        end: {\n          x: rotationPoints[i][3][0],\n          y: rotationPoints[i][3][1]\n        }\n      };\n      const distanceToPoint1 = lineSegment.distanceToPoint([lineSegment1.start.x, lineSegment1.start.y], [lineSegment1.end.x, lineSegment1.end.y], [canvasCoords[0], canvasCoords[1]]);\n      const lineSegment2 = {\n        start: {\n          x: rotationPoints[i + 1][2][0],\n          y: rotationPoints[i + 1][2][1]\n        },\n        end: {\n          x: rotationPoints[i + 1][3][0],\n          y: rotationPoints[i + 1][3][1]\n        }\n      };\n      const distanceToPoint2 = lineSegment.distanceToPoint([lineSegment2.start.x, lineSegment2.start.y], [lineSegment2.end.x, lineSegment2.end.y], [canvasCoords[0], canvasCoords[1]]);\n      if (distanceToPoint1 <= proximity || distanceToPoint2 <= proximity) {\n        viewportIdArray.push(otherViewport.id);\n        data.handles.activeOperation = OPERATION.DRAG;\n      }\n      i++;\n    }\n    for (let i = 0; i < slabThicknessPoints.length - 1; ++i) {\n      const otherViewport = slabThicknessPoints[i][1];\n      if (viewportIdArray.find(id => id === otherViewport.id)) {\n        continue;\n      }\n      const viewportControllable = this._getReferenceLineControllable(otherViewport.id);\n      const viewportSlabThicknessControlsOn = this._getReferenceLineSlabThicknessControlsOn(otherViewport.id);\n      if (!viewportControllable || !viewportSlabThicknessControlsOn) {\n        continue;\n      }\n      const stPointLineCanvas1 = slabThicknessPoints[i][2];\n      const stPointLineCanvas2 = slabThicknessPoints[i][3];\n      const centerCanvas = vec2.create();\n      vec2.add(centerCanvas, stPointLineCanvas1, stPointLineCanvas2);\n      vec2.scale(centerCanvas, centerCanvas, 0.5);\n      const canvasUnitVectorFromCenter = vec2.create();\n      vec2.subtract(canvasUnitVectorFromCenter, stPointLineCanvas1, centerCanvas);\n      vec2.normalize(canvasUnitVectorFromCenter, canvasUnitVectorFromCenter);\n      const canvasVectorFromCenterStart = vec2.create();\n      vec2.scale(canvasVectorFromCenterStart, canvasUnitVectorFromCenter, canvasDiagonalLength * 0.05);\n      const stPointLineCanvas1Start = vec2.create();\n      const stPointLineCanvas2Start = vec2.create();\n      vec2.add(stPointLineCanvas1Start, centerCanvas, canvasVectorFromCenterStart);\n      vec2.subtract(stPointLineCanvas2Start, centerCanvas, canvasVectorFromCenterStart);\n      const lineSegment1 = {\n        start: {\n          x: stPointLineCanvas1Start[0],\n          y: stPointLineCanvas1Start[1]\n        },\n        end: {\n          x: stPointLineCanvas1[0],\n          y: stPointLineCanvas1[1]\n        }\n      };\n      const distanceToPoint1 = lineSegment.distanceToPoint([lineSegment1.start.x, lineSegment1.start.y], [lineSegment1.end.x, lineSegment1.end.y], [canvasCoords[0], canvasCoords[1]]);\n      const lineSegment2 = {\n        start: {\n          x: stPointLineCanvas2Start[0],\n          y: stPointLineCanvas2Start[1]\n        },\n        end: {\n          x: stPointLineCanvas2[0],\n          y: stPointLineCanvas2[1]\n        }\n      };\n      const distanceToPoint2 = lineSegment.distanceToPoint([lineSegment2.start.x, lineSegment2.start.y], [lineSegment2.end.x, lineSegment2.end.y], [canvasCoords[0], canvasCoords[1]]);\n      if (distanceToPoint1 <= proximity || distanceToPoint2 <= proximity) {\n        viewportIdArray.push(otherViewport.id);\n        data.handles.activeOperation = null;\n      }\n      i++;\n    }\n    data.activeViewportIds = [...viewportIdArray];\n    this.editData = {\n      annotation\n    };\n    return data.handles.activeOperation === OPERATION.DRAG ? true : false;\n  }\n}\nCrosshairsTool.toolName = 'Crosshairs';\nexport default CrosshairsTool;","map":{"version":3,"names":["vec2","vec3","vtkMath","vtkMatrixBuilder","AnnotationTool","getEnabledElementByIds","getEnabledElement","utilities","csUtils","Enums","getToolGroup","getToolGroupForViewport","addAnnotation","getAnnotations","removeAnnotation","drawCircle","drawCircleSvg","drawHandles","drawHandlesSvg","drawLine","drawLineSvg","state","Events","getViewportIdsWithToolToRender","resetElementCursor","hideElementCursor","liangBarksyClip","lineSegment","isAnnotationLocked","triggerAnnotationRenderForViewportIds","CONSTANTS","RENDERING_DEFAULTS","defaultReferenceLineColor","defaultReferenceLineControllable","defaultReferenceLineDraggableRotatable","defaultReferenceLineSlabThicknessControlsOn","OPERATION","DRAG","ROTATE","SLAB","EPSILON","CrosshairsTool","constructor","toolProps","defaultToolProps","supportedInteractionTypes","configuration","shadow","viewportIndicators","autoPan","enabled","panSize","referenceLinesCenterGapRadius","filterActorUIDsToSetSlabThickness","slabThicknessBlendMode","BlendModes","MAXIMUM_INTENSITY_BLEND","mobile","opacity","handleRadius","toolCenter","initializeViewport","renderingEngineId","viewportId","enabledElement","FrameOfReferenceUID","viewport","element","position","focalPoint","viewPlaneNormal","getCamera","annotations","_getAnnotations","filterInteractableAnnotationsForElement","length","annotationUID","annotation","highlighted","metadata","cameraPosition","cameraFocalPoint","toolName","getToolName","data","handles","rotationPoints","slabThicknessPoints","activeOperation","activeViewportIds","normal","point","canvasToWorld","canvas","clientWidth","clientHeight","_getViewportsInfo","viewports","toolGroupId","viewportsInfo","computeToolCenter","Error","firstViewport","secondViewport","thirdViewport","normal1","point1","normal2","point2","normal3","point3","create","add","scale","cross","firstPlane","planar","planeEquation","secondPlane","thirdPlane","threePlaneIntersection","renderingEngine","map","addNewAnnotation","evt","eventDetail","detail","currentPoints","jumpWorld","world","_jump","filteredAnnotations","viewportIdArray","i","otherViewport","viewportControllable","_getReferenceLineControllable","id","viewportDraggableRotatable","_getReferenceLineDraggableRotatable","push","preventDefault","_activateModify","cancel","console","log","handleSelectedCallback","isPointNearTool","canvasCoords","proximity","_pointNearTool","toolSelectedCallback","interactionType","onCameraModified","filteredToolAnnotations","viewportAnnotation","currentCamera","oldCameraPosition","deltaCameraPosition","subtract","oldCameraFocalPoint","deltaCameraFocalPoint","isEqual","isRotation","cameraModifiedSameForPosAndFocalPoint","cameraModifiedInPlane","Math","abs","dot","toolGroup","otherViewportIds","getViewportIds","filter","forEach","_autoPanViewportIfNecessary","requireSameOrientation","viewportIdsToRender","mouseMoveCallback","imageNeedsUpdate","previousActiveOperation","previousActiveViewportIds","handleNearImagePoint","getHandleNearImagePoint","near","nearToolAndNotMarkedActive","notNearToolAndMarkedActive","_areViewportIdArraysEqual","viewportUIDSpecificCrosshairs","renderAnnotation","svgDrawingHelper","renderStatus","camera","canvasDiagonalLength","sqrt","canvasMinDimensionLength","min","crosshairCenterCanvas","worldToCanvas","otherViewportAnnotations","_filterAnnotationsByUniqueViewportOrientations","referenceLines","canvasBox","getViewport","otherCamera","otherViewportControllable","otherViewportDraggableRotatable","otherViewportSlabThicknessControlsOn","_getReferenceLineSlabThicknessControlsOn","otherCanvasDiagonalLength","otherCanvasCenter","otherViewportCenterWorld","direction","normalize","multiplyScalar","pointWorld0","pointWorld1","pointCanvas0","otherViewportCenterCanvas","canvasUnitVectorFromCenter","canvasVectorFromCenterLong","canvasVectorFromCenterMid","canvasVectorFromCenterShort","canvasVectorFromCenterStart","centerGap","refLinePointOne","refLinePointTwo","refLinePointThree","refLinePointFour","refLinesCenter","clone","rotHandleOne","rotHandleTwo","stHandlesCenterCanvas","stHandlesCenterWorld","worldUnitVectorFromCenter","matrix","buildFromDegree","rotate","worldUnitOrthoVectorFromCenter","transformMat4","slabThicknessValue","getSlabThickness","worldOrthoVectorFromCenter","worldVerticalRefPoint","canvasVerticalRefPoint","canvasOrthoVectorFromCenter","stLinePointOne","stLinePointTwo","stLinePointThree","stLinePointFour","stHandleOne","stHandleTwo","stHandleThree","stHandleFour","newRtpoints","newStpoints","viewportColor","_getReferenceLineColor","color","undefined","line","lineIndex","viewportSlabThicknessControlsOn","selectedViewportId","find","lineWidth","lineActive","lineUID","rotHandlesActive","rotationHandles","rotHandleWorldOne","rotHandleWorldTwo","slabThicknessHandlesActive","slabThicknessHandles","slabThicknessHandleWorldOne","slabThicknessHandleWorldTwo","slabThicknessHandleWorldThree","slabThicknessHandleWorldFour","handleUID","type","fill","width","lineDash","referenceColorCoordinates","circleRadius","circleUID","viewportIds","toolGroupAnnotations","includes","_onNewVolume","e","viewportIdArrayOne","viewportIdArrayTwo","itemFound","_getAnnotationsForViewportsWithDifferentCameras","viewportsWithDifferentCameras","targetViewport","cameraOfTarget","_filterViewportWithSameOrientation","referenceAnnotation","linkedViewportAnnotations","otherViewportsAnnotationsWithSameCameraDirection","otherViewPlaneNormal","viewUp","otherLinkedViewportAnnotationsFromSameScene","otherViewportsAnnotationsWithUniqueCameras","isOpposite","cameraFound","jj","stockedViewport","cameraOfStocked","otherNonLinkedViewportAnnotationsFromSameScene","some","_checkIfViewportsRenderingSameScene","actors","getActors","otherViewportActors","sameScene","actor","uid","isInteractingWithTool","delta","viewportsAnnotationsToUpdate","_applyDeltaShiftToSelectedViewportCameras","addEventListener","MOUSE_UP","_endCallback","MOUSE_DRAG","_dragCallback","MOUSE_CLICK","TOUCH_END","TOUCH_DRAG","TOUCH_TAP","_deactivateModify","removeEventListener","editData","deltaPoints","dir1","dir2","center","centerCanvas","finalPointCanvas","originalPointCanvas","sub","angle","_isClockWise","round","rotationAxis","buildFromRadian","translate","otherViewportsIds","setCamera","renderViewports","referenceAnnotations","viewportsIds","dotProd","projectedDelta","mod","currentPoint","lastPoints","currentCenter","otherViewportRotationPoints","dotProdDirection","projectedDirection","normalizedProjectedDirection","normalizedProjectedDelta","max","MINIMUM_SLAB_THICKNESS","_pointNearReferenceLine","crosshairsInstance","getToolInstance","setSlabThickness","lineViewport","lineSegment1","start","x","y","end","distanceToPoint1","distanceToPoint","lineSegment2","distanceToPoint2","getReferenceLineColor","getReferenceLineControllable","getReferenceLineDraggableRotatable","getReferenceLineSlabThicknessControlsOn","onSetToolActive","_unsubscribeToViewportNewVolumeSet","_subscribeToViewportNewVolumeSet","onSetToolPassive","onSetToolEnabled","onSetToolDisabled","_getRotationHandleNearImagePoint","_getSlabThicknessHandleNearImagePoint","VOLUME_VIEWPORT_NEW_VOLUME","toolCenterCanvas","pan","visiblePointCanvas","visiblePointWorld","deltaPointsWorld","updatedPosition","updatedFocalPoint","render","slabThickness","actorUIDs","blendModeToUse","COMPOSITE","immediate","setBlendMode","a","b","c","_applyDeltaShiftToViewportCamera","newFocalPoint","newPosition","annotationCanvasCoordinate","distance","stPointLineCanvas1","stPointLineCanvas2","stPointLineCanvas1Start","stPointLineCanvas2Start"],"sources":["../../../src/tools/CrosshairsTool.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}