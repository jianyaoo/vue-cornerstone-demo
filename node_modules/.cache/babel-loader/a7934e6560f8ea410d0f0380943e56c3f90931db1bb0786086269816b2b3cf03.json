{"ast":null,"code":"import { getEnabledElement, cache, StackViewport, triggerEvent, eventTarget, utilities as csUtils } from '@cornerstonejs/core';\nimport { addAnnotation, getAnnotations } from '../../stateManagement';\nimport { isAnnotationLocked } from '../../stateManagement/annotation/annotationLocking';\nimport { Events } from '../../enums';\nimport { drawHandles as drawHandlesSvg, drawRect as drawRectSvg } from '../../drawingSvg';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport { hideElementCursor } from '../../cursors/elementCursor';\nimport triggerAnnotationRenderForViewportIds from '../../utilities/triggerAnnotationRenderForViewportIds';\nimport { isAnnotationVisible } from '../../stateManagement/annotation/annotationVisibility';\nimport RectangleROITool from '../annotation/RectangleROITool';\nclass RectangleROIThresholdTool extends RectangleROITool {\n  constructor(toolProps = {}, defaultToolProps = {\n    supportedInteractionTypes: ['Mouse', 'Touch'],\n    configuration: {\n      shadow: true,\n      preventHandleOutsideImage: false\n    }\n  }) {\n    super(toolProps, defaultToolProps);\n    this.addNewAnnotation = evt => {\n      const eventDetail = evt.detail;\n      const {\n        currentPoints,\n        element\n      } = eventDetail;\n      const worldPos = currentPoints.world;\n      const enabledElement = getEnabledElement(element);\n      const {\n        viewport,\n        renderingEngine\n      } = enabledElement;\n      this.isDrawing = true;\n      const camera = viewport.getCamera();\n      const {\n        viewPlaneNormal,\n        viewUp\n      } = camera;\n      const targetId = this.getTargetId(viewport);\n      let referencedImageId, volumeId;\n      if (viewport instanceof StackViewport) {\n        referencedImageId = targetId.split('imageId:')[1];\n      } else {\n        volumeId = targetId.split('volumeId:')[1];\n        const imageVolume = cache.getVolume(volumeId);\n        referencedImageId = csUtils.getClosestImageId(imageVolume, worldPos, viewPlaneNormal);\n      }\n      const FrameOfReferenceUID = viewport.getFrameOfReferenceUID();\n      const annotation = {\n        highlighted: true,\n        invalidated: true,\n        metadata: {\n          viewPlaneNormal: [...viewPlaneNormal],\n          enabledElement,\n          viewUp: [...viewUp],\n          FrameOfReferenceUID,\n          referencedImageId,\n          toolName: this.getToolName(),\n          volumeId\n        },\n        data: {\n          label: '',\n          handles: {\n            textBox: {\n              hasMoved: false,\n              worldPosition: null,\n              worldBoundingBox: null\n            },\n            points: [[...worldPos], [...worldPos], [...worldPos], [...worldPos]],\n            activeHandleIndex: null\n          },\n          segmentationId: null\n        }\n      };\n      addAnnotation(annotation, element);\n      const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n      this.editData = {\n        annotation,\n        viewportIdsToRender,\n        handleIndex: 3,\n        newAnnotation: true,\n        hasMoved: false\n      };\n      this._activateDraw(element);\n      hideElementCursor(element);\n      evt.preventDefault();\n      triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n      return annotation;\n    };\n    this.renderAnnotation = (enabledElement, svgDrawingHelper) => {\n      let renderStatus = false;\n      const {\n        viewport,\n        renderingEngineId\n      } = enabledElement;\n      const {\n        element\n      } = viewport;\n      let annotations = getAnnotations(this.getToolName(), element);\n      if (!annotations?.length) {\n        return renderStatus;\n      }\n      annotations = this.filterInteractableAnnotationsForElement(element, annotations);\n      if (!annotations?.length) {\n        return renderStatus;\n      }\n      const styleSpecifier = {\n        toolGroupId: this.toolGroupId,\n        toolName: this.getToolName(),\n        viewportId: enabledElement.viewport.id\n      };\n      for (let i = 0; i < annotations.length; i++) {\n        const annotation = annotations[i];\n        const {\n          annotationUID,\n          data\n        } = annotation;\n        const {\n          points,\n          activeHandleIndex\n        } = data.handles;\n        const canvasCoordinates = points.map(p => viewport.worldToCanvas(p));\n        styleSpecifier.annotationUID = annotationUID;\n        const lineWidth = this.getStyle('lineWidth', styleSpecifier, annotation);\n        const lineDash = this.getStyle('lineDash', styleSpecifier, annotation);\n        const color = this.getStyle('color', styleSpecifier, annotation);\n        if (!viewport.getRenderingEngine()) {\n          console.warn('Rendering Engine has been destroyed');\n          return renderStatus;\n        }\n        const eventType = Events.ANNOTATION_MODIFIED;\n        const eventDetail = {\n          annotation,\n          viewportId: viewport.id,\n          renderingEngineId\n        };\n        triggerEvent(eventTarget, eventType, eventDetail);\n        let activeHandleCanvasCoords;\n        if (!isAnnotationVisible(annotationUID)) {\n          continue;\n        }\n        if (!isAnnotationLocked(annotation) && !this.editData && activeHandleIndex !== null) {\n          activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n        }\n        if (activeHandleCanvasCoords) {\n          const handleGroupUID = '0';\n          drawHandlesSvg(svgDrawingHelper, annotationUID, handleGroupUID, activeHandleCanvasCoords, {\n            color\n          });\n        }\n        const rectangleUID = '0';\n        drawRectSvg(svgDrawingHelper, annotationUID, rectangleUID, canvasCoordinates[0], canvasCoordinates[3], {\n          color,\n          lineDash,\n          lineWidth\n        });\n        renderStatus = true;\n      }\n      return renderStatus;\n    };\n  }\n}\nRectangleROIThresholdTool.toolName = 'RectangleROIThreshold';\nexport default RectangleROIThresholdTool;","map":{"version":3,"names":["getEnabledElement","cache","StackViewport","triggerEvent","eventTarget","utilities","csUtils","addAnnotation","getAnnotations","isAnnotationLocked","Events","drawHandles","drawHandlesSvg","drawRect","drawRectSvg","getViewportIdsWithToolToRender","hideElementCursor","triggerAnnotationRenderForViewportIds","isAnnotationVisible","RectangleROITool","RectangleROIThresholdTool","constructor","toolProps","defaultToolProps","supportedInteractionTypes","configuration","shadow","preventHandleOutsideImage","addNewAnnotation","evt","eventDetail","detail","currentPoints","element","worldPos","world","enabledElement","viewport","renderingEngine","isDrawing","camera","getCamera","viewPlaneNormal","viewUp","targetId","getTargetId","referencedImageId","volumeId","split","imageVolume","getVolume","getClosestImageId","FrameOfReferenceUID","getFrameOfReferenceUID","annotation","highlighted","invalidated","metadata","toolName","getToolName","data","label","handles","textBox","hasMoved","worldPosition","worldBoundingBox","points","activeHandleIndex","segmentationId","viewportIdsToRender","editData","handleIndex","newAnnotation","_activateDraw","preventDefault","renderAnnotation","svgDrawingHelper","renderStatus","renderingEngineId","annotations","length","filterInteractableAnnotationsForElement","styleSpecifier","toolGroupId","viewportId","id","i","annotationUID","canvasCoordinates","map","p","worldToCanvas","lineWidth","getStyle","lineDash","color","getRenderingEngine","console","warn","eventType","ANNOTATION_MODIFIED","activeHandleCanvasCoords","handleGroupUID","rectangleUID"],"sources":["../../../../src/tools/segmentation/RectangleROIThresholdTool.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}