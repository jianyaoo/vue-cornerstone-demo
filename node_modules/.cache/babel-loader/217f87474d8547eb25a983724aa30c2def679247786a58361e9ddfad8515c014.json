{"ast":null,"code":"import \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport '@kitware/vtk.js/Rendering/Profiles/Volume';\nimport vtkImageData from '@kitware/vtk.js/Common/DataModel/ImageData';\nimport vtkDataArray from '@kitware/vtk.js/Common/Core/DataArray';\nimport cloneDeep from 'lodash.clonedeep';\nimport { ImageVolume } from '../cache/classes/ImageVolume';\nimport cache from '../cache/cache';\nimport Events from '../enums/Events';\nimport eventTarget from '../eventTarget';\nimport triggerEvent from '../utilities/triggerEvent';\nimport { generateVolumePropsFromImageIds, getBufferConfiguration, uuidv4 } from '../utilities';\nimport { getConfiguration } from '../init';\nimport { performCacheOptimizationForVolume, setupCacheOptimizationEventListener } from '../utilities/cacheUtils';\nfunction addScalarDataToImageData(imageData, scalarData, dataArrayAttrs) {\n  const scalarArray = vtkDataArray.newInstance({\n    name: `Pixels`,\n    values: scalarData,\n    ...dataArrayAttrs\n  });\n  imageData.getPointData().setScalars(scalarArray);\n}\nfunction addScalarDataArraysToImageData(imageData, scalarDataArrays, dataArrayAttrs) {\n  scalarDataArrays.forEach((scalarData, i) => {\n    const vtkScalarArray = vtkDataArray.newInstance({\n      name: `timePoint-${i}`,\n      values: scalarData,\n      ...dataArrayAttrs\n    });\n    imageData.getPointData().addArray(vtkScalarArray);\n  });\n  imageData.getPointData().setActiveScalars('timePoint-0');\n}\nfunction createInternalVTKRepresentation(volume) {\n  const {\n    dimensions,\n    metadata,\n    spacing,\n    direction,\n    origin\n  } = volume;\n  const {\n    PhotometricInterpretation\n  } = metadata;\n  let numComponents = 1;\n  if (PhotometricInterpretation === 'RGB') {\n    numComponents = 3;\n  }\n  const imageData = vtkImageData.newInstance();\n  const dataArrayAttrs = {\n    numberOfComponents: numComponents\n  };\n  imageData.setDimensions(dimensions);\n  imageData.setSpacing(spacing);\n  imageData.setDirection(direction);\n  imageData.setOrigin(origin);\n  if (volume.isDynamicVolume()) {\n    const scalarDataArrays = volume.getScalarDataArrays();\n    addScalarDataArraysToImageData(imageData, scalarDataArrays, dataArrayAttrs);\n  } else {\n    const scalarData = volume.getScalarData();\n    addScalarDataToImageData(imageData, scalarData, dataArrayAttrs);\n  }\n  return imageData;\n}\nconst volumeLoaders = {};\nlet unknownVolumeLoader;\nfunction loadVolumeFromVolumeLoader(volumeId, options) {\n  const colonIndex = volumeId.indexOf(':');\n  const scheme = volumeId.substring(0, colonIndex);\n  let loader = volumeLoaders[scheme];\n  if (loader === undefined || loader === null) {\n    if (unknownVolumeLoader == null || typeof unknownVolumeLoader !== 'function') {\n      throw new Error(`No volume loader for scheme ${scheme} has been registered`);\n    }\n    loader = unknownVolumeLoader;\n  }\n  const volumeLoadObject = loader(volumeId, options);\n  setupCacheOptimizationEventListener(volumeId);\n  volumeLoadObject.promise.then(function (volume) {\n    triggerEvent(eventTarget, Events.VOLUME_LOADED, {\n      volume\n    });\n  }, function (error) {\n    const errorObject = {\n      volumeId,\n      error\n    };\n    triggerEvent(eventTarget, Events.VOLUME_LOADED_FAILED, errorObject);\n  });\n  return volumeLoadObject;\n}\nexport function loadVolume(volumeId, options = {\n  imageIds: []\n}) {\n  if (volumeId === undefined) {\n    throw new Error('loadVolume: parameter volumeId must not be undefined');\n  }\n  let volumeLoadObject = cache.getVolumeLoadObject(volumeId);\n  if (volumeLoadObject !== undefined) {\n    return volumeLoadObject.promise;\n  }\n  volumeLoadObject = loadVolumeFromVolumeLoader(volumeId, options);\n  return volumeLoadObject.promise.then(volume => {\n    volume.imageData = createInternalVTKRepresentation(volume);\n    return volume;\n  });\n}\nexport async function createAndCacheVolume(volumeId, options) {\n  if (volumeId === undefined) {\n    throw new Error('createAndCacheVolume: parameter volumeId must not be undefined');\n  }\n  let volumeLoadObject = cache.getVolumeLoadObject(volumeId);\n  if (volumeLoadObject !== undefined) {\n    return volumeLoadObject.promise;\n  }\n  volumeLoadObject = loadVolumeFromVolumeLoader(volumeId, options);\n  volumeLoadObject.promise.then(volume => {\n    volume.imageData = createInternalVTKRepresentation(volume);\n  });\n  cache.putVolumeLoadObject(volumeId, volumeLoadObject).catch(err => {\n    throw err;\n  });\n  return volumeLoadObject.promise;\n}\nexport async function createAndCacheDerivedVolume(referencedVolumeId, options) {\n  const referencedVolume = cache.getVolume(referencedVolumeId);\n  if (!referencedVolume) {\n    throw new Error(`Cannot created derived volume: Referenced volume with id ${referencedVolumeId} does not exist.`);\n  }\n  let {\n    volumeId\n  } = options;\n  const {\n    targetBuffer\n  } = options;\n  if (volumeId === undefined) {\n    volumeId = uuidv4();\n  }\n  const {\n    metadata,\n    dimensions,\n    spacing,\n    origin,\n    direction\n  } = referencedVolume;\n  const scalarData = referencedVolume.getScalarData();\n  const scalarLength = scalarData.length;\n  const {\n    useNorm16Texture\n  } = getConfiguration().rendering;\n  const {\n    TypedArrayConstructor,\n    numBytes\n  } = getBufferConfiguration(targetBuffer?.type, scalarLength, {\n    use16BitTexture: useNorm16Texture,\n    isVolumeBuffer: true\n  });\n  const isCacheable = cache.isCacheable(numBytes);\n  if (!isCacheable) {\n    throw new Error(Events.CACHE_SIZE_EXCEEDED);\n  }\n  let volumeScalarData;\n  if (targetBuffer?.sharedArrayBuffer) {\n    const buffer = new SharedArrayBuffer(numBytes);\n    volumeScalarData = new TypedArrayConstructor(buffer);\n  } else {\n    volumeScalarData = new TypedArrayConstructor(scalarLength);\n  }\n  const scalarArray = vtkDataArray.newInstance({\n    name: 'Pixels',\n    numberOfComponents: 1,\n    values: volumeScalarData\n  });\n  const derivedImageData = vtkImageData.newInstance();\n  derivedImageData.setDimensions(dimensions);\n  derivedImageData.setSpacing(spacing);\n  derivedImageData.setDirection(direction);\n  derivedImageData.setOrigin(origin);\n  derivedImageData.getPointData().setScalars(scalarArray);\n  const derivedVolume = new ImageVolume({\n    volumeId,\n    metadata: cloneDeep(metadata),\n    dimensions: [dimensions[0], dimensions[1], dimensions[2]],\n    spacing,\n    origin,\n    direction,\n    imageData: derivedImageData,\n    scalarData: volumeScalarData,\n    sizeInBytes: numBytes,\n    referencedVolumeId,\n    imageIds: []\n  });\n  const volumeLoadObject = {\n    promise: Promise.resolve(derivedVolume)\n  };\n  await cache.putVolumeLoadObject(volumeId, volumeLoadObject);\n  return derivedVolume;\n}\nexport function createLocalVolume(options, volumeId, preventCache = false) {\n  const {\n    scalarData,\n    metadata,\n    dimensions,\n    spacing,\n    origin,\n    direction\n  } = options;\n  if (!scalarData || !(scalarData instanceof Uint8Array || scalarData instanceof Float32Array || scalarData instanceof Uint16Array || scalarData instanceof Int16Array)) {\n    throw new Error('To use createLocalVolume you should pass scalarData of type Uint8Array, Uint16Array, Int16Array or Float32Array');\n  }\n  if (volumeId === undefined) {\n    volumeId = uuidv4();\n  }\n  const cachedVolume = cache.getVolume(volumeId);\n  if (cachedVolume) {\n    return cachedVolume;\n  }\n  const scalarLength = dimensions[0] * dimensions[1] * dimensions[2];\n  const numBytes = scalarData ? scalarData.buffer.byteLength : scalarLength * 4;\n  const isCacheable = cache.isCacheable(numBytes);\n  if (!isCacheable) {\n    throw new Error(Events.CACHE_SIZE_EXCEEDED);\n  }\n  const scalarArray = vtkDataArray.newInstance({\n    name: 'Pixels',\n    numberOfComponents: 1,\n    values: scalarData\n  });\n  const imageData = vtkImageData.newInstance();\n  imageData.setDimensions(dimensions);\n  imageData.setSpacing(spacing);\n  imageData.setDirection(direction);\n  imageData.setOrigin(origin);\n  imageData.getPointData().setScalars(scalarArray);\n  const derivedVolume = new ImageVolume({\n    volumeId,\n    metadata: cloneDeep(metadata),\n    dimensions: [dimensions[0], dimensions[1], dimensions[2]],\n    spacing,\n    origin,\n    direction,\n    imageData: imageData,\n    scalarData,\n    sizeInBytes: numBytes,\n    imageIds: []\n  });\n  if (preventCache) {\n    return derivedVolume;\n  }\n  const volumeLoadObject = {\n    promise: Promise.resolve(derivedVolume)\n  };\n  cache.putVolumeLoadObject(volumeId, volumeLoadObject);\n  return derivedVolume;\n}\nexport async function createAndCacheVolumeFromImages(volumeId, imageIds, options = {}) {\n  const {\n    preventCache = false\n  } = options;\n  if (imageIds === undefined) {\n    throw new Error('createAndCacheVolumeFromImages: parameter imageIds must not be undefined');\n  }\n  if (volumeId === undefined) {\n    throw new Error('createAndCacheVolumeFromImages: parameter volumeId must not be undefined');\n  }\n  const cachedVolume = cache.getVolume(volumeId);\n  if (cachedVolume) {\n    return Promise.resolve(cachedVolume);\n  }\n  const volumeProps = generateVolumePropsFromImageIds(imageIds, volumeId);\n  const imagePromises = volumeProps.imageIds.map((imageId, imageIdIndex) => {\n    const imageLoadObject = cache.getImageLoadObject(imageId);\n    return imageLoadObject.promise.then(image => {\n      const pixelData = image.getPixelData();\n      const offset = imageIdIndex * image.rows * image.columns;\n      volumeProps.scalarData.set(pixelData, offset);\n    });\n  });\n  await Promise.all(imagePromises);\n  const volume = new ImageVolume({\n    ...volumeProps,\n    referencedImageIds: imageIds,\n    ...options\n  });\n  performCacheOptimizationForVolume(volume);\n  const volumeLoadObject = {\n    promise: Promise.resolve(volume)\n  };\n  if (preventCache) {\n    return volumeLoadObject.promise;\n  }\n  cache.putVolumeLoadObject(volumeId, volumeLoadObject);\n  return volumeLoadObject.promise;\n}\nexport function registerVolumeLoader(scheme, volumeLoader) {\n  volumeLoaders[scheme] = volumeLoader;\n}\nexport function getVolumeLoaderSchemes() {\n  return Object.keys(volumeLoaders);\n}\nexport function registerUnknownVolumeLoader(volumeLoader) {\n  const oldVolumeLoader = unknownVolumeLoader;\n  unknownVolumeLoader = volumeLoader;\n  return oldVolumeLoader;\n}\nexport function getUnknownVolumeLoaderSchema() {\n  return unknownVolumeLoader.name;\n}\nexport async function createAndCacheDerivedSegmentationVolume(referencedVolumeId, options) {\n  return createAndCacheDerivedVolume(referencedVolumeId, {\n    ...options,\n    targetBuffer: {\n      type: 'Uint8Array'\n    }\n  });\n}","map":{"version":3,"names":["vtkImageData","vtkDataArray","cloneDeep","ImageVolume","cache","Events","eventTarget","triggerEvent","generateVolumePropsFromImageIds","getBufferConfiguration","uuidv4","getConfiguration","performCacheOptimizationForVolume","setupCacheOptimizationEventListener","addScalarDataToImageData","imageData","scalarData","dataArrayAttrs","scalarArray","newInstance","name","values","getPointData","setScalars","addScalarDataArraysToImageData","scalarDataArrays","forEach","i","vtkScalarArray","addArray","setActiveScalars","createInternalVTKRepresentation","volume","dimensions","metadata","spacing","direction","origin","PhotometricInterpretation","numComponents","numberOfComponents","setDimensions","setSpacing","setDirection","setOrigin","isDynamicVolume","getScalarDataArrays","getScalarData","volumeLoaders","unknownVolumeLoader","loadVolumeFromVolumeLoader","volumeId","options","colonIndex","indexOf","scheme","substring","loader","undefined","Error","volumeLoadObject","promise","then","VOLUME_LOADED","error","errorObject","VOLUME_LOADED_FAILED","loadVolume","imageIds","getVolumeLoadObject","createAndCacheVolume","putVolumeLoadObject","catch","err","createAndCacheDerivedVolume","referencedVolumeId","referencedVolume","getVolume","targetBuffer","scalarLength","length","useNorm16Texture","rendering","TypedArrayConstructor","numBytes","type","use16BitTexture","isVolumeBuffer","isCacheable","CACHE_SIZE_EXCEEDED","volumeScalarData","sharedArrayBuffer","buffer","SharedArrayBuffer","derivedImageData","derivedVolume","sizeInBytes","Promise","resolve","createLocalVolume","preventCache","Uint8Array","Float32Array","Uint16Array","Int16Array","cachedVolume","byteLength","createAndCacheVolumeFromImages","volumeProps","imagePromises","map","imageId","imageIdIndex","imageLoadObject","getImageLoadObject","image","pixelData","getPixelData","offset","rows","columns","set","all","referencedImageIds","registerVolumeLoader","volumeLoader","getVolumeLoaderSchemes","Object","keys","registerUnknownVolumeLoader","oldVolumeLoader","getUnknownVolumeLoaderSchema","createAndCacheDerivedSegmentationVolume"],"sources":["../../../src/loaders/volumeLoader.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}