{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport function getPoint(points, idx) {\n  if (idx < points.length / 3) {\n    return [points[idx * 3], points[idx * 3 + 1], points[idx * 3 + 2]];\n  }\n}\nexport function getPolyDataPointIndexes(polyData) {\n  const linesData = polyData.getLines().getData();\n  let idx = 0;\n  const lineSegments = new Map();\n  while (idx < linesData.length) {\n    const segmentSize = linesData[idx++];\n    const segment = [];\n    for (let i = 0; i < segmentSize; i++) {\n      segment.push(linesData[idx + i]);\n    }\n    lineSegments.set(segment[0], segment);\n    idx += segmentSize;\n  }\n  const contours = [];\n  const findStartingPoint = map => {\n    for (const [key, value] of map.entries()) {\n      if (value !== undefined) {\n        return key;\n      }\n    }\n    return -1;\n  };\n  let startPoint = findStartingPoint(lineSegments);\n  while (startPoint !== -1) {\n    const contour = [startPoint];\n    while (lineSegments.has(startPoint)) {\n      const nextPoint = lineSegments.get(startPoint)[1];\n      if (lineSegments.has(nextPoint)) {\n        contour.push(nextPoint);\n      }\n      lineSegments.delete(startPoint);\n      startPoint = nextPoint;\n    }\n    contours.push(contour);\n    startPoint = findStartingPoint(lineSegments);\n  }\n  return contours.length ? contours : undefined;\n}\nexport function getPolyDataPoints(polyData) {\n  const contoursIndexes = getPolyDataPointIndexes(polyData);\n  if (!contoursIndexes) {\n    return;\n  }\n  const rawPointsData = polyData.getPoints().getData();\n  return contoursIndexes.map(contourIndexes => contourIndexes.map(index => getPoint(rawPointsData, index)));\n}","map":{"version":3,"names":["getPoint","points","idx","length","getPolyDataPointIndexes","polyData","linesData","getLines","getData","lineSegments","Map","segmentSize","segment","i","push","set","contours","findStartingPoint","map","key","value","entries","undefined","startPoint","contour","has","nextPoint","get","delete","getPolyDataPoints","contoursIndexes","rawPointsData","getPoints","contourIndexes","index"],"sources":["../../../../src/utilities/polyData/utils.ts"],"sourcesContent":[null],"mappings":";AAQA,OAAM,SAAUA,QAAQA,CAACC,MAAM,EAAEC,GAAG;EAClC,IAAIA,GAAG,GAAGD,MAAM,CAACE,MAAM,GAAG,CAAC,EAAE;IAC3B,OAAO,CAACF,MAAM,CAACC,GAAG,GAAG,CAAC,CAAC,EAAED,MAAM,CAACC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,EAAED,MAAM,CAACC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;;AAEtE;AAOA,OAAM,SAAUE,uBAAuBA,CAACC,QAAqB;EAC3D,MAAMC,SAAS,GAAGD,QAAQ,CAACE,QAAQ,EAAE,CAACC,OAAO,EAAE;EAC/C,IAAIN,GAAG,GAAG,CAAC;EACX,MAAMO,YAAY,GAAG,IAAIC,GAAG,EAAoB;EAGhD,OAAOR,GAAG,GAAGI,SAAS,CAACH,MAAM,EAAE;IAC7B,MAAMQ,WAAW,GAAGL,SAAS,CAACJ,GAAG,EAAE,CAAC;IACpC,MAAMU,OAAO,GAAG,EAAE;IAClB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,WAAW,EAAEE,CAAC,EAAE,EAAE;MACpCD,OAAO,CAACE,IAAI,CAACR,SAAS,CAACJ,GAAG,GAAGW,CAAC,CAAC,CAAC;;IAElCJ,YAAY,CAACM,GAAG,CAACH,OAAO,CAAC,CAAC,CAAC,EAAEA,OAAO,CAAC;IACrCV,GAAG,IAAIS,WAAW;;EAGpB,MAAMK,QAAQ,GAAG,EAAE;EAGnB,MAAMC,iBAAiB,GAAIC,GAAG,IAAI;IAChC,KAAK,MAAM,CAACC,GAAG,EAAEC,KAAK,CAAC,IAAIF,GAAG,CAACG,OAAO,EAAE,EAAE;MACxC,IAAID,KAAK,KAAKE,SAAS,EAAE;QACvB,OAAOH,GAAG;;;IAGd,OAAO,CAAC,CAAC;EACX,CAAC;EAGD,IAAII,UAAU,GAAGN,iBAAiB,CAACR,YAAY,CAAC;EAChD,OAAOc,UAAU,KAAK,CAAC,CAAC,EAAE;IACxB,MAAMC,OAAO,GAAG,CAACD,UAAU,CAAC;IAC5B,OAAOd,YAAY,CAACgB,GAAG,CAACF,UAAU,CAAC,EAAE;MACnC,MAAMG,SAAS,GAAGjB,YAAY,CAACkB,GAAG,CAACJ,UAAU,CAAC,CAAC,CAAC,CAAC;MACjD,IAAId,YAAY,CAACgB,GAAG,CAACC,SAAS,CAAC,EAAE;QAC/BF,OAAO,CAACV,IAAI,CAACY,SAAS,CAAC;;MAEzBjB,YAAY,CAACmB,MAAM,CAACL,UAAU,CAAC;MAC/BA,UAAU,GAAGG,SAAS;;IAExBV,QAAQ,CAACF,IAAI,CAACU,OAAO,CAAC;IACtBD,UAAU,GAAGN,iBAAiB,CAACR,YAAY,CAAC;;EAG9C,OAAOO,QAAQ,CAACb,MAAM,GAAGa,QAAQ,GAAGM,SAAS;AAC/C;AAOA,OAAM,SAAUO,iBAAiBA,CAACxB,QAAqB;EACrD,MAAMyB,eAAe,GAAG1B,uBAAuB,CAACC,QAAQ,CAAC;EACzD,IAAI,CAACyB,eAAe,EAAE;IACpB;;EAGF,MAAMC,aAAa,GAAG1B,QAAQ,CAAC2B,SAAS,EAAE,CAACxB,OAAO,EAAE;EACpD,OAAOsB,eAAe,CAACZ,GAAG,CAAEe,cAAc,IACxCA,cAAc,CAACf,GAAG,CAAEgB,KAAK,IAAKlC,QAAQ,CAAC+B,aAAa,EAAEG,KAAK,CAAC,CAAC,CAC9D;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}