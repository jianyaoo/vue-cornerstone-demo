{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { n as newInstance$1 } from '../../macros2.js';\nimport vtkScalarBarActor from '../Core/ScalarBarActor.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUScalarBarActor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUScalarBarActor(publicAPI, model) {\n  model.classHierarchy.push('vtkWebGPUScalarBarActor');\n\n  // Builds myself.\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      model.WebGPURenderer = publicAPI.getFirstAncestorOfType('vtkWebGPURenderer');\n      model.WebGPURenderWindow = model.WebGPURenderer.getParent();\n      if (!model.scalarBarActorHelper.getRenderable()) {\n        model.scalarBarActorHelper.setRenderable(model.renderable);\n      }\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.scalarBarActorHelper.getBarActor());\n      publicAPI.addMissingNode(model.scalarBarActorHelper.getTmActor());\n      publicAPI.removeUnusedNodes();\n    }\n  };\n  publicAPI.opaquePass = (prepass, renderPass) => {\n    if (prepass) {\n      const camera = model.WebGPURenderer ? model.WebGPURenderer.getRenderable().getActiveCamera() : null;\n      const tsize = model.WebGPURenderer.getTiledSizeAndOrigin();\n      model.scalarBarActorHelper.updateAPISpecificData([tsize.usize, tsize.vsize], camera, model.WebGPURenderWindow.getRenderable());\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.scalarBarActorHelper = vtkScalarBarActor.newScalarBarActorHelper();\n\n  // Object methods\n  vtkWebGPUScalarBarActor(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend, 'vtkWebGPUScalarBarActor');\n\n// ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance,\n  extend\n};\n\n// Register ourself to WebGPU backend if imported\nregisterOverride('vtkScalarBarActor', newInstance);\nexport { index as default, extend, newInstance };","map":{"version":3,"names":["n","newInstance$1","vtkScalarBarActor","vtkViewNode","registerOverride","vtkWebGPUScalarBarActor","publicAPI","model","classHierarchy","push","buildPass","prepass","WebGPURenderer","getFirstAncestorOfType","WebGPURenderWindow","getParent","scalarBarActorHelper","getRenderable","setRenderable","renderable","prepareNodes","addMissingNode","getBarActor","getTmActor","removeUnusedNodes","opaquePass","renderPass","camera","getActiveCamera","tsize","getTiledSizeAndOrigin","updateAPISpecificData","usize","vsize","DEFAULT_VALUES","extend","initialValues","arguments","length","undefined","Object","assign","newScalarBarActorHelper","newInstance","index","default"],"sources":["/root/vue-cornerstone-demo/node_modules/@kitware/vtk.js/Rendering/WebGPU/ScalarBarActor.js"],"sourcesContent":["import { n as newInstance$1 } from '../../macros2.js';\nimport vtkScalarBarActor from '../Core/ScalarBarActor.js';\nimport vtkViewNode from '../SceneGraph/ViewNode.js';\nimport { registerOverride } from './ViewNodeFactory.js';\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUScalarBarActor methods\n// ----------------------------------------------------------------------------\n\nfunction vtkWebGPUScalarBarActor(publicAPI, model) {\n  model.classHierarchy.push('vtkWebGPUScalarBarActor');\n\n  // Builds myself.\n  publicAPI.buildPass = prepass => {\n    if (prepass) {\n      model.WebGPURenderer = publicAPI.getFirstAncestorOfType('vtkWebGPURenderer');\n      model.WebGPURenderWindow = model.WebGPURenderer.getParent();\n      if (!model.scalarBarActorHelper.getRenderable()) {\n        model.scalarBarActorHelper.setRenderable(model.renderable);\n      }\n      publicAPI.prepareNodes();\n      publicAPI.addMissingNode(model.scalarBarActorHelper.getBarActor());\n      publicAPI.addMissingNode(model.scalarBarActorHelper.getTmActor());\n      publicAPI.removeUnusedNodes();\n    }\n  };\n  publicAPI.opaquePass = (prepass, renderPass) => {\n    if (prepass) {\n      const camera = model.WebGPURenderer ? model.WebGPURenderer.getRenderable().getActiveCamera() : null;\n      const tsize = model.WebGPURenderer.getTiledSizeAndOrigin();\n      model.scalarBarActorHelper.updateAPISpecificData([tsize.usize, tsize.vsize], camera, model.WebGPURenderWindow.getRenderable());\n    }\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkViewNode.extend(publicAPI, model, initialValues);\n  model.scalarBarActorHelper = vtkScalarBarActor.newScalarBarActorHelper();\n\n  // Object methods\n  vtkWebGPUScalarBarActor(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nconst newInstance = newInstance$1(extend, 'vtkWebGPUScalarBarActor');\n\n// ----------------------------------------------------------------------------\n\nvar index = {\n  newInstance,\n  extend\n};\n\n// Register ourself to WebGPU backend if imported\nregisterOverride('vtkScalarBarActor', newInstance);\n\nexport { index as default, extend, newInstance };\n"],"mappings":";AAAA,SAASA,CAAC,IAAIC,aAAa,QAAQ,kBAAkB;AACrD,OAAOC,iBAAiB,MAAM,2BAA2B;AACzD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,gBAAgB,QAAQ,sBAAsB;;AAEvD;AACA;AACA;;AAEA,SAASC,uBAAuBA,CAACC,SAAS,EAAEC,KAAK,EAAE;EACjDA,KAAK,CAACC,cAAc,CAACC,IAAI,CAAC,yBAAyB,CAAC;;EAEpD;EACAH,SAAS,CAACI,SAAS,GAAGC,OAAO,IAAI;IAC/B,IAAIA,OAAO,EAAE;MACXJ,KAAK,CAACK,cAAc,GAAGN,SAAS,CAACO,sBAAsB,CAAC,mBAAmB,CAAC;MAC5EN,KAAK,CAACO,kBAAkB,GAAGP,KAAK,CAACK,cAAc,CAACG,SAAS,CAAC,CAAC;MAC3D,IAAI,CAACR,KAAK,CAACS,oBAAoB,CAACC,aAAa,CAAC,CAAC,EAAE;QAC/CV,KAAK,CAACS,oBAAoB,CAACE,aAAa,CAACX,KAAK,CAACY,UAAU,CAAC;MAC5D;MACAb,SAAS,CAACc,YAAY,CAAC,CAAC;MACxBd,SAAS,CAACe,cAAc,CAACd,KAAK,CAACS,oBAAoB,CAACM,WAAW,CAAC,CAAC,CAAC;MAClEhB,SAAS,CAACe,cAAc,CAACd,KAAK,CAACS,oBAAoB,CAACO,UAAU,CAAC,CAAC,CAAC;MACjEjB,SAAS,CAACkB,iBAAiB,CAAC,CAAC;IAC/B;EACF,CAAC;EACDlB,SAAS,CAACmB,UAAU,GAAG,CAACd,OAAO,EAAEe,UAAU,KAAK;IAC9C,IAAIf,OAAO,EAAE;MACX,MAAMgB,MAAM,GAAGpB,KAAK,CAACK,cAAc,GAAGL,KAAK,CAACK,cAAc,CAACK,aAAa,CAAC,CAAC,CAACW,eAAe,CAAC,CAAC,GAAG,IAAI;MACnG,MAAMC,KAAK,GAAGtB,KAAK,CAACK,cAAc,CAACkB,qBAAqB,CAAC,CAAC;MAC1DvB,KAAK,CAACS,oBAAoB,CAACe,qBAAqB,CAAC,CAACF,KAAK,CAACG,KAAK,EAAEH,KAAK,CAACI,KAAK,CAAC,EAAEN,MAAM,EAAEpB,KAAK,CAACO,kBAAkB,CAACG,aAAa,CAAC,CAAC,CAAC;IAChI;EACF,CAAC;AACH;;AAEA;AACA;AACA;;AAEA,MAAMiB,cAAc,GAAG,CAAC,CAAC;;AAEzB;;AAEA,SAASC,MAAMA,CAAC7B,SAAS,EAAEC,KAAK,EAAE;EAChC,IAAI6B,aAAa,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAC1FG,MAAM,CAACC,MAAM,CAAClC,KAAK,EAAE2B,cAAc,EAAEE,aAAa,CAAC;;EAEnD;EACAjC,WAAW,CAACgC,MAAM,CAAC7B,SAAS,EAAEC,KAAK,EAAE6B,aAAa,CAAC;EACnD7B,KAAK,CAACS,oBAAoB,GAAGd,iBAAiB,CAACwC,uBAAuB,CAAC,CAAC;;EAExE;EACArC,uBAAuB,CAACC,SAAS,EAAEC,KAAK,CAAC;AAC3C;;AAEA;;AAEA,MAAMoC,WAAW,GAAG1C,aAAa,CAACkC,MAAM,EAAE,yBAAyB,CAAC;;AAEpE;;AAEA,IAAIS,KAAK,GAAG;EACVD,WAAW;EACXR;AACF,CAAC;;AAED;AACA/B,gBAAgB,CAAC,mBAAmB,EAAEuC,WAAW,CAAC;AAElD,SAASC,KAAK,IAAIC,OAAO,EAAEV,MAAM,EAAEQ,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}