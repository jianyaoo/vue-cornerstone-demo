{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\nconst proxyMarker = Symbol(\"Comlink.proxy\");\nconst createEndpoint = Symbol(\"Comlink.endpoint\");\nconst releaseProxy = Symbol(\"Comlink.releaseProxy\");\nconst finalizer = Symbol(\"Comlink.finalizer\");\nconst throwMarker = Symbol(\"Comlink.thrown\");\nconst isObject = val => typeof val === \"object\" && val !== null || typeof val === \"function\";\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler = {\n  canHandle: val => isObject(val) && val[proxyMarker],\n  serialize(obj) {\n    const {\n      port1,\n      port2\n    } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  }\n};\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler = {\n  canHandle: value => isObject(value) && throwMarker in value,\n  serialize({\n    value\n  }) {\n    let serialized;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack\n        }\n      };\n    } else {\n      serialized = {\n        isError: false,\n        value\n      };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(new Error(serialized.value.message), serialized.value);\n    }\n    throw serialized.value;\n  }\n};\n/**\n * Allows customizing the serialization of certain values.\n */\nconst transferHandlers = new Map([[\"proxy\", proxyTransferHandler], [\"throw\", throwTransferHandler]]);\nfunction isAllowedOrigin(allowedOrigins, origin) {\n  for (const allowedOrigin of allowedOrigins) {\n    if (origin === allowedOrigin || allowedOrigin === \"*\") {\n      return true;\n    }\n    if (allowedOrigin instanceof RegExp && allowedOrigin.test(origin)) {\n      return true;\n    }\n  }\n  return false;\n}\nfunction expose(obj, ep = globalThis, allowedOrigins = [\"*\"]) {\n  ep.addEventListener(\"message\", function callback(ev) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    if (!isAllowedOrigin(allowedOrigins, ev.origin)) {\n      console.warn(`Invalid origin '${ev.origin}' for comlink proxy`);\n      return;\n    }\n    const {\n      id,\n      type,\n      path\n    } = Object.assign({\n      path: []\n    }, ev.data);\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case \"GET\" /* MessageType.GET */:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case \"SET\" /* MessageType.SET */:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case \"APPLY\" /* MessageType.APPLY */:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case \"CONSTRUCT\" /* MessageType.CONSTRUCT */:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case \"ENDPOINT\" /* MessageType.ENDPOINT */:\n          {\n            const {\n              port1,\n              port2\n            } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case \"RELEASE\" /* MessageType.RELEASE */:\n          {\n            returnValue = undefined;\n          }\n          break;\n        default:\n          return;\n      }\n    } catch (value) {\n      returnValue = {\n        value,\n        [throwMarker]: 0\n      };\n    }\n    Promise.resolve(returnValue).catch(value => {\n      return {\n        value,\n        [throwMarker]: 0\n      };\n    }).then(returnValue => {\n      const [wireValue, transferables] = toWireValue(returnValue);\n      ep.postMessage(Object.assign(Object.assign({}, wireValue), {\n        id\n      }), transferables);\n      if (type === \"RELEASE\" /* MessageType.RELEASE */) {\n        // detach and deactive after sending release response above.\n        ep.removeEventListener(\"message\", callback);\n        closeEndPoint(ep);\n        if (finalizer in obj && typeof obj[finalizer] === \"function\") {\n          obj[finalizer]();\n        }\n      }\n    }).catch(error => {\n      // Send Serialization Error To Caller\n      const [wireValue, transferables] = toWireValue({\n        value: new TypeError(\"Unserializable return value\"),\n        [throwMarker]: 0\n      });\n      ep.postMessage(Object.assign(Object.assign({}, wireValue), {\n        id\n      }), transferables);\n    });\n  });\n  if (ep.start) {\n    ep.start();\n  }\n}\nfunction isMessagePort(endpoint) {\n  return endpoint.constructor.name === \"MessagePort\";\n}\nfunction closeEndPoint(endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\nfunction wrap(ep, target) {\n  return createProxy(ep, [], target);\n}\nfunction throwIfProxyReleased(isReleased) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\nfunction releaseEndpoint(ep) {\n  return requestResponseMessage(ep, {\n    type: \"RELEASE\" /* MessageType.RELEASE */\n  }).then(() => {\n    closeEndPoint(ep);\n  });\n}\nconst proxyCounter = new WeakMap();\nconst proxyFinalizers = \"FinalizationRegistry\" in globalThis && new FinalizationRegistry(ep => {\n  const newCount = (proxyCounter.get(ep) || 0) - 1;\n  proxyCounter.set(ep, newCount);\n  if (newCount === 0) {\n    releaseEndpoint(ep);\n  }\n});\nfunction registerProxy(proxy, ep) {\n  const newCount = (proxyCounter.get(ep) || 0) + 1;\n  proxyCounter.set(ep, newCount);\n  if (proxyFinalizers) {\n    proxyFinalizers.register(proxy, ep, proxy);\n  }\n}\nfunction unregisterProxy(proxy) {\n  if (proxyFinalizers) {\n    proxyFinalizers.unregister(proxy);\n  }\n}\nfunction createProxy(ep, path = [], target = function () {}) {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          unregisterProxy(proxy);\n          releaseEndpoint(ep);\n          isProxyReleased = true;\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return {\n            then: () => proxy\n          };\n        }\n        const r = requestResponseMessage(ep, {\n          type: \"GET\" /* MessageType.GET */,\n          path: path.map(p => p.toString())\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(ep, {\n        type: \"SET\" /* MessageType.SET */,\n        path: [...path, prop].map(p => p.toString()),\n        value\n      }, transferables).then(fromWireValue);\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if (last === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: \"ENDPOINT\" /* MessageType.ENDPOINT */\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(ep, {\n        type: \"APPLY\" /* MessageType.APPLY */,\n        path: path.map(p => p.toString()),\n        argumentList\n      }, transferables).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(ep, {\n        type: \"CONSTRUCT\" /* MessageType.CONSTRUCT */,\n        path: path.map(p => p.toString()),\n        argumentList\n      }, transferables).then(fromWireValue);\n    }\n  });\n  registerProxy(proxy, ep);\n  return proxy;\n}\nfunction myFlat(arr) {\n  return Array.prototype.concat.apply([], arr);\n}\nfunction processArguments(argumentList) {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map(v => v[0]), myFlat(processed.map(v => v[1]))];\n}\nconst transferCache = new WeakMap();\nfunction transfer(obj, transfers) {\n  transferCache.set(obj, transfers);\n  return obj;\n}\nfunction proxy(obj) {\n  return Object.assign(obj, {\n    [proxyMarker]: true\n  });\n}\nfunction windowEndpoint(w, context = globalThis, targetOrigin = \"*\") {\n  return {\n    postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context)\n  };\n}\nfunction toWireValue(value) {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [{\n        type: \"HANDLER\" /* WireValueType.HANDLER */,\n        name,\n        value: serializedValue\n      }, transferables];\n    }\n  }\n  return [{\n    type: \"RAW\" /* WireValueType.RAW */,\n    value\n  }, transferCache.get(value) || []];\n}\nfunction fromWireValue(value) {\n  switch (value.type) {\n    case \"HANDLER\" /* WireValueType.HANDLER */:\n      return transferHandlers.get(value.name).deserialize(value.value);\n    case \"RAW\" /* WireValueType.RAW */:\n      return value.value;\n  }\n}\nfunction requestResponseMessage(ep, msg, transfers) {\n  return new Promise(resolve => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l);\n      resolve(ev.data);\n    });\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage(Object.assign({\n      id\n    }, msg), transfers);\n  });\n}\nfunction generateUUID() {\n  return new Array(4).fill(0).map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16)).join(\"-\");\n}\nexport { createEndpoint, expose, finalizer, proxy, proxyMarker, releaseProxy, transfer, transferHandlers, windowEndpoint, wrap };","map":{"version":3,"names":["proxyMarker","Symbol","createEndpoint","releaseProxy","finalizer","throwMarker","isObject","val","proxyTransferHandler","canHandle","serialize","obj","port1","port2","MessageChannel","expose","deserialize","port","start","wrap","throwTransferHandler","value","serialized","Error","isError","message","name","stack","Object","assign","transferHandlers","Map","isAllowedOrigin","allowedOrigins","origin","allowedOrigin","RegExp","test","ep","globalThis","addEventListener","callback","ev","data","console","warn","id","type","path","argumentList","map","fromWireValue","returnValue","parent","slice","reduce","prop","rawValue","apply","proxy","transfer","undefined","Promise","resolve","catch","then","wireValue","transferables","toWireValue","postMessage","removeEventListener","closeEndPoint","error","TypeError","isMessagePort","endpoint","constructor","close","target","createProxy","throwIfProxyReleased","isReleased","releaseEndpoint","requestResponseMessage","proxyCounter","WeakMap","proxyFinalizers","FinalizationRegistry","newCount","get","set","registerProxy","register","unregisterProxy","unregister","isProxyReleased","Proxy","_target","length","r","p","toString","bind","_thisArg","rawArgumentList","last","processArguments","construct","myFlat","arr","Array","prototype","concat","processed","v","transferCache","transfers","windowEndpoint","w","context","targetOrigin","msg","handler","serializedValue","generateUUID","l","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join"],"sources":["../../src/comlink.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}