{"ast":null,"code":"import { metaData } from \"@cornerstonejs/core\";\nexport default function getPTImageIdInstanceMetadata(imageId) {\n  const petSequenceModule = metaData.get(\"petIsotopeModule\", imageId);\n  const generalSeriesModule = metaData.get(\"generalSeriesModule\", imageId);\n  const patientStudyModule = metaData.get(\"patientStudyModule\", imageId);\n  const ptSeriesModule = metaData.get(\"petSeriesModule\", imageId);\n  const ptImageModule = metaData.get(\"petImageModule\", imageId);\n  if (!petSequenceModule) {\n    throw new Error(\"petSequenceModule metadata is required\");\n  }\n  const radiopharmaceuticalInfo = petSequenceModule.radiopharmaceuticalInfo;\n  const {\n    seriesDate,\n    seriesTime,\n    acquisitionDate,\n    acquisitionTime\n  } = generalSeriesModule;\n  const {\n    patientWeight\n  } = patientStudyModule;\n  const {\n    correctedImage,\n    units,\n    decayCorrection\n  } = ptSeriesModule;\n  if (seriesDate === undefined || seriesTime === undefined || patientWeight === undefined || acquisitionDate === undefined || acquisitionTime === undefined || correctedImage === undefined || units === undefined || decayCorrection === undefined || radiopharmaceuticalInfo.radionuclideTotalDose === undefined || radiopharmaceuticalInfo.radionuclideHalfLife === undefined || radiopharmaceuticalInfo.radiopharmaceuticalStartDateTime === undefined && seriesDate === undefined && radiopharmaceuticalInfo.radiopharmaceuticalStartTime === undefined\n  //\n  ) {\n    throw new Error(\"required metadata are missing\");\n  }\n  const instanceMetadata = {\n    CorrectedImage: correctedImage,\n    Units: units,\n    RadionuclideHalfLife: radiopharmaceuticalInfo.radionuclideHalfLife,\n    RadionuclideTotalDose: radiopharmaceuticalInfo.radionuclideTotalDose,\n    DecayCorrection: decayCorrection,\n    PatientWeight: patientWeight,\n    SeriesDate: seriesDate,\n    SeriesTime: seriesTime,\n    AcquisitionDate: acquisitionDate,\n    AcquisitionTime: acquisitionTime\n  };\n  if (radiopharmaceuticalInfo.radiopharmaceuticalStartDateTime && radiopharmaceuticalInfo.radiopharmaceuticalStartDateTime !== undefined && typeof radiopharmaceuticalInfo.radiopharmaceuticalStartDateTime === \"string\") {\n    instanceMetadata.RadiopharmaceuticalStartDateTime = radiopharmaceuticalInfo.radiopharmaceuticalStartDateTime;\n  }\n  if (radiopharmaceuticalInfo.radiopharmaceuticalStartDateTime && radiopharmaceuticalInfo.radiopharmaceuticalStartDateTime !== undefined && typeof radiopharmaceuticalInfo.radiopharmaceuticalStartDateTime !== \"string\") {\n    const dateString = convertInterfaceDateToString(radiopharmaceuticalInfo.radiopharmaceuticalStartDateTime);\n    instanceMetadata.RadiopharmaceuticalStartDateTime = dateString;\n  }\n  if (instanceMetadata.AcquisitionDate && instanceMetadata.AcquisitionDate !== undefined && typeof instanceMetadata.AcquisitionDate !== \"string\") {\n    const dateString = convertInterfaceDateToString(instanceMetadata.AcquisitionDate);\n    instanceMetadata.AcquisitionDate = dateString;\n  }\n  if (instanceMetadata.SeriesDate && instanceMetadata.SeriesDate !== undefined && typeof instanceMetadata.SeriesDate !== \"string\") {\n    const dateString = convertInterfaceDateToString(instanceMetadata.SeriesDate);\n    instanceMetadata.SeriesDate = dateString;\n  }\n  if (radiopharmaceuticalInfo.radiopharmaceuticalStartTime && radiopharmaceuticalInfo.radiopharmaceuticalStartTime !== undefined && typeof radiopharmaceuticalInfo.radiopharmaceuticalStartTime === \"string\") {\n    instanceMetadata.RadiopharmaceuticalStartTime = radiopharmaceuticalInfo.radiopharmaceuticalStartTime;\n  }\n  if (radiopharmaceuticalInfo.radiopharmaceuticalStartTime && radiopharmaceuticalInfo.radiopharmaceuticalStartTime !== undefined && typeof radiopharmaceuticalInfo.radiopharmaceuticalStartTime !== \"string\") {\n    const timeString = convertInterfaceTimeToString(radiopharmaceuticalInfo.radiopharmaceuticalStartTime);\n    instanceMetadata.RadiopharmaceuticalStartTime = timeString;\n  }\n  if (instanceMetadata.AcquisitionTime && instanceMetadata.AcquisitionTime !== undefined && typeof instanceMetadata.AcquisitionTime !== \"string\") {\n    const timeString = convertInterfaceTimeToString(instanceMetadata.AcquisitionTime);\n    instanceMetadata.AcquisitionTime = timeString;\n  }\n  if (instanceMetadata.SeriesTime && instanceMetadata.SeriesTime !== undefined && typeof instanceMetadata.SeriesTime !== \"string\") {\n    const timeString = convertInterfaceTimeToString(instanceMetadata.SeriesTime);\n    instanceMetadata.SeriesTime = timeString;\n  }\n  if (ptImageModule.frameReferenceTime && ptImageModule.frameReferenceTime !== undefined) {\n    instanceMetadata.FrameReferenceTime = ptImageModule.frameReferenceTime;\n  }\n  if (ptImageModule.actualFrameDuration && ptImageModule.actualFrameDuration !== undefined) {\n    instanceMetadata.ActualFrameDuration = ptImageModule.actualFrameDuration;\n  }\n  if (patientStudyModule.patientSex && patientStudyModule.patientSex !== undefined) {\n    instanceMetadata.PatientSex = patientStudyModule.patientSex;\n  }\n  if (patientStudyModule.patientSize && patientStudyModule.patientSize !== undefined) {\n    instanceMetadata.PatientSize = patientStudyModule.patientSize;\n  }\n\n  // Todo: add private tags\n  // if (\n  //   dicomMetaData['70531000'] ||\n  //   dicomMetaData['70531000'] !== undefined ||\n  //   dicomMetaData['70531009'] ||\n  //   dicomMetaData['70531009'] !== undefined\n  // ) {\n  //   const philipsPETPrivateGroup: PhilipsPETPrivateGroup = {\n  //     SUVScaleFactor: dicomMetaData['70531000'],\n  //     ActivityConcentrationScaleFactor: dicomMetaData['70531009'],\n  //   };\n  //   instanceMetadata.PhilipsPETPrivateGroup = philipsPETPrivateGroup;\n  // }\n\n  // if (dicomMetaData['0009100d'] && dicomMetaData['0009100d'] !== undefined) {\n  //   instanceMetadata.GEPrivatePostInjectionDateTime = dicomMetaData['0009100d'];\n  // }\n\n  return instanceMetadata;\n}\nfunction convertInterfaceTimeToString(time) {\n  const hours = `${time.hours || \"00\"}`.padStart(2, \"0\");\n  const minutes = `${time.minutes || \"00\"}`.padStart(2, \"0\");\n  const seconds = `${time.seconds || \"00\"}`.padStart(2, \"0\");\n  const fractionalSeconds = `${time.fractionalSeconds || \"000000\"}`.padEnd(6, \"0\");\n  const timeString = `${hours}${minutes}${seconds}.${fractionalSeconds}`;\n  return timeString;\n}\nfunction convertInterfaceDateToString(date) {\n  const month = `${date.month}`.padStart(2, \"0\");\n  const day = `${date.day}`.padStart(2, \"0\");\n  const dateString = `${date.year}${month}${day}`;\n  return dateString;\n}\nexport { getPTImageIdInstanceMetadata };","map":{"version":3,"names":["metaData","getPTImageIdInstanceMetadata","imageId","petSequenceModule","get","generalSeriesModule","patientStudyModule","ptSeriesModule","ptImageModule","Error","radiopharmaceuticalInfo","seriesDate","seriesTime","acquisitionDate","acquisitionTime","patientWeight","correctedImage","units","decayCorrection","undefined","radionuclideTotalDose","radionuclideHalfLife","radiopharmaceuticalStartDateTime","radiopharmaceuticalStartTime","instanceMetadata","CorrectedImage","Units","RadionuclideHalfLife","RadionuclideTotalDose","DecayCorrection","PatientWeight","SeriesDate","SeriesTime","AcquisitionDate","AcquisitionTime","RadiopharmaceuticalStartDateTime","dateString","convertInterfaceDateToString","RadiopharmaceuticalStartTime","timeString","convertInterfaceTimeToString","frameReferenceTime","FrameReferenceTime","actualFrameDuration","ActualFrameDuration","patientSex","PatientSex","patientSize","PatientSize","time","hours","padStart","minutes","seconds","fractionalSeconds","padEnd","date","month","day","year"],"sources":["/root/vue-cornerstone-demo/src/cornerstone/dicomwebClient/getPTImageIdInstanceMetadata.js"],"sourcesContent":["import { metaData } from \"@cornerstonejs/core\";\n\nexport default function getPTImageIdInstanceMetadata(imageId) {\n  const petSequenceModule = metaData.get(\"petIsotopeModule\", imageId);\n  const generalSeriesModule = metaData.get(\"generalSeriesModule\", imageId);\n  const patientStudyModule = metaData.get(\"patientStudyModule\", imageId);\n\n  const ptSeriesModule = metaData.get(\"petSeriesModule\", imageId);\n  const ptImageModule = metaData.get(\"petImageModule\", imageId);\n\n  if (!petSequenceModule) {\n    throw new Error(\"petSequenceModule metadata is required\");\n  }\n\n  const radiopharmaceuticalInfo = petSequenceModule.radiopharmaceuticalInfo;\n\n  const { seriesDate, seriesTime, acquisitionDate, acquisitionTime } =\n    generalSeriesModule;\n  const { patientWeight } = patientStudyModule;\n  const { correctedImage, units, decayCorrection } = ptSeriesModule;\n\n  if (\n    seriesDate === undefined ||\n    seriesTime === undefined ||\n    patientWeight === undefined ||\n    acquisitionDate === undefined ||\n    acquisitionTime === undefined ||\n    correctedImage === undefined ||\n    units === undefined ||\n    decayCorrection === undefined ||\n    radiopharmaceuticalInfo.radionuclideTotalDose === undefined ||\n    radiopharmaceuticalInfo.radionuclideHalfLife === undefined ||\n    (radiopharmaceuticalInfo.radiopharmaceuticalStartDateTime === undefined &&\n      seriesDate === undefined &&\n      radiopharmaceuticalInfo.radiopharmaceuticalStartTime === undefined)\n    //\n  ) {\n    throw new Error(\"required metadata are missing\");\n  }\n\n  const instanceMetadata = {\n    CorrectedImage: correctedImage,\n    Units: units,\n    RadionuclideHalfLife: radiopharmaceuticalInfo.radionuclideHalfLife,\n    RadionuclideTotalDose: radiopharmaceuticalInfo.radionuclideTotalDose,\n    DecayCorrection: decayCorrection,\n    PatientWeight: patientWeight,\n    SeriesDate: seriesDate,\n    SeriesTime: seriesTime,\n    AcquisitionDate: acquisitionDate,\n    AcquisitionTime: acquisitionTime,\n  };\n\n  if (\n    radiopharmaceuticalInfo.radiopharmaceuticalStartDateTime &&\n    radiopharmaceuticalInfo.radiopharmaceuticalStartDateTime !== undefined &&\n    typeof radiopharmaceuticalInfo.radiopharmaceuticalStartDateTime === \"string\"\n  ) {\n    instanceMetadata.RadiopharmaceuticalStartDateTime =\n      radiopharmaceuticalInfo.radiopharmaceuticalStartDateTime;\n  }\n\n  if (\n    radiopharmaceuticalInfo.radiopharmaceuticalStartDateTime &&\n    radiopharmaceuticalInfo.radiopharmaceuticalStartDateTime !== undefined &&\n    typeof radiopharmaceuticalInfo.radiopharmaceuticalStartDateTime !== \"string\"\n  ) {\n    const dateString = convertInterfaceDateToString(\n      radiopharmaceuticalInfo.radiopharmaceuticalStartDateTime\n    );\n    instanceMetadata.RadiopharmaceuticalStartDateTime = dateString;\n  }\n\n  if (\n    instanceMetadata.AcquisitionDate &&\n    instanceMetadata.AcquisitionDate !== undefined &&\n    typeof instanceMetadata.AcquisitionDate !== \"string\"\n  ) {\n    const dateString = convertInterfaceDateToString(\n      instanceMetadata.AcquisitionDate\n    );\n    instanceMetadata.AcquisitionDate = dateString;\n  }\n\n  if (\n    instanceMetadata.SeriesDate &&\n    instanceMetadata.SeriesDate !== undefined &&\n    typeof instanceMetadata.SeriesDate !== \"string\"\n  ) {\n    const dateString = convertInterfaceDateToString(\n      instanceMetadata.SeriesDate\n    );\n    instanceMetadata.SeriesDate = dateString;\n  }\n\n  if (\n    radiopharmaceuticalInfo.radiopharmaceuticalStartTime &&\n    radiopharmaceuticalInfo.radiopharmaceuticalStartTime !== undefined &&\n    typeof radiopharmaceuticalInfo.radiopharmaceuticalStartTime === \"string\"\n  ) {\n    instanceMetadata.RadiopharmaceuticalStartTime =\n      radiopharmaceuticalInfo.radiopharmaceuticalStartTime;\n  }\n\n  if (\n    radiopharmaceuticalInfo.radiopharmaceuticalStartTime &&\n    radiopharmaceuticalInfo.radiopharmaceuticalStartTime !== undefined &&\n    typeof radiopharmaceuticalInfo.radiopharmaceuticalStartTime !== \"string\"\n  ) {\n    const timeString = convertInterfaceTimeToString(\n      radiopharmaceuticalInfo.radiopharmaceuticalStartTime\n    );\n    instanceMetadata.RadiopharmaceuticalStartTime = timeString;\n  }\n\n  if (\n    instanceMetadata.AcquisitionTime &&\n    instanceMetadata.AcquisitionTime !== undefined &&\n    typeof instanceMetadata.AcquisitionTime !== \"string\"\n  ) {\n    const timeString = convertInterfaceTimeToString(\n      instanceMetadata.AcquisitionTime\n    );\n    instanceMetadata.AcquisitionTime = timeString;\n  }\n\n  if (\n    instanceMetadata.SeriesTime &&\n    instanceMetadata.SeriesTime !== undefined &&\n    typeof instanceMetadata.SeriesTime !== \"string\"\n  ) {\n    const timeString = convertInterfaceTimeToString(\n      instanceMetadata.SeriesTime\n    );\n    instanceMetadata.SeriesTime = timeString;\n  }\n\n  if (\n    ptImageModule.frameReferenceTime &&\n    ptImageModule.frameReferenceTime !== undefined\n  ) {\n    instanceMetadata.FrameReferenceTime = ptImageModule.frameReferenceTime;\n  }\n\n  if (\n    ptImageModule.actualFrameDuration &&\n    ptImageModule.actualFrameDuration !== undefined\n  ) {\n    instanceMetadata.ActualFrameDuration = ptImageModule.actualFrameDuration;\n  }\n\n  if (\n    patientStudyModule.patientSex &&\n    patientStudyModule.patientSex !== undefined\n  ) {\n    instanceMetadata.PatientSex = patientStudyModule.patientSex;\n  }\n\n  if (\n    patientStudyModule.patientSize &&\n    patientStudyModule.patientSize !== undefined\n  ) {\n    instanceMetadata.PatientSize = patientStudyModule.patientSize;\n  }\n\n  // Todo: add private tags\n  // if (\n  //   dicomMetaData['70531000'] ||\n  //   dicomMetaData['70531000'] !== undefined ||\n  //   dicomMetaData['70531009'] ||\n  //   dicomMetaData['70531009'] !== undefined\n  // ) {\n  //   const philipsPETPrivateGroup: PhilipsPETPrivateGroup = {\n  //     SUVScaleFactor: dicomMetaData['70531000'],\n  //     ActivityConcentrationScaleFactor: dicomMetaData['70531009'],\n  //   };\n  //   instanceMetadata.PhilipsPETPrivateGroup = philipsPETPrivateGroup;\n  // }\n\n  // if (dicomMetaData['0009100d'] && dicomMetaData['0009100d'] !== undefined) {\n  //   instanceMetadata.GEPrivatePostInjectionDateTime = dicomMetaData['0009100d'];\n  // }\n\n  return instanceMetadata;\n}\n\nfunction convertInterfaceTimeToString(time) {\n  const hours = `${time.hours || \"00\"}`.padStart(2, \"0\");\n  const minutes = `${time.minutes || \"00\"}`.padStart(2, \"0\");\n  const seconds = `${time.seconds || \"00\"}`.padStart(2, \"0\");\n\n  const fractionalSeconds = `${time.fractionalSeconds || \"000000\"}`.padEnd(\n    6,\n    \"0\"\n  );\n\n  const timeString = `${hours}${minutes}${seconds}.${fractionalSeconds}`;\n  return timeString;\n}\n\nfunction convertInterfaceDateToString(date) {\n  const month = `${date.month}`.padStart(2, \"0\");\n  const day = `${date.day}`.padStart(2, \"0\");\n  const dateString = `${date.year}${month}${day}`;\n  return dateString;\n}\n\nexport { getPTImageIdInstanceMetadata };\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,qBAAqB;AAE9C,eAAe,SAASC,4BAA4BA,CAACC,OAAO,EAAE;EAC5D,MAAMC,iBAAiB,GAAGH,QAAQ,CAACI,GAAG,CAAC,kBAAkB,EAAEF,OAAO,CAAC;EACnE,MAAMG,mBAAmB,GAAGL,QAAQ,CAACI,GAAG,CAAC,qBAAqB,EAAEF,OAAO,CAAC;EACxE,MAAMI,kBAAkB,GAAGN,QAAQ,CAACI,GAAG,CAAC,oBAAoB,EAAEF,OAAO,CAAC;EAEtE,MAAMK,cAAc,GAAGP,QAAQ,CAACI,GAAG,CAAC,iBAAiB,EAAEF,OAAO,CAAC;EAC/D,MAAMM,aAAa,GAAGR,QAAQ,CAACI,GAAG,CAAC,gBAAgB,EAAEF,OAAO,CAAC;EAE7D,IAAI,CAACC,iBAAiB,EAAE;IACtB,MAAM,IAAIM,KAAK,CAAC,wCAAwC,CAAC;EAC3D;EAEA,MAAMC,uBAAuB,GAAGP,iBAAiB,CAACO,uBAAuB;EAEzE,MAAM;IAAEC,UAAU;IAAEC,UAAU;IAAEC,eAAe;IAAEC;EAAgB,CAAC,GAChET,mBAAmB;EACrB,MAAM;IAAEU;EAAc,CAAC,GAAGT,kBAAkB;EAC5C,MAAM;IAAEU,cAAc;IAAEC,KAAK;IAAEC;EAAgB,CAAC,GAAGX,cAAc;EAEjE,IACEI,UAAU,KAAKQ,SAAS,IACxBP,UAAU,KAAKO,SAAS,IACxBJ,aAAa,KAAKI,SAAS,IAC3BN,eAAe,KAAKM,SAAS,IAC7BL,eAAe,KAAKK,SAAS,IAC7BH,cAAc,KAAKG,SAAS,IAC5BF,KAAK,KAAKE,SAAS,IACnBD,eAAe,KAAKC,SAAS,IAC7BT,uBAAuB,CAACU,qBAAqB,KAAKD,SAAS,IAC3DT,uBAAuB,CAACW,oBAAoB,KAAKF,SAAS,IACzDT,uBAAuB,CAACY,gCAAgC,KAAKH,SAAS,IACrER,UAAU,KAAKQ,SAAS,IACxBT,uBAAuB,CAACa,4BAA4B,KAAKJ;EAC3D;EAAA,EACA;IACA,MAAM,IAAIV,KAAK,CAAC,+BAA+B,CAAC;EAClD;EAEA,MAAMe,gBAAgB,GAAG;IACvBC,cAAc,EAAET,cAAc;IAC9BU,KAAK,EAAET,KAAK;IACZU,oBAAoB,EAAEjB,uBAAuB,CAACW,oBAAoB;IAClEO,qBAAqB,EAAElB,uBAAuB,CAACU,qBAAqB;IACpES,eAAe,EAAEX,eAAe;IAChCY,aAAa,EAAEf,aAAa;IAC5BgB,UAAU,EAAEpB,UAAU;IACtBqB,UAAU,EAAEpB,UAAU;IACtBqB,eAAe,EAAEpB,eAAe;IAChCqB,eAAe,EAAEpB;EACnB,CAAC;EAED,IACEJ,uBAAuB,CAACY,gCAAgC,IACxDZ,uBAAuB,CAACY,gCAAgC,KAAKH,SAAS,IACtE,OAAOT,uBAAuB,CAACY,gCAAgC,KAAK,QAAQ,EAC5E;IACAE,gBAAgB,CAACW,gCAAgC,GAC/CzB,uBAAuB,CAACY,gCAAgC;EAC5D;EAEA,IACEZ,uBAAuB,CAACY,gCAAgC,IACxDZ,uBAAuB,CAACY,gCAAgC,KAAKH,SAAS,IACtE,OAAOT,uBAAuB,CAACY,gCAAgC,KAAK,QAAQ,EAC5E;IACA,MAAMc,UAAU,GAAGC,4BAA4B,CAC7C3B,uBAAuB,CAACY,gCAC1B,CAAC;IACDE,gBAAgB,CAACW,gCAAgC,GAAGC,UAAU;EAChE;EAEA,IACEZ,gBAAgB,CAACS,eAAe,IAChCT,gBAAgB,CAACS,eAAe,KAAKd,SAAS,IAC9C,OAAOK,gBAAgB,CAACS,eAAe,KAAK,QAAQ,EACpD;IACA,MAAMG,UAAU,GAAGC,4BAA4B,CAC7Cb,gBAAgB,CAACS,eACnB,CAAC;IACDT,gBAAgB,CAACS,eAAe,GAAGG,UAAU;EAC/C;EAEA,IACEZ,gBAAgB,CAACO,UAAU,IAC3BP,gBAAgB,CAACO,UAAU,KAAKZ,SAAS,IACzC,OAAOK,gBAAgB,CAACO,UAAU,KAAK,QAAQ,EAC/C;IACA,MAAMK,UAAU,GAAGC,4BAA4B,CAC7Cb,gBAAgB,CAACO,UACnB,CAAC;IACDP,gBAAgB,CAACO,UAAU,GAAGK,UAAU;EAC1C;EAEA,IACE1B,uBAAuB,CAACa,4BAA4B,IACpDb,uBAAuB,CAACa,4BAA4B,KAAKJ,SAAS,IAClE,OAAOT,uBAAuB,CAACa,4BAA4B,KAAK,QAAQ,EACxE;IACAC,gBAAgB,CAACc,4BAA4B,GAC3C5B,uBAAuB,CAACa,4BAA4B;EACxD;EAEA,IACEb,uBAAuB,CAACa,4BAA4B,IACpDb,uBAAuB,CAACa,4BAA4B,KAAKJ,SAAS,IAClE,OAAOT,uBAAuB,CAACa,4BAA4B,KAAK,QAAQ,EACxE;IACA,MAAMgB,UAAU,GAAGC,4BAA4B,CAC7C9B,uBAAuB,CAACa,4BAC1B,CAAC;IACDC,gBAAgB,CAACc,4BAA4B,GAAGC,UAAU;EAC5D;EAEA,IACEf,gBAAgB,CAACU,eAAe,IAChCV,gBAAgB,CAACU,eAAe,KAAKf,SAAS,IAC9C,OAAOK,gBAAgB,CAACU,eAAe,KAAK,QAAQ,EACpD;IACA,MAAMK,UAAU,GAAGC,4BAA4B,CAC7ChB,gBAAgB,CAACU,eACnB,CAAC;IACDV,gBAAgB,CAACU,eAAe,GAAGK,UAAU;EAC/C;EAEA,IACEf,gBAAgB,CAACQ,UAAU,IAC3BR,gBAAgB,CAACQ,UAAU,KAAKb,SAAS,IACzC,OAAOK,gBAAgB,CAACQ,UAAU,KAAK,QAAQ,EAC/C;IACA,MAAMO,UAAU,GAAGC,4BAA4B,CAC7ChB,gBAAgB,CAACQ,UACnB,CAAC;IACDR,gBAAgB,CAACQ,UAAU,GAAGO,UAAU;EAC1C;EAEA,IACE/B,aAAa,CAACiC,kBAAkB,IAChCjC,aAAa,CAACiC,kBAAkB,KAAKtB,SAAS,EAC9C;IACAK,gBAAgB,CAACkB,kBAAkB,GAAGlC,aAAa,CAACiC,kBAAkB;EACxE;EAEA,IACEjC,aAAa,CAACmC,mBAAmB,IACjCnC,aAAa,CAACmC,mBAAmB,KAAKxB,SAAS,EAC/C;IACAK,gBAAgB,CAACoB,mBAAmB,GAAGpC,aAAa,CAACmC,mBAAmB;EAC1E;EAEA,IACErC,kBAAkB,CAACuC,UAAU,IAC7BvC,kBAAkB,CAACuC,UAAU,KAAK1B,SAAS,EAC3C;IACAK,gBAAgB,CAACsB,UAAU,GAAGxC,kBAAkB,CAACuC,UAAU;EAC7D;EAEA,IACEvC,kBAAkB,CAACyC,WAAW,IAC9BzC,kBAAkB,CAACyC,WAAW,KAAK5B,SAAS,EAC5C;IACAK,gBAAgB,CAACwB,WAAW,GAAG1C,kBAAkB,CAACyC,WAAW;EAC/D;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,OAAOvB,gBAAgB;AACzB;AAEA,SAASgB,4BAA4BA,CAACS,IAAI,EAAE;EAC1C,MAAMC,KAAK,GAAI,GAAED,IAAI,CAACC,KAAK,IAAI,IAAK,EAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACtD,MAAMC,OAAO,GAAI,GAAEH,IAAI,CAACG,OAAO,IAAI,IAAK,EAAC,CAACD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC1D,MAAME,OAAO,GAAI,GAAEJ,IAAI,CAACI,OAAO,IAAI,IAAK,EAAC,CAACF,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAE1D,MAAMG,iBAAiB,GAAI,GAAEL,IAAI,CAACK,iBAAiB,IAAI,QAAS,EAAC,CAACC,MAAM,CACtE,CAAC,EACD,GACF,CAAC;EAED,MAAMhB,UAAU,GAAI,GAAEW,KAAM,GAAEE,OAAQ,GAAEC,OAAQ,IAAGC,iBAAkB,EAAC;EACtE,OAAOf,UAAU;AACnB;AAEA,SAASF,4BAA4BA,CAACmB,IAAI,EAAE;EAC1C,MAAMC,KAAK,GAAI,GAAED,IAAI,CAACC,KAAM,EAAC,CAACN,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC9C,MAAMO,GAAG,GAAI,GAAEF,IAAI,CAACE,GAAI,EAAC,CAACP,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC1C,MAAMf,UAAU,GAAI,GAAEoB,IAAI,CAACG,IAAK,GAAEF,KAAM,GAAEC,GAAI,EAAC;EAC/C,OAAOtB,UAAU;AACnB;AAEA,SAASnC,4BAA4B"},"metadata":{},"sourceType":"module","externalDependencies":[]}