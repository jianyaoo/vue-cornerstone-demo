{"ast":null,"code":"import { utilities } from '@cornerstonejs/core';\nimport { getEnabledElement, eventTarget, triggerEvent } from '@cornerstonejs/core';\nimport { vec3 } from 'gl-matrix';\nimport { removeAnnotation } from '../../stateManagement/annotation/annotationState';\nimport { drawHandles as drawHandlesSvg, drawPolyline as drawPolylineSvg, drawLinkedTextBox as drawLinkedTextBoxSvg } from '../../drawingSvg';\nimport { state } from '../../store';\nimport { Events, MouseBindings, KeyboardBindings } from '../../enums';\nimport { resetElementCursor } from '../../cursors/elementCursor';\nimport { math, throttle, roundNumber, triggerAnnotationRenderForViewportIds, getCalibratedScale, getCalibratedAreaUnits } from '../../utilities';\nimport { getViewportIdsWithToolToRender } from '../../utilities/viewportFilters';\nimport { getTextBoxCoordsCanvas } from '../../utilities/drawing';\nimport { CardinalSpline } from './splines/CardinalSpline';\nimport { LinearSpline } from './splines/LinearSpline';\nimport { CatmullRomSpline } from './splines/CatmullRomSpline';\nimport { BSpline } from './splines/BSpline';\nimport ContourSegmentationBaseTool from '../base/ContourSegmentationBaseTool';\nconst SPLINE_MIN_POINTS = 3;\nconst SPLINE_CLICK_CLOSE_CURVE_DIST = 10;\nconst DEFAULT_SPLINE_CONFIG = {\n  resolution: 20,\n  controlPointAdditionDistance: 6,\n  controlPointDeletionDistance: 6,\n  showControlPointsConnectors: false,\n  controlPointAdditionEnabled: true,\n  controlPointDeletionEnabled: true\n};\nvar SplineTypesEnum;\n(function (SplineTypesEnum) {\n  SplineTypesEnum[\"Cardinal\"] = \"CARDINAL\";\n  SplineTypesEnum[\"Linear\"] = \"LINEAR\";\n  SplineTypesEnum[\"CatmullRom\"] = \"CATMULLROM\";\n  SplineTypesEnum[\"BSpline\"] = \"BSPLINE\";\n})(SplineTypesEnum || (SplineTypesEnum = {}));\nvar SplineToolActions;\n(function (SplineToolActions) {\n  SplineToolActions[\"AddControlPoint\"] = \"addControlPoint\";\n  SplineToolActions[\"DeleteControlPoint\"] = \"deleteControlPoint\";\n})(SplineToolActions || (SplineToolActions = {}));\nclass SplineROITool extends ContourSegmentationBaseTool {\n  constructor(toolProps = {}, defaultToolProps = {\n    supportedInteractionTypes: ['Mouse', 'Touch'],\n    configuration: {\n      preventHandleOutsideImage: false,\n      calculateStats: true,\n      getTextLines: defaultGetTextLines,\n      spline: {\n        configuration: {\n          [SplineTypesEnum.Cardinal]: {\n            Class: CardinalSpline,\n            scale: 0.5\n          },\n          [SplineTypesEnum.CatmullRom]: {\n            Class: CatmullRomSpline\n          },\n          [SplineTypesEnum.Linear]: {\n            Class: LinearSpline\n          },\n          [SplineTypesEnum.BSpline]: {\n            Class: BSpline,\n            controlPointAdditionEnabled: false,\n            controlPointDeletionEnabled: false,\n            showControlPointsConnectors: true\n          }\n        },\n        type: SplineTypesEnum.CatmullRom,\n        drawPreviewEnabled: true,\n        lastControlPointDeletionKeys: ['Backspace', 'Delete']\n      },\n      actions: {\n        [SplineToolActions.AddControlPoint]: {\n          method: 'addControlPointCallback',\n          bindings: [{\n            mouseButton: MouseBindings.Primary,\n            modifierKey: KeyboardBindings.Shift\n          }]\n        },\n        [SplineToolActions.DeleteControlPoint]: {\n          method: 'deleteControlPointCallback',\n          bindings: [{\n            mouseButton: MouseBindings.Primary,\n            modifierKey: KeyboardBindings.Ctrl\n          }]\n        }\n      }\n    }\n  }) {\n    super(toolProps, defaultToolProps);\n    this.isHandleOutsideImage = false;\n    this.isPointNearTool = (element, annotation, canvasCoords, proximity) => {\n      const {\n        instance: spline\n      } = annotation.data.spline;\n      return spline.isPointNearCurve(canvasCoords, proximity);\n    };\n    this.toolSelectedCallback = (evt, annotation) => {\n      const eventDetail = evt.detail;\n      const {\n        element\n      } = eventDetail;\n      annotation.highlighted = true;\n      const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n      this.editData = {\n        annotation,\n        viewportIdsToRender,\n        movingTextBox: false\n      };\n      const enabledElement = getEnabledElement(element);\n      const {\n        renderingEngine\n      } = enabledElement;\n      this._activateModify(element);\n      triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n      evt.preventDefault();\n    };\n    this.handleSelectedCallback = (evt, annotation, handle) => {\n      const eventDetail = evt.detail;\n      const {\n        element\n      } = eventDetail;\n      const {\n        data\n      } = annotation;\n      annotation.highlighted = true;\n      let movingTextBox = false;\n      let handleIndex;\n      if (handle.worldPosition) {\n        movingTextBox = true;\n      } else {\n        const {\n          points\n        } = data.handles;\n        handleIndex = points.findIndex(p => p === handle);\n      }\n      const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n      this.editData = {\n        annotation,\n        viewportIdsToRender,\n        handleIndex,\n        movingTextBox\n      };\n      this._activateModify(element);\n      const enabledElement = getEnabledElement(element);\n      const {\n        renderingEngine\n      } = enabledElement;\n      triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n      evt.preventDefault();\n    };\n    this._endCallback = evt => {\n      const eventDetail = evt.detail;\n      const {\n        element\n      } = eventDetail;\n      const {\n        annotation,\n        viewportIdsToRender,\n        newAnnotation\n      } = this.editData;\n      const {\n        data\n      } = annotation;\n      data.handles.activeHandleIndex = null;\n      this._deactivateModify(element);\n      this._deactivateDraw(element);\n      resetElementCursor(element);\n      const enabledElement = getEnabledElement(element);\n      const {\n        renderingEngine\n      } = enabledElement;\n      if (this.isHandleOutsideImage && this.configuration.preventHandleOutsideImage) {\n        removeAnnotation(annotation.annotationUID);\n      }\n      triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n      if (newAnnotation) {\n        const eventType = Events.ANNOTATION_COMPLETED;\n        const eventDetail = {\n          annotation\n        };\n        triggerEvent(eventTarget, eventType, eventDetail);\n      }\n      this.editData = null;\n      this.isDrawing = false;\n    };\n    this._keyDownCallback = evt => {\n      const eventDetail = evt.detail;\n      const {\n        element\n      } = eventDetail;\n      const key = eventDetail.key ?? '';\n      const {\n        lastControlPointDeletionKeys\n      } = this.configuration.spline;\n      const deleteLastPoint = lastControlPointDeletionKeys.includes(key);\n      if (!deleteLastPoint) {\n        return;\n      }\n      const {\n        annotation\n      } = this.editData;\n      const {\n        data\n      } = annotation;\n      if (data.handles.points.length === SPLINE_MIN_POINTS) {\n        this.cancel(element);\n        return;\n      } else {\n        const controlPointIndex = data.handles.points.length - 1;\n        this._deleteControlPointByIndex(element, annotation, controlPointIndex);\n      }\n      evt.preventDefault();\n    };\n    this._mouseMoveCallback = evt => {\n      const {\n        drawPreviewEnabled\n      } = this.configuration.spline;\n      if (!drawPreviewEnabled) {\n        return;\n      }\n      const {\n        element\n      } = evt.detail;\n      const {\n        renderingEngine\n      } = getEnabledElement(element);\n      const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n      this.editData.lastCanvasPoint = evt.detail.currentPoints.canvas;\n      triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n      evt.preventDefault();\n    };\n    this._mouseDownCallback = evt => {\n      const doubleClick = evt.type === Events.MOUSE_DOUBLE_CLICK;\n      const {\n        annotation,\n        viewportIdsToRender\n      } = this.editData;\n      const {\n        data\n      } = annotation;\n      if (data.contour.closed) {\n        return;\n      }\n      const eventDetail = evt.detail;\n      const {\n        element\n      } = eventDetail;\n      const {\n        currentPoints\n      } = eventDetail;\n      const {\n        canvas: canvasPoint,\n        world: worldPoint\n      } = currentPoints;\n      const enabledElement = getEnabledElement(element);\n      const {\n        renderingEngine\n      } = enabledElement;\n      let closeContour = data.handles.points.length >= 2 && doubleClick;\n      let addNewPoint = true;\n      if (data.handles.points.length >= 3) {\n        const {\n          instance: spline\n        } = data.spline;\n        const closestControlPoint = spline.getClosestControlPointWithinDistance(canvasPoint, SPLINE_CLICK_CLOSE_CURVE_DIST);\n        if (closestControlPoint?.index === 0) {\n          addNewPoint = false;\n          closeContour = true;\n        }\n      }\n      if (addNewPoint) {\n        data.handles.points.push(worldPoint);\n      }\n      data.contour.closed = data.contour.closed || closeContour;\n      annotation.invalidated = true;\n      triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n      if (data.contour.closed) {\n        this._endCallback(evt);\n      }\n      evt.preventDefault();\n    };\n    this._dragCallback = evt => {\n      this.isDrawing = true;\n      const eventDetail = evt.detail;\n      const {\n        element\n      } = eventDetail;\n      const {\n        annotation,\n        viewportIdsToRender,\n        handleIndex,\n        movingTextBox\n      } = this.editData;\n      const {\n        data\n      } = annotation;\n      if (movingTextBox) {\n        const {\n          deltaPoints\n        } = eventDetail;\n        const worldPosDelta = deltaPoints.world;\n        const {\n          textBox\n        } = data.handles;\n        const {\n          worldPosition\n        } = textBox;\n        worldPosition[0] += worldPosDelta[0];\n        worldPosition[1] += worldPosDelta[1];\n        worldPosition[2] += worldPosDelta[2];\n        textBox.hasMoved = true;\n      } else if (handleIndex === undefined) {\n        const {\n          deltaPoints\n        } = eventDetail;\n        const worldPosDelta = deltaPoints.world;\n        const points = data.handles.points;\n        points.forEach(point => {\n          point[0] += worldPosDelta[0];\n          point[1] += worldPosDelta[1];\n          point[2] += worldPosDelta[2];\n        });\n        annotation.invalidated = true;\n      } else {\n        const {\n          currentPoints\n        } = eventDetail;\n        const worldPos = currentPoints.world;\n        data.handles.points[handleIndex] = [...worldPos];\n        annotation.invalidated = true;\n      }\n      this.editData.hasMoved = true;\n      const enabledElement = getEnabledElement(element);\n      const {\n        renderingEngine\n      } = enabledElement;\n      triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n    };\n    this.triggerAnnotationModified = (annotation, enabledElement) => {\n      const {\n        viewportId,\n        renderingEngineId\n      } = enabledElement;\n      const eventType = Events.ANNOTATION_MODIFIED;\n      const eventDetail = {\n        annotation,\n        viewportId,\n        renderingEngineId\n      };\n      triggerEvent(eventTarget, eventType, eventDetail);\n    };\n    this._activateModify = element => {\n      state.isInteractingWithTool = true;\n      element.addEventListener(Events.MOUSE_UP, this._endCallback);\n      element.addEventListener(Events.MOUSE_DRAG, this._dragCallback);\n      element.addEventListener(Events.MOUSE_CLICK, this._endCallback);\n      element.addEventListener(Events.TOUCH_END, this._endCallback);\n      element.addEventListener(Events.TOUCH_DRAG, this._dragCallback);\n      element.addEventListener(Events.TOUCH_TAP, this._endCallback);\n    };\n    this._deactivateModify = element => {\n      state.isInteractingWithTool = false;\n      element.removeEventListener(Events.MOUSE_UP, this._endCallback);\n      element.removeEventListener(Events.MOUSE_DRAG, this._dragCallback);\n      element.removeEventListener(Events.MOUSE_CLICK, this._endCallback);\n      element.removeEventListener(Events.TOUCH_END, this._endCallback);\n      element.removeEventListener(Events.TOUCH_DRAG, this._dragCallback);\n      element.removeEventListener(Events.TOUCH_TAP, this._endCallback);\n    };\n    this._activateDraw = element => {\n      state.isInteractingWithTool = true;\n      element.addEventListener(Events.KEY_DOWN, this._keyDownCallback);\n      element.addEventListener(Events.MOUSE_MOVE, this._mouseMoveCallback);\n      element.addEventListener(Events.MOUSE_DOWN, this._mouseDownCallback);\n      element.addEventListener(Events.MOUSE_DOUBLE_CLICK, this._mouseDownCallback);\n      element.addEventListener(Events.TOUCH_TAP, this._mouseDownCallback);\n    };\n    this._deactivateDraw = element => {\n      state.isInteractingWithTool = false;\n      element.removeEventListener(Events.KEY_DOWN, this._keyDownCallback);\n      element.removeEventListener(Events.MOUSE_MOVE, this._mouseMoveCallback);\n      element.removeEventListener(Events.MOUSE_DOWN, this._mouseDownCallback);\n      element.removeEventListener(Events.MOUSE_DOUBLE_CLICK, this._mouseDownCallback);\n      element.removeEventListener(Events.TOUCH_TAP, this._mouseDownCallback);\n    };\n    this._renderStats = (annotation, viewport, svgDrawingHelper, textboxStyle) => {\n      const data = annotation.data;\n      const targetId = this.getTargetId(viewport);\n      if (!data.spline.closed || !textboxStyle.visibility) {\n        return;\n      }\n      const textLines = this.configuration.getTextLines(data, targetId);\n      if (!textLines || textLines.length === 0) {\n        return;\n      }\n      const canvasCoordinates = data.handles.points.map(p => viewport.worldToCanvas(p));\n      if (!data.handles.textBox.hasMoved) {\n        const canvasTextBoxCoords = getTextBoxCoordsCanvas(canvasCoordinates);\n        data.handles.textBox.worldPosition = viewport.canvasToWorld(canvasTextBoxCoords);\n      }\n      const textBoxPosition = viewport.worldToCanvas(data.handles.textBox.worldPosition);\n      const textBoxUID = 'textBox';\n      const boundingBox = drawLinkedTextBoxSvg(svgDrawingHelper, annotation.annotationUID ?? '', textBoxUID, textLines, textBoxPosition, canvasCoordinates, {}, textboxStyle);\n      const {\n        x: left,\n        y: top,\n        width,\n        height\n      } = boundingBox;\n      data.handles.textBox.worldBoundingBox = {\n        topLeft: viewport.canvasToWorld([left, top]),\n        topRight: viewport.canvasToWorld([left + width, top]),\n        bottomLeft: viewport.canvasToWorld([left, top + height]),\n        bottomRight: viewport.canvasToWorld([left + width, top + height])\n      };\n    };\n    this.addControlPointCallback = (evt, annotation) => {\n      const {\n        data\n      } = annotation;\n      const splineType = data.spline.type;\n      const splineConfig = this._getSplineConfig(splineType);\n      const maxDist = splineConfig.controlPointAdditionDistance;\n      if (splineConfig.controlPointAdditionEnabled === false) {\n        return;\n      }\n      const eventDetail = evt.detail;\n      const {\n        element\n      } = eventDetail;\n      const enabledElement = getEnabledElement(element);\n      const {\n        renderingEngine,\n        viewport\n      } = enabledElement;\n      const {\n        canvasToWorld\n      } = viewport;\n      const {\n        instance: spline\n      } = data.spline;\n      const canvasPos = evt.detail.currentPoints.canvas;\n      const closestPointInfo = spline.getClosestPoint(canvasPos);\n      if (closestPointInfo.distance > maxDist) {\n        return;\n      }\n      const {\n        index,\n        point: canvasPoint\n      } = spline.addControlPointAtU(closestPointInfo.uValue);\n      data.handles.points.splice(index, 0, canvasToWorld(canvasPoint));\n      annotation.invalidated = true;\n      const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n      triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n    };\n    this.deleteControlPointCallback = (evt, annotation) => {\n      const splineType = annotation.data.spline.type;\n      const splineConfig = this._getSplineConfig(splineType);\n      const maxDist = splineConfig.controlPointDeletionDistance;\n      if (splineConfig.controlPointDeletionEnabled === false) {\n        return;\n      }\n      const eventDetail = evt.detail;\n      const {\n        element,\n        currentPoints\n      } = eventDetail;\n      const {\n        canvas: canvasPos\n      } = currentPoints;\n      const {\n        instance: spline\n      } = annotation.data.spline;\n      const closestControlPoint = spline.getClosestControlPointWithinDistance(canvasPos, maxDist);\n      if (!closestControlPoint) {\n        return;\n      }\n      this._deleteControlPointByIndex(element, annotation, closestControlPoint.index);\n    };\n    this._calculateCachedStats = (annotation, element) => {\n      if (!this.configuration.calculateStats) {\n        return;\n      }\n      const data = annotation.data;\n      if (!data.contour.closed) {\n        return;\n      }\n      const enabledElement = getEnabledElement(element);\n      const {\n        viewport,\n        renderingEngine\n      } = enabledElement;\n      const {\n        cachedStats\n      } = data;\n      const {\n        polyline: points\n      } = data.contour;\n      const targetIds = Object.keys(cachedStats);\n      for (let i = 0; i < targetIds.length; i++) {\n        const targetId = targetIds[i];\n        const image = this.getTargetIdImage(targetId, renderingEngine);\n        if (!image) {\n          continue;\n        }\n        const {\n          metadata\n        } = image;\n        const canvasCoordinates = points.map(p => viewport.worldToCanvas(p));\n        const canvasPoint = canvasCoordinates[0];\n        const originalWorldPoint = viewport.canvasToWorld(canvasPoint);\n        const deltaXPoint = viewport.canvasToWorld([canvasPoint[0] + 1, canvasPoint[1]]);\n        const deltaYPoint = viewport.canvasToWorld([canvasPoint[0], canvasPoint[1] + 1]);\n        const deltaInX = vec3.distance(originalWorldPoint, deltaXPoint);\n        const deltaInY = vec3.distance(originalWorldPoint, deltaYPoint);\n        const scale = getCalibratedScale(image);\n        let area = math.polyline.calculateAreaOfPoints(canvasCoordinates) / scale / scale;\n        area *= deltaInX * deltaInY;\n        cachedStats[targetId] = {\n          Modality: metadata.Modality,\n          area,\n          areaUnit: getCalibratedAreaUnits(null, image)\n        };\n      }\n      this.triggerAnnotationModified(annotation, enabledElement);\n      return cachedStats;\n    };\n    this._throttledCalculateCachedStats = throttle(this._calculateCachedStats, 100, {\n      trailing: true\n    });\n  }\n  static {\n    this.SplineTypes = SplineTypesEnum;\n  }\n  static {\n    this.Actions = SplineToolActions;\n  }\n  addNewAnnotation(evt) {\n    const eventDetail = evt.detail;\n    const {\n      currentPoints,\n      element\n    } = eventDetail;\n    const {\n      canvas: canvasPos\n    } = currentPoints;\n    const enabledElement = getEnabledElement(element);\n    const {\n      renderingEngine\n    } = enabledElement;\n    const annotation = this.createAnnotation(evt);\n    this.isDrawing = true;\n    this.addAnnotation(annotation, element);\n    const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n    this.editData = {\n      annotation,\n      viewportIdsToRender,\n      movingTextBox: false,\n      newAnnotation: true,\n      hasMoved: false,\n      lastCanvasPoint: canvasPos\n    };\n    this._activateDraw(element);\n    evt.preventDefault();\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n    return annotation;\n  }\n  cancel(element) {\n    if (!this.isDrawing) {\n      return;\n    }\n    this.isDrawing = false;\n    this._deactivateDraw(element);\n    this._deactivateModify(element);\n    resetElementCursor(element);\n    const {\n      annotation,\n      viewportIdsToRender,\n      newAnnotation\n    } = this.editData;\n    if (newAnnotation) {\n      removeAnnotation(annotation.annotationUID);\n    }\n    super.cancelAnnotation(annotation);\n    const enabledElement = getEnabledElement(element);\n    const {\n      renderingEngine\n    } = enabledElement;\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n    this.editData = null;\n    return annotation.annotationUID;\n  }\n  isContourSegmentationTool() {\n    return false;\n  }\n  renderAnnotationInstance(renderContext) {\n    const {\n      enabledElement,\n      targetId,\n      svgDrawingHelper,\n      annotationStyle\n    } = renderContext;\n    const {\n      viewport\n    } = enabledElement;\n    const {\n      worldToCanvas\n    } = viewport;\n    const {\n      element\n    } = viewport;\n    const annotation = renderContext.annotation;\n    const {\n      annotationUID,\n      data,\n      highlighted\n    } = annotation;\n    const {\n      handles\n    } = data;\n    const {\n      points: controlPoints,\n      activeHandleIndex\n    } = handles;\n    const newAnnotation = this.editData?.newAnnotation;\n    const {\n      lineWidth,\n      lineDash,\n      color,\n      locked: annotationLocked\n    } = annotationStyle;\n    const canvasCoordinates = controlPoints.map(p => worldToCanvas(p));\n    const {\n      drawPreviewEnabled\n    } = this.configuration.spline;\n    const splineType = annotation.data.spline.type;\n    const splineConfig = this._getSplineConfig(splineType);\n    const spline = this._updateSplineInstance(element, annotation);\n    const splinePolylineCanvas = spline.getPolylinePoints();\n    const splinePolylineWorld = [];\n    for (let i = 0, len = splinePolylineCanvas.length; i < len; i++) {\n      splinePolylineWorld.push(viewport.canvasToWorld(splinePolylineCanvas[i]));\n    }\n    data.contour.polyline = splinePolylineWorld;\n    super.renderAnnotationInstance(renderContext);\n    if (!data.cachedStats[targetId] || data.cachedStats[targetId].areaUnit == null) {\n      data.cachedStats[targetId] = {\n        Modality: null,\n        area: null,\n        areaUnit: null\n      };\n      this._calculateCachedStats(annotation, element);\n    } else if (annotation.invalidated) {\n      this._throttledCalculateCachedStats(annotation, element);\n    }\n    let activeHandleCanvasCoords;\n    if (!annotationLocked && !this.editData && activeHandleIndex !== null) {\n      activeHandleCanvasCoords = [canvasCoordinates[activeHandleIndex]];\n    }\n    if (activeHandleCanvasCoords || newAnnotation || highlighted) {\n      const handleGroupUID = '0';\n      drawHandlesSvg(svgDrawingHelper, annotationUID, handleGroupUID, canvasCoordinates, {\n        color,\n        lineWidth: Math.max(1, lineWidth),\n        handleRadius: '3'\n      });\n    }\n    if (drawPreviewEnabled && spline.numControlPoints > 1 && this.editData?.lastCanvasPoint && !spline.closed) {\n      const {\n        lastCanvasPoint\n      } = this.editData;\n      const previewPolylinePoints = spline.getPreviewPolylinePoints(lastCanvasPoint, SPLINE_CLICK_CLOSE_CURVE_DIST);\n      drawPolylineSvg(svgDrawingHelper, annotationUID, 'previewSplineChange', previewPolylinePoints, {\n        color: '#9EA0CA',\n        lineDash,\n        lineWidth: 1\n      });\n    }\n    if (splineConfig.showControlPointsConnectors) {\n      const controlPointsConnectors = [...canvasCoordinates];\n      if (spline.closed) {\n        controlPointsConnectors.push(canvasCoordinates[0]);\n      }\n      drawPolylineSvg(svgDrawingHelper, annotationUID, 'controlPointsConnectors', controlPointsConnectors, {\n        color: 'rgba(255, 255, 255, 0.5)',\n        lineWidth: 1\n      });\n    }\n    this._renderStats(annotation, viewport, svgDrawingHelper, annotationStyle.textbox);\n    annotation.invalidated = false;\n    return true;\n  }\n  createAnnotation(evt) {\n    const contourAnnotation = super.createAnnotation(evt);\n    const {\n      world: worldPos\n    } = evt.detail.currentPoints;\n    const {\n      type: splineType\n    } = this.configuration.spline;\n    const splineConfig = this._getSplineConfig(splineType);\n    const spline = new splineConfig.Class();\n    return utilities.deepMerge(contourAnnotation, {\n      data: {\n        handles: {\n          points: [[...worldPos]]\n        },\n        spline: {\n          type: splineConfig.type,\n          instance: spline,\n          resolution: splineConfig.resolution\n        },\n        cachedStats: {}\n      }\n    });\n  }\n  _deleteControlPointByIndex(element, annotation, controlPointIndex) {\n    const enabledElement = getEnabledElement(element);\n    const {\n      points: controlPoints\n    } = annotation.data.handles;\n    if (controlPoints.length === 3) {\n      removeAnnotation(annotation.annotationUID);\n    } else {\n      controlPoints.splice(controlPointIndex, 1);\n    }\n    const {\n      renderingEngine\n    } = enabledElement;\n    const viewportIdsToRender = getViewportIdsWithToolToRender(element, this.getToolName());\n    annotation.invalidated = true;\n    triggerAnnotationRenderForViewportIds(renderingEngine, viewportIdsToRender);\n  }\n  _getSplineConfig(type) {\n    const {\n      configuration: config\n    } = this;\n    const splineConfigs = config.spline.configuration;\n    return Object.assign({\n      type\n    }, DEFAULT_SPLINE_CONFIG, splineConfigs[type]);\n  }\n  _updateSplineInstance(element, annotation) {\n    const enabledElement = getEnabledElement(element);\n    const {\n      viewport\n    } = enabledElement;\n    const {\n      worldToCanvas\n    } = viewport;\n    const {\n      data\n    } = annotation;\n    const {\n      type: splineType,\n      instance: spline\n    } = annotation.data.spline;\n    const splineConfig = this._getSplineConfig(splineType);\n    const worldPoints = data.handles.points;\n    const canvasPoints = worldPoints.map(worldToCanvas);\n    spline.setControlPoints(canvasPoints);\n    spline.closed = !!data.contour.closed;\n    if (spline.resolution !== splineConfig.resolution) {\n      spline.resolution = parseInt(splineConfig.resolution);\n      annotation.invalidated = true;\n    }\n    if (spline instanceof CardinalSpline && !spline.fixedScale && splineConfig.scale !== undefined && spline.scale !== splineConfig.scale) {\n      spline.scale = splineConfig.scale;\n      annotation.invalidated = true;\n    }\n    return spline;\n  }\n}\nfunction defaultGetTextLines(data, targetId) {\n  const cachedVolumeStats = data.cachedStats[targetId];\n  const {\n    area,\n    isEmptyArea,\n    areaUnit\n  } = cachedVolumeStats;\n  const textLines = [];\n  if (area) {\n    const areaLine = isEmptyArea ? `Area: Oblique not supported` : `Area: ${roundNumber(area)} ${areaUnit}`;\n    textLines.push(areaLine);\n  }\n  return textLines;\n}\nSplineROITool.toolName = 'SplineROI';\nexport default SplineROITool;","map":{"version":3,"names":["utilities","getEnabledElement","eventTarget","triggerEvent","vec3","removeAnnotation","drawHandles","drawHandlesSvg","drawPolyline","drawPolylineSvg","drawLinkedTextBox","drawLinkedTextBoxSvg","state","Events","MouseBindings","KeyboardBindings","resetElementCursor","math","throttle","roundNumber","triggerAnnotationRenderForViewportIds","getCalibratedScale","getCalibratedAreaUnits","getViewportIdsWithToolToRender","getTextBoxCoordsCanvas","CardinalSpline","LinearSpline","CatmullRomSpline","BSpline","ContourSegmentationBaseTool","SPLINE_MIN_POINTS","SPLINE_CLICK_CLOSE_CURVE_DIST","DEFAULT_SPLINE_CONFIG","resolution","controlPointAdditionDistance","controlPointDeletionDistance","showControlPointsConnectors","controlPointAdditionEnabled","controlPointDeletionEnabled","SplineTypesEnum","SplineToolActions","SplineROITool","constructor","toolProps","defaultToolProps","supportedInteractionTypes","configuration","preventHandleOutsideImage","calculateStats","getTextLines","defaultGetTextLines","spline","Cardinal","Class","scale","CatmullRom","Linear","type","drawPreviewEnabled","lastControlPointDeletionKeys","actions","AddControlPoint","method","bindings","mouseButton","Primary","modifierKey","Shift","DeleteControlPoint","Ctrl","isHandleOutsideImage","isPointNearTool","element","annotation","canvasCoords","proximity","instance","data","isPointNearCurve","toolSelectedCallback","evt","eventDetail","detail","highlighted","viewportIdsToRender","getToolName","editData","movingTextBox","enabledElement","renderingEngine","_activateModify","preventDefault","handleSelectedCallback","handle","handleIndex","worldPosition","points","handles","findIndex","p","_endCallback","newAnnotation","activeHandleIndex","_deactivateModify","_deactivateDraw","annotationUID","eventType","ANNOTATION_COMPLETED","isDrawing","_keyDownCallback","key","deleteLastPoint","includes","length","cancel","controlPointIndex","_deleteControlPointByIndex","_mouseMoveCallback","lastCanvasPoint","currentPoints","canvas","_mouseDownCallback","doubleClick","MOUSE_DOUBLE_CLICK","contour","closed","canvasPoint","world","worldPoint","closeContour","addNewPoint","closestControlPoint","getClosestControlPointWithinDistance","index","push","invalidated","_dragCallback","deltaPoints","worldPosDelta","textBox","hasMoved","undefined","forEach","point","worldPos","triggerAnnotationModified","viewportId","renderingEngineId","ANNOTATION_MODIFIED","isInteractingWithTool","addEventListener","MOUSE_UP","MOUSE_DRAG","MOUSE_CLICK","TOUCH_END","TOUCH_DRAG","TOUCH_TAP","removeEventListener","_activateDraw","KEY_DOWN","MOUSE_MOVE","MOUSE_DOWN","_renderStats","viewport","svgDrawingHelper","textboxStyle","targetId","getTargetId","visibility","textLines","canvasCoordinates","map","worldToCanvas","canvasTextBoxCoords","canvasToWorld","textBoxPosition","textBoxUID","boundingBox","x","left","y","top","width","height","worldBoundingBox","topLeft","topRight","bottomLeft","bottomRight","addControlPointCallback","splineType","splineConfig","_getSplineConfig","maxDist","canvasPos","closestPointInfo","getClosestPoint","distance","addControlPointAtU","uValue","splice","deleteControlPointCallback","_calculateCachedStats","cachedStats","polyline","targetIds","Object","keys","i","image","getTargetIdImage","metadata","originalWorldPoint","deltaXPoint","deltaYPoint","deltaInX","deltaInY","area","calculateAreaOfPoints","Modality","areaUnit","_throttledCalculateCachedStats","trailing","SplineTypes","Actions","addNewAnnotation","createAnnotation","addAnnotation","cancelAnnotation","isContourSegmentationTool","renderAnnotationInstance","renderContext","annotationStyle","controlPoints","lineWidth","lineDash","color","locked","annotationLocked","_updateSplineInstance","splinePolylineCanvas","getPolylinePoints","splinePolylineWorld","len","activeHandleCanvasCoords","handleGroupUID","Math","max","handleRadius","numControlPoints","previewPolylinePoints","getPreviewPolylinePoints","controlPointsConnectors","textbox","contourAnnotation","deepMerge","config","splineConfigs","assign","worldPoints","canvasPoints","setControlPoints","parseInt","fixedScale","cachedVolumeStats","isEmptyArea","areaLine","toolName"],"sources":["../../../../src/tools/annotation/SplineROITool.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}