{"ast":null,"code":"import floodFill from '../../../../utilities/segmentation/floodFill';\nimport { triggerSegmentationDataModified } from '../../../../stateManagement/segmentation/triggerSegmentationEvents';\nimport StrategyCallbacks from '../../../../enums/StrategyCallbacks';\nexport default {\n  [StrategyCallbacks.OnInteractionEnd]: operationData => {\n    const {\n      previewVoxelManager: previewVoxelManager,\n      segmentationVoxelManager: segmentationVoxelManager,\n      strategySpecificConfiguration,\n      previewSegmentIndex,\n      segmentIndex\n    } = operationData;\n    if (!strategySpecificConfiguration.THRESHOLD || segmentIndex === null) {\n      return;\n    }\n    const clickedPoints = previewVoxelManager.getPoints();\n    if (!clickedPoints?.length) {\n      return;\n    }\n    if (previewSegmentIndex === undefined) {\n      return;\n    }\n    const boundsIJK = previewVoxelManager.getBoundsIJK().map((bound, i) => [Math.min(bound[0], ...clickedPoints.map(point => point[i])), Math.max(bound[1], ...clickedPoints.map(point => point[i]))]);\n    if (boundsIJK.find(it => it[0] < 0 || it[1] > 65535)) {\n      return;\n    }\n    const floodedSet = new Set();\n    const getter = (i, j, k) => {\n      if (i < boundsIJK[0][0] || i > boundsIJK[0][1] || j < boundsIJK[1][0] || j > boundsIJK[1][1] || k < boundsIJK[2][0] || k > boundsIJK[2][1]) {\n        return -1;\n      }\n      const index = segmentationVoxelManager.toIndex([i, j, k]);\n      if (floodedSet.has(index)) {\n        return -2;\n      }\n      const oldVal = segmentationVoxelManager.getAtIndex(index);\n      const isIn = oldVal === previewSegmentIndex || oldVal === segmentIndex ? 1 : 0;\n      if (!isIn) {\n        segmentationVoxelManager.addPoint(index);\n      }\n      return isIn;\n    };\n    let floodedCount = 0;\n    const onFlood = (i, j, k) => {\n      const index = segmentationVoxelManager.toIndex([i, j, k]);\n      if (floodedSet.has(index)) {\n        return;\n      }\n      previewVoxelManager.setAtIJK(i, j, k, previewSegmentIndex);\n      floodedSet.add(index);\n      floodedCount++;\n    };\n    clickedPoints.forEach((clickedPoint, index) => {\n      if (getter(...clickedPoint) === 1) {\n        floodFill(getter, clickedPoint, {\n          onFlood,\n          diagonals: true\n        });\n      }\n    });\n    let clearedCount = 0;\n    let previewCount = 0;\n    const callback = ({\n      index,\n      pointIJK,\n      value: trackValue\n    }) => {\n      const value = segmentationVoxelManager.getAtIndex(index);\n      if (floodedSet.has(index)) {\n        previewCount++;\n        const newValue = trackValue === segmentIndex ? segmentIndex : previewSegmentIndex;\n        previewVoxelManager.setAtIJKPoint(pointIJK, newValue);\n      } else if (value === previewSegmentIndex) {\n        clearedCount++;\n        const newValue = trackValue ?? 0;\n        previewVoxelManager.setAtIJKPoint(pointIJK, newValue);\n      }\n    };\n    previewVoxelManager.forEach(callback, {});\n    if (floodedCount - previewCount !== 0) {\n      console.warn('There were flooded=', floodedCount, 'cleared=', clearedCount, 'preview count=', previewCount, 'not handled', floodedCount - previewCount);\n    }\n    const islandMap = new Set(segmentationVoxelManager.points || []);\n    floodedSet.clear();\n    for (const index of islandMap.keys()) {\n      if (floodedSet.has(index)) {\n        continue;\n      }\n      let isInternal = true;\n      const internalSet = new Set();\n      const onFloodInternal = (i, j, k) => {\n        const floodIndex = previewVoxelManager.toIndex([i, j, k]);\n        floodedSet.add(floodIndex);\n        if (boundsIJK[0][0] !== boundsIJK[0][1] && (i === boundsIJK[0][0] || i === boundsIJK[0][1]) || boundsIJK[1][0] !== boundsIJK[1][1] && (j === boundsIJK[1][0] || j === boundsIJK[1][1]) || boundsIJK[2][0] !== boundsIJK[2][1] && (k === boundsIJK[2][0] || k === boundsIJK[2][1])) {\n          isInternal = false;\n        }\n        if (isInternal) {\n          internalSet.add(floodIndex);\n        }\n      };\n      const pointIJK = previewVoxelManager.toIJK(index);\n      if (getter(...pointIJK) !== 0) {\n        continue;\n      }\n      floodFill(getter, pointIJK, {\n        onFlood: onFloodInternal,\n        diagonals: false\n      });\n      if (isInternal) {\n        for (const index of internalSet) {\n          previewVoxelManager.setAtIndex(index, previewSegmentIndex);\n        }\n      }\n    }\n    triggerSegmentationDataModified(operationData.segmentationId, previewVoxelManager.getArrayOfSlices());\n  }\n};","map":{"version":3,"names":["floodFill","triggerSegmentationDataModified","StrategyCallbacks","OnInteractionEnd","operationData","previewVoxelManager","segmentationVoxelManager","strategySpecificConfiguration","previewSegmentIndex","segmentIndex","THRESHOLD","clickedPoints","getPoints","length","undefined","boundsIJK","getBoundsIJK","map","bound","i","Math","min","point","max","find","it","floodedSet","Set","getter","j","k","index","toIndex","has","oldVal","getAtIndex","isIn","addPoint","floodedCount","onFlood","setAtIJK","add","forEach","clickedPoint","diagonals","clearedCount","previewCount","callback","pointIJK","value","trackValue","newValue","setAtIJKPoint","console","warn","islandMap","points","clear","keys","isInternal","internalSet","onFloodInternal","floodIndex","toIJK","setAtIndex","segmentationId","getArrayOfSlices"],"sources":["../../../../../../src/tools/segmentation/strategies/compositions/islandRemoval.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}