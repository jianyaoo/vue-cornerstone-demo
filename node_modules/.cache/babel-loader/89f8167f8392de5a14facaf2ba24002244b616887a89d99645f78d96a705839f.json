{"ast":null,"code":"import macro from '@kitware/vtk.js/macros';\nimport vtkCamera from '@kitware/vtk.js/Rendering/Core/Camera';\nimport vtkMath from '@kitware/vtk.js/Common/Core/Math';\nimport { vec3, mat4 } from 'gl-matrix';\nconst DEFAULT_VALUES = {\n  isPerformingCoordinateTransformation: false\n};\nfunction extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n  vtkCamera.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['isPerformingCoordinateTransformation']);\n  vtkSlabCamera(publicAPI, model);\n}\nconst newInstance = macro.newInstance(extend, 'vtkSlabCamera');\nfunction vtkSlabCamera(publicAPI, model) {\n  model.classHierarchy.push('vtkSlabCamera');\n  const tmpMatrix = mat4.identity(new Float64Array(16));\n  const tmpvec1 = new Float64Array(3);\n  publicAPI.getProjectionMatrix = (aspect, nearz, farz) => {\n    const result = mat4.create();\n    if (model.projectionMatrix) {\n      const scale = 1 / model.physicalScale;\n      vec3.set(tmpvec1, scale, scale, scale);\n      mat4.copy(result, model.projectionMatrix);\n      mat4.scale(result, result, tmpvec1);\n      mat4.transpose(result, result);\n      return result;\n    }\n    mat4.identity(tmpMatrix);\n    let cRange0 = model.clippingRange[0];\n    let cRange1 = model.clippingRange[1];\n    if (model.isPerformingCoordinateTransformation) {\n      cRange0 = model.distance;\n      cRange1 = model.distance + 0.1;\n    }\n    const cWidth = cRange1 - cRange0;\n    const cRange = [cRange0 + (nearz + 1) * cWidth / 2.0, cRange0 + (farz + 1) * cWidth / 2.0];\n    if (model.parallelProjection) {\n      const width = model.parallelScale * aspect;\n      const height = model.parallelScale;\n      const xmin = (model.windowCenter[0] - 1.0) * width;\n      const xmax = (model.windowCenter[0] + 1.0) * width;\n      const ymin = (model.windowCenter[1] - 1.0) * height;\n      const ymax = (model.windowCenter[1] + 1.0) * height;\n      mat4.ortho(tmpMatrix, xmin, xmax, ymin, ymax, cRange[0], cRange[1]);\n      mat4.transpose(tmpMatrix, tmpMatrix);\n    } else if (model.useOffAxisProjection) {\n      throw new Error('Off-Axis projection is not supported at this time');\n    } else {\n      const tmp = Math.tan(vtkMath.radiansFromDegrees(model.viewAngle) / 2.0);\n      let width;\n      let height;\n      if (model.useHorizontalViewAngle === true) {\n        width = cRange0 * tmp;\n        height = cRange0 * tmp / aspect;\n      } else {\n        width = cRange0 * tmp * aspect;\n        height = cRange0 * tmp;\n      }\n      const xmin = (model.windowCenter[0] - 1.0) * width;\n      const xmax = (model.windowCenter[0] + 1.0) * width;\n      const ymin = (model.windowCenter[1] - 1.0) * height;\n      const ymax = (model.windowCenter[1] + 1.0) * height;\n      const znear = cRange[0];\n      const zfar = cRange[1];\n      tmpMatrix[0] = 2.0 * znear / (xmax - xmin);\n      tmpMatrix[5] = 2.0 * znear / (ymax - ymin);\n      tmpMatrix[2] = (xmin + xmax) / (xmax - xmin);\n      tmpMatrix[6] = (ymin + ymax) / (ymax - ymin);\n      tmpMatrix[10] = -(znear + zfar) / (zfar - znear);\n      tmpMatrix[14] = -1.0;\n      tmpMatrix[11] = -2.0 * znear * zfar / (zfar - znear);\n      tmpMatrix[15] = 0.0;\n    }\n    mat4.copy(result, tmpMatrix);\n    return result;\n  };\n}\nexport default {\n  newInstance,\n  extend\n};\nexport { newInstance, extend };","map":{"version":3,"names":["macro","vtkCamera","vtkMath","vec3","mat4","DEFAULT_VALUES","isPerformingCoordinateTransformation","extend","publicAPI","model","initialValues","Object","assign","setGet","vtkSlabCamera","newInstance","classHierarchy","push","tmpMatrix","identity","Float64Array","tmpvec1","getProjectionMatrix","aspect","nearz","farz","result","create","projectionMatrix","scale","physicalScale","set","copy","transpose","cRange0","clippingRange","cRange1","distance","cWidth","cRange","parallelProjection","width","parallelScale","height","xmin","windowCenter","xmax","ymin","ymax","ortho","useOffAxisProjection","Error","tmp","Math","tan","radiansFromDegrees","viewAngle","useHorizontalViewAngle","znear","zfar"],"sources":["../../../../src/RenderingEngine/vtkClasses/vtkSlabCamera.ts"],"sourcesContent":[null],"mappings":"AAAA,OAAOA,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,SAAS,MAAM,uCAAuC;AAC7D,OAAOC,OAAO,MAAM,kCAAkC;AACtD,SAASC,IAAI,EAAEC,IAAI,QAAQ,WAAW;AA0uBtC,MAAMC,cAAc,GAAG;EACrBC,oCAAoC,EAAE;CACvC;AASD,SAASC,MAAMA,CACbC,SAAc,EACdC,KAAU,EACVC,aAAA,GAAsC,EAAE;EAExCC,MAAM,CAACC,MAAM,CAACH,KAAK,EAAEJ,cAAc,EAAEK,aAAa,CAAC;EAEnDT,SAAS,CAACM,MAAM,CAACC,SAAS,EAAEC,KAAK,EAAEC,aAAa,CAAC;EAEjDV,KAAK,CAACa,MAAM,CAACL,SAAS,EAAEC,KAAK,EAAE,CAAC,sCAAsC,CAAC,CAAC;EAGxEK,aAAa,CAACN,SAAS,EAAEC,KAAK,CAAC;AACjC;AAQA,MAAMM,WAAW,GACff,KAAK,CAACe,WAAW,CAACR,MAAM,EAAE,eAAe,CAAC;AAsB5C,SAASO,aAAaA,CAACN,SAAS,EAAEC,KAAK;EACrCA,KAAK,CAACO,cAAc,CAACC,IAAI,CAAC,eAAe,CAAC;EAG1C,MAAMC,SAAS,GAAGd,IAAI,CAACe,QAAQ,CAAC,IAAIC,YAAY,CAAC,EAAE,CAAoB,CAAC;EACxE,MAAMC,OAAO,GAAG,IAAID,YAAY,CAAC,CAAC,CAAoB;EAOtDZ,SAAS,CAACc,mBAAmB,GAAG,CAACC,MAAM,EAAEC,KAAK,EAAEC,IAAI,KAAI;IACtD,MAAMC,MAAM,GAAGtB,IAAI,CAACuB,MAAM,EAAE;IAE5B,IAAIlB,KAAK,CAACmB,gBAAgB,EAAE;MAC1B,MAAMC,KAAK,GAAG,CAAC,GAAGpB,KAAK,CAACqB,aAAa;MACrC3B,IAAI,CAAC4B,GAAG,CAACV,OAAO,EAAEQ,KAAK,EAAEA,KAAK,EAAEA,KAAK,CAAC;MAEtCzB,IAAI,CAAC4B,IAAI,CAACN,MAAM,EAAEjB,KAAK,CAACmB,gBAAgB,CAAC;MACzCxB,IAAI,CAACyB,KAAK,CAACH,MAAM,EAAEA,MAAM,EAAEL,OAAO,CAAC;MACnCjB,IAAI,CAAC6B,SAAS,CAACP,MAAM,EAAEA,MAAM,CAAC;MAC9B,OAAOA,MAAM;;IAGftB,IAAI,CAACe,QAAQ,CAACD,SAAS,CAAC;IAExB,IAAIgB,OAAO,GAAGzB,KAAK,CAAC0B,aAAa,CAAC,CAAC,CAAC;IACpC,IAAIC,OAAO,GAAG3B,KAAK,CAAC0B,aAAa,CAAC,CAAC,CAAC;IACpC,IAAI1B,KAAK,CAACH,oCAAoC,EAAE;MAsB9C4B,OAAO,GAAGzB,KAAK,CAAC4B,QAAQ;MACxBD,OAAO,GAAG3B,KAAK,CAAC4B,QAAQ,GAAG,GAAG;;IAGhC,MAAMC,MAAM,GAAGF,OAAO,GAAGF,OAAO;IAChC,MAAMK,MAAM,GAAG,CACbL,OAAO,GAAI,CAACV,KAAK,GAAG,CAAC,IAAIc,MAAM,GAAI,GAAG,EACtCJ,OAAO,GAAI,CAACT,IAAI,GAAG,CAAC,IAAIa,MAAM,GAAI,GAAG,CACtC;IAED,IAAI7B,KAAK,CAAC+B,kBAAkB,EAAE;MAE5B,MAAMC,KAAK,GAAGhC,KAAK,CAACiC,aAAa,GAAGnB,MAAM;MAC1C,MAAMoB,MAAM,GAAGlC,KAAK,CAACiC,aAAa;MAElC,MAAME,IAAI,GAAG,CAACnC,KAAK,CAACoC,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG,IAAIJ,KAAK;MAClD,MAAMK,IAAI,GAAG,CAACrC,KAAK,CAACoC,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG,IAAIJ,KAAK;MAClD,MAAMM,IAAI,GAAG,CAACtC,KAAK,CAACoC,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG,IAAIF,MAAM;MACnD,MAAMK,IAAI,GAAG,CAACvC,KAAK,CAACoC,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG,IAAIF,MAAM;MAEnDvC,IAAI,CAAC6C,KAAK,CAAC/B,SAAS,EAAE0B,IAAI,EAAEE,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAET,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC;MACnEnC,IAAI,CAAC6B,SAAS,CAACf,SAAS,EAAEA,SAAS,CAAC;KACrC,MAAM,IAAIT,KAAK,CAACyC,oBAAoB,EAAE;MACrC,MAAM,IAAIC,KAAK,CAAC,mDAAmD,CAAC;KACrE,MAAM;MACL,MAAMC,GAAG,GAAGC,IAAI,CAACC,GAAG,CAACpD,OAAO,CAACqD,kBAAkB,CAAC9C,KAAK,CAAC+C,SAAS,CAAC,GAAG,GAAG,CAAC;MACvE,IAAIf,KAAK;MACT,IAAIE,MAAM;MACV,IAAIlC,KAAK,CAACgD,sBAAsB,KAAK,IAAI,EAAE;QACzChB,KAAK,GAAGP,OAAO,GAAGkB,GAAG;QACrBT,MAAM,GAAIT,OAAO,GAAGkB,GAAG,GAAI7B,MAAM;OAClC,MAAM;QACLkB,KAAK,GAAGP,OAAO,GAAGkB,GAAG,GAAG7B,MAAM;QAC9BoB,MAAM,GAAGT,OAAO,GAAGkB,GAAG;;MAGxB,MAAMR,IAAI,GAAG,CAACnC,KAAK,CAACoC,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG,IAAIJ,KAAK;MAClD,MAAMK,IAAI,GAAG,CAACrC,KAAK,CAACoC,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG,IAAIJ,KAAK;MAClD,MAAMM,IAAI,GAAG,CAACtC,KAAK,CAACoC,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG,IAAIF,MAAM;MACnD,MAAMK,IAAI,GAAG,CAACvC,KAAK,CAACoC,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG,IAAIF,MAAM;MACnD,MAAMe,KAAK,GAAGnB,MAAM,CAAC,CAAC,CAAC;MACvB,MAAMoB,IAAI,GAAGpB,MAAM,CAAC,CAAC,CAAC;MAEtBrB,SAAS,CAAC,CAAC,CAAC,GAAI,GAAG,GAAGwC,KAAK,IAAKZ,IAAI,GAAGF,IAAI,CAAC;MAC5C1B,SAAS,CAAC,CAAC,CAAC,GAAI,GAAG,GAAGwC,KAAK,IAAKV,IAAI,GAAGD,IAAI,CAAC;MAC5C7B,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC0B,IAAI,GAAGE,IAAI,KAAKA,IAAI,GAAGF,IAAI,CAAC;MAC5C1B,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC6B,IAAI,GAAGC,IAAI,KAAKA,IAAI,GAAGD,IAAI,CAAC;MAC5C7B,SAAS,CAAC,EAAE,CAAC,GAAG,EAAEwC,KAAK,GAAGC,IAAI,CAAC,IAAIA,IAAI,GAAGD,KAAK,CAAC;MAChDxC,SAAS,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG;MACpBA,SAAS,CAAC,EAAE,CAAC,GAAI,CAAC,GAAG,GAAGwC,KAAK,GAAGC,IAAI,IAAKA,IAAI,GAAGD,KAAK,CAAC;MACtDxC,SAAS,CAAC,EAAE,CAAC,GAAG,GAAG;;IAGrBd,IAAI,CAAC4B,IAAI,CAACN,MAAM,EAAER,SAAS,CAAC;IAE5B,OAAOQ,MAAM;EACf,CAAC;AACH;AAQA,eAAe;EAAEX,WAAW;EAAER;AAAM,CAAE;AACtC,SAASQ,WAAW,EAAER,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}