{"ast":null,"code":"import _getHash from './_getHash';\nimport setNewAttributesIfValid from './setNewAttributesIfValid';\nimport setAttributesIfNecessary from './setAttributesIfNecessary';\nexport default function drawLine(svgDrawingHelper, annotationUID, lineUID, start, end, options = {}, dataId = '') {\n  if (isNaN(start[0]) || isNaN(start[1]) || isNaN(end[0]) || isNaN(end[1])) {\n    return;\n  }\n  const {\n    color,\n    width,\n    lineWidth,\n    lineDash,\n    shadow\n  } = Object.assign({\n    color: 'dodgerblue',\n    width: '2',\n    lineWidth: undefined,\n    lineDash: undefined,\n    shadow: undefined\n  }, options);\n  const strokeWidth = lineWidth || width;\n  const svgns = 'http://www.w3.org/2000/svg';\n  const svgNodeHash = _getHash(annotationUID, 'line', lineUID);\n  const existingLine = svgDrawingHelper.getSvgNode(svgNodeHash);\n  const dropShadowStyle = shadow ? `filter:url(#shadow-${svgDrawingHelper.svgLayerElement.id});` : '';\n  const attributes = {\n    x1: `${start[0]}`,\n    y1: `${start[1]}`,\n    x2: `${end[0]}`,\n    y2: `${end[1]}`,\n    stroke: color,\n    style: dropShadowStyle,\n    'stroke-width': strokeWidth,\n    'stroke-dasharray': lineDash\n  };\n  if (existingLine) {\n    setAttributesIfNecessary(attributes, existingLine);\n    svgDrawingHelper.setNodeTouched(svgNodeHash);\n  } else {\n    const newLine = document.createElementNS(svgns, 'line');\n    if (dataId !== '') {\n      newLine.setAttribute('data-id', dataId);\n    }\n    setNewAttributesIfValid(attributes, newLine);\n    svgDrawingHelper.appendNode(newLine, svgNodeHash);\n  }\n}","map":{"version":3,"names":["_getHash","setNewAttributesIfValid","setAttributesIfNecessary","drawLine","svgDrawingHelper","annotationUID","lineUID","start","end","options","dataId","isNaN","color","width","lineWidth","lineDash","shadow","Object","assign","undefined","strokeWidth","svgns","svgNodeHash","existingLine","getSvgNode","dropShadowStyle","svgLayerElement","id","attributes","x1","y1","x2","y2","stroke","style","setNodeTouched","newLine","document","createElementNS","setAttribute","appendNode"],"sources":["../../../src/drawingSvg/drawLine.ts"],"sourcesContent":[null],"mappings":"AAEA,OAAOA,QAAQ,MAAM,YAAY;AACjC,OAAOC,uBAAuB,MAAM,2BAA2B;AAC/D,OAAOC,wBAAwB,MAAM,4BAA4B;AAGjE,eAAc,SAAUC,QAAQA,CAC9BC,gBAAkC,EAClCC,aAAqB,EACrBC,OAAe,EACfC,KAAmB,EACnBC,GAAiB,EACjBC,OAAO,GAAG,EAAE,EACZC,MAAM,GAAG,EAAE;EAGX,IAAIC,KAAK,CAACJ,KAAK,CAAC,CAAC,CAAC,CAAC,IAAII,KAAK,CAACJ,KAAK,CAAC,CAAC,CAAC,CAAC,IAAII,KAAK,CAACH,GAAG,CAAC,CAAC,CAAC,CAAC,IAAIG,KAAK,CAACH,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;IACxE;;EAGF,MAAM;IAAEI,KAAK;IAAEC,KAAK;IAAEC,SAAS;IAAEC,QAAQ;IAAEC;EAAM,CAAE,GAAGC,MAAM,CAACC,MAAM,CACjE;IACEN,KAAK,EAAE,YAAY;IACnBC,KAAK,EAAE,GAAG;IACVC,SAAS,EAAEK,SAAS;IACpBJ,QAAQ,EAAEI,SAAS;IACnBH,MAAM,EAAEG;GACT,EACDV,OAAO,CACR;EAGD,MAAMW,WAAW,GAAGN,SAAS,IAAID,KAAK;EAEtC,MAAMQ,KAAK,GAAG,4BAA4B;EAC1C,MAAMC,WAAW,GAAGtB,QAAQ,CAACK,aAAa,EAAE,MAAM,EAAEC,OAAO,CAAC;EAC5D,MAAMiB,YAAY,GAAGnB,gBAAgB,CAACoB,UAAU,CAACF,WAAW,CAAC;EAC7D,MAAMG,eAAe,GAAGT,MAAM,GAC1B,sBAAsBZ,gBAAgB,CAACsB,eAAe,CAACC,EAAE,IAAI,GAC7D,EAAE;EAEN,MAAMC,UAAU,GAAG;IACjBC,EAAE,EAAE,GAAGtB,KAAK,CAAC,CAAC,CAAC,EAAE;IACjBuB,EAAE,EAAE,GAAGvB,KAAK,CAAC,CAAC,CAAC,EAAE;IACjBwB,EAAE,EAAE,GAAGvB,GAAG,CAAC,CAAC,CAAC,EAAE;IACfwB,EAAE,EAAE,GAAGxB,GAAG,CAAC,CAAC,CAAC,EAAE;IACfyB,MAAM,EAAErB,KAAK;IACbsB,KAAK,EAAET,eAAe;IACtB,cAAc,EAAEL,WAAW;IAC3B,kBAAkB,EAAEL;GACrB;EAED,IAAIQ,YAAY,EAAE;IAEhBrB,wBAAwB,CAAC0B,UAAU,EAAEL,YAAY,CAAC;IAElDnB,gBAAgB,CAAC+B,cAAc,CAACb,WAAW,CAAC;GAC7C,MAAM;IACL,MAAMc,OAAO,GAAGC,QAAQ,CAACC,eAAe,CAACjB,KAAK,EAAE,MAAM,CAAC;IAEvD,IAAIX,MAAM,KAAK,EAAE,EAAE;MACjB0B,OAAO,CAACG,YAAY,CAAC,SAAS,EAAE7B,MAAM,CAAC;;IAGzCT,uBAAuB,CAAC2B,UAAU,EAAEQ,OAAO,CAAC;IAE5ChC,gBAAgB,CAACoC,UAAU,CAACJ,OAAO,EAAEd,WAAW,CAAC;;AAErD"},"metadata":{},"sourceType":"module","externalDependencies":[]}