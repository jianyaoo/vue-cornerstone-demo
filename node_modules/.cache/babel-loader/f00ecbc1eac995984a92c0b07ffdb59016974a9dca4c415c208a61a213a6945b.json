{"ast":null,"code":"import { imageLoader, Enums, eventTarget, imageLoadPoolManager, cache, getConfiguration as getCoreConfiguration } from '@cornerstonejs/core';\nimport { addToolState, getToolState } from './state';\nimport { getStackData, requestType, priority, clearFromImageIds, getPromiseRemovedHandler } from './stackPrefetchUtils';\nimport { roundNumber } from '../../utilities';\nlet configuration = {\n  maxImagesToPrefetch: Infinity,\n  minBefore: 2,\n  maxAfter: 2,\n  directionExtraImages: 10,\n  preserveExistingPool: false\n};\nlet resetPrefetchTimeout;\nconst resetPrefetchDelay = 5;\nconst enable = element => {\n  const stack = getStackData(element);\n  if (!stack || !stack.imageIds || stack.imageIds.length === 0) {\n    console.warn('CornerstoneTools.stackPrefetch: No images in stack.');\n    return;\n  }\n  updateToolState(element);\n  prefetch(element);\n  element.removeEventListener(Enums.Events.STACK_NEW_IMAGE, onImageUpdated);\n  element.addEventListener(Enums.Events.STACK_NEW_IMAGE, onImageUpdated);\n  const promiseRemovedHandler = getPromiseRemovedHandler(element);\n  eventTarget.removeEventListener(Enums.Events.IMAGE_CACHE_IMAGE_REMOVED, promiseRemovedHandler);\n  eventTarget.addEventListener(Enums.Events.IMAGE_CACHE_IMAGE_REMOVED, promiseRemovedHandler);\n};\nfunction prefetch(element) {\n  const stack = getStackData(element);\n  if (!stack?.imageIds?.length) {\n    console.warn('CornerstoneTools.stackPrefetch: No images in stack.');\n    return;\n  }\n  const stackPrefetchData = getToolState(element);\n  if (!stackPrefetchData) {\n    return;\n  }\n  const stackPrefetch = stackPrefetchData || {};\n  stackPrefetch.enabled &&= stackPrefetch.indicesToRequest?.length;\n  if (stackPrefetch.enabled === false) {\n    return;\n  }\n  function removeFromList(imageIdIndex) {\n    const index = stackPrefetch.indicesToRequest.indexOf(imageIdIndex);\n    if (index > -1) {\n      stackPrefetch.indicesToRequest.splice(index, 1);\n    }\n  }\n  const indicesToRequestCopy = stackPrefetch.indicesToRequest.slice();\n  const {\n    currentImageIdIndex\n  } = stack;\n  indicesToRequestCopy.forEach(imageIdIndex => {\n    const imageId = stack.imageIds[imageIdIndex];\n    if (!imageId) {\n      return;\n    }\n    const distance = Math.abs(currentImageIdIndex - imageIdIndex);\n    const imageCached = distance < 6 ? cache.getImageLoadObject(imageId) : cache.isLoaded(imageId);\n    if (imageCached) {\n      removeFromList(imageIdIndex);\n    }\n  });\n  if (!stackPrefetch.indicesToRequest.length) {\n    return;\n  }\n  if (!configuration.preserveExistingPool) {\n    imageLoadPoolManager.filterRequests(clearFromImageIds(stack));\n  }\n  function doneCallback(imageId) {\n    const imageIdIndex = stack.imageIds.indexOf(imageId);\n    removeFromList(imageIdIndex);\n    const image = cache.getCachedImageBasedOnImageURI(imageId);\n    const {\n      stats\n    } = stackPrefetch;\n    const decodeTimeInMS = image?.image?.decodeTimeInMS || 0;\n    if (decodeTimeInMS) {\n      stats.imageIds.set(imageId, decodeTimeInMS);\n      stats.decodeTimeInMS += decodeTimeInMS;\n      const loadTimeInMS = image?.image?.loadTimeInMS || 0;\n      stats.loadTimeInMS += loadTimeInMS;\n    }\n    if (!stackPrefetch.indicesToRequest.length) {\n      if (image?.sizeInBytes) {\n        const {\n          sizeInBytes\n        } = image;\n        const usage = cache.getMaxCacheSize() / 4 / sizeInBytes;\n        if (!stackPrefetch.cacheFill) {\n          stats.initialTime = Date.now() - stats.start;\n          stats.initialSize = stats.imageIds.size;\n          updateToolState(element, usage);\n          prefetch(element);\n        } else if (stats.imageIds.size) {\n          stats.fillTime = Date.now() - stats.start;\n          const {\n            size\n          } = stats.imageIds;\n          stats.fillSize = size;\n          console.log('Done cache fill', stats.fillTime, 'ms', size, 'items', 'average total time', roundNumber(stats.fillTime / size), 'ms', 'average load', roundNumber(stats.loadTimeInMS / size), 'ms', 'average decode', roundNumber(stats.decodeTimeInMS / size), 'ms');\n        }\n      }\n    }\n  }\n  const requestFn = (imageId, options) => imageLoader.loadAndCacheImage(imageId, options).then(() => doneCallback(imageId));\n  const {\n    useNorm16Texture\n  } = getCoreConfiguration().rendering;\n  indicesToRequestCopy.forEach(imageIdIndex => {\n    const imageId = stack.imageIds[imageIdIndex];\n    const options = {\n      targetBuffer: {\n        type: useNorm16Texture ? undefined : 'Float32Array'\n      },\n      preScale: {\n        enabled: true\n      },\n      requestType\n    };\n    imageLoadPoolManager.addRequest(requestFn.bind(null, imageId, options), requestType, {\n      imageId\n    }, priority);\n  });\n}\nfunction onImageUpdated(e) {\n  clearTimeout(resetPrefetchTimeout);\n  resetPrefetchTimeout = setTimeout(function () {\n    const element = e.target;\n    try {\n      updateToolState(element);\n      prefetch(element);\n    } catch (error) {\n      return;\n    }\n  }, resetPrefetchDelay);\n}\nconst signum = x => x < 0 ? -1 : 1;\nconst updateToolState = (element, usage) => {\n  const stack = getStackData(element);\n  if (!stack || !stack.imageIds || stack.imageIds.length === 0) {\n    console.warn('CornerstoneTools.stackPrefetch: No images in stack.');\n    return;\n  }\n  const {\n    currentImageIdIndex\n  } = stack;\n  let {\n    maxAfter = 2,\n    minBefore = 2\n  } = configuration;\n  const {\n    directionExtraImages = 10\n  } = configuration;\n  const stackPrefetchData = getToolState(element) || {\n    indicesToRequest: [],\n    currentImageIdIndex,\n    stackCount: 0,\n    enabled: true,\n    direction: 1,\n    stats: {\n      start: Date.now(),\n      imageIds: new Map(),\n      decodeTimeInMS: 0,\n      loadTimeInMS: 0,\n      totalBytes: 0\n    }\n  };\n  const delta = currentImageIdIndex - stackPrefetchData.currentImageIdIndex;\n  stackPrefetchData.direction = signum(delta);\n  stackPrefetchData.currentImageIdIndex = currentImageIdIndex;\n  stackPrefetchData.enabled = true;\n  if (stackPrefetchData.stackCount < 100) {\n    stackPrefetchData.stackCount += directionExtraImages;\n  }\n  if (Math.abs(delta) > maxAfter || !delta) {\n    stackPrefetchData.stackCount = 0;\n    if (usage) {\n      const positionFraction = currentImageIdIndex / stack.imageIds.length;\n      minBefore = Math.ceil(usage * positionFraction);\n      maxAfter = Math.ceil(usage * (1 - positionFraction));\n      stackPrefetchData.cacheFill = true;\n    } else {\n      stackPrefetchData.cacheFill = false;\n    }\n  } else if (delta < 0) {\n    minBefore += stackPrefetchData.stackCount;\n    maxAfter = 0;\n  } else {\n    maxAfter += stackPrefetchData.stackCount;\n    minBefore = 0;\n  }\n  const minIndex = Math.max(0, currentImageIdIndex - minBefore);\n  const maxIndex = Math.min(stack.imageIds.length - 1, currentImageIdIndex + maxAfter);\n  const indicesToRequest = [];\n  for (let i = currentImageIdIndex + 1; i <= maxIndex; i++) {\n    indicesToRequest.push(i);\n  }\n  for (let i = currentImageIdIndex - 1; i >= minIndex; i--) {\n    indicesToRequest.push(i);\n  }\n  stackPrefetchData.indicesToRequest = indicesToRequest;\n  addToolState(element, stackPrefetchData);\n};\nfunction disable(element) {\n  clearTimeout(resetPrefetchTimeout);\n  element.removeEventListener(Enums.Events.STACK_NEW_IMAGE, onImageUpdated);\n  const promiseRemovedHandler = getPromiseRemovedHandler(element);\n  eventTarget.removeEventListener(Enums.Events.IMAGE_CACHE_IMAGE_REMOVED, promiseRemovedHandler);\n  const stackPrefetchData = getToolState(element);\n  if (stackPrefetchData && stackPrefetchData.data.length) {\n    stackPrefetchData.enabled = false;\n  }\n}\nfunction getConfiguration() {\n  return configuration;\n}\nfunction setConfiguration(config) {\n  configuration = config;\n}\nconst stackContextPrefetch = {\n  enable,\n  disable,\n  getConfiguration,\n  setConfiguration\n};\nexport default stackContextPrefetch;","map":{"version":3,"names":["imageLoader","Enums","eventTarget","imageLoadPoolManager","cache","getConfiguration","getCoreConfiguration","addToolState","getToolState","getStackData","requestType","priority","clearFromImageIds","getPromiseRemovedHandler","roundNumber","configuration","maxImagesToPrefetch","Infinity","minBefore","maxAfter","directionExtraImages","preserveExistingPool","resetPrefetchTimeout","resetPrefetchDelay","enable","element","stack","imageIds","length","console","warn","updateToolState","prefetch","removeEventListener","Events","STACK_NEW_IMAGE","onImageUpdated","addEventListener","promiseRemovedHandler","IMAGE_CACHE_IMAGE_REMOVED","stackPrefetchData","stackPrefetch","enabled","indicesToRequest","removeFromList","imageIdIndex","index","indexOf","splice","indicesToRequestCopy","slice","currentImageIdIndex","forEach","imageId","distance","Math","abs","imageCached","getImageLoadObject","isLoaded","filterRequests","doneCallback","image","getCachedImageBasedOnImageURI","stats","decodeTimeInMS","set","loadTimeInMS","sizeInBytes","usage","getMaxCacheSize","cacheFill","initialTime","Date","now","start","initialSize","size","fillTime","fillSize","log","requestFn","options","loadAndCacheImage","then","useNorm16Texture","rendering","targetBuffer","type","undefined","preScale","addRequest","bind","e","clearTimeout","setTimeout","target","error","signum","x","stackCount","direction","Map","totalBytes","delta","positionFraction","ceil","minIndex","max","maxIndex","min","i","push","disable","data","setConfiguration","config","stackContextPrefetch"],"sources":["../../../../src/utilities/stackPrefetch/stackContextPrefetch.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}