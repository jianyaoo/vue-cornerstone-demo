"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.projectTo2D = exports.isPointInsidePolyline3D = exports.subtractPolylines = exports.mergePolylines = exports.pointCanProjectOnLine = exports.addCanvasPointsToArray = exports.pointsAreWithinCloseContourProximity = exports.getSubPixelSpacingAndXYDirections = exports.getClosestLineSegmentIntersection = exports.getLineSegmentIntersectionsCoordinates = exports.getLineSegmentIntersectionsIndexes = exports.getFirstLineSegmentIntersectionIndexes = exports.decimate = exports.intersectPolyline = exports.getNormal2 = exports.getNormal3 = exports.getWindingDirection = exports.getSignedArea = exports.getArea = exports.getAABB = exports.containsPoints = exports.containsPoint = exports.isClosed = void 0;
const isClosed_1 = __importDefault(require("./isClosed"));
exports.isClosed = isClosed_1.default;
const containsPoint_1 = __importDefault(require("./containsPoint"));
exports.containsPoint = containsPoint_1.default;
const containsPoints_1 = __importDefault(require("./containsPoints"));
exports.containsPoints = containsPoints_1.default;
const getAABB_1 = __importDefault(require("./getAABB"));
exports.getAABB = getAABB_1.default;
const getArea_1 = __importDefault(require("./getArea"));
exports.getArea = getArea_1.default;
const getSignedArea_1 = __importDefault(require("./getSignedArea"));
exports.getSignedArea = getSignedArea_1.default;
const getWindingDirection_1 = __importDefault(require("./getWindingDirection"));
exports.getWindingDirection = getWindingDirection_1.default;
const getNormal3_1 = __importDefault(require("./getNormal3"));
exports.getNormal3 = getNormal3_1.default;
const getNormal2_1 = __importDefault(require("./getNormal2"));
exports.getNormal2 = getNormal2_1.default;
const combinePolyline_1 = require("./combinePolyline");
Object.defineProperty(exports, "mergePolylines", { enumerable: true, get: function () { return combinePolyline_1.mergePolylines; } });
Object.defineProperty(exports, "subtractPolylines", { enumerable: true, get: function () { return combinePolyline_1.subtractPolylines; } });
const intersectPolyline_1 = __importDefault(require("./intersectPolyline"));
exports.intersectPolyline = intersectPolyline_1.default;
const decimate_1 = __importDefault(require("./decimate"));
exports.decimate = decimate_1.default;
const getFirstLineSegmentIntersectionIndexes_1 = __importDefault(require("./getFirstLineSegmentIntersectionIndexes"));
exports.getFirstLineSegmentIntersectionIndexes = getFirstLineSegmentIntersectionIndexes_1.default;
const getLineSegmentIntersectionsIndexes_1 = __importDefault(require("./getLineSegmentIntersectionsIndexes"));
exports.getLineSegmentIntersectionsIndexes = getLineSegmentIntersectionsIndexes_1.default;
const getLineSegmentIntersectionsCoordinates_1 = __importDefault(require("./getLineSegmentIntersectionsCoordinates"));
exports.getLineSegmentIntersectionsCoordinates = getLineSegmentIntersectionsCoordinates_1.default;
const getClosestLineSegmentIntersection_1 = __importDefault(require("./getClosestLineSegmentIntersection"));
exports.getClosestLineSegmentIntersection = getClosestLineSegmentIntersection_1.default;
const getSubPixelSpacingAndXYDirections_1 = __importDefault(require("./getSubPixelSpacingAndXYDirections"));
exports.getSubPixelSpacingAndXYDirections = getSubPixelSpacingAndXYDirections_1.default;
const pointsAreWithinCloseContourProximity_1 = __importDefault(require("./pointsAreWithinCloseContourProximity"));
exports.pointsAreWithinCloseContourProximity = pointsAreWithinCloseContourProximity_1.default;
const addCanvasPointsToArray_1 = __importDefault(require("./addCanvasPointsToArray"));
exports.addCanvasPointsToArray = addCanvasPointsToArray_1.default;
const pointCanProjectOnLine_1 = __importDefault(require("./pointCanProjectOnLine"));
exports.pointCanProjectOnLine = pointCanProjectOnLine_1.default;
const isPointInsidePolyline3D_1 = require("./isPointInsidePolyline3D");
Object.defineProperty(exports, "isPointInsidePolyline3D", { enumerable: true, get: function () { return isPointInsidePolyline3D_1.isPointInsidePolyline3D; } });
const projectTo2D_1 = require("./projectTo2D");
Object.defineProperty(exports, "projectTo2D", { enumerable: true, get: function () { return projectTo2D_1.projectTo2D; } });
//# sourceMappingURL=index.js.map