{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nfunction ptInArray(array, pt) {\n  let index = -1;\n  for (let i = 0; i < array.length; i++) {\n    if (isSamePoint(pt, array[i])) {\n      index = i;\n    }\n  }\n  return index;\n}\nfunction isSamePoint(ptA, ptB) {\n  if (ptA[0] == ptB[0] && ptA[1] == ptB[1] && ptA[2] == ptB[2]) {\n    return true;\n  } else {\n    return false;\n  }\n}\nfunction replacePointIndexReferences(linesArray, oldIndex, newIndex) {\n  for (let i = 0; i < linesArray.length; i++) {\n    const line = linesArray[i];\n    if (line.a == oldIndex) {\n      line.a = newIndex;\n    } else if (line.b == oldIndex) {\n      line.b = newIndex;\n    }\n  }\n}\nexport function removeDuplicatePoints(polyData, bypass = false) {\n  const points = polyData.getPoints();\n  const lines = polyData.getLines();\n  const pointsArray = [];\n  for (let i = 0; i < points.getNumberOfPoints(); i++) {\n    const pt = points.getPoint(i).slice();\n    pointsArray.push(pt);\n  }\n  const linesArray = [];\n  for (let i = 0; i < lines.getNumberOfCells(); i++) {\n    const cell = lines.getCell(i * 3).slice();\n    const a = cell[0];\n    const b = cell[1];\n    const line = {\n      a,\n      b\n    };\n    linesArray.push(line);\n  }\n  if (bypass) {\n    return {\n      points: pointsArray,\n      lines: linesArray\n    };\n  }\n  const newPoints = [];\n  for (let i = 0; i < pointsArray.length; i++) {\n    const pt = pointsArray[i];\n    let index = ptInArray(newPoints, pt);\n    if (index >= 0) {\n      replacePointIndexReferences(linesArray, i, index);\n    } else {\n      index = newPoints.length;\n      newPoints.push(pt);\n      replacePointIndexReferences(linesArray, i, index);\n    }\n  }\n  const newLines = [];\n  linesArray.forEach(line => {\n    if (line.a != line.b) {\n      newLines.push(line);\n    }\n  });\n  return {\n    points: newPoints,\n    lines: newLines\n  };\n}\nexport default {\n  removeDuplicatePoints\n};","map":{"version":3,"names":["ptInArray","array","pt","index","i","length","isSamePoint","ptA","ptB","replacePointIndexReferences","linesArray","oldIndex","newIndex","line","a","b","removeDuplicatePoints","polyData","bypass","points","getPoints","lines","getLines","pointsArray","getNumberOfPoints","getPoint","slice","push","getNumberOfCells","cell","getCell","newPoints","newLines","forEach"],"sources":["../../../../src/utilities/contours/mergePoints.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}