{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Events from '../enums/Events';\nimport renderingEngineCache from './renderingEngineCache';\nimport eventTarget from '../eventTarget';\nimport { triggerEvent, uuidv4 } from '../utilities';\nimport { vtkOffscreenMultiRenderWindow } from './vtkClasses';\nimport ViewportType from '../enums/ViewportType';\nimport VolumeViewport from './VolumeViewport';\nimport BaseVolumeViewport from './BaseVolumeViewport';\nimport StackViewport from './StackViewport';\nimport viewportTypeUsesCustomRenderingPipeline from './helpers/viewportTypeUsesCustomRenderingPipeline';\nimport getOrCreateCanvas from './helpers/getOrCreateCanvas';\nimport { getShouldUseCPURendering, isCornerstoneInitialized } from '../init';\nimport VideoViewport from './VideoViewport';\nimport viewportTypeToViewportClass from './helpers/viewportTypeToViewportClass';\nimport { OrientationAxis } from '../enums';\nimport VolumeViewport3D from './VolumeViewport3D';\nconst VIEWPORT_MIN_SIZE = 2;\nclass RenderingEngine {\n  constructor(id) {\n    this._needsRender = new Set();\n    this._animationFrameSet = false;\n    this._animationFrameHandle = null;\n    this.renderFrameOfReference = FrameOfReferenceUID => {\n      const viewports = this._getViewportsAsArray();\n      const viewportIdsWithSameFrameOfReferenceUID = viewports.map(vp => {\n        if (vp.getFrameOfReferenceUID() === FrameOfReferenceUID) {\n          return vp.id;\n        }\n      });\n      return this.renderViewports(viewportIdsWithSameFrameOfReferenceUID);\n    };\n    this._renderFlaggedViewports = () => {\n      this._throwIfDestroyed();\n      if (!this.useCPURendering) {\n        this.performVtkDrawCall();\n      }\n      const viewports = this._getViewportsAsArray();\n      const eventDetailArray = [];\n      for (let i = 0; i < viewports.length; i++) {\n        const viewport = viewports[i];\n        if (this._needsRender.has(viewport.id)) {\n          const eventDetail = this.renderViewportUsingCustomOrVtkPipeline(viewport);\n          eventDetailArray.push(eventDetail);\n          viewport.setRendered();\n          this._needsRender.delete(viewport.id);\n          if (this._needsRender.size === 0) {\n            break;\n          }\n        }\n      }\n      this._animationFrameSet = false;\n      this._animationFrameHandle = null;\n      eventDetailArray.forEach(eventDetail => {\n        if (!eventDetail?.element) {\n          return;\n        }\n        triggerEvent(eventDetail.element, Events.IMAGE_RENDERED, eventDetail);\n      });\n    };\n    this.id = id ? id : uuidv4();\n    this.useCPURendering = getShouldUseCPURendering();\n    renderingEngineCache.set(this);\n    if (!isCornerstoneInitialized()) {\n      throw new Error('@cornerstonejs/core is not initialized, run init() first');\n    }\n    if (!this.useCPURendering) {\n      this.offscreenMultiRenderWindow = vtkOffscreenMultiRenderWindow.newInstance();\n      this.offScreenCanvasContainer = document.createElement('div');\n      this.offscreenMultiRenderWindow.setContainer(this.offScreenCanvasContainer);\n    }\n    this._viewports = new Map();\n    this.hasBeenDestroyed = false;\n  }\n  enableElement(viewportInputEntry) {\n    const viewportInput = this._normalizeViewportInputEntry(viewportInputEntry);\n    this._throwIfDestroyed();\n    const {\n      element,\n      viewportId\n    } = viewportInput;\n    if (!element) {\n      throw new Error('No element provided');\n    }\n    const viewport = this.getViewport(viewportId);\n    if (viewport) {\n      console.log('Viewport already exists, disabling it first');\n      this.disableElement(viewportId);\n      console.log(`Viewport ${viewportId} disabled`);\n    }\n    const {\n      type\n    } = viewportInput;\n    const viewportUsesCustomRenderingPipeline = viewportTypeUsesCustomRenderingPipeline(type);\n    if (!this.useCPURendering && !viewportUsesCustomRenderingPipeline) {\n      this.enableVTKjsDrivenViewport(viewportInput);\n    } else {\n      this.addCustomViewport(viewportInput);\n    }\n    const canvas = getOrCreateCanvas(element);\n    const {\n      background\n    } = viewportInput.defaultOptions;\n    this.fillCanvasWithBackgroundColor(canvas, background);\n  }\n  disableElement(viewportId) {\n    this._throwIfDestroyed();\n    const viewport = this.getViewport(viewportId);\n    if (!viewport) {\n      console.warn(`viewport ${viewportId} does not exist`);\n      return;\n    }\n    this._resetViewport(viewport);\n    if (!viewportTypeUsesCustomRenderingPipeline(viewport.type) && !this.useCPURendering) {\n      this.offscreenMultiRenderWindow.removeRenderer(viewportId);\n    }\n    this._removeViewport(viewportId);\n    viewport.isDisabled = true;\n    this._needsRender.delete(viewportId);\n    const viewports = this.getViewports();\n    if (!viewports.length) {\n      this._clearAnimationFrame();\n    }\n  }\n  setViewports(publicViewportInputEntries) {\n    const viewportInputEntries = this._normalizeViewportInputEntries(publicViewportInputEntries);\n    this._throwIfDestroyed();\n    this._reset();\n    const vtkDrivenViewportInputEntries = [];\n    const customRenderingViewportInputEntries = [];\n    viewportInputEntries.forEach(vpie => {\n      if (!this.useCPURendering && !viewportTypeUsesCustomRenderingPipeline(vpie.type)) {\n        vtkDrivenViewportInputEntries.push(vpie);\n      } else {\n        customRenderingViewportInputEntries.push(vpie);\n      }\n    });\n    this.setVtkjsDrivenViewports(vtkDrivenViewportInputEntries);\n    this.setCustomViewports(customRenderingViewportInputEntries);\n  }\n  resize(immediate = true, keepCamera = true) {\n    this._throwIfDestroyed();\n    const viewports = this._getViewportsAsArray();\n    const vtkDrivenViewports = [];\n    const customRenderingViewports = [];\n    viewports.forEach(vpie => {\n      if (!viewportTypeUsesCustomRenderingPipeline(vpie.type)) {\n        vtkDrivenViewports.push(vpie);\n      } else {\n        customRenderingViewports.push(vpie);\n      }\n    });\n    if (vtkDrivenViewports.length) {\n      this._resizeVTKViewports(vtkDrivenViewports, keepCamera, immediate);\n    }\n    if (customRenderingViewports.length) {\n      this._resizeUsingCustomResizeHandler(customRenderingViewports, keepCamera, immediate);\n    }\n  }\n  getViewport(viewportId) {\n    return this._viewports.get(viewportId);\n  }\n  getViewports() {\n    this._throwIfDestroyed();\n    return this._getViewportsAsArray();\n  }\n  getStackViewports() {\n    this._throwIfDestroyed();\n    const viewports = this.getViewports();\n    const isStackViewport = viewport => {\n      return viewport instanceof StackViewport;\n    };\n    return viewports.filter(isStackViewport);\n  }\n  getVideoViewports() {\n    this._throwIfDestroyed();\n    const viewports = this.getViewports();\n    const isVideoViewport = viewport => {\n      return viewport instanceof VideoViewport;\n    };\n    return viewports.filter(isVideoViewport);\n  }\n  getVolumeViewports() {\n    this._throwIfDestroyed();\n    const viewports = this.getViewports();\n    const isVolumeViewport = viewport => {\n      return viewport instanceof BaseVolumeViewport;\n    };\n    return viewports.filter(isVolumeViewport);\n  }\n  render() {\n    const viewports = this.getViewports();\n    const viewportIds = viewports.map(vp => vp.id);\n    this._setViewportsToBeRenderedNextFrame(viewportIds);\n  }\n  renderViewports(viewportIds) {\n    this._setViewportsToBeRenderedNextFrame(viewportIds);\n  }\n  renderViewport(viewportId) {\n    this._setViewportsToBeRenderedNextFrame([viewportId]);\n  }\n  destroy() {\n    if (this.hasBeenDestroyed) {\n      return;\n    }\n    if (!this.useCPURendering) {\n      const viewports = this._getViewportsAsArray();\n      viewports.forEach(vp => {\n        this.offscreenMultiRenderWindow.removeRenderer(vp.id);\n      });\n      this.offscreenMultiRenderWindow.delete();\n      delete this.offscreenMultiRenderWindow;\n    }\n    this._reset();\n    renderingEngineCache.delete(this.id);\n    this.hasBeenDestroyed = true;\n  }\n  fillCanvasWithBackgroundColor(canvas, backgroundColor) {\n    const ctx = canvas.getContext('2d');\n    let fillStyle;\n    if (backgroundColor) {\n      const rgb = backgroundColor.map(f => Math.floor(255 * f));\n      fillStyle = `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;\n    } else {\n      fillStyle = 'black';\n    }\n    ctx.fillStyle = fillStyle;\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n  }\n  _normalizeViewportInputEntry(viewportInputEntry) {\n    const {\n      type,\n      defaultOptions\n    } = viewportInputEntry;\n    let options = defaultOptions;\n    if (!options || Object.keys(options).length === 0) {\n      options = {\n        background: [0, 0, 0],\n        orientation: null,\n        displayArea: null\n      };\n      if (type === ViewportType.ORTHOGRAPHIC) {\n        options = {\n          ...options,\n          orientation: OrientationAxis.AXIAL\n        };\n      }\n    }\n    return {\n      ...viewportInputEntry,\n      defaultOptions: options\n    };\n  }\n  _normalizeViewportInputEntries(viewportInputEntries) {\n    const normalizedViewportInputs = [];\n    viewportInputEntries.forEach(viewportInput => {\n      normalizedViewportInputs.push(this._normalizeViewportInputEntry(viewportInput));\n    });\n    return normalizedViewportInputs;\n  }\n  _resizeUsingCustomResizeHandler(customRenderingViewports, keepCamera = true, immediate = true) {\n    customRenderingViewports.forEach(vp => {\n      if (typeof vp.resize === 'function') {\n        vp.resize();\n      }\n    });\n    customRenderingViewports.forEach(vp => {\n      const prevCamera = vp.getCamera();\n      vp.resetCamera();\n      if (keepCamera) {\n        vp.setCamera(prevCamera);\n      }\n    });\n    if (immediate === true) {\n      this.render();\n    }\n  }\n  _resizeVTKViewports(vtkDrivenViewports, keepCamera = true, immediate = true) {\n    const canvasesDrivenByVtkJs = vtkDrivenViewports.map(vp => vp.canvas);\n    if (canvasesDrivenByVtkJs.length) {\n      const {\n        offScreenCanvasWidth,\n        offScreenCanvasHeight\n      } = this._resizeOffScreenCanvas(canvasesDrivenByVtkJs);\n      this._resize(vtkDrivenViewports, offScreenCanvasWidth, offScreenCanvasHeight);\n    }\n    vtkDrivenViewports.forEach(vp => {\n      const canvas = getOrCreateCanvas(vp.element);\n      const rect = canvas.getBoundingClientRect();\n      const devicePixelRatio = window.devicePixelRatio || 1;\n      canvas.width = rect.width * devicePixelRatio;\n      canvas.height = rect.height * devicePixelRatio;\n      const prevCamera = vp.getCamera();\n      vp.resetCamera();\n      if (keepCamera) {\n        vp.setCamera(prevCamera);\n      }\n    });\n    if (immediate === true) {\n      this.render();\n    }\n  }\n  enableVTKjsDrivenViewport(viewportInputEntry) {\n    const viewports = this._getViewportsAsArray();\n    const viewportsDrivenByVtkJs = viewports.filter(vp => viewportTypeUsesCustomRenderingPipeline(vp.type) === false);\n    const canvasesDrivenByVtkJs = viewportsDrivenByVtkJs.map(vp => vp.canvas);\n    const canvas = getOrCreateCanvas(viewportInputEntry.element);\n    canvasesDrivenByVtkJs.push(canvas);\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    const rect = canvas.getBoundingClientRect();\n    canvas.width = rect.width * devicePixelRatio;\n    canvas.height = rect.height * devicePixelRatio;\n    const {\n      offScreenCanvasWidth,\n      offScreenCanvasHeight\n    } = this._resizeOffScreenCanvas(canvasesDrivenByVtkJs);\n    const xOffset = this._resize(viewportsDrivenByVtkJs, offScreenCanvasWidth, offScreenCanvasHeight);\n    const internalViewportEntry = {\n      ...viewportInputEntry,\n      canvas\n    };\n    this.addVtkjsDrivenViewport(internalViewportEntry, {\n      offScreenCanvasWidth,\n      offScreenCanvasHeight,\n      xOffset\n    });\n  }\n  _removeViewport(viewportId) {\n    const viewport = this.getViewport(viewportId);\n    if (!viewport) {\n      console.warn(`viewport ${viewportId} does not exist`);\n      return;\n    }\n    this._viewports.delete(viewportId);\n  }\n  addVtkjsDrivenViewport(viewportInputEntry, offscreenCanvasProperties) {\n    const {\n      element,\n      canvas,\n      viewportId,\n      type,\n      defaultOptions\n    } = viewportInputEntry;\n    element.tabIndex = -1;\n    const {\n      offScreenCanvasWidth,\n      offScreenCanvasHeight,\n      xOffset\n    } = offscreenCanvasProperties;\n    const {\n      sxStartDisplayCoords,\n      syStartDisplayCoords,\n      sxEndDisplayCoords,\n      syEndDisplayCoords,\n      sx,\n      sy,\n      sWidth,\n      sHeight\n    } = this._getViewportCoordsOnOffScreenCanvas(viewportInputEntry, offScreenCanvasWidth, offScreenCanvasHeight, xOffset);\n    this.offscreenMultiRenderWindow.addRenderer({\n      viewport: [sxStartDisplayCoords, syStartDisplayCoords, sxEndDisplayCoords, syEndDisplayCoords],\n      id: viewportId,\n      background: defaultOptions.background ? defaultOptions.background : [0, 0, 0]\n    });\n    const viewportInput = {\n      id: viewportId,\n      element,\n      renderingEngineId: this.id,\n      type,\n      canvas,\n      sx,\n      sy,\n      sWidth,\n      sHeight,\n      defaultOptions: defaultOptions || {}\n    };\n    let viewport;\n    if (type === ViewportType.STACK) {\n      viewport = new StackViewport(viewportInput);\n    } else if (type === ViewportType.ORTHOGRAPHIC || type === ViewportType.PERSPECTIVE) {\n      viewport = new VolumeViewport(viewportInput);\n    } else if (type === ViewportType.VOLUME_3D) {\n      viewport = new VolumeViewport3D(viewportInput);\n    } else {\n      throw new Error(`Viewport Type ${type} is not supported`);\n    }\n    this._viewports.set(viewportId, viewport);\n    const eventDetail = {\n      element,\n      viewportId,\n      renderingEngineId: this.id\n    };\n    if (!viewport.suppressEvents) {\n      triggerEvent(eventTarget, Events.ELEMENT_ENABLED, eventDetail);\n    }\n  }\n  addCustomViewport(viewportInputEntry) {\n    const {\n      element,\n      viewportId,\n      type,\n      defaultOptions\n    } = viewportInputEntry;\n    element.tabIndex = -1;\n    const canvas = getOrCreateCanvas(element);\n    const {\n      clientWidth,\n      clientHeight\n    } = canvas;\n    if (canvas.width !== clientWidth || canvas.height !== clientHeight) {\n      canvas.width = clientWidth;\n      canvas.height = clientHeight;\n    }\n    const viewportInput = {\n      id: viewportId,\n      renderingEngineId: this.id,\n      element,\n      type,\n      canvas,\n      sx: 0,\n      sy: 0,\n      sWidth: clientWidth,\n      sHeight: clientHeight,\n      defaultOptions: defaultOptions || {}\n    };\n    const ViewportType = viewportTypeToViewportClass[type];\n    const viewport = new ViewportType(viewportInput);\n    this._viewports.set(viewportId, viewport);\n    const eventDetail = {\n      element,\n      viewportId,\n      renderingEngineId: this.id\n    };\n    triggerEvent(eventTarget, Events.ELEMENT_ENABLED, eventDetail);\n  }\n  setCustomViewports(viewportInputEntries) {\n    viewportInputEntries.forEach(vpie => this.addCustomViewport(vpie));\n  }\n  setVtkjsDrivenViewports(viewportInputEntries) {\n    if (viewportInputEntries.length) {\n      const vtkDrivenCanvases = viewportInputEntries.map(vp => getOrCreateCanvas(vp.element));\n      vtkDrivenCanvases.forEach(canvas => {\n        const devicePixelRatio = window.devicePixelRatio || 1;\n        const rect = canvas.getBoundingClientRect();\n        canvas.width = rect.width * devicePixelRatio;\n        canvas.height = rect.height * devicePixelRatio;\n      });\n      const {\n        offScreenCanvasWidth,\n        offScreenCanvasHeight\n      } = this._resizeOffScreenCanvas(vtkDrivenCanvases);\n      let xOffset = 0;\n      for (let i = 0; i < viewportInputEntries.length; i++) {\n        const vtkDrivenViewportInputEntry = viewportInputEntries[i];\n        const canvas = vtkDrivenCanvases[i];\n        const internalViewportEntry = {\n          ...vtkDrivenViewportInputEntry,\n          canvas\n        };\n        this.addVtkjsDrivenViewport(internalViewportEntry, {\n          offScreenCanvasWidth,\n          offScreenCanvasHeight,\n          xOffset\n        });\n        xOffset += canvas.width;\n      }\n    }\n  }\n  _resizeOffScreenCanvas(canvasesDrivenByVtkJs) {\n    const {\n      offScreenCanvasContainer,\n      offscreenMultiRenderWindow\n    } = this;\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    const offScreenCanvasHeight = Math.max(...canvasesDrivenByVtkJs.map(canvas => canvas.clientHeight * devicePixelRatio));\n    let offScreenCanvasWidth = 0;\n    canvasesDrivenByVtkJs.forEach(canvas => {\n      offScreenCanvasWidth += canvas.clientWidth * devicePixelRatio;\n    });\n    offScreenCanvasContainer.width = offScreenCanvasWidth;\n    offScreenCanvasContainer.height = offScreenCanvasHeight;\n    offscreenMultiRenderWindow.resize();\n    return {\n      offScreenCanvasWidth,\n      offScreenCanvasHeight\n    };\n  }\n  _resize(viewportsDrivenByVtkJs, offScreenCanvasWidth, offScreenCanvasHeight) {\n    let _xOffset = 0;\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    for (let i = 0; i < viewportsDrivenByVtkJs.length; i++) {\n      const viewport = viewportsDrivenByVtkJs[i];\n      const {\n        sxStartDisplayCoords,\n        syStartDisplayCoords,\n        sxEndDisplayCoords,\n        syEndDisplayCoords,\n        sx,\n        sy,\n        sWidth,\n        sHeight\n      } = this._getViewportCoordsOnOffScreenCanvas(viewport, offScreenCanvasWidth, offScreenCanvasHeight, _xOffset);\n      _xOffset += viewport.canvas.clientWidth * devicePixelRatio;\n      viewport.sx = sx;\n      viewport.sy = sy;\n      viewport.sWidth = sWidth;\n      viewport.sHeight = sHeight;\n      const renderer = this.offscreenMultiRenderWindow.getRenderer(viewport.id);\n      renderer.setViewport([sxStartDisplayCoords, syStartDisplayCoords, sxEndDisplayCoords, syEndDisplayCoords]);\n    }\n    return _xOffset;\n  }\n  _getViewportCoordsOnOffScreenCanvas(viewport, offScreenCanvasWidth, offScreenCanvasHeight, _xOffset) {\n    const {\n      canvas\n    } = viewport;\n    const {\n      clientWidth,\n      clientHeight\n    } = canvas;\n    const devicePixelRatio = window.devicePixelRatio || 1;\n    const height = clientHeight * devicePixelRatio;\n    const width = clientWidth * devicePixelRatio;\n    const sx = _xOffset;\n    const sy = 0;\n    const sWidth = width;\n    const sHeight = height;\n    const sxStartDisplayCoords = sx / offScreenCanvasWidth;\n    const syStartDisplayCoords = sy + (offScreenCanvasHeight - height) / offScreenCanvasHeight;\n    const sWidthDisplayCoords = sWidth / offScreenCanvasWidth;\n    const sHeightDisplayCoords = sHeight / offScreenCanvasHeight;\n    return {\n      sxStartDisplayCoords,\n      syStartDisplayCoords,\n      sxEndDisplayCoords: sxStartDisplayCoords + sWidthDisplayCoords,\n      syEndDisplayCoords: syStartDisplayCoords + sHeightDisplayCoords,\n      sx,\n      sy,\n      sWidth,\n      sHeight\n    };\n  }\n  _getViewportsAsArray() {\n    return Array.from(this._viewports.values());\n  }\n  _setViewportsToBeRenderedNextFrame(viewportIds) {\n    viewportIds.forEach(viewportId => {\n      this._needsRender.add(viewportId);\n    });\n    this._render();\n  }\n  _render() {\n    if (this._needsRender.size > 0 && this._animationFrameSet === false) {\n      this._animationFrameHandle = window.requestAnimationFrame(this._renderFlaggedViewports);\n      this._animationFrameSet = true;\n    }\n  }\n  performVtkDrawCall() {\n    const {\n      offscreenMultiRenderWindow\n    } = this;\n    const renderWindow = offscreenMultiRenderWindow.getRenderWindow();\n    const renderers = offscreenMultiRenderWindow.getRenderers();\n    if (!renderers.length) {\n      return;\n    }\n    for (let i = 0; i < renderers.length; i++) {\n      const {\n        renderer,\n        id\n      } = renderers[i];\n      if (this._needsRender.has(id)) {\n        renderer.setDraw(true);\n      } else {\n        renderer.setDraw(false);\n      }\n    }\n    renderWindow.render();\n    for (let i = 0; i < renderers.length; i++) {\n      renderers[i].renderer.setDraw(false);\n    }\n  }\n  renderViewportUsingCustomOrVtkPipeline(viewport) {\n    let eventDetail;\n    if (viewport.sWidth < VIEWPORT_MIN_SIZE || viewport.sHeight < VIEWPORT_MIN_SIZE) {\n      console.warn('Viewport is too small', viewport.sWidth, viewport.sHeight);\n      return;\n    }\n    if (viewportTypeUsesCustomRenderingPipeline(viewport.type) === true) {\n      eventDetail = viewport.customRenderViewportToCanvas();\n    } else {\n      if (this.useCPURendering) {\n        throw new Error('GPU not available, and using a viewport with no custom render pipeline.');\n      }\n      const {\n        offscreenMultiRenderWindow\n      } = this;\n      const openGLRenderWindow = offscreenMultiRenderWindow.getOpenGLRenderWindow();\n      const context = openGLRenderWindow.get3DContext();\n      const offScreenCanvas = context.canvas;\n      eventDetail = this._renderViewportFromVtkCanvasToOnscreenCanvas(viewport, offScreenCanvas);\n    }\n    return eventDetail;\n  }\n  _renderViewportFromVtkCanvasToOnscreenCanvas(viewport, offScreenCanvas) {\n    const {\n      element,\n      canvas,\n      sx,\n      sy,\n      sWidth,\n      sHeight,\n      id: viewportId,\n      renderingEngineId,\n      suppressEvents\n    } = viewport;\n    const {\n      width: dWidth,\n      height: dHeight\n    } = canvas;\n    const onScreenContext = canvas.getContext('2d');\n    onScreenContext.drawImage(offScreenCanvas, sx, sy, sWidth, sHeight, 0, 0, dWidth, dHeight);\n    return {\n      element,\n      suppressEvents,\n      viewportId,\n      renderingEngineId,\n      viewportStatus: viewport.viewportStatus\n    };\n  }\n  _resetViewport(viewport) {\n    const renderingEngineId = this.id;\n    const {\n      element,\n      canvas,\n      id: viewportId\n    } = viewport;\n    const eventDetail = {\n      element,\n      viewportId,\n      renderingEngineId\n    };\n    triggerEvent(eventTarget, Events.ELEMENT_DISABLED, eventDetail);\n    element.removeAttribute('data-viewport-uid');\n    element.removeAttribute('data-rendering-engine-uid');\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n  }\n  _clearAnimationFrame() {\n    window.cancelAnimationFrame(this._animationFrameHandle);\n    this._needsRender.clear();\n    this._animationFrameSet = false;\n    this._animationFrameHandle = null;\n  }\n  _reset() {\n    const viewports = this._getViewportsAsArray();\n    viewports.forEach(viewport => {\n      this._resetViewport(viewport);\n    });\n    this._clearAnimationFrame();\n    this._viewports = new Map();\n  }\n  _throwIfDestroyed() {\n    if (this.hasBeenDestroyed) {\n      throw new Error('this.destroy() has been manually called to free up memory, can not longer use this instance. Instead make a new one.');\n    }\n  }\n  _downloadOffScreenCanvas() {\n    const dataURL = this._debugRender();\n    _TEMPDownloadURI(dataURL);\n  }\n  _debugRender() {\n    const {\n      offscreenMultiRenderWindow\n    } = this;\n    const renderWindow = offscreenMultiRenderWindow.getRenderWindow();\n    const renderers = offscreenMultiRenderWindow.getRenderers();\n    for (let i = 0; i < renderers.length; i++) {\n      renderers[i].renderer.setDraw(true);\n    }\n    renderWindow.render();\n    const openGLRenderWindow = offscreenMultiRenderWindow.getOpenGLRenderWindow();\n    const context = openGLRenderWindow.get3DContext();\n    const offScreenCanvas = context.canvas;\n    const dataURL = offScreenCanvas.toDataURL();\n    this._getViewportsAsArray().forEach(viewport => {\n      const {\n        sx,\n        sy,\n        sWidth,\n        sHeight\n      } = viewport;\n      const canvas = viewport.canvas;\n      const {\n        width: dWidth,\n        height: dHeight\n      } = canvas;\n      const onScreenContext = canvas.getContext('2d');\n      onScreenContext.drawImage(offScreenCanvas, sx, sy, sWidth, sHeight, 0, 0, dWidth, dHeight);\n    });\n    return dataURL;\n  }\n}\nexport default RenderingEngine;\nfunction _TEMPDownloadURI(uri) {\n  const link = document.createElement('a');\n  link.download = 'viewport.png';\n  link.href = uri;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}","map":{"version":3,"names":["Events","renderingEngineCache","eventTarget","triggerEvent","uuidv4","vtkOffscreenMultiRenderWindow","ViewportType","VolumeViewport","BaseVolumeViewport","StackViewport","viewportTypeUsesCustomRenderingPipeline","getOrCreateCanvas","getShouldUseCPURendering","isCornerstoneInitialized","VideoViewport","viewportTypeToViewportClass","OrientationAxis","VolumeViewport3D","VIEWPORT_MIN_SIZE","RenderingEngine","constructor","id","_needsRender","Set","_animationFrameSet","_animationFrameHandle","renderFrameOfReference","FrameOfReferenceUID","viewports","_getViewportsAsArray","viewportIdsWithSameFrameOfReferenceUID","map","vp","getFrameOfReferenceUID","renderViewports","_renderFlaggedViewports","_throwIfDestroyed","useCPURendering","performVtkDrawCall","eventDetailArray","i","length","viewport","has","eventDetail","renderViewportUsingCustomOrVtkPipeline","push","setRendered","delete","size","forEach","element","IMAGE_RENDERED","set","Error","offscreenMultiRenderWindow","newInstance","offScreenCanvasContainer","document","createElement","setContainer","_viewports","Map","hasBeenDestroyed","enableElement","viewportInputEntry","viewportInput","_normalizeViewportInputEntry","viewportId","getViewport","console","log","disableElement","type","viewportUsesCustomRenderingPipeline","enableVTKjsDrivenViewport","addCustomViewport","canvas","background","defaultOptions","fillCanvasWithBackgroundColor","warn","_resetViewport","removeRenderer","_removeViewport","isDisabled","getViewports","_clearAnimationFrame","setViewports","publicViewportInputEntries","viewportInputEntries","_normalizeViewportInputEntries","_reset","vtkDrivenViewportInputEntries","customRenderingViewportInputEntries","vpie","setVtkjsDrivenViewports","setCustomViewports","resize","immediate","keepCamera","vtkDrivenViewports","customRenderingViewports","_resizeVTKViewports","_resizeUsingCustomResizeHandler","get","getStackViewports","isStackViewport","filter","getVideoViewports","isVideoViewport","getVolumeViewports","isVolumeViewport","render","viewportIds","_setViewportsToBeRenderedNextFrame","renderViewport","destroy","backgroundColor","ctx","getContext","fillStyle","rgb","f","Math","floor","fillRect","width","height","options","Object","keys","orientation","displayArea","ORTHOGRAPHIC","AXIAL","normalizedViewportInputs","prevCamera","getCamera","resetCamera","setCamera","canvasesDrivenByVtkJs","offScreenCanvasWidth","offScreenCanvasHeight","_resizeOffScreenCanvas","_resize","rect","getBoundingClientRect","devicePixelRatio","window","viewportsDrivenByVtkJs","xOffset","internalViewportEntry","addVtkjsDrivenViewport","offscreenCanvasProperties","tabIndex","sxStartDisplayCoords","syStartDisplayCoords","sxEndDisplayCoords","syEndDisplayCoords","sx","sy","sWidth","sHeight","_getViewportCoordsOnOffScreenCanvas","addRenderer","renderingEngineId","STACK","PERSPECTIVE","VOLUME_3D","suppressEvents","ELEMENT_ENABLED","clientWidth","clientHeight","vtkDrivenCanvases","vtkDrivenViewportInputEntry","max","_xOffset","renderer","getRenderer","setViewport","sWidthDisplayCoords","sHeightDisplayCoords","Array","from","values","add","_render","requestAnimationFrame","renderWindow","getRenderWindow","renderers","getRenderers","setDraw","customRenderViewportToCanvas","openGLRenderWindow","getOpenGLRenderWindow","context","get3DContext","offScreenCanvas","_renderViewportFromVtkCanvasToOnscreenCanvas","dWidth","dHeight","onScreenContext","drawImage","viewportStatus","ELEMENT_DISABLED","removeAttribute","clearRect","cancelAnimationFrame","clear","_downloadOffScreenCanvas","dataURL","_debugRender","_TEMPDownloadURI","toDataURL","uri","link","download","href","body","appendChild","click","removeChild"],"sources":["../../../src/RenderingEngine/RenderingEngine.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}