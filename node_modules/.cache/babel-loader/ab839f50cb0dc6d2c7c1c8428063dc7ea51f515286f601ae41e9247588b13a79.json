{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.typed-array.to-reversed.js\";\nimport \"core-js/modules/es.typed-array.to-sorted.js\";\nimport \"core-js/modules/es.typed-array.with.js\";\nimport { Enums } from '@cornerstonejs/core';\nimport vtkCellArray from '@kitware/vtk.js/Common/Core/CellArray';\nimport vtkPoints from '@kitware/vtk.js/Common/Core/Points';\nimport vtkPolyData from '@kitware/vtk.js/Common/DataModel/PolyData';\nexport function getSegmentSpecificConfig(contourRepresentation, segmentId, index) {\n  let segmentSpecificConfig = contourRepresentation.segmentSpecificConfig?.[segmentId];\n  if (!segmentSpecificConfig) {\n    segmentSpecificConfig = contourRepresentation.segmentSpecificConfig?.[index];\n  }\n  if (!segmentSpecificConfig) {\n    return null;\n  }\n  return segmentSpecificConfig.CONTOUR;\n}\nexport function validateGeometry(geometry) {\n  if (!geometry) {\n    throw new Error(`No contours found for geometryId ${geometry.id}`);\n  }\n  const geometryId = geometry.id;\n  if (geometry.type !== Enums.GeometryType.CONTOUR) {\n    throw new Error(`Geometry type ${geometry.type} not supported for rendering.`);\n  }\n  if (!geometry.data) {\n    console.warn(`No contours found for geometryId ${geometryId}. Skipping render.`);\n    return;\n  }\n}\nexport function getPolyData(contourSet) {\n  const pointArray = [];\n  const points = vtkPoints.newInstance();\n  const lines = vtkCellArray.newInstance();\n  let pointIndex = 0;\n  contourSet.getContours().forEach(contour => {\n    const pointList = contour.getPoints();\n    const flatPoints = contour.getFlatPointsArray();\n    const type = contour.getType();\n    const pointIndexes = pointList.map((_, pointListIndex) => pointListIndex + pointIndex);\n    if (type === Enums.ContourType.CLOSED_PLANAR) {\n      pointIndexes.push(pointIndexes[0]);\n    }\n    const linePoints = Float32Array.from(flatPoints);\n    pointArray.push(...linePoints);\n    lines.insertNextCell([...pointIndexes]);\n    pointIndex = pointIndex + pointList.length;\n  });\n  points.setData(pointArray, 3);\n  const polygon = vtkPolyData.newInstance();\n  polygon.setPoints(points);\n  polygon.setLines(lines);\n  return polygon;\n}","map":{"version":3,"names":["Enums","vtkCellArray","vtkPoints","vtkPolyData","getSegmentSpecificConfig","contourRepresentation","segmentId","index","segmentSpecificConfig","CONTOUR","validateGeometry","geometry","Error","id","geometryId","type","GeometryType","data","console","warn","getPolyData","contourSet","pointArray","points","newInstance","lines","pointIndex","getContours","forEach","contour","pointList","getPoints","flatPoints","getFlatPointsArray","getType","pointIndexes","map","_","pointListIndex","ContourType","CLOSED_PLANAR","push","linePoints","Float32Array","from","insertNextCell","length","setData","polygon","setPoints","setLines"],"sources":["../../../../../src/tools/displayTools/Contour/utils.ts"],"sourcesContent":[null],"mappings":";;;;AAAA,SAASA,KAAK,QAAe,qBAAqB;AAClD,OAAOC,YAAY,MAAM,uCAAuC;AAChE,OAAOC,SAAS,MAAM,oCAAoC;AAC1D,OAAOC,WAAW,MAAM,2CAA2C;AAenE,OAAM,SAAUC,wBAAwBA,CACtCC,qBAA6D,EAC7DC,SAAiB,EACjBC,KAAa;EAEb,IAAIC,qBAAqB,GACvBH,qBAAqB,CAACG,qBAAqB,GAAGF,SAAS,CAAC;EAE1D,IAAI,CAACE,qBAAqB,EAAE;IAE1BA,qBAAqB,GACnBH,qBAAqB,CAACG,qBAAqB,GAAGD,KAAK,CAAC;;EAGxD,IAAI,CAACC,qBAAqB,EAAE;IAC1B,OAAO,IAAI;;EAGb,OAAOA,qBAAqB,CAACC,OAAO;AACtC;AAOA,OAAM,SAAUC,gBAAgBA,CAACC,QAAyB;EACxD,IAAI,CAACA,QAAQ,EAAE;IACb,MAAM,IAAIC,KAAK,CAAC,oCAAoCD,QAAQ,CAACE,EAAE,EAAE,CAAC;;EAGpE,MAAMC,UAAU,GAAGH,QAAQ,CAACE,EAAE;EAE9B,IAAIF,QAAQ,CAACI,IAAI,KAAKf,KAAK,CAACgB,YAAY,CAACP,OAAO,EAAE;IAChD,MAAM,IAAIG,KAAK,CACb,iBAAiBD,QAAQ,CAACI,IAAI,+BAA+B,CAC9D;;EAGH,IAAI,CAACJ,QAAQ,CAACM,IAAI,EAAE;IAClBC,OAAO,CAACC,IAAI,CACV,oCAAoCL,UAAU,oBAAoB,CACnE;IACD;;AAEJ;AAUA,OAAM,SAAUM,WAAWA,CAACC,UAA6B;EACvD,MAAMC,UAAU,GAAG,EAAE;EAErB,MAAMC,MAAM,GAAGrB,SAAS,CAACsB,WAAW,EAAE;EACtC,MAAMC,KAAK,GAAGxB,YAAY,CAACuB,WAAW,EAAE;EAIxC,IAAIE,UAAU,GAAG,CAAC;EAClBL,UAAU,CAACM,WAAW,EAAE,CAACC,OAAO,CAAEC,OAAuB,IAAI;IAC3D,MAAMC,SAAS,GAAGD,OAAO,CAACE,SAAS,EAAE;IACrC,MAAMC,UAAU,GAAGH,OAAO,CAACI,kBAAkB,EAAE;IAC/C,MAAMlB,IAAI,GAAGc,OAAO,CAACK,OAAO,EAAE;IAG9B,MAAMC,YAAY,GAAGL,SAAS,CAACM,GAAG,CAChC,CAACC,CAAC,EAAEC,cAAc,KAAKA,cAAc,GAAGZ,UAAU,CACnD;IAGD,IAAIX,IAAI,KAAKf,KAAK,CAACuC,WAAW,CAACC,aAAa,EAAE;MAC5CL,YAAY,CAACM,IAAI,CAACN,YAAY,CAAC,CAAC,CAAC,CAAC;;IAGpC,MAAMO,UAAU,GAAGC,YAAY,CAACC,IAAI,CAACZ,UAAU,CAAC;IAEhDV,UAAU,CAACmB,IAAI,CAAC,GAAGC,UAAU,CAAC;IAE9BjB,KAAK,CAACoB,cAAc,CAAC,CAAC,GAAGV,YAAY,CAAC,CAAC;IAEvCT,UAAU,GAAGA,UAAU,GAAGI,SAAS,CAACgB,MAAM;EAC5C,CAAC,CAAC;EAGFvB,MAAM,CAACwB,OAAO,CAACzB,UAAU,EAAE,CAAC,CAAC;EAG7B,MAAM0B,OAAO,GAAG7C,WAAW,CAACqB,WAAW,EAAE;EACzCwB,OAAO,CAACC,SAAS,CAAC1B,MAAM,CAAC;EACzByB,OAAO,CAACE,QAAQ,CAACzB,KAAK,CAAC;EAEvB,OAAOuB,OAAO;AAChB"},"metadata":{},"sourceType":"module","externalDependencies":[]}