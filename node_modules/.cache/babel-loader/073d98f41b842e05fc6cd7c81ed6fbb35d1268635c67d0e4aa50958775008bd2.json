{"ast":null,"code":"import vtkMatrixBuilder from '@kitware/vtk.js/Common/Core/MatrixBuilder';\nimport getVolumeActorCorners from './getVolumeActorCorners';\nimport { EPSILON } from '../constants';\nconst SMALL_EPSILON = EPSILON * EPSILON;\nconst isOne = v => Math.abs(Math.abs(v) - 1) < SMALL_EPSILON;\nconst isUnit = (v, off) => isOne(v[off]) || isOne(v[off + 1]) || isOne(v[off + 2]);\nconst isOrthonormal = v => isUnit(v, 0) && isUnit(v, 3) && isUnit(v, 6);\nexport default function getSliceRange(volumeActor, viewPlaneNormal, focalPoint) {\n  const imageData = volumeActor.getMapper().getInputData();\n  let corners;\n  const direction = imageData.getDirection();\n  if (isOrthonormal(direction)) {\n    corners = getVolumeActorCorners(volumeActor);\n  } else {\n    const [dx, dy, dz] = imageData.getDimensions();\n    const cornersIdx = [[0, 0, 0], [dx - 1, 0, 0], [0, dy - 1, 0], [dx - 1, dy - 1, 0], [0, 0, dz - 1], [dx - 1, 0, dz - 1], [0, dy - 1, dz - 1], [dx - 1, dy - 1, dz - 1]];\n    corners = cornersIdx.map(it => imageData.indexToWorld(it));\n  }\n  const transform = vtkMatrixBuilder.buildFromDegree().identity().rotateFromDirections(viewPlaneNormal, [1, 0, 0]);\n  corners.forEach(pt => transform.apply(pt));\n  const transformedFocalPoint = [...focalPoint];\n  transform.apply(transformedFocalPoint);\n  const currentSlice = transformedFocalPoint[0];\n  let minX = Infinity;\n  let maxX = -Infinity;\n  for (let i = 0; i < 8; i++) {\n    const x = corners[i][0];\n    if (x > maxX) {\n      maxX = x;\n    }\n    if (x < minX) {\n      minX = x;\n    }\n  }\n  return {\n    min: minX,\n    max: maxX,\n    current: currentSlice,\n    actor: volumeActor,\n    viewPlaneNormal,\n    focalPoint\n  };\n}","map":{"version":3,"names":["vtkMatrixBuilder","getVolumeActorCorners","EPSILON","SMALL_EPSILON","isOne","v","Math","abs","isUnit","off","isOrthonormal","getSliceRange","volumeActor","viewPlaneNormal","focalPoint","imageData","getMapper","getInputData","corners","direction","getDirection","dx","dy","dz","getDimensions","cornersIdx","map","it","indexToWorld","transform","buildFromDegree","identity","rotateFromDirections","forEach","pt","apply","transformedFocalPoint","currentSlice","minX","Infinity","maxX","i","x","min","max","current","actor"],"sources":["../../../src/utilities/getSliceRange.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}