{"ast":null,"code":"export default class VoxelManager {\n  constructor(dimensions, _get, _set) {\n    this.modifiedSlices = new Set();\n    this.boundsIJK = [[Infinity, -Infinity], [Infinity, -Infinity], [Infinity, -Infinity]];\n    this.getAtIJK = (i, j, k) => {\n      const index = i + j * this.width + k * this.frameSize;\n      return this._get(index);\n    };\n    this.setAtIJK = (i, j, k, v) => {\n      const index = i + j * this.width + k * this.frameSize;\n      if (this._set(index, v) !== false) {\n        this.modifiedSlices.add(k);\n        VoxelManager.addBounds(this.boundsIJK, [i, j, k]);\n      }\n    };\n    this.getAtIJKPoint = ([i, j, k]) => this.getAtIJK(i, j, k);\n    this.setAtIJKPoint = ([i, j, k], v) => this.setAtIJK(i, j, k, v);\n    this.getAtIndex = index => this._get(index);\n    this.setAtIndex = (index, v) => {\n      if (this._set(index, v) !== false) {\n        const pointIJK = this.toIJK(index);\n        this.modifiedSlices.add(pointIJK[2]);\n        VoxelManager.addBounds(this.boundsIJK, pointIJK);\n      }\n    };\n    this.forEach = (callback, options) => {\n      const boundsIJK = options?.boundsIJK || this.getBoundsIJK();\n      const {\n        isWithinObject\n      } = options || {};\n      if (this.map) {\n        for (const index of this.map.keys()) {\n          const pointIJK = this.toIJK(index);\n          const value = this._get(index);\n          const callbackArguments = {\n            value,\n            index,\n            pointIJK\n          };\n          if (isWithinObject?.(callbackArguments) === false) {\n            continue;\n          }\n          callback(callbackArguments);\n        }\n      } else {\n        for (let k = boundsIJK[2][0]; k <= boundsIJK[2][1]; k++) {\n          const kIndex = k * this.frameSize;\n          for (let j = boundsIJK[1][0]; j <= boundsIJK[1][1]; j++) {\n            const jIndex = kIndex + j * this.width;\n            for (let i = boundsIJK[0][0], index = jIndex + i; i <= boundsIJK[0][1]; i++, index++) {\n              const value = this.getAtIndex(index);\n              const callbackArguments = {\n                value,\n                index,\n                pointIJK: [i, j, k]\n              };\n              if (isWithinObject?.(callbackArguments) === false) {\n                continue;\n              }\n              callback(callbackArguments);\n            }\n          }\n        }\n      }\n    };\n    this.dimensions = dimensions;\n    this.width = dimensions[0];\n    this.frameSize = this.width * dimensions[1];\n    this._get = _get;\n    this._set = _set;\n  }\n  addPoint(point) {\n    const index = Array.isArray(point) ? point[0] + this.width * point[1] + this.frameSize * point[2] : point;\n    if (!this.points) {\n      this.points = new Set();\n    }\n    this.points.add(index);\n  }\n  getPoints() {\n    return this.points ? [...this.points].map(index => this.toIJK(index)) : [];\n  }\n  getPointIndices() {\n    return this.points ? [...this.points] : [];\n  }\n  toIJK(index) {\n    return [index % this.width, Math.floor(index % this.frameSize / this.width), Math.floor(index / this.frameSize)];\n  }\n  toIndex(ijk) {\n    return ijk[0] + ijk[1] * this.width + ijk[2] * this.frameSize;\n  }\n  getBoundsIJK() {\n    if (this.boundsIJK[0][0] < this.dimensions[0]) {\n      return this.boundsIJK;\n    }\n    return this.dimensions.map(dimension => [0, dimension - 1]);\n  }\n  clear() {\n    if (this.map) {\n      this.map.clear();\n    }\n    this.boundsIJK.map(bound => {\n      bound[0] = Infinity;\n      bound[1] = -Infinity;\n    });\n    this.modifiedSlices.clear();\n    this.points?.clear();\n  }\n  getArrayOfSlices() {\n    return Array.from(this.modifiedSlices);\n  }\n  static addBounds(bounds, point) {\n    if (!bounds) {\n      bounds = [[Infinity, -Infinity], [Infinity, -Infinity], [Infinity, -Infinity]];\n    }\n    bounds[0][0] = Math.min(point[0], bounds[0][0]);\n    bounds[0][1] = Math.max(point[0], bounds[0][1]);\n    bounds[1][0] = Math.min(point[1], bounds[1][0]);\n    bounds[1][1] = Math.max(point[1], bounds[1][1]);\n    bounds[2][0] = Math.min(point[2], bounds[2][0]);\n    bounds[2][1] = Math.max(point[2], bounds[2][1]);\n  }\n  static createVolumeVoxelManager(dimensions, scalarData) {\n    const voxels = new VoxelManager(dimensions, index => scalarData[index], (index, v) => {\n      const isChanged = scalarData[index] !== v;\n      scalarData[index] = v;\n      return isChanged;\n    });\n    voxels.scalarData = scalarData;\n    return voxels;\n  }\n  static createMapVoxelManager(dimension) {\n    const map = new Map();\n    const voxelManager = new VoxelManager(dimension, map.get.bind(map), (index, v) => map.set(index, v) && true);\n    voxelManager.map = map;\n    return voxelManager;\n  }\n  static createHistoryVoxelManager(sourceVoxelManager) {\n    const map = new Map();\n    const {\n      dimensions\n    } = sourceVoxelManager;\n    const voxelManager = new VoxelManager(dimensions, index => map.get(index), function (index, v) {\n      if (!map.has(index)) {\n        const oldV = this.sourceVoxelManager.getAtIndex(index);\n        if (oldV === v) {\n          return false;\n        }\n        map.set(index, oldV);\n      } else if (v === map.get(index)) {\n        map.delete(index);\n      }\n      this.sourceVoxelManager.setAtIndex(index, v);\n    });\n    voxelManager.map = map;\n    voxelManager.scalarData = sourceVoxelManager.scalarData;\n    voxelManager.sourceVoxelManager = sourceVoxelManager;\n    return voxelManager;\n  }\n}","map":{"version":3,"names":["VoxelManager","constructor","dimensions","_get","_set","modifiedSlices","Set","boundsIJK","Infinity","getAtIJK","i","j","k","index","width","frameSize","setAtIJK","v","add","addBounds","getAtIJKPoint","setAtIJKPoint","getAtIndex","setAtIndex","pointIJK","toIJK","forEach","callback","options","getBoundsIJK","isWithinObject","map","keys","value","callbackArguments","kIndex","jIndex","addPoint","point","Array","isArray","points","getPoints","getPointIndices","Math","floor","toIndex","ijk","dimension","clear","bound","getArrayOfSlices","from","bounds","min","max","createVolumeVoxelManager","scalarData","voxels","isChanged","createMapVoxelManager","Map","voxelManager","get","bind","set","createHistoryVoxelManager","sourceVoxelManager","has","oldV","delete"],"sources":["../../../src/utilities/VoxelManager.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}