{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { n as newInstance$1, o as obj, g as get, e as setGet } from '../../macros2.js';\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUPipeline methods\n// ----------------------------------------------------------------------------\nfunction vtkWebGPUPipeline(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUPipeline');\n  publicAPI.getShaderDescriptions = () => model.shaderDescriptions;\n  publicAPI.initialize = (device, hash) => {\n    // start with the renderencoder settings\n    model.pipelineDescription = model.renderEncoder.getPipelineSettings();\n    model.pipelineDescription.primitive.topology = model.topology;\n    model.pipelineDescription.vertex = model.vertexState;\n    model.pipelineDescription.label = hash;\n\n    // add in bind group layouts\n    const bindGroupLayouts = [];\n    for (let i = 0; i < model.layouts.length; i++) {\n      bindGroupLayouts.push(model.layouts[i].layout);\n    }\n    model.pipelineLayout = device.getHandle().createPipelineLayout({\n      bindGroupLayouts\n    });\n    model.pipelineDescription.layout = model.pipelineLayout;\n    for (let i = 0; i < model.shaderDescriptions.length; i++) {\n      const sd = model.shaderDescriptions[i];\n      const sm = device.getShaderModule(sd);\n      if (sd.getType() === 'vertex') {\n        model.pipelineDescription.vertex.module = sm.getHandle();\n        model.pipelineDescription.vertex.entryPoint = 'main';\n      }\n      if (sd.getType() === 'fragment') {\n        model.pipelineDescription.fragment.module = sm.getHandle();\n        model.pipelineDescription.fragment.entryPoint = 'main';\n      }\n    }\n    model.handle = device.getHandle().createRenderPipeline(model.pipelineDescription);\n  };\n  publicAPI.getShaderDescription = stype => {\n    for (let i = 0; i < model.shaderDescriptions.length; i++) {\n      if (model.shaderDescriptions[i].getType() === stype) return model.shaderDescriptions[i];\n    }\n    return null;\n  };\n  publicAPI.addBindGroupLayout = bindGroup => {\n    if (!bindGroup) {\n      return;\n    }\n    model.layouts.push({\n      layout: bindGroup.getBindGroupLayout(model.device),\n      label: bindGroup.getLabel()\n    });\n  };\n  publicAPI.getBindGroupLayout = idx => model.layouts[idx].layout;\n  publicAPI.getBindGroupLayoutCount = llabel => {\n    for (let i = 0; i < model.layouts.length; i++) {\n      if (model.layouts[i].label === llabel) {\n        return i;\n      }\n    }\n    return 0;\n  };\n  publicAPI.bindVertexInput = (renderEncoder, vInput) => {\n    vInput.bindBuffers(renderEncoder);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\nconst DEFAULT_VALUES = {\n  handle: null,\n  layouts: null,\n  renderEncoder: null,\n  shaderDescriptions: null,\n  vertexState: null,\n  topology: null,\n  pipelineDescription: null\n};\n\n// ----------------------------------------------------------------------------\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  obj(publicAPI, model);\n  model.layouts = [];\n  model.shaderDescriptions = [];\n  get(publicAPI, model, ['handle', 'pipelineDescription']);\n  setGet(publicAPI, model, ['device', 'renderEncoder', 'topology', 'vertexState']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n  vtkWebGPUPipeline(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\nconst newInstance = newInstance$1(extend, 'vtkWebGPUPipeline');\n\n// ----------------------------------------------------------------------------\nvar vtkWebGPUPipeline$1 = {\n  newInstance,\n  extend\n};\nexport { vtkWebGPUPipeline$1 as default, extend, newInstance };","map":{"version":3,"names":["n","newInstance$1","o","obj","g","get","e","setGet","vtkWebGPUPipeline","publicAPI","model","classHierarchy","push","getShaderDescriptions","shaderDescriptions","initialize","device","hash","pipelineDescription","renderEncoder","getPipelineSettings","primitive","topology","vertex","vertexState","label","bindGroupLayouts","i","layouts","length","layout","pipelineLayout","getHandle","createPipelineLayout","sd","sm","getShaderModule","getType","module","entryPoint","fragment","handle","createRenderPipeline","getShaderDescription","stype","addBindGroupLayout","bindGroup","getBindGroupLayout","getLabel","idx","getBindGroupLayoutCount","llabel","bindVertexInput","vInput","bindBuffers","DEFAULT_VALUES","extend","initialValues","arguments","undefined","Object","assign","newInstance","vtkWebGPUPipeline$1","default"],"sources":["/Users/yzy/Documents/Playground/vue-cornerstone-demo/node_modules/@kitware/vtk.js/Rendering/WebGPU/Pipeline.js"],"sourcesContent":["import { n as newInstance$1, o as obj, g as get, e as setGet } from '../../macros2.js';\n\n// ----------------------------------------------------------------------------\n// vtkWebGPUPipeline methods\n// ----------------------------------------------------------------------------\nfunction vtkWebGPUPipeline(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkWebGPUPipeline');\n  publicAPI.getShaderDescriptions = () => model.shaderDescriptions;\n  publicAPI.initialize = (device, hash) => {\n    // start with the renderencoder settings\n    model.pipelineDescription = model.renderEncoder.getPipelineSettings();\n    model.pipelineDescription.primitive.topology = model.topology;\n    model.pipelineDescription.vertex = model.vertexState;\n    model.pipelineDescription.label = hash;\n\n    // add in bind group layouts\n    const bindGroupLayouts = [];\n    for (let i = 0; i < model.layouts.length; i++) {\n      bindGroupLayouts.push(model.layouts[i].layout);\n    }\n    model.pipelineLayout = device.getHandle().createPipelineLayout({\n      bindGroupLayouts\n    });\n    model.pipelineDescription.layout = model.pipelineLayout;\n    for (let i = 0; i < model.shaderDescriptions.length; i++) {\n      const sd = model.shaderDescriptions[i];\n      const sm = device.getShaderModule(sd);\n      if (sd.getType() === 'vertex') {\n        model.pipelineDescription.vertex.module = sm.getHandle();\n        model.pipelineDescription.vertex.entryPoint = 'main';\n      }\n      if (sd.getType() === 'fragment') {\n        model.pipelineDescription.fragment.module = sm.getHandle();\n        model.pipelineDescription.fragment.entryPoint = 'main';\n      }\n    }\n    model.handle = device.getHandle().createRenderPipeline(model.pipelineDescription);\n  };\n  publicAPI.getShaderDescription = stype => {\n    for (let i = 0; i < model.shaderDescriptions.length; i++) {\n      if (model.shaderDescriptions[i].getType() === stype) return model.shaderDescriptions[i];\n    }\n    return null;\n  };\n  publicAPI.addBindGroupLayout = bindGroup => {\n    if (!bindGroup) {\n      return;\n    }\n    model.layouts.push({\n      layout: bindGroup.getBindGroupLayout(model.device),\n      label: bindGroup.getLabel()\n    });\n  };\n  publicAPI.getBindGroupLayout = idx => model.layouts[idx].layout;\n  publicAPI.getBindGroupLayoutCount = llabel => {\n    for (let i = 0; i < model.layouts.length; i++) {\n      if (model.layouts[i].label === llabel) {\n        return i;\n      }\n    }\n    return 0;\n  };\n  publicAPI.bindVertexInput = (renderEncoder, vInput) => {\n    vInput.bindBuffers(renderEncoder);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\nconst DEFAULT_VALUES = {\n  handle: null,\n  layouts: null,\n  renderEncoder: null,\n  shaderDescriptions: null,\n  vertexState: null,\n  topology: null,\n  pipelineDescription: null\n};\n\n// ----------------------------------------------------------------------------\nfunction extend(publicAPI, model) {\n  let initialValues = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Build VTK API\n  obj(publicAPI, model);\n  model.layouts = [];\n  model.shaderDescriptions = [];\n  get(publicAPI, model, ['handle', 'pipelineDescription']);\n  setGet(publicAPI, model, ['device', 'renderEncoder', 'topology', 'vertexState']);\n\n  // For more macro methods, see \"Sources/macros.js\"\n  // Object specific methods\n  vtkWebGPUPipeline(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\nconst newInstance = newInstance$1(extend, 'vtkWebGPUPipeline');\n\n// ----------------------------------------------------------------------------\nvar vtkWebGPUPipeline$1 = {\n  newInstance,\n  extend\n};\n\nexport { vtkWebGPUPipeline$1 as default, extend, newInstance };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}