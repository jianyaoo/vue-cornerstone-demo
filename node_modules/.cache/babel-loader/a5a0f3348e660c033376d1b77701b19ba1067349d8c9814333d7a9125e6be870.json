{"ast":null,"code":"import { volumeLoader, RenderingEngine, Enums as csEnums, setVolumesForViewports } from \"@cornerstonejs/core\";\nimport { initCornerstone, createImageIdsAndCacheMetaData } from \"../cornerstone/index\";\nexport default {\n  name: \"BaseVolume\",\n  data() {\n    return {\n      volumeId: \"my_volume_id\",\n      renderingEngineId: \"my_renderingEngine\"\n    };\n  },\n  mounted() {\n    this.init();\n  },\n  methods: {\n    async init() {\n      initCornerstone();\n      const imageIds = await createImageIdsAndCacheMetaData({\n        StudyInstanceUID: \"1.3.6.1.4.1.14519.5.2.1.7009.2403.334240657131972136850343327463\",\n        SeriesInstanceUID: \"1.3.6.1.4.1.14519.5.2.1.7009.2403.226151125820845824875394858561\",\n        wadoRsRoot: \"https://d3t6nz73ql33tx.cloudfront.net/dicomweb\"\n      });\n\n      // 准备一个渲染引擎 => renderingEngine \n      const renderingEngine = new RenderingEngine(this.renderingEngineId);\n\n      // 去创建并缓存一个Volume\n      const volume = await volumeLoader.createAndCacheVolume(this.volumeId, {\n        imageIds\n      });\n\n      // 在渲染引擎中创建并加载视图，使视图与HTML元素绑定\n      const viewportId1 = \"CT_AXIAL\";\n      const viewportId2 = \"CT_SAGITTAL\";\n      const viewportId3 = \"CT_CORONAL\";\n      const viewportInputArray = [{\n        viewportId: viewportId1,\n        type: csEnums.ViewportType.ORTHOGRAPHIC,\n        element: document.querySelector(\"#element1\"),\n        defaultOptions: {\n          orientation: csEnums.OrientationAxis.AXIAL\n        }\n      }, {\n        viewportId: viewportId2,\n        type: csEnums.ViewportType.ORTHOGRAPHIC,\n        element: document.querySelector(\"#element2\"),\n        defaultOptions: {\n          orientation: csEnums.OrientationAxis.SAGITTAL\n        }\n      }, {\n        viewportId: viewportId3,\n        type: csEnums.ViewportType.ORTHOGRAPHIC,\n        element: document.querySelector(\"#element3\"),\n        defaultOptions: {\n          orientation: csEnums.OrientationAxis.CORONAL\n        }\n      }];\n      renderingEngine.setViewports(viewportInputArray);\n\n      // 加载Volume => 注意：创建是创建，加载是加载，加载时才会去请求Dicom文件\n      volume.load();\n\n      // 在视图上设置Volume\n      await setVolumesForViewports(renderingEngine, [{\n        volumeId: this.volumeId\n      }], [viewportId1, viewportId2, viewportId3]);\n\n      // 渲染图像\n      renderingEngine.renderViewports([viewportId1, viewportId2, viewportId3]);\n    }\n  }\n};","map":{"version":3,"names":["volumeLoader","RenderingEngine","Enums","csEnums","setVolumesForViewports","initCornerstone","createImageIdsAndCacheMetaData","name","data","volumeId","renderingEngineId","mounted","init","methods","imageIds","StudyInstanceUID","SeriesInstanceUID","wadoRsRoot","renderingEngine","volume","createAndCacheVolume","viewportId1","viewportId2","viewportId3","viewportInputArray","viewportId","type","ViewportType","ORTHOGRAPHIC","element","document","querySelector","defaultOptions","orientation","OrientationAxis","AXIAL","SAGITTAL","CORONAL","setViewports","load","renderViewports"],"sources":["src/views/BaseVolume.vue"],"sourcesContent":["<template>\n  <div id=\"demo-wrap\">\n    <div id=\"element1\" class=\"cornerstone-item\"></div>\n    <div id=\"element2\" class=\"cornerstone-item\"></div>\n    <div id=\"element3\" class=\"cornerstone-item\"></div>\n  </div>\n</template>\n\n<script>\nimport {\n  volumeLoader,\n  RenderingEngine,\n  Enums as csEnums,\n  setVolumesForViewports,\n} from \"@cornerstonejs/core\";\n\nimport {\n  initCornerstone,\n  createImageIdsAndCacheMetaData,\n} from \"../cornerstone/index\";\n\nexport default {\n  name: \"BaseVolume\",\n\n  data() {\n    return {\n      volumeId: \"my_volume_id\",\n      renderingEngineId: \"my_renderingEngine\",\n    };\n  },\n\n  mounted() {\n    this.init();\n  },\n\n  methods: {\n    async init() {\n      initCornerstone();\n\n      const imageIds = await createImageIdsAndCacheMetaData({\n        StudyInstanceUID:\n          \"1.3.6.1.4.1.14519.5.2.1.7009.2403.334240657131972136850343327463\",\n        SeriesInstanceUID:\n          \"1.3.6.1.4.1.14519.5.2.1.7009.2403.226151125820845824875394858561\",\n        wadoRsRoot: \"https://d3t6nz73ql33tx.cloudfront.net/dicomweb\",\n      });\n\n      // 准备一个渲染引擎 => renderingEngine \n      const renderingEngine = new RenderingEngine(this.renderingEngineId);\n\n      // 去创建并缓存一个Volume\n      const volume = await volumeLoader.createAndCacheVolume(this.volumeId, {\n        imageIds,\n      });\n\n      // 在渲染引擎中创建并加载视图，使视图与HTML元素绑定\n      const viewportId1 = \"CT_AXIAL\";\n      const viewportId2 = \"CT_SAGITTAL\";\n      const viewportId3 = \"CT_CORONAL\";\n      const viewportInputArray = [\n        {\n          viewportId: viewportId1,\n          type: csEnums.ViewportType.ORTHOGRAPHIC,\n          element: document.querySelector(\"#element1\"),\n          defaultOptions: {\n            orientation: csEnums.OrientationAxis.AXIAL,\n          },\n        },\n        {\n          viewportId: viewportId2,\n          type: csEnums.ViewportType.ORTHOGRAPHIC,\n          element: document.querySelector(\"#element2\"),\n          defaultOptions: {\n            orientation: csEnums.OrientationAxis.SAGITTAL,\n          },\n        },\n        {\n          viewportId: viewportId3,\n          type: csEnums.ViewportType.ORTHOGRAPHIC,\n          element: document.querySelector(\"#element3\"),\n          defaultOptions: {\n            orientation: csEnums.OrientationAxis.CORONAL,\n          },\n        },\n      ];\n      renderingEngine.setViewports(viewportInputArray);\n\n\n      // 加载Volume => 注意：创建是创建，加载是加载，加载时才会去请求Dicom文件\n      volume.load();\n\n      // 在视图上设置Volume\n      await setVolumesForViewports(\n        renderingEngine,\n        [\n          {\n            volumeId: this.volumeId,\n          },\n        ],\n        [viewportId1, viewportId2, viewportId3]\n      );\n\n      // 渲染图像\n      renderingEngine.renderViewports([viewportId1, viewportId2, viewportId3]);\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.cornerstone-item {\n  display: inline-block;\n  width: 300px;\n  height: 300px;\n}\n</style>\n"],"mappings":"AASA,SACAA,YAAA,EACAC,eAAA,EACAC,KAAA,IAAAC,OAAA,EACAC,sBAAA,QACA;AAEA,SACAC,eAAA,EACAC,8BAAA,QACA;AAEA;EACAC,IAAA;EAEAC,KAAA;IACA;MACAC,QAAA;MACAC,iBAAA;IACA;EACA;EAEAC,QAAA;IACA,KAAAC,IAAA;EACA;EAEAC,OAAA;IACA,MAAAD,KAAA;MACAP,eAAA;MAEA,MAAAS,QAAA,SAAAR,8BAAA;QACAS,gBAAA,EACA;QACAC,iBAAA,EACA;QACAC,UAAA;MACA;;MAEA;MACA,MAAAC,eAAA,OAAAjB,eAAA,MAAAS,iBAAA;;MAEA;MACA,MAAAS,MAAA,SAAAnB,YAAA,CAAAoB,oBAAA,MAAAX,QAAA;QACAK;MACA;;MAEA;MACA,MAAAO,WAAA;MACA,MAAAC,WAAA;MACA,MAAAC,WAAA;MACA,MAAAC,kBAAA,IACA;QACAC,UAAA,EAAAJ,WAAA;QACAK,IAAA,EAAAvB,OAAA,CAAAwB,YAAA,CAAAC,YAAA;QACAC,OAAA,EAAAC,QAAA,CAAAC,aAAA;QACAC,cAAA;UACAC,WAAA,EAAA9B,OAAA,CAAA+B,eAAA,CAAAC;QACA;MACA,GACA;QACAV,UAAA,EAAAH,WAAA;QACAI,IAAA,EAAAvB,OAAA,CAAAwB,YAAA,CAAAC,YAAA;QACAC,OAAA,EAAAC,QAAA,CAAAC,aAAA;QACAC,cAAA;UACAC,WAAA,EAAA9B,OAAA,CAAA+B,eAAA,CAAAE;QACA;MACA,GACA;QACAX,UAAA,EAAAF,WAAA;QACAG,IAAA,EAAAvB,OAAA,CAAAwB,YAAA,CAAAC,YAAA;QACAC,OAAA,EAAAC,QAAA,CAAAC,aAAA;QACAC,cAAA;UACAC,WAAA,EAAA9B,OAAA,CAAA+B,eAAA,CAAAG;QACA;MACA,EACA;MACAnB,eAAA,CAAAoB,YAAA,CAAAd,kBAAA;;MAGA;MACAL,MAAA,CAAAoB,IAAA;;MAEA;MACA,MAAAnC,sBAAA,CACAc,eAAA,EACA,CACA;QACAT,QAAA,OAAAA;MACA,EACA,EACA,CAAAY,WAAA,EAAAC,WAAA,EAAAC,WAAA,CACA;;MAEA;MACAL,eAAA,CAAAsB,eAAA,EAAAnB,WAAA,EAAAC,WAAA,EAAAC,WAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}